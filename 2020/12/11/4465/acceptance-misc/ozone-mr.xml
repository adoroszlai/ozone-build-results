<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201211 01:58:07.726" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:00.722" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:04.614" level="INFO">${rc} = 255</msg>
<msg timestamp="20201211 01:43:04.614" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201211 01:43:04.615" starttime="20201211 01:43:00.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:04.616" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201211 01:43:04.616" starttime="20201211 01:43:04.615"></status>
</kw>
<msg timestamp="20201211 01:43:04.616" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201211 01:43:04.617" starttime="20201211 01:43:00.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:04.624" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:07.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:07.031" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:43:07.031" starttime="20201211 01:43:04.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:07.032" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:43:07.032" starttime="20201211 01:43:07.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:07.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:07.033" starttime="20201211 01:43:07.032"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:07.033" starttime="20201211 01:43:04.619"></status>
</kw>
<msg timestamp="20201211 01:43:07.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:07.033" starttime="20201211 01:43:04.619"></status>
</kw>
<msg timestamp="20201211 01:43:07.034" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201211 01:43:07.034" starttime="20201211 01:43:04.618"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201211 01:43:07.034" starttime="20201211 01:43:07.034"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:07.034" starttime="20201211 01:43:04.617"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:07.034" starttime="20201211 01:43:04.617"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:07.042" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:09.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:09.372" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:43:09.372" starttime="20201211 01:43:07.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:09.373" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:43:09.373" starttime="20201211 01:43:09.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:09.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:09.374" starttime="20201211 01:43:09.373"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:09.374" starttime="20201211 01:43:07.038"></status>
</kw>
<msg timestamp="20201211 01:43:09.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:09.374" starttime="20201211 01:43:07.037"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:09.375" starttime="20201211 01:43:07.037"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:09.375" starttime="20201211 01:43:07.036"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:09.375" starttime="20201211 01:43:07.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201211 01:43:09.376" starttime="20201211 01:43:09.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:09.380" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:11.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:11.910" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-11T01:43:09.240Z",
  "modificat...</msg>
<status status="PASS" endtime="20201211 01:43:11.910" starttime="20201211 01:43:09.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:11.911" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-11T01:43:09.240Z",
  "modificationTime" : "2020-12-11T01:43:09.240Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201211 01:43:11.911" starttime="20201211 01:43:11.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:11.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:11.912" starttime="20201211 01:43:11.912"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:11.913" starttime="20201211 01:43:09.377"></status>
</kw>
<msg timestamp="20201211 01:43:11.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:11.913" starttime="20201211 01:43:09.377"></status>
</kw>
<msg timestamp="20201211 01:43:11.914" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-11T01:43:09.240Z",
  "modificat...</msg>
<status status="PASS" endtime="20201211 01:43:11.914" starttime="20201211 01:43:09.376"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201211 01:43:11.914" starttime="20201211 01:43:11.914"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:43:11.919" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:43:11.919" starttime="20201211 01:43:11.919"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:43:11.920" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:43:11.920" starttime="20201211 01:43:11.919"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:11.920" starttime="20201211 01:43:11.918"></status>
</kw>
<msg timestamp="20201211 01:43:11.920" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:43:11.920" starttime="20201211 01:43:11.917"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:11.921" starttime="20201211 01:43:11.916"></status>
</kw>
<msg timestamp="20201211 01:43:11.921" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201211 01:43:11.921" starttime="20201211 01:43:11.915"></status>
</kw>
<msg timestamp="20201211 01:43:11.922" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201211 01:43:11.922" starttime="20201211 01:43:11.914"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:11.927" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:14.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:14.439" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:43:14.439" starttime="20201211 01:43:11.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:14.440" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:43:14.441" starttime="20201211 01:43:14.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:14.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:14.441" starttime="20201211 01:43:14.441"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:14.442" starttime="20201211 01:43:11.923"></status>
</kw>
<msg timestamp="20201211 01:43:14.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:14.442" starttime="20201211 01:43:11.922"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:14.442" starttime="20201211 01:43:11.922"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:14.447" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:20.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:20.427" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:43:20.427" starttime="20201211 01:43:14.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:20.428" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:43:20.428" starttime="20201211 01:43:20.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:20.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:20.429" starttime="20201211 01:43:20.428"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:20.430" starttime="20201211 01:43:14.444"></status>
</kw>
<msg timestamp="20201211 01:43:20.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:20.430" starttime="20201211 01:43:14.444"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:20.430" starttime="20201211 01:43:14.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:20.435" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:24.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:24.727" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:43:24.727" starttime="20201211 01:43:20.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:24.728" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:43:24.729" starttime="20201211 01:43:24.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:24.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:24.729" starttime="20201211 01:43:24.729"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:24.729" starttime="20201211 01:43:20.432"></status>
</kw>
<msg timestamp="20201211 01:43:24.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:24.730" starttime="20201211 01:43:20.431"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:24.730" starttime="20201211 01:43:20.430"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:24.735" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:28.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:28.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:43:28.999" starttime="20201211 01:43:24.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:29.000" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:43:29.001" starttime="20201211 01:43:29.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:29.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:29.001" starttime="20201211 01:43:29.001"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:29.002" starttime="20201211 01:43:24.731"></status>
</kw>
<msg timestamp="20201211 01:43:29.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:29.002" starttime="20201211 01:43:24.731"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:29.002" starttime="20201211 01:43:24.730"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201211 01:43:29.002" critical="yes" starttime="20201211 01:43:00.715"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:43:29.008" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:43:29.009" starttime="20201211 01:43:29.008"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:43:29.009" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:43:29.009" starttime="20201211 01:43:29.009"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:29.009" starttime="20201211 01:43:29.007"></status>
</kw>
<msg timestamp="20201211 01:43:29.010" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:43:29.010" starttime="20201211 01:43:29.007"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:29.010" starttime="20201211 01:43:29.006"></status>
</kw>
<msg timestamp="20201211 01:43:29.010" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201211 01:43:29.010" starttime="20201211 01:43:29.005"></status>
</kw>
<msg timestamp="20201211 01:43:29.010" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201211 01:43:29.011" starttime="20201211 01:43:29.004"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:29.015" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:31.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:31.296" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:43:31.296" starttime="20201211 01:43:29.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:31.297" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:43:31.297" starttime="20201211 01:43:31.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:31.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:31.298" starttime="20201211 01:43:31.298"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:31.299" starttime="20201211 01:43:29.012"></status>
</kw>
<msg timestamp="20201211 01:43:31.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:31.299" starttime="20201211 01:43:29.011"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:31.299" starttime="20201211 01:43:29.011"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:31.303" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:33.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:33.541" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:43:33.542" starttime="20201211 01:43:31.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:33.543" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:43:33.543" starttime="20201211 01:43:33.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:33.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:33.544" starttime="20201211 01:43:33.543"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:33.544" starttime="20201211 01:43:31.300"></status>
</kw>
<msg timestamp="20201211 01:43:33.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:33.544" starttime="20201211 01:43:31.300"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:33.545" starttime="20201211 01:43:31.299"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201211 01:43:33.545" critical="yes" starttime="20201211 01:43:29.003"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201211 01:43:33.547" starttime="20201211 01:43:00.633"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:45:17.117" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:45:17.117" starttime="20201211 01:45:17.116"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:45:17.117" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:45:17.117" starttime="20201211 01:45:17.117"></status>
</kw>
<status status="PASS" endtime="20201211 01:45:17.118" starttime="20201211 01:45:17.115"></status>
</kw>
<msg timestamp="20201211 01:45:17.118" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:45:17.118" starttime="20201211 01:45:17.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:45:17.119" starttime="20201211 01:45:17.119"></status>
</kw>
<msg timestamp="20201211 01:45:17.119" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 01:45:17.119" starttime="20201211 01:45:17.118"></status>
</kw>
<status status="PASS" endtime="20201211 01:45:17.120" starttime="20201211 01:45:17.114"></status>
</kw>
<msg timestamp="20201211 01:45:17.120" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:45:17.120" starttime="20201211 01:45:17.113"></status>
</kw>
<msg timestamp="20201211 01:45:17.120" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:45:17.120" starttime="20201211 01:45:17.112"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:45:17.121" level="INFO">${random} = 97052</msg>
<status status="PASS" endtime="20201211 01:45:17.121" starttime="20201211 01:45:17.120"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:45:17.128" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-97052 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:45:20.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:45:20.757" level="INFO">${output} = 2020-12-11 01:45:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:45:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-11 ...</msg>
<status status="PASS" endtime="20201211 01:45:20.757" starttime="20201211 01:45:17.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:45:20.758" level="INFO">2020-12-11 01:45:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:45:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-11 01:45:19 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-11 01:45:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:45:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-57B97CAC1DDA-&gt;dd0bb229-5526-4bd6-893b-df2a13127194
2020-12-11 01:45:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201211 01:45:20.758" starttime="20201211 01:45:20.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:45:20.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:45:20.759" starttime="20201211 01:45:20.759"></status>
</kw>
<status status="PASS" endtime="20201211 01:45:20.760" starttime="20201211 01:45:17.122"></status>
</kw>
<msg timestamp="20201211 01:45:20.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:45:20.760" starttime="20201211 01:45:17.122"></status>
</kw>
<msg timestamp="20201211 01:45:20.760" level="INFO">${result} = 2020-12-11 01:45:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:45:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-11 ...</msg>
<status status="PASS" endtime="20201211 01:45:20.760" starttime="20201211 01:45:17.121"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:45:20.766" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:45:22.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:45:22.632" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-11 01:43 ofs://om/volume1/bucket1/ozone-54448
-rw-...</msg>
<status status="PASS" endtime="20201211 01:45:22.632" starttime="20201211 01:45:20.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:45:22.633" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-11 01:43 ofs://om/volume1/bucket1/ozone-54448
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-11 01:45 ofs://om/volume1/bucket1/ozone-97052
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:43 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:44 ofs://om/volume1/bucket1/wordcount-05.txt</msg>
<status status="PASS" endtime="20201211 01:45:22.633" starttime="20201211 01:45:22.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:45:22.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:45:22.634" starttime="20201211 01:45:22.633"></status>
</kw>
<status status="PASS" endtime="20201211 01:45:22.634" starttime="20201211 01:45:20.763"></status>
</kw>
<msg timestamp="20201211 01:45:22.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:45:22.635" starttime="20201211 01:45:20.763"></status>
</kw>
<msg timestamp="20201211 01:45:22.635" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-11 01:43 ofs://om/volume1/bucket1/ozone-54448
-rw-...</msg>
<status status="PASS" endtime="20201211 01:45:22.635" starttime="20201211 01:45:20.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:45:22.636" starttime="20201211 01:45:22.635"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201211 01:45:22.636" critical="yes" starttime="20201211 01:45:17.111"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201211 01:45:22.637" starttime="20201211 01:45:17.043"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:43:38.959" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:43:38.959" starttime="20201211 01:43:38.958"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:43:38.960" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:43:38.960" starttime="20201211 01:43:38.959"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:38.960" starttime="20201211 01:43:38.958"></status>
</kw>
<msg timestamp="20201211 01:43:38.960" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:43:38.960" starttime="20201211 01:43:38.957"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:38.960" starttime="20201211 01:43:38.956"></status>
</kw>
<msg timestamp="20201211 01:43:38.961" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:43:38.961" starttime="20201211 01:43:38.956"></status>
</kw>
<msg timestamp="20201211 01:43:38.961" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:43:38.961" starttime="20201211 01:43:38.954"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:43:38.962" level="INFO">${random} = 54448</msg>
<status status="PASS" endtime="20201211 01:43:38.962" starttime="20201211 01:43:38.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:38.975" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-54448 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:43.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:43.028" level="INFO">${output} = 2020-12-11 01:43:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:43:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-11 ...</msg>
<status status="PASS" endtime="20201211 01:43:43.028" starttime="20201211 01:43:38.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:43.029" level="INFO">2020-12-11 01:43:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:43:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-11 01:43:41 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-11 01:43:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:43:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5B0E9EB286F8-&gt;dd0bb229-5526-4bd6-893b-df2a13127194
2020-12-11 01:43:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201211 01:43:43.030" starttime="20201211 01:43:43.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:43.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:43.030" starttime="20201211 01:43:43.030"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:43.031" starttime="20201211 01:43:38.963"></status>
</kw>
<msg timestamp="20201211 01:43:43.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:43.031" starttime="20201211 01:43:38.963"></status>
</kw>
<msg timestamp="20201211 01:43:43.031" level="INFO">${result} = 2020-12-11 01:43:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:43:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-11 ...</msg>
<status status="PASS" endtime="20201211 01:43:43.031" starttime="20201211 01:43:38.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:43.037" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:45.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:45.043" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-11 01:43 o3fs://bucket1.volume1.om/ozone-54448
dr...</msg>
<status status="PASS" endtime="20201211 01:43:45.043" starttime="20201211 01:43:43.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:45.045" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-11 01:43 o3fs://bucket1.volume1.om/ozone-54448
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:43 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201211 01:43:45.045" starttime="20201211 01:43:45.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:45.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:45.046" starttime="20201211 01:43:45.045"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:45.046" starttime="20201211 01:43:43.034"></status>
</kw>
<msg timestamp="20201211 01:43:45.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:45.046" starttime="20201211 01:43:43.032"></status>
</kw>
<msg timestamp="20201211 01:43:45.047" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-11 01:43 o3fs://bucket1.volume1.om/ozone-54448
dr...</msg>
<status status="PASS" endtime="20201211 01:43:45.047" starttime="20201211 01:43:43.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:43:45.047" starttime="20201211 01:43:45.047"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201211 01:43:45.048" critical="yes" starttime="20201211 01:43:38.954"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201211 01:43:45.049" starttime="20201211 01:43:38.888"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:45:27.790" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:45:27.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:45:27.794" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:45:27.794" starttime="20201211 01:45:27.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:45:27.795" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:45:27.795" starttime="20201211 01:45:27.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:45:27.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:45:27.796" starttime="20201211 01:45:27.795"></status>
</kw>
<status status="PASS" endtime="20201211 01:45:27.796" starttime="20201211 01:45:27.784"></status>
</kw>
<msg timestamp="20201211 01:45:27.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:45:27.796" starttime="20201211 01:45:27.784"></status>
</kw>
<msg timestamp="20201211 01:45:27.797" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:45:27.797" starttime="20201211 01:45:27.783"></status>
</kw>
<msg timestamp="20201211 01:45:27.797" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:45:27.797" starttime="20201211 01:45:27.783"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:45:27.802" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:45:27.803" starttime="20201211 01:45:27.802"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:45:27.803" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:45:27.803" starttime="20201211 01:45:27.803"></status>
</kw>
<status status="PASS" endtime="20201211 01:45:27.804" starttime="20201211 01:45:27.800"></status>
</kw>
<msg timestamp="20201211 01:45:27.804" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:45:27.804" starttime="20201211 01:45:27.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:45:27.805" starttime="20201211 01:45:27.805"></status>
</kw>
<msg timestamp="20201211 01:45:27.805" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 01:45:27.805" starttime="20201211 01:45:27.804"></status>
</kw>
<status status="PASS" endtime="20201211 01:45:27.806" starttime="20201211 01:45:27.799"></status>
</kw>
<msg timestamp="20201211 01:45:27.806" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:45:27.806" starttime="20201211 01:45:27.798"></status>
</kw>
<msg timestamp="20201211 01:45:27.806" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:45:27.806" starttime="20201211 01:45:27.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:45:27.810" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:46:06.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:46:06.007" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:45:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:45:30 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201211 01:46:06.007" starttime="20201211 01:45:27.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:46:06.008" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:45:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:45:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-11 01:45:30 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-11 01:45:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:45:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-287038B8B06A-&gt;dd0bb229-5526-4bd6-893b-df2a13127194
2020-12-11 01:45:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-11 01:45:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-12-11 01:45:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 01:45:34 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-11 01:45:34 INFO  JobSubmitter:198 - number of splits:3
2020-12-11 01:45:34 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607650935043_0003
2020-12-11 01:45:34 INFO  YarnClientImpl:273 - Submitted application application_1607650935043_0003
2020-12-11 01:45:34 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607650935043_0003/
2020-12-11 01:45:34 INFO  Job:1339 - Running job: job_1607650935043_0003
2020-12-11 01:45:42 INFO  Job:1360 - Job job_1607650935043_0003 running in uber mode : false
2020-12-11 01:45:42 INFO  Job:1367 -  map 0% reduce 0%
2020-12-11 01:45:49 INFO  Job:1367 -  map 33% reduce 0%
2020-12-11 01:45:55 INFO  Job:1367 -  map 67% reduce 0%
2020-12-11 01:46:00 INFO  Job:1367 -  map 100% reduce 0%
2020-12-11 01:46:05 INFO  Job:1367 -  map 100% reduce 100%
2020-12-11 01:46:05 INFO  Job:1378 - Job job_1607650935043_0003 completed successfully
2020-12-11 01:46:05 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610697
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44128
		Total time spent by all reduces in occupied slots (ms)=17216
		Total time spent by all map tasks (ms)=11032
		Total time spent by all reduce tasks (ms)=4304
		Total vcore-milliseconds taken by all map tasks=11032
		Total vcore-milliseconds taken by all reduce tasks=4304
		Total megabyte-milliseconds taken by all map tasks=45187072
		Total megabyte-milliseconds taken by all reduce tasks=17629184
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=620
		CPU time spent (ms)=8050
		Physical memory (bytes) snapshot=1158275072
		Virtual memory (bytes) snapshot=15786246144
		Total committed heap usage (bytes)=1000865792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.088 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201211 01:46:06.008" starttime="20201211 01:46:06.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:46:06.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:46:06.009" starttime="20201211 01:46:06.009"></status>
</kw>
<status status="PASS" endtime="20201211 01:46:06.009" starttime="20201211 01:45:27.807"></status>
</kw>
<msg timestamp="20201211 01:46:06.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:46:06.010" starttime="20201211 01:45:27.807"></status>
</kw>
<msg timestamp="20201211 01:46:06.010" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:45:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:45:30 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201211 01:46:06.010" starttime="20201211 01:45:27.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:46:06.011" starttime="20201211 01:46:06.010"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:46:06.013" critical="yes" starttime="20201211 01:45:27.782"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:46:06.019" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:46:06.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:46:06.024" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:46:06.024" starttime="20201211 01:46:06.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:46:06.025" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:46:06.025" starttime="20201211 01:46:06.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:46:06.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:46:06.026" starttime="20201211 01:46:06.025"></status>
</kw>
<status status="PASS" endtime="20201211 01:46:06.026" starttime="20201211 01:46:06.016"></status>
</kw>
<msg timestamp="20201211 01:46:06.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:46:06.026" starttime="20201211 01:46:06.016"></status>
</kw>
<msg timestamp="20201211 01:46:06.026" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:46:06.027" starttime="20201211 01:46:06.015"></status>
</kw>
<msg timestamp="20201211 01:46:06.027" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:46:06.027" starttime="20201211 01:46:06.015"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:46:06.028" level="INFO">${random} = 98</msg>
<status status="PASS" endtime="20201211 01:46:06.028" starttime="20201211 01:46:06.027"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:46:06.032" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:46:06.033" starttime="20201211 01:46:06.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:46:06.033" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:46:06.033" starttime="20201211 01:46:06.033"></status>
</kw>
<status status="PASS" endtime="20201211 01:46:06.034" starttime="20201211 01:46:06.031"></status>
</kw>
<msg timestamp="20201211 01:46:06.034" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:46:06.034" starttime="20201211 01:46:06.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:46:06.035" starttime="20201211 01:46:06.035"></status>
</kw>
<msg timestamp="20201211 01:46:06.035" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 01:46:06.035" starttime="20201211 01:46:06.034"></status>
</kw>
<status status="PASS" endtime="20201211 01:46:06.036" starttime="20201211 01:46:06.029"></status>
</kw>
<msg timestamp="20201211 01:46:06.036" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:46:06.036" starttime="20201211 01:46:06.029"></status>
</kw>
<msg timestamp="20201211 01:46:06.036" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:46:06.036" starttime="20201211 01:46:06.028"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:46:06.040" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:46:06.040" starttime="20201211 01:46:06.040"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:46:06.041" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:46:06.041" starttime="20201211 01:46:06.040"></status>
</kw>
<status status="PASS" endtime="20201211 01:46:06.041" starttime="20201211 01:46:06.039"></status>
</kw>
<msg timestamp="20201211 01:46:06.042" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:46:06.042" starttime="20201211 01:46:06.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:46:06.044" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201211 01:46:06.044" starttime="20201211 01:46:06.043"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:46:06.045" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201211 01:46:06.045" starttime="20201211 01:46:06.044"></status>
</kw>
<status status="PASS" endtime="20201211 01:46:06.045" starttime="20201211 01:46:06.043"></status>
</kw>
<msg timestamp="20201211 01:46:06.045" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201211 01:46:06.046" starttime="20201211 01:46:06.042"></status>
</kw>
<status status="PASS" endtime="20201211 01:46:06.046" starttime="20201211 01:46:06.038"></status>
</kw>
<msg timestamp="20201211 01:46:06.046" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201211 01:46:06.046" starttime="20201211 01:46:06.037"></status>
</kw>
<msg timestamp="20201211 01:46:06.046" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201211 01:46:06.046" starttime="20201211 01:46:06.036"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:46:06.050" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:46:06.050" starttime="20201211 01:46:06.050"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:46:06.051" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:46:06.051" starttime="20201211 01:46:06.051"></status>
</kw>
<status status="PASS" endtime="20201211 01:46:06.051" starttime="20201211 01:46:06.049"></status>
</kw>
<msg timestamp="20201211 01:46:06.052" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:46:06.052" starttime="20201211 01:46:06.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:46:06.053" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201211 01:46:06.053" starttime="20201211 01:46:06.053"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:46:06.054" level="INFO">${result} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20201211 01:46:06.054" starttime="20201211 01:46:06.053"></status>
</kw>
<status status="PASS" endtime="20201211 01:46:06.054" starttime="20201211 01:46:06.052"></status>
</kw>
<msg timestamp="20201211 01:46:06.054" level="INFO">${path_with_leading} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20201211 01:46:06.054" starttime="20201211 01:46:06.052"></status>
</kw>
<status status="PASS" endtime="20201211 01:46:06.055" starttime="20201211 01:46:06.048"></status>
</kw>
<msg timestamp="20201211 01:46:06.055" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20201211 01:46:06.055" starttime="20201211 01:46:06.047"></status>
</kw>
<msg timestamp="20201211 01:46:06.055" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20201211 01:46:06.055" starttime="20201211 01:46:06.047"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:46:06.060" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-98.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:46:45.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:46:45.598" level="INFO">${output} = 2020-12-11 01:46:08 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-12-11 01:46:08 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201211 01:46:45.598" starttime="20201211 01:46:06.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:46:45.600" level="INFO">2020-12-11 01:46:08 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-12-11 01:46:08 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 01:46:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:46:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-11 01:46:08 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-11 01:46:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:46:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-81EE69C96135-&gt;dd0bb229-5526-4bd6-893b-df2a13127194
2020-12-11 01:46:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-11 01:46:12 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-11 01:46:12 INFO  JobSubmitter:198 - number of splits:3
2020-12-11 01:46:12 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607650935043_0004
2020-12-11 01:46:12 INFO  YarnClientImpl:273 - Submitted application application_1607650935043_0004
2020-12-11 01:46:12 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607650935043_0004/
2020-12-11 01:46:12 INFO  Job:1339 - Running job: job_1607650935043_0004
2020-12-11 01:46:20 INFO  Job:1360 - Job job_1607650935043_0004 running in uber mode : false
2020-12-11 01:46:20 INFO  Job:1367 -  map 0% reduce 0%
2020-12-11 01:46:27 INFO  Job:1367 -  map 33% reduce 0%
2020-12-11 01:46:32 INFO  Job:1367 -  map 67% reduce 0%
2020-12-11 01:46:37 INFO  Job:1367 -  map 100% reduce 0%
2020-12-11 01:46:42 INFO  Job:1367 -  map 100% reduce 100%
2020-12-11 01:46:45 INFO  Job:1378 - Job job_1607650935043_0004 completed successfully
2020-12-11 01:46:45 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673451
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43308
		Total time spent by all reduces in occupied slots (ms)=16808
		Total time spent by all map tasks (ms)=10827
		Total time spent by all reduce tasks (ms)=4202
		Total vcore-milliseconds taken by all map tasks=10827
		Total vcore-milliseconds taken by all reduce tasks=4202
		Total megabyte-milliseconds taken by all map tasks=44347392
		Total megabyte-milliseconds taken by all reduce tasks=17211392
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=604
		CPU time spent (ms)=8070
		Physical memory (bytes) snapshot=1134075904
		Virtual memory (bytes) snapshot=15787511808
		Total committed heap usage (bytes)=942669824
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201211 01:46:45.600" starttime="20201211 01:46:45.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:46:45.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:46:45.601" starttime="20201211 01:46:45.600"></status>
</kw>
<status status="PASS" endtime="20201211 01:46:45.601" starttime="20201211 01:46:06.056"></status>
</kw>
<msg timestamp="20201211 01:46:45.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:46:45.601" starttime="20201211 01:46:06.056"></status>
</kw>
<msg timestamp="20201211 01:46:45.602" level="INFO">${output} = 2020-12-11 01:46:08 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-12-11 01:46:08 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201211 01:46:45.602" starttime="20201211 01:46:06.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201211 01:46:45.603" starttime="20201211 01:46:45.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:46:45.603" starttime="20201211 01:46:45.603"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:46:45.603" critical="yes" starttime="20201211 01:46:06.014"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201211 01:46:45.606" starttime="20201211 01:45:27.719"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:50.193" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:43:50.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:43:50.199" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:43:50.199" starttime="20201211 01:43:50.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:43:50.200" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:43:50.200" starttime="20201211 01:43:50.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:43:50.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:43:50.201" starttime="20201211 01:43:50.201"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:50.202" starttime="20201211 01:43:50.188"></status>
</kw>
<msg timestamp="20201211 01:43:50.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:43:50.202" starttime="20201211 01:43:50.188"></status>
</kw>
<msg timestamp="20201211 01:43:50.202" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:43:50.202" starttime="20201211 01:43:50.187"></status>
</kw>
<msg timestamp="20201211 01:43:50.202" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:43:50.203" starttime="20201211 01:43:50.187"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:43:50.208" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:43:50.208" starttime="20201211 01:43:50.207"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:43:50.209" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:43:50.209" starttime="20201211 01:43:50.208"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:50.209" starttime="20201211 01:43:50.206"></status>
</kw>
<msg timestamp="20201211 01:43:50.209" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:43:50.209" starttime="20201211 01:43:50.205"></status>
</kw>
<status status="PASS" endtime="20201211 01:43:50.210" starttime="20201211 01:43:50.204"></status>
</kw>
<msg timestamp="20201211 01:43:50.210" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:43:50.210" starttime="20201211 01:43:50.204"></status>
</kw>
<msg timestamp="20201211 01:43:50.210" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:43:50.210" starttime="20201211 01:43:50.203"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:43:50.214" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:44:30.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:44:30.683" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:43:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:43:52 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201211 01:44:30.683" starttime="20201211 01:43:50.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:44:30.684" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:43:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:43:52 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-11 01:43:52 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-11 01:43:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:43:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-07BC023FAFA7-&gt;dd0bb229-5526-4bd6-893b-df2a13127194
2020-12-11 01:43:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-11 01:43:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-12-11 01:43:54 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-11 01:43:54 INFO  JobSubmitter:198 - number of splits:3
2020-12-11 01:43:54 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607650935043_0001
2020-12-11 01:43:55 INFO  YarnClientImpl:273 - Submitted application application_1607650935043_0001
2020-12-11 01:43:55 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607650935043_0001/
2020-12-11 01:43:55 INFO  Job:1339 - Running job: job_1607650935043_0001
2020-12-11 01:44:06 INFO  Job:1360 - Job job_1607650935043_0001 running in uber mode : false
2020-12-11 01:44:06 INFO  Job:1367 -  map 0% reduce 0%
2020-12-11 01:44:13 INFO  Job:1367 -  map 33% reduce 0%
2020-12-11 01:44:19 INFO  Job:1367 -  map 67% reduce 0%
2020-12-11 01:44:23 INFO  Job:1367 -  map 100% reduce 0%
2020-12-11 01:44:28 INFO  Job:1367 -  map 100% reduce 100%
2020-12-11 01:44:29 INFO  Job:1378 - Job job_1607650935043_0001 completed successfully
2020-12-11 01:44:30 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610909
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45336
		Total time spent by all reduces in occupied slots (ms)=16648
		Total time spent by all map tasks (ms)=11334
		Total time spent by all reduce tasks (ms)=4162
		Total vcore-milliseconds taken by all map tasks=11334
		Total vcore-milliseconds taken by all reduce tasks=4162
		Total megabyte-milliseconds taken by all map tasks=46424064
		Total megabyte-milliseconds taken by all reduce tasks=17047552
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=649
		CPU time spent (ms)=7290
		Physical memory (bytes) snapshot=1141735424
		Virtual memory (bytes) snapshot=15782727680
		Total committed heap usage (bytes)=1006632960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.362 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201211 01:44:30.685" starttime="20201211 01:44:30.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:44:30.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:44:30.686" starttime="20201211 01:44:30.685"></status>
</kw>
<status status="PASS" endtime="20201211 01:44:30.686" starttime="20201211 01:43:50.211"></status>
</kw>
<msg timestamp="20201211 01:44:30.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:44:30.686" starttime="20201211 01:43:50.211"></status>
</kw>
<msg timestamp="20201211 01:44:30.687" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:43:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:43:52 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201211 01:44:30.687" starttime="20201211 01:43:50.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:44:30.687" starttime="20201211 01:44:30.687"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:44:30.688" critical="yes" starttime="20201211 01:43:50.186"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:44:30.693" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:44:30.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:44:30.699" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:44:30.699" starttime="20201211 01:44:30.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:44:30.700" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:44:30.700" starttime="20201211 01:44:30.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:44:30.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:44:30.701" starttime="20201211 01:44:30.700"></status>
</kw>
<status status="PASS" endtime="20201211 01:44:30.701" starttime="20201211 01:44:30.690"></status>
</kw>
<msg timestamp="20201211 01:44:30.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:44:30.702" starttime="20201211 01:44:30.690"></status>
</kw>
<msg timestamp="20201211 01:44:30.702" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:44:30.702" starttime="20201211 01:44:30.689"></status>
</kw>
<msg timestamp="20201211 01:44:30.702" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201211 01:44:30.702" starttime="20201211 01:44:30.689"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:44:30.703" level="INFO">${random} = 05</msg>
<status status="PASS" endtime="20201211 01:44:30.703" starttime="20201211 01:44:30.703"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:44:30.708" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:44:30.708" starttime="20201211 01:44:30.707"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:44:30.708" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:44:30.708" starttime="20201211 01:44:30.708"></status>
</kw>
<status status="PASS" endtime="20201211 01:44:30.709" starttime="20201211 01:44:30.706"></status>
</kw>
<msg timestamp="20201211 01:44:30.709" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:44:30.709" starttime="20201211 01:44:30.706"></status>
</kw>
<status status="PASS" endtime="20201211 01:44:30.709" starttime="20201211 01:44:30.705"></status>
</kw>
<msg timestamp="20201211 01:44:30.709" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:44:30.709" starttime="20201211 01:44:30.704"></status>
</kw>
<msg timestamp="20201211 01:44:30.710" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:44:30.710" starttime="20201211 01:44:30.703"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:44:30.714" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:44:30.714" starttime="20201211 01:44:30.713"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:44:30.714" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:44:30.714" starttime="20201211 01:44:30.714"></status>
</kw>
<status status="PASS" endtime="20201211 01:44:30.715" starttime="20201211 01:44:30.712"></status>
</kw>
<msg timestamp="20201211 01:44:30.715" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:44:30.715" starttime="20201211 01:44:30.712"></status>
</kw>
<status status="PASS" endtime="20201211 01:44:30.715" starttime="20201211 01:44:30.711"></status>
</kw>
<msg timestamp="20201211 01:44:30.715" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201211 01:44:30.715" starttime="20201211 01:44:30.711"></status>
</kw>
<msg timestamp="20201211 01:44:30.716" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201211 01:44:30.716" starttime="20201211 01:44:30.710"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:44:30.719" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:44:30.719" starttime="20201211 01:44:30.719"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:44:30.720" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:44:30.720" starttime="20201211 01:44:30.720"></status>
</kw>
<status status="PASS" endtime="20201211 01:44:30.720" starttime="20201211 01:44:30.718"></status>
</kw>
<msg timestamp="20201211 01:44:30.721" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:44:30.721" starttime="20201211 01:44:30.718"></status>
</kw>
<status status="PASS" endtime="20201211 01:44:30.721" starttime="20201211 01:44:30.717"></status>
</kw>
<msg timestamp="20201211 01:44:30.721" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-05.txt</msg>
<status status="PASS" endtime="20201211 01:44:30.721" starttime="20201211 01:44:30.717"></status>
</kw>
<msg timestamp="20201211 01:44:30.721" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-05.txt</msg>
<status status="PASS" endtime="20201211 01:44:30.722" starttime="20201211 01:44:30.716"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:44:30.727" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-05.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:45:11.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:45:11.905" level="INFO">${output} = 2020-12-11 01:44:32 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-12-11 01:44:32 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201211 01:45:11.905" starttime="20201211 01:44:30.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:45:11.906" level="INFO">2020-12-11 01:44:32 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-12-11 01:44:32 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 01:44:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:44:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-11 01:44:33 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-11 01:44:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:44:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F57EC5681192-&gt;dd0bb229-5526-4bd6-893b-df2a13127194
2020-12-11 01:44:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-11 01:44:34 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-11 01:44:37 INFO  JobSubmitter:198 - number of splits:3
2020-12-11 01:44:39 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607650935043_0002
2020-12-11 01:44:40 INFO  YarnClientImpl:273 - Submitted application application_1607650935043_0002
2020-12-11 01:44:40 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607650935043_0002/
2020-12-11 01:44:40 INFO  Job:1339 - Running job: job_1607650935043_0002
2020-12-11 01:44:48 INFO  Job:1360 - Job job_1607650935043_0002 running in uber mode : false
2020-12-11 01:44:48 INFO  Job:1367 -  map 0% reduce 0%
2020-12-11 01:44:55 INFO  Job:1367 -  map 33% reduce 0%
2020-12-11 01:45:01 INFO  Job:1367 -  map 67% reduce 0%
2020-12-11 01:45:06 INFO  Job:1367 -  map 100% reduce 0%
2020-12-11 01:45:10 INFO  Job:1367 -  map 100% reduce 100%
2020-12-11 01:45:11 INFO  Job:1378 - Job job_1607650935043_0002 completed successfully
2020-12-11 01:45:11 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673535
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44992
		Total time spent by all reduces in occupied slots (ms)=16440
		Total time spent by all map tasks (ms)=11248
		Total time spent by all reduce tasks (ms)=4110
		Total vcore-milliseconds taken by all map tasks=11248
		Total vcore-milliseconds taken by all reduce tasks=4110
		Total megabyte-milliseconds taken by all map tasks=46071808
		Total megabyte-milliseconds taken by all reduce tasks=16834560
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=594
		CPU time spent (ms)=7840
		Physical memory (bytes) snapshot=1143582720
		Virtual memory (bytes) snapshot=15790956544
		Total committed heap usage (bytes)=980418560
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201211 01:45:11.907" starttime="20201211 01:45:11.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:45:11.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:45:11.908" starttime="20201211 01:45:11.907"></status>
</kw>
<status status="PASS" endtime="20201211 01:45:11.908" starttime="20201211 01:44:30.723"></status>
</kw>
<msg timestamp="20201211 01:45:11.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:45:11.908" starttime="20201211 01:44:30.722"></status>
</kw>
<msg timestamp="20201211 01:45:11.909" level="INFO">${output} = 2020-12-11 01:44:32 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-12-11 01:44:32 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201211 01:45:11.909" starttime="20201211 01:44:30.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201211 01:45:11.910" starttime="20201211 01:45:11.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:45:11.910" starttime="20201211 01:45:11.910"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:45:11.911" critical="yes" starttime="20201211 01:44:30.688"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201211 01:45:11.912" starttime="20201211 01:43:50.110"></status>
</suite>
<status status="PASS" elapsedtime="204358" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:47:55.830" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:47:58.621" level="INFO">${rc} = 255</msg>
<msg timestamp="20201211 01:47:58.621" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201211 01:47:58.621" starttime="20201211 01:47:55.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:47:58.622" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201211 01:47:58.622" starttime="20201211 01:47:58.621"></status>
</kw>
<msg timestamp="20201211 01:47:58.622" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201211 01:47:58.622" starttime="20201211 01:47:55.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:47:58.629" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:00.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:00.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:48:00.999" starttime="20201211 01:47:58.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:01.000" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:48:01.000" starttime="20201211 01:48:00.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:01.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:01.001" starttime="20201211 01:48:01.000"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:01.001" starttime="20201211 01:47:58.625"></status>
</kw>
<msg timestamp="20201211 01:48:01.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:01.001" starttime="20201211 01:47:58.625"></status>
</kw>
<msg timestamp="20201211 01:48:01.002" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201211 01:48:01.002" starttime="20201211 01:47:58.624"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201211 01:48:01.002" starttime="20201211 01:48:01.002"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:01.002" starttime="20201211 01:47:58.623"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:01.002" starttime="20201211 01:47:58.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:01.007" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:03.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:03.344" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:48:03.344" starttime="20201211 01:48:01.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:03.345" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:48:03.345" starttime="20201211 01:48:03.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:03.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:03.346" starttime="20201211 01:48:03.345"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:03.346" starttime="20201211 01:48:01.005"></status>
</kw>
<msg timestamp="20201211 01:48:03.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:03.346" starttime="20201211 01:48:01.004"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:03.347" starttime="20201211 01:48:01.004"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:03.347" starttime="20201211 01:48:01.003"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:03.347" starttime="20201211 01:48:01.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201211 01:48:03.347" starttime="20201211 01:48:03.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:03.352" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:05.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:05.945" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-11T01:48:03.216Z",
  "modificat...</msg>
<status status="PASS" endtime="20201211 01:48:05.945" starttime="20201211 01:48:03.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:05.946" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-11T01:48:03.216Z",
  "modificationTime" : "2020-12-11T01:48:03.216Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201211 01:48:05.946" starttime="20201211 01:48:05.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:05.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:05.947" starttime="20201211 01:48:05.946"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:05.947" starttime="20201211 01:48:03.349"></status>
</kw>
<msg timestamp="20201211 01:48:05.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:05.948" starttime="20201211 01:48:03.349"></status>
</kw>
<msg timestamp="20201211 01:48:05.948" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-11T01:48:03.216Z",
  "modificat...</msg>
<status status="PASS" endtime="20201211 01:48:05.948" starttime="20201211 01:48:03.348"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201211 01:48:05.949" starttime="20201211 01:48:05.948"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:48:05.953" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:48:05.953" starttime="20201211 01:48:05.953"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:48:05.954" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:48:05.954" starttime="20201211 01:48:05.953"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:05.954" starttime="20201211 01:48:05.952"></status>
</kw>
<msg timestamp="20201211 01:48:05.954" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:48:05.954" starttime="20201211 01:48:05.952"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:05.955" starttime="20201211 01:48:05.951"></status>
</kw>
<msg timestamp="20201211 01:48:05.955" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201211 01:48:05.955" starttime="20201211 01:48:05.950"></status>
</kw>
<msg timestamp="20201211 01:48:05.955" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201211 01:48:05.955" starttime="20201211 01:48:05.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:05.961" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:08.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:08.360" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:48:08.360" starttime="20201211 01:48:05.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:08.361" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:48:08.361" starttime="20201211 01:48:08.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:08.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:08.362" starttime="20201211 01:48:08.362"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:08.363" starttime="20201211 01:48:05.956"></status>
</kw>
<msg timestamp="20201211 01:48:08.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:08.363" starttime="20201211 01:48:05.956"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:08.363" starttime="20201211 01:48:05.955"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:08.368" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:14.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:14.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:48:14.259" starttime="20201211 01:48:08.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:14.260" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:48:14.260" starttime="20201211 01:48:14.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:14.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:14.262" starttime="20201211 01:48:14.261"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:14.262" starttime="20201211 01:48:08.365"></status>
</kw>
<msg timestamp="20201211 01:48:14.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:14.263" starttime="20201211 01:48:08.364"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:14.264" starttime="20201211 01:48:08.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:14.269" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:18.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:18.938" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:48:18.938" starttime="20201211 01:48:14.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:18.940" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:48:18.940" starttime="20201211 01:48:18.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:18.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:18.941" starttime="20201211 01:48:18.940"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:18.941" starttime="20201211 01:48:14.266"></status>
</kw>
<msg timestamp="20201211 01:48:18.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:18.941" starttime="20201211 01:48:14.265"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:18.942" starttime="20201211 01:48:14.264"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:18.946" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:23.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:23.067" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:48:23.067" starttime="20201211 01:48:18.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:23.068" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:48:23.068" starttime="20201211 01:48:23.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:23.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:23.069" starttime="20201211 01:48:23.069"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:23.069" starttime="20201211 01:48:18.943"></status>
</kw>
<msg timestamp="20201211 01:48:23.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:23.070" starttime="20201211 01:48:18.942"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:23.070" starttime="20201211 01:48:18.942"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201211 01:48:23.070" critical="yes" starttime="20201211 01:47:55.819"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:48:23.077" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:48:23.077" starttime="20201211 01:48:23.076"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:48:23.078" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:48:23.078" starttime="20201211 01:48:23.077"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:23.078" starttime="20201211 01:48:23.076"></status>
</kw>
<msg timestamp="20201211 01:48:23.078" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:48:23.078" starttime="20201211 01:48:23.075"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:23.078" starttime="20201211 01:48:23.074"></status>
</kw>
<msg timestamp="20201211 01:48:23.079" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201211 01:48:23.079" starttime="20201211 01:48:23.073"></status>
</kw>
<msg timestamp="20201211 01:48:23.079" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201211 01:48:23.079" starttime="20201211 01:48:23.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:23.083" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:25.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:25.244" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:48:25.244" starttime="20201211 01:48:23.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:25.245" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:48:25.245" starttime="20201211 01:48:25.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:25.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:25.246" starttime="20201211 01:48:25.246"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:25.247" starttime="20201211 01:48:23.080"></status>
</kw>
<msg timestamp="20201211 01:48:25.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:25.247" starttime="20201211 01:48:23.080"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:25.247" starttime="20201211 01:48:23.079"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:25.252" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:27.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:27.613" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:48:27.613" starttime="20201211 01:48:25.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:27.614" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:48:27.614" starttime="20201211 01:48:27.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:27.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:27.615" starttime="20201211 01:48:27.615"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:27.616" starttime="20201211 01:48:25.248"></status>
</kw>
<msg timestamp="20201211 01:48:27.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:27.616" starttime="20201211 01:48:25.248"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:27.616" starttime="20201211 01:48:25.247"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201211 01:48:27.617" critical="yes" starttime="20201211 01:48:23.071"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201211 01:48:27.618" starttime="20201211 01:47:55.731"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:50:11.794" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:50:11.794" starttime="20201211 01:50:11.793"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:50:11.794" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:50:11.794" starttime="20201211 01:50:11.794"></status>
</kw>
<status status="PASS" endtime="20201211 01:50:11.795" starttime="20201211 01:50:11.793"></status>
</kw>
<msg timestamp="20201211 01:50:11.795" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:50:11.795" starttime="20201211 01:50:11.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:50:11.796" starttime="20201211 01:50:11.795"></status>
</kw>
<msg timestamp="20201211 01:50:11.796" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 01:50:11.796" starttime="20201211 01:50:11.795"></status>
</kw>
<status status="PASS" endtime="20201211 01:50:11.797" starttime="20201211 01:50:11.791"></status>
</kw>
<msg timestamp="20201211 01:50:11.797" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:50:11.797" starttime="20201211 01:50:11.790"></status>
</kw>
<msg timestamp="20201211 01:50:11.797" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:50:11.797" starttime="20201211 01:50:11.789"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:50:11.798" level="INFO">${random} = 33966</msg>
<status status="PASS" endtime="20201211 01:50:11.798" starttime="20201211 01:50:11.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:50:11.804" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-33966 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:50:15.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:50:15.599" level="INFO">${output} = 2020-12-11 01:50:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:50:15.599" starttime="20201211 01:50:11.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:50:15.601" level="INFO">2020-12-11 01:50:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:13 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-11 01:50:13 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:50:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:50:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:50:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:50:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-793794347BBD-&gt;ea5d912b-9cfa-46e0-b862-af1de3a701c4
2020-12-11 01:50:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-11 01:50:15 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201211 01:50:15.601" starttime="20201211 01:50:15.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:50:15.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:50:15.601" starttime="20201211 01:50:15.601"></status>
</kw>
<status status="PASS" endtime="20201211 01:50:15.602" starttime="20201211 01:50:11.799"></status>
</kw>
<msg timestamp="20201211 01:50:15.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:50:15.602" starttime="20201211 01:50:11.799"></status>
</kw>
<msg timestamp="20201211 01:50:15.602" level="INFO">${result} = 2020-12-11 01:50:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:50:15.602" starttime="20201211 01:50:11.798"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:50:15.607" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:50:17.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:50:17.673" level="INFO">${output} = 2020-12-11 01:50:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:50:17.673" starttime="20201211 01:50:15.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:50:17.675" level="INFO">2020-12-11 01:50:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:17 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:48 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-11 01:50 ofs://om/volume1/bucket1/ozone-33966
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-11 01:48 ofs://om/volume1/bucket1/ozone-87609
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:48 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:49 ofs://om/volume1/bucket1/wordcount-11.txt
2020-12-11 01:50:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201211 01:50:17.675" starttime="20201211 01:50:17.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:50:17.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:50:17.676" starttime="20201211 01:50:17.675"></status>
</kw>
<status status="PASS" endtime="20201211 01:50:17.676" starttime="20201211 01:50:15.605"></status>
</kw>
<msg timestamp="20201211 01:50:17.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:50:17.676" starttime="20201211 01:50:15.604"></status>
</kw>
<msg timestamp="20201211 01:50:17.677" level="INFO">${result} = 2020-12-11 01:50:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:50:17.677" starttime="20201211 01:50:15.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:50:17.677" starttime="20201211 01:50:17.677"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201211 01:50:17.678" critical="yes" starttime="20201211 01:50:11.788"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201211 01:50:17.679" starttime="20201211 01:50:11.722"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:48:32.829" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:48:32.829" starttime="20201211 01:48:32.828"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:48:32.830" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:48:32.830" starttime="20201211 01:48:32.829"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:32.830" starttime="20201211 01:48:32.828"></status>
</kw>
<msg timestamp="20201211 01:48:32.831" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:48:32.831" starttime="20201211 01:48:32.827"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:32.831" starttime="20201211 01:48:32.826"></status>
</kw>
<msg timestamp="20201211 01:48:32.831" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:48:32.831" starttime="20201211 01:48:32.825"></status>
</kw>
<msg timestamp="20201211 01:48:32.832" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:48:32.832" starttime="20201211 01:48:32.824"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:48:32.832" level="INFO">${random} = 87609</msg>
<status status="PASS" endtime="20201211 01:48:32.832" starttime="20201211 01:48:32.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:32.838" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-87609 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:36.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:36.885" level="INFO">${output} = 2020-12-11 01:48:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:48:36.885" starttime="20201211 01:48:32.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:36.886" level="INFO">2020-12-11 01:48:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-11 01:48:34 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:48:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:48:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:48:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:48:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8D9B45226C82-&gt;ea5d912b-9cfa-46e0-b862-af1de3a701c4
2020-12-11 01:48:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-11 01:48:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201211 01:48:36.886" starttime="20201211 01:48:36.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:36.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:36.887" starttime="20201211 01:48:36.887"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:36.888" starttime="20201211 01:48:32.833"></status>
</kw>
<msg timestamp="20201211 01:48:36.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:36.888" starttime="20201211 01:48:32.833"></status>
</kw>
<msg timestamp="20201211 01:48:36.888" level="INFO">${result} = 2020-12-11 01:48:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:48:36.888" starttime="20201211 01:48:32.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:36.893" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:38.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:38.827" level="INFO">${output} = 2020-12-11 01:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:48:38.827" starttime="20201211 01:48:36.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:38.828" level="INFO">2020-12-11 01:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:38 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:48 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-11 01:48 o3fs://bucket1.volume1.om/ozone-87609
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:48 o3fs://bucket1.volume1.om/user
2020-12-11 01:48:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201211 01:48:38.828" starttime="20201211 01:48:38.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:38.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:38.829" starttime="20201211 01:48:38.829"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:38.829" starttime="20201211 01:48:36.890"></status>
</kw>
<msg timestamp="20201211 01:48:38.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:38.830" starttime="20201211 01:48:36.889"></status>
</kw>
<msg timestamp="20201211 01:48:38.830" level="INFO">${result} = 2020-12-11 01:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:48:38.830" starttime="20201211 01:48:36.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:48:38.831" starttime="20201211 01:48:38.830"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201211 01:48:38.831" critical="yes" starttime="20201211 01:48:32.823"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201211 01:48:38.833" starttime="20201211 01:48:32.759"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:50:22.881" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:50:22.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:50:22.886" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:50:22.886" starttime="20201211 01:50:22.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:50:22.888" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:50:22.888" starttime="20201211 01:50:22.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:50:22.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:50:22.888" starttime="20201211 01:50:22.888"></status>
</kw>
<status status="PASS" endtime="20201211 01:50:22.889" starttime="20201211 01:50:22.876"></status>
</kw>
<msg timestamp="20201211 01:50:22.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:50:22.889" starttime="20201211 01:50:22.876"></status>
</kw>
<msg timestamp="20201211 01:50:22.889" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:50:22.889" starttime="20201211 01:50:22.875"></status>
</kw>
<msg timestamp="20201211 01:50:22.889" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:50:22.890" starttime="20201211 01:50:22.875"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:50:22.895" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:50:22.895" starttime="20201211 01:50:22.894"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:50:22.895" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:50:22.895" starttime="20201211 01:50:22.895"></status>
</kw>
<status status="PASS" endtime="20201211 01:50:22.896" starttime="20201211 01:50:22.893"></status>
</kw>
<msg timestamp="20201211 01:50:22.896" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:50:22.896" starttime="20201211 01:50:22.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:50:22.897" starttime="20201211 01:50:22.897"></status>
</kw>
<msg timestamp="20201211 01:50:22.897" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 01:50:22.897" starttime="20201211 01:50:22.896"></status>
</kw>
<status status="PASS" endtime="20201211 01:50:22.898" starttime="20201211 01:50:22.891"></status>
</kw>
<msg timestamp="20201211 01:50:22.898" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:50:22.898" starttime="20201211 01:50:22.891"></status>
</kw>
<msg timestamp="20201211 01:50:22.898" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:50:22.898" starttime="20201211 01:50:22.890"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:50:22.902" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:51:07.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:51:07.932" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:50:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50...</msg>
<status status="PASS" endtime="20201211 01:51:07.932" starttime="20201211 01:50:22.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:51:07.933" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:50:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:25 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-11 01:50:25 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:50:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:50:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:50:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:50:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BC2E2096ED9F-&gt;ea5d912b-9cfa-46e0-b862-af1de3a701c4
2020-12-11 01:50:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-11 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-12-11 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:29 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 01:50:32 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 01:50:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607651253500_0003
2020-12-11 01:50:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-11 01:50:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:32 INFO  Configuration:2752 - resource-types.xml not found
2020-12-11 01:50:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-11 01:50:32 INFO  YarnClientImpl:324 - Submitted application application_1607651253500_0003
2020-12-11 01:50:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607651253500_0003/
2020-12-11 01:50:32 INFO  Job:1619 - Running job: job_1607651253500_0003
2020-12-11 01:50:40 INFO  Job:1640 - Job job_1607651253500_0003 running in uber mode : false
2020-12-11 01:50:40 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 01:50:48 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 01:50:55 INFO  Job:1647 -  map 67% reduce 0%
2020-12-11 01:51:01 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 01:51:06 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 01:51:07 INFO  Job:1658 - Job job_1607651253500_0003 completed successfully
2020-12-11 01:51:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:07 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016145
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48396
		Total time spent by all reduces in occupied slots (ms)=16068
		Total time spent by all map tasks (ms)=12099
		Total time spent by all reduce tasks (ms)=4017
		Total vcore-milliseconds taken by all map tasks=12099
		Total vcore-milliseconds taken by all reduce tasks=4017
		Total megabyte-milliseconds taken by all map tasks=49557504
		Total megabyte-milliseconds taken by all reduce tasks=16453632
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=638
		CPU time spent (ms)=7510
		Physical memory (bytes) snapshot=1203556352
		Virtual memory (bytes) snapshot=15789645824
		Total committed heap usage (bytes)=1067974656
		Peak Map Physical memory (bytes)=311377920
		Peak Map Virtual memory (bytes)=3946283008
		Peak Reduce Physical memory (bytes)=276586496
		Peak Reduce Virtual memory (bytes)=3954909184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.87 seconds
2020-12-11 01:51:07 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-11 01:51:07 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201211 01:51:07.933" starttime="20201211 01:51:07.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:51:07.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:51:07.934" starttime="20201211 01:51:07.934"></status>
</kw>
<status status="PASS" endtime="20201211 01:51:07.935" starttime="20201211 01:50:22.900"></status>
</kw>
<msg timestamp="20201211 01:51:07.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:51:07.935" starttime="20201211 01:50:22.899"></status>
</kw>
<msg timestamp="20201211 01:51:07.935" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:50:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50...</msg>
<status status="PASS" endtime="20201211 01:51:07.935" starttime="20201211 01:50:22.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:51:07.936" starttime="20201211 01:51:07.936"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:51:07.936" critical="yes" starttime="20201211 01:50:22.874"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:51:07.943" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:51:07.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:51:07.951" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:51:07.951" starttime="20201211 01:51:07.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:51:07.952" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:51:07.952" starttime="20201211 01:51:07.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:51:07.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:51:07.953" starttime="20201211 01:51:07.952"></status>
</kw>
<status status="PASS" endtime="20201211 01:51:07.953" starttime="20201211 01:51:07.940"></status>
</kw>
<msg timestamp="20201211 01:51:07.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:51:07.953" starttime="20201211 01:51:07.940"></status>
</kw>
<msg timestamp="20201211 01:51:07.954" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:51:07.954" starttime="20201211 01:51:07.939"></status>
</kw>
<msg timestamp="20201211 01:51:07.954" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:51:07.954" starttime="20201211 01:51:07.939"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:51:07.955" level="INFO">${random} = 57</msg>
<status status="PASS" endtime="20201211 01:51:07.955" starttime="20201211 01:51:07.954"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:51:07.960" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:51:07.960" starttime="20201211 01:51:07.959"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:51:07.961" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:51:07.961" starttime="20201211 01:51:07.960"></status>
</kw>
<status status="PASS" endtime="20201211 01:51:07.961" starttime="20201211 01:51:07.959"></status>
</kw>
<msg timestamp="20201211 01:51:07.961" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:51:07.961" starttime="20201211 01:51:07.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:51:07.962" starttime="20201211 01:51:07.962"></status>
</kw>
<msg timestamp="20201211 01:51:07.962" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 01:51:07.962" starttime="20201211 01:51:07.961"></status>
</kw>
<status status="PASS" endtime="20201211 01:51:07.963" starttime="20201211 01:51:07.957"></status>
</kw>
<msg timestamp="20201211 01:51:07.963" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:51:07.963" starttime="20201211 01:51:07.956"></status>
</kw>
<msg timestamp="20201211 01:51:07.963" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:51:07.963" starttime="20201211 01:51:07.955"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:51:07.968" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:51:07.968" starttime="20201211 01:51:07.967"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:51:07.968" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:51:07.968" starttime="20201211 01:51:07.968"></status>
</kw>
<status status="PASS" endtime="20201211 01:51:07.968" starttime="20201211 01:51:07.966"></status>
</kw>
<msg timestamp="20201211 01:51:07.969" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:51:07.969" starttime="20201211 01:51:07.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:51:07.971" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201211 01:51:07.971" starttime="20201211 01:51:07.970"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:51:07.972" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201211 01:51:07.972" starttime="20201211 01:51:07.971"></status>
</kw>
<status status="PASS" endtime="20201211 01:51:07.972" starttime="20201211 01:51:07.970"></status>
</kw>
<msg timestamp="20201211 01:51:07.972" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201211 01:51:07.972" starttime="20201211 01:51:07.969"></status>
</kw>
<status status="PASS" endtime="20201211 01:51:07.972" starttime="20201211 01:51:07.965"></status>
</kw>
<msg timestamp="20201211 01:51:07.972" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201211 01:51:07.972" starttime="20201211 01:51:07.964"></status>
</kw>
<msg timestamp="20201211 01:51:07.973" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201211 01:51:07.973" starttime="20201211 01:51:07.963"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:51:07.976" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:51:07.976" starttime="20201211 01:51:07.976"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:51:07.977" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:51:07.977" starttime="20201211 01:51:07.976"></status>
</kw>
<status status="PASS" endtime="20201211 01:51:07.977" starttime="20201211 01:51:07.975"></status>
</kw>
<msg timestamp="20201211 01:51:07.977" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:51:07.977" starttime="20201211 01:51:07.975"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:51:07.979" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201211 01:51:07.979" starttime="20201211 01:51:07.978"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:51:07.980" level="INFO">${result} = /wordcount-57.txt</msg>
<status status="PASS" endtime="20201211 01:51:07.980" starttime="20201211 01:51:07.979"></status>
</kw>
<status status="PASS" endtime="20201211 01:51:07.980" starttime="20201211 01:51:07.978"></status>
</kw>
<msg timestamp="20201211 01:51:07.980" level="INFO">${path_with_leading} = /wordcount-57.txt</msg>
<status status="PASS" endtime="20201211 01:51:07.980" starttime="20201211 01:51:07.977"></status>
</kw>
<status status="PASS" endtime="20201211 01:51:07.981" starttime="20201211 01:51:07.974"></status>
</kw>
<msg timestamp="20201211 01:51:07.981" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-57.txt</msg>
<status status="PASS" endtime="20201211 01:51:07.981" starttime="20201211 01:51:07.974"></status>
</kw>
<msg timestamp="20201211 01:51:07.981" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-57.txt</msg>
<status status="PASS" endtime="20201211 01:51:07.981" starttime="20201211 01:51:07.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:51:07.988" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-57.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:51:47.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:51:47.958" level="INFO">${output} = 2020-12-11 01:51:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:51:47.958" starttime="20201211 01:51:07.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:51:47.960" level="INFO">2020-12-11 01:51:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-12-11 01:51:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:10 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 01:51:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:10 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-11 01:51:10 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:51:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:51:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:51:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:51:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C09985D31C99-&gt;ea5d912b-9cfa-46e0-b862-af1de3a701c4
2020-12-11 01:51:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-11 01:51:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 01:51:14 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 01:51:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607651253500_0004
2020-12-11 01:51:14 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-11 01:51:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:14 INFO  Configuration:2752 - resource-types.xml not found
2020-12-11 01:51:14 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-11 01:51:15 INFO  YarnClientImpl:324 - Submitted application application_1607651253500_0004
2020-12-11 01:51:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607651253500_0004/
2020-12-11 01:51:15 INFO  Job:1619 - Running job: job_1607651253500_0004
2020-12-11 01:51:23 INFO  Job:1640 - Job job_1607651253500_0004 running in uber mode : false
2020-12-11 01:51:23 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 01:51:29 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 01:51:35 INFO  Job:1647 -  map 67% reduce 0%
2020-12-11 01:51:41 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 01:51:46 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 01:51:47 INFO  Job:1658 - Job job_1607651253500_0004 completed successfully
2020-12-11 01:51:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078787
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45684
		Total time spent by all reduces in occupied slots (ms)=16584
		Total time spent by all map tasks (ms)=11421
		Total time spent by all reduce tasks (ms)=4146
		Total vcore-milliseconds taken by all map tasks=11421
		Total vcore-milliseconds taken by all reduce tasks=4146
		Total megabyte-milliseconds taken by all map tasks=46780416
		Total megabyte-milliseconds taken by all reduce tasks=16982016
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=648
		CPU time spent (ms)=7890
		Physical memory (bytes) snapshot=1209376768
		Virtual memory (bytes) snapshot=15798919168
		Total committed heap usage (bytes)=1067974656
		Peak Map Physical memory (bytes)=314204160
		Peak Map Virtual memory (bytes)=3955380224
		Peak Reduce Physical memory (bytes)=300703744
		Peak Reduce Virtual memory (bytes)=3971551232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-11 01:51:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201211 01:51:47.960" starttime="20201211 01:51:47.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:51:47.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:51:47.961" starttime="20201211 01:51:47.960"></status>
</kw>
<status status="PASS" endtime="20201211 01:51:47.961" starttime="20201211 01:51:07.982"></status>
</kw>
<msg timestamp="20201211 01:51:47.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:51:47.961" starttime="20201211 01:51:07.982"></status>
</kw>
<msg timestamp="20201211 01:51:47.962" level="INFO">${output} = 2020-12-11 01:51:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:51:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:51:47.962" starttime="20201211 01:51:07.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201211 01:51:47.963" starttime="20201211 01:51:47.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:51:47.963" starttime="20201211 01:51:47.963"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:51:47.964" critical="yes" starttime="20201211 01:51:07.938"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201211 01:51:47.967" starttime="20201211 01:50:22.808"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:43.915" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:48:43.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:48:43.919" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:48:43.919" starttime="20201211 01:48:43.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:48:43.920" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:48:43.920" starttime="20201211 01:48:43.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:48:43.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:48:43.921" starttime="20201211 01:48:43.920"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:43.921" starttime="20201211 01:48:43.908"></status>
</kw>
<msg timestamp="20201211 01:48:43.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:48:43.922" starttime="20201211 01:48:43.908"></status>
</kw>
<msg timestamp="20201211 01:48:43.922" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:48:43.922" starttime="20201211 01:48:43.908"></status>
</kw>
<msg timestamp="20201211 01:48:43.922" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:48:43.922" starttime="20201211 01:48:43.907"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:48:43.927" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:48:43.927" starttime="20201211 01:48:43.927"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:48:43.928" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:48:43.928" starttime="20201211 01:48:43.928"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:43.928" starttime="20201211 01:48:43.925"></status>
</kw>
<msg timestamp="20201211 01:48:43.928" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:48:43.928" starttime="20201211 01:48:43.925"></status>
</kw>
<status status="PASS" endtime="20201211 01:48:43.929" starttime="20201211 01:48:43.924"></status>
</kw>
<msg timestamp="20201211 01:48:43.929" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:48:43.929" starttime="20201211 01:48:43.923"></status>
</kw>
<msg timestamp="20201211 01:48:43.929" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:48:43.929" starttime="20201211 01:48:43.922"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:48:43.933" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:49:25.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:49:25.365" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:48:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48...</msg>
<status status="PASS" endtime="20201211 01:49:25.365" starttime="20201211 01:48:43.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:49:25.367" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:48:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:46 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-11 01:48:46 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:48:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:48:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:48:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:48:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1B1882A702DD-&gt;ea5d912b-9cfa-46e0-b862-af1de3a701c4
2020-12-11 01:48:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-11 01:48:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-12-11 01:48:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 01:48:48 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 01:48:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607651253500_0001
2020-12-11 01:48:48 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-11 01:48:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:48 INFO  Configuration:2752 - resource-types.xml not found
2020-12-11 01:48:48 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-11 01:48:49 INFO  YarnClientImpl:324 - Submitted application application_1607651253500_0001
2020-12-11 01:48:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607651253500_0001/
2020-12-11 01:48:49 INFO  Job:1619 - Running job: job_1607651253500_0001
2020-12-11 01:48:59 INFO  Job:1640 - Job job_1607651253500_0001 running in uber mode : false
2020-12-11 01:48:59 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 01:49:06 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 01:49:12 INFO  Job:1647 -  map 67% reduce 0%
2020-12-11 01:49:18 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 01:49:23 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 01:49:24 INFO  Job:1658 - Job job_1607651253500_0001 completed successfully
2020-12-11 01:49:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:24 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44540
		Total time spent by all reduces in occupied slots (ms)=16404
		Total time spent by all map tasks (ms)=11135
		Total time spent by all reduce tasks (ms)=4101
		Total vcore-milliseconds taken by all map tasks=11135
		Total vcore-milliseconds taken by all reduce tasks=4101
		Total megabyte-milliseconds taken by all map tasks=45608960
		Total megabyte-milliseconds taken by all reduce tasks=16797696
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=674
		CPU time spent (ms)=7080
		Physical memory (bytes) snapshot=1226395648
		Virtual memory (bytes) snapshot=15792185344
		Total committed heap usage (bytes)=1051721728
		Peak Map Physical memory (bytes)=320602112
		Peak Map Virtual memory (bytes)=3948904448
		Peak Reduce Physical memory (bytes)=300998656
		Peak Reduce Virtual memory (bytes)=3965902848
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.305 seconds
2020-12-11 01:49:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:24 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-11 01:49:25 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201211 01:49:25.367" starttime="20201211 01:49:25.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:49:25.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:49:25.368" starttime="20201211 01:49:25.367"></status>
</kw>
<status status="PASS" endtime="20201211 01:49:25.368" starttime="20201211 01:48:43.930"></status>
</kw>
<msg timestamp="20201211 01:49:25.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:49:25.369" starttime="20201211 01:48:43.930"></status>
</kw>
<msg timestamp="20201211 01:49:25.369" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:48:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:48...</msg>
<status status="PASS" endtime="20201211 01:49:25.369" starttime="20201211 01:48:43.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:49:25.370" starttime="20201211 01:49:25.370"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:49:25.370" critical="yes" starttime="20201211 01:48:43.906"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:49:25.376" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:49:25.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:49:25.387" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:49:25.387" starttime="20201211 01:49:25.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:49:25.388" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:49:25.389" starttime="20201211 01:49:25.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:49:25.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:49:25.389" starttime="20201211 01:49:25.389"></status>
</kw>
<status status="PASS" endtime="20201211 01:49:25.390" starttime="20201211 01:49:25.373"></status>
</kw>
<msg timestamp="20201211 01:49:25.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:49:25.390" starttime="20201211 01:49:25.373"></status>
</kw>
<msg timestamp="20201211 01:49:25.390" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:49:25.390" starttime="20201211 01:49:25.372"></status>
</kw>
<msg timestamp="20201211 01:49:25.390" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201211 01:49:25.391" starttime="20201211 01:49:25.372"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:49:25.391" level="INFO">${random} = 11</msg>
<status status="PASS" endtime="20201211 01:49:25.391" starttime="20201211 01:49:25.391"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:49:25.396" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:49:25.396" starttime="20201211 01:49:25.395"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:49:25.397" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:49:25.397" starttime="20201211 01:49:25.396"></status>
</kw>
<status status="PASS" endtime="20201211 01:49:25.397" starttime="20201211 01:49:25.395"></status>
</kw>
<msg timestamp="20201211 01:49:25.397" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:49:25.397" starttime="20201211 01:49:25.394"></status>
</kw>
<status status="PASS" endtime="20201211 01:49:25.397" starttime="20201211 01:49:25.393"></status>
</kw>
<msg timestamp="20201211 01:49:25.398" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:49:25.398" starttime="20201211 01:49:25.392"></status>
</kw>
<msg timestamp="20201211 01:49:25.398" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:49:25.398" starttime="20201211 01:49:25.391"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:49:25.402" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:49:25.402" starttime="20201211 01:49:25.402"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:49:25.403" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:49:25.403" starttime="20201211 01:49:25.402"></status>
</kw>
<status status="PASS" endtime="20201211 01:49:25.403" starttime="20201211 01:49:25.401"></status>
</kw>
<msg timestamp="20201211 01:49:25.403" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:49:25.403" starttime="20201211 01:49:25.400"></status>
</kw>
<status status="PASS" endtime="20201211 01:49:25.404" starttime="20201211 01:49:25.400"></status>
</kw>
<msg timestamp="20201211 01:49:25.404" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201211 01:49:25.404" starttime="20201211 01:49:25.399"></status>
</kw>
<msg timestamp="20201211 01:49:25.404" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201211 01:49:25.404" starttime="20201211 01:49:25.398"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:49:25.409" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:49:25.409" starttime="20201211 01:49:25.408"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:49:25.410" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:49:25.410" starttime="20201211 01:49:25.409"></status>
</kw>
<status status="PASS" endtime="20201211 01:49:25.410" starttime="20201211 01:49:25.408"></status>
</kw>
<msg timestamp="20201211 01:49:25.410" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:49:25.410" starttime="20201211 01:49:25.407"></status>
</kw>
<status status="PASS" endtime="20201211 01:49:25.411" starttime="20201211 01:49:25.406"></status>
</kw>
<msg timestamp="20201211 01:49:25.411" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-11.txt</msg>
<status status="PASS" endtime="20201211 01:49:25.411" starttime="20201211 01:49:25.406"></status>
</kw>
<msg timestamp="20201211 01:49:25.411" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-11.txt</msg>
<status status="PASS" endtime="20201211 01:49:25.411" starttime="20201211 01:49:25.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:49:25.416" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-11.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:50:06.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:50:06.453" level="INFO">${output} = 2020-12-11 01:49:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:50:06.453" starttime="20201211 01:49:25.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:50:06.454" level="INFO">2020-12-11 01:49:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:27 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-12-11 01:49:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 01:49:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:27 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-11 01:49:27 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-11 01:49:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:49:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:49:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:49:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-300B56B615E2-&gt;ea5d912b-9cfa-46e0-b862-af1de3a701c4
2020-12-11 01:49:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-11 01:49:29 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 01:49:29 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 01:49:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607651253500_0002
2020-12-11 01:49:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-11 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:32 INFO  Configuration:2752 - resource-types.xml not found
2020-12-11 01:49:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-11 01:49:32 INFO  YarnClientImpl:324 - Submitted application application_1607651253500_0002
2020-12-11 01:49:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607651253500_0002/
2020-12-11 01:49:32 INFO  Job:1619 - Running job: job_1607651253500_0002
2020-12-11 01:49:40 INFO  Job:1640 - Job job_1607651253500_0002 running in uber mode : false
2020-12-11 01:49:40 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 01:49:47 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 01:49:53 INFO  Job:1647 -  map 67% reduce 0%
2020-12-11 01:49:59 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 01:50:04 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 01:50:05 INFO  Job:1658 - Job job_1607651253500_0002 completed successfully
2020-12-11 01:50:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:50:06 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078871
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46516
		Total time spent by all reduces in occupied slots (ms)=16628
		Total time spent by all map tasks (ms)=11629
		Total time spent by all reduce tasks (ms)=4157
		Total vcore-milliseconds taken by all map tasks=11629
		Total vcore-milliseconds taken by all reduce tasks=4157
		Total megabyte-milliseconds taken by all map tasks=47632384
		Total megabyte-milliseconds taken by all reduce tasks=17027072
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=666
		CPU time spent (ms)=7070
		Physical memory (bytes) snapshot=1193086976
		Virtual memory (bytes) snapshot=15771525120
		Total committed heap usage (bytes)=1063780352
		Peak Map Physical memory (bytes)=314789888
		Peak Map Virtual memory (bytes)=3945754624
		Peak Reduce Physical memory (bytes)=299892736
		Peak Reduce Virtual memory (bytes)=3973615616
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-11 01:50:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201211 01:50:06.455" starttime="20201211 01:50:06.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:50:06.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:50:06.455" starttime="20201211 01:50:06.455"></status>
</kw>
<status status="PASS" endtime="20201211 01:50:06.456" starttime="20201211 01:49:25.413"></status>
</kw>
<msg timestamp="20201211 01:50:06.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:50:06.456" starttime="20201211 01:49:25.413"></status>
</kw>
<msg timestamp="20201211 01:50:06.457" level="INFO">${output} = 2020-12-11 01:49:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-11 01:49:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201211 01:50:06.457" starttime="20201211 01:49:25.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201211 01:50:06.457" starttime="20201211 01:50:06.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:50:06.458" starttime="20201211 01:50:06.457"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:50:06.458" critical="yes" starttime="20201211 01:49:25.371"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201211 01:50:06.461" starttime="20201211 01:48:43.836"></status>
</suite>
<status status="PASS" elapsedtime="211702" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:53:54.972" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:53:58.738" level="INFO">${rc} = 255</msg>
<msg timestamp="20201211 01:53:58.738" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201211 01:53:58.738" starttime="20201211 01:53:54.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:53:58.739" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201211 01:53:58.739" starttime="20201211 01:53:58.738"></status>
</kw>
<msg timestamp="20201211 01:53:58.740" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201211 01:53:58.740" starttime="20201211 01:53:54.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:53:58.746" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:02.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:02.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:54:02.050" starttime="20201211 01:53:58.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:02.052" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:54:02.052" starttime="20201211 01:54:02.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:02.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:02.053" starttime="20201211 01:54:02.052"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:02.053" starttime="20201211 01:53:58.742"></status>
</kw>
<msg timestamp="20201211 01:54:02.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:02.053" starttime="20201211 01:53:58.742"></status>
</kw>
<msg timestamp="20201211 01:54:02.053" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201211 01:54:02.053" starttime="20201211 01:53:58.741"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201211 01:54:02.054" starttime="20201211 01:54:02.054"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:02.054" starttime="20201211 01:53:58.741"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:02.054" starttime="20201211 01:53:58.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:02.060" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:05.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:05.413" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:54:05.413" starttime="20201211 01:54:02.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:05.415" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:54:05.415" starttime="20201211 01:54:05.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:05.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:05.415" starttime="20201211 01:54:05.415"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:05.416" starttime="20201211 01:54:02.056"></status>
</kw>
<msg timestamp="20201211 01:54:05.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:05.416" starttime="20201211 01:54:02.056"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:05.416" starttime="20201211 01:54:02.055"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:05.416" starttime="20201211 01:54:02.055"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:05.417" starttime="20201211 01:54:02.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201211 01:54:05.417" starttime="20201211 01:54:05.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:05.422" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:09.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:09.051" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-11T01:54:05.081Z",
  "modificat...</msg>
<status status="PASS" endtime="20201211 01:54:09.052" starttime="20201211 01:54:05.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:09.053" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-11T01:54:05.081Z",
  "modificationTime" : "2020-12-11T01:54:05.081Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201211 01:54:09.053" starttime="20201211 01:54:09.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:09.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:09.054" starttime="20201211 01:54:09.054"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:09.054" starttime="20201211 01:54:05.419"></status>
</kw>
<msg timestamp="20201211 01:54:09.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:09.055" starttime="20201211 01:54:05.418"></status>
</kw>
<msg timestamp="20201211 01:54:09.055" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-11T01:54:05.081Z",
  "modificat...</msg>
<status status="PASS" endtime="20201211 01:54:09.055" starttime="20201211 01:54:05.417"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201211 01:54:09.056" starttime="20201211 01:54:09.055"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:54:09.061" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:54:09.061" starttime="20201211 01:54:09.061"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:54:09.062" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:54:09.062" starttime="20201211 01:54:09.061"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:09.062" starttime="20201211 01:54:09.060"></status>
</kw>
<msg timestamp="20201211 01:54:09.062" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:54:09.062" starttime="20201211 01:54:09.059"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:09.063" starttime="20201211 01:54:09.058"></status>
</kw>
<msg timestamp="20201211 01:54:09.063" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201211 01:54:09.063" starttime="20201211 01:54:09.057"></status>
</kw>
<msg timestamp="20201211 01:54:09.063" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201211 01:54:09.063" starttime="20201211 01:54:09.056"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:09.068" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:12.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:12.712" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:54:12.712" starttime="20201211 01:54:09.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:12.714" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:54:12.714" starttime="20201211 01:54:12.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:12.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:12.715" starttime="20201211 01:54:12.714"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:12.715" starttime="20201211 01:54:09.064"></status>
</kw>
<msg timestamp="20201211 01:54:12.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:12.715" starttime="20201211 01:54:09.064"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:12.716" starttime="20201211 01:54:09.063"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:12.720" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:20.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:20.599" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:54:20.599" starttime="20201211 01:54:12.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:20.601" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:54:20.601" starttime="20201211 01:54:20.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:20.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:20.602" starttime="20201211 01:54:20.601"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:20.602" starttime="20201211 01:54:12.717"></status>
</kw>
<msg timestamp="20201211 01:54:20.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:20.602" starttime="20201211 01:54:12.717"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:20.602" starttime="20201211 01:54:12.716"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:20.611" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:26.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:26.448" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:54:26.448" starttime="20201211 01:54:20.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:26.449" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:54:26.449" starttime="20201211 01:54:26.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:26.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:26.450" starttime="20201211 01:54:26.449"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:26.450" starttime="20201211 01:54:20.604"></status>
</kw>
<msg timestamp="20201211 01:54:26.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:26.451" starttime="20201211 01:54:20.603"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:26.451" starttime="20201211 01:54:20.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:26.455" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:32.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:32.115" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:54:32.115" starttime="20201211 01:54:26.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:32.116" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:54:32.116" starttime="20201211 01:54:32.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:32.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:32.117" starttime="20201211 01:54:32.117"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:32.118" starttime="20201211 01:54:26.452"></status>
</kw>
<msg timestamp="20201211 01:54:32.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:32.118" starttime="20201211 01:54:26.452"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:32.118" starttime="20201211 01:54:26.451"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201211 01:54:32.118" critical="yes" starttime="20201211 01:53:54.966"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:54:32.125" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:54:32.125" starttime="20201211 01:54:32.124"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:54:32.126" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:54:32.126" starttime="20201211 01:54:32.125"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:32.126" starttime="20201211 01:54:32.124"></status>
</kw>
<msg timestamp="20201211 01:54:32.126" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:54:32.126" starttime="20201211 01:54:32.123"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:32.127" starttime="20201211 01:54:32.122"></status>
</kw>
<msg timestamp="20201211 01:54:32.127" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201211 01:54:32.127" starttime="20201211 01:54:32.121"></status>
</kw>
<msg timestamp="20201211 01:54:32.127" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201211 01:54:32.127" starttime="20201211 01:54:32.121"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:32.131" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:35.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:35.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:54:35.719" starttime="20201211 01:54:32.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:35.721" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:54:35.721" starttime="20201211 01:54:35.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:35.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:35.722" starttime="20201211 01:54:35.721"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:35.722" starttime="20201211 01:54:32.128"></status>
</kw>
<msg timestamp="20201211 01:54:35.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:35.722" starttime="20201211 01:54:32.128"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:35.723" starttime="20201211 01:54:32.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:35.727" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:39.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:39.462" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 01:54:39.462" starttime="20201211 01:54:35.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:39.463" level="INFO"></msg>
<status status="PASS" endtime="20201211 01:54:39.463" starttime="20201211 01:54:39.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:39.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:39.464" starttime="20201211 01:54:39.463"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:39.464" starttime="20201211 01:54:35.724"></status>
</kw>
<msg timestamp="20201211 01:54:39.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:39.465" starttime="20201211 01:54:35.723"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:39.465" starttime="20201211 01:54:35.723"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201211 01:54:39.465" critical="yes" starttime="20201211 01:54:32.120"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201211 01:54:39.466" starttime="20201211 01:53:54.901"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:56:24.628" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:56:24.628" starttime="20201211 01:56:24.627"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:56:24.628" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:56:24.628" starttime="20201211 01:56:24.628"></status>
</kw>
<status status="PASS" endtime="20201211 01:56:24.629" starttime="20201211 01:56:24.626"></status>
</kw>
<msg timestamp="20201211 01:56:24.629" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:56:24.629" starttime="20201211 01:56:24.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:56:24.630" starttime="20201211 01:56:24.629"></status>
</kw>
<msg timestamp="20201211 01:56:24.630" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 01:56:24.630" starttime="20201211 01:56:24.629"></status>
</kw>
<status status="PASS" endtime="20201211 01:56:24.630" starttime="20201211 01:56:24.625"></status>
</kw>
<msg timestamp="20201211 01:56:24.631" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:56:24.631" starttime="20201211 01:56:24.624"></status>
</kw>
<msg timestamp="20201211 01:56:24.631" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:56:24.631" starttime="20201211 01:56:24.623"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:56:24.632" level="INFO">${random} = 42730</msg>
<status status="PASS" endtime="20201211 01:56:24.632" starttime="20201211 01:56:24.631"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:56:24.638" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-42730 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:56:31.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:56:31.062" level="INFO">${output} = 2020-12-11 01:56:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:56:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201211 01:56:31.062" starttime="20201211 01:56:24.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:56:31.063" level="INFO">2020-12-11 01:56:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:56:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:56:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:56:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:56:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6063516FA925-&gt;29159051-049c-4fdf-a68f-c6d41b37934b
2020-12-11 01:56:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201211 01:56:31.063" starttime="20201211 01:56:31.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:56:31.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:56:31.064" starttime="20201211 01:56:31.064"></status>
</kw>
<status status="PASS" endtime="20201211 01:56:31.065" starttime="20201211 01:56:24.633"></status>
</kw>
<msg timestamp="20201211 01:56:31.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:56:31.065" starttime="20201211 01:56:24.632"></status>
</kw>
<msg timestamp="20201211 01:56:31.065" level="INFO">${result} = 2020-12-11 01:56:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:56:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201211 01:56:31.065" starttime="20201211 01:56:24.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:56:31.072" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:56:33.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:56:33.166" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 01:56 ofs://om/volume1/bucket1/ozone-42730
-rw-...</msg>
<status status="PASS" endtime="20201211 01:56:33.166" starttime="20201211 01:56:31.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:56:33.168" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 01:56 ofs://om/volume1/bucket1/ozone-42730
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 01:54 ofs://om/volume1/bucket1/ozone-45182
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:54 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:55 ofs://om/volume1/bucket1/wordcount-09.txt</msg>
<status status="PASS" endtime="20201211 01:56:33.168" starttime="20201211 01:56:33.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:56:33.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:56:33.169" starttime="20201211 01:56:33.168"></status>
</kw>
<status status="PASS" endtime="20201211 01:56:33.169" starttime="20201211 01:56:31.068"></status>
</kw>
<msg timestamp="20201211 01:56:33.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:56:33.170" starttime="20201211 01:56:31.068"></status>
</kw>
<msg timestamp="20201211 01:56:33.170" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 01:56 ofs://om/volume1/bucket1/ozone-42730
-rw-...</msg>
<status status="PASS" endtime="20201211 01:56:33.170" starttime="20201211 01:56:31.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:56:33.171" starttime="20201211 01:56:33.170"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201211 01:56:33.171" critical="yes" starttime="20201211 01:56:24.622"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201211 01:56:33.173" starttime="20201211 01:56:24.553"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:54:44.564" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:54:44.564" starttime="20201211 01:54:44.563"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:54:44.565" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:54:44.565" starttime="20201211 01:54:44.564"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:44.565" starttime="20201211 01:54:44.563"></status>
</kw>
<msg timestamp="20201211 01:54:44.565" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:54:44.565" starttime="20201211 01:54:44.562"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:44.565" starttime="20201211 01:54:44.561"></status>
</kw>
<msg timestamp="20201211 01:54:44.566" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:54:44.566" starttime="20201211 01:54:44.561"></status>
</kw>
<msg timestamp="20201211 01:54:44.566" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:54:44.566" starttime="20201211 01:54:44.560"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:54:44.566" level="INFO">${random} = 45182</msg>
<status status="PASS" endtime="20201211 01:54:44.566" starttime="20201211 01:54:44.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:44.571" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-45182 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:51.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:51.153" level="INFO">${output} = 2020-12-11 01:54:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:54:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201211 01:54:51.153" starttime="20201211 01:54:44.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:51.155" level="INFO">2020-12-11 01:54:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:54:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:54:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:54:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:54:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0EE795DF35F7-&gt;29159051-049c-4fdf-a68f-c6d41b37934b
2020-12-11 01:54:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201211 01:54:51.155" starttime="20201211 01:54:51.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:51.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:51.156" starttime="20201211 01:54:51.155"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:51.156" starttime="20201211 01:54:44.567"></status>
</kw>
<msg timestamp="20201211 01:54:51.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:51.156" starttime="20201211 01:54:44.567"></status>
</kw>
<msg timestamp="20201211 01:54:51.157" level="INFO">${result} = 2020-12-11 01:54:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:54:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201211 01:54:51.157" starttime="20201211 01:54:44.567"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:51.162" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:53.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:53.067" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 01:54 o3fs://bucket1.volume1.om/ozone-45182
dr...</msg>
<status status="PASS" endtime="20201211 01:54:53.067" starttime="20201211 01:54:51.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:53.068" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 01:54 o3fs://bucket1.volume1.om/ozone-45182
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:54 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201211 01:54:53.068" starttime="20201211 01:54:53.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:53.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:53.069" starttime="20201211 01:54:53.068"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:53.070" starttime="20201211 01:54:51.159"></status>
</kw>
<msg timestamp="20201211 01:54:53.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:53.070" starttime="20201211 01:54:51.158"></status>
</kw>
<msg timestamp="20201211 01:54:53.070" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 01:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 01:54 o3fs://bucket1.volume1.om/ozone-45182
dr...</msg>
<status status="PASS" endtime="20201211 01:54:53.070" starttime="20201211 01:54:51.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:54:53.071" starttime="20201211 01:54:53.070"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201211 01:54:53.071" critical="yes" starttime="20201211 01:54:44.559"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201211 01:54:53.072" starttime="20201211 01:54:44.493"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:56:38.321" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:56:38.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:56:38.327" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:56:38.327" starttime="20201211 01:56:38.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:56:38.328" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:56:38.328" starttime="20201211 01:56:38.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:56:38.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:56:38.329" starttime="20201211 01:56:38.328"></status>
</kw>
<status status="PASS" endtime="20201211 01:56:38.329" starttime="20201211 01:56:38.316"></status>
</kw>
<msg timestamp="20201211 01:56:38.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:56:38.329" starttime="20201211 01:56:38.316"></status>
</kw>
<msg timestamp="20201211 01:56:38.330" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:56:38.330" starttime="20201211 01:56:38.315"></status>
</kw>
<msg timestamp="20201211 01:56:38.330" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:56:38.330" starttime="20201211 01:56:38.315"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:56:38.335" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:56:38.335" starttime="20201211 01:56:38.334"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:56:38.336" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:56:38.336" starttime="20201211 01:56:38.335"></status>
</kw>
<status status="PASS" endtime="20201211 01:56:38.336" starttime="20201211 01:56:38.333"></status>
</kw>
<msg timestamp="20201211 01:56:38.336" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:56:38.336" starttime="20201211 01:56:38.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:56:38.337" starttime="20201211 01:56:38.337"></status>
</kw>
<msg timestamp="20201211 01:56:38.337" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 01:56:38.338" starttime="20201211 01:56:38.336"></status>
</kw>
<status status="PASS" endtime="20201211 01:56:38.338" starttime="20201211 01:56:38.332"></status>
</kw>
<msg timestamp="20201211 01:56:38.338" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:56:38.338" starttime="20201211 01:56:38.331"></status>
</kw>
<msg timestamp="20201211 01:56:38.338" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:56:38.338" starttime="20201211 01:56:38.330"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:56:38.343" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:57:17.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:57:17.326" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:56:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:56:40 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201211 01:57:17.326" starttime="20201211 01:56:38.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:57:17.327" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:56:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:56:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:56:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:56:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:56:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9EA1B63F6AC8-&gt;29159051-049c-4fdf-a68f-c6d41b37934b
2020-12-11 01:56:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-11 01:56:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-11 01:56:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 01:56:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 01:56:42 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 01:56:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607651566599_0003
2020-12-11 01:56:42 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-11 01:56:43 INFO  Configuration:2795 - resource-types.xml not found
2020-12-11 01:56:43 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-11 01:56:43 INFO  YarnClientImpl:329 - Submitted application application_1607651566599_0003
2020-12-11 01:56:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607651566599_0003/
2020-12-11 01:56:43 INFO  Job:1619 - Running job: job_1607651566599_0003
2020-12-11 01:56:51 INFO  Job:1640 - Job job_1607651566599_0003 running in uber mode : false
2020-12-11 01:56:51 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 01:56:58 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 01:57:04 INFO  Job:1647 -  map 67% reduce 0%
2020-12-11 01:57:10 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 01:57:15 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 01:57:16 INFO  Job:1658 - Job job_1607651566599_0003 completed successfully
2020-12-11 01:57:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056249
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45884
		Total time spent by all reduces in occupied slots (ms)=16604
		Total time spent by all map tasks (ms)=11471
		Total time spent by all reduce tasks (ms)=4151
		Total vcore-milliseconds taken by all map tasks=11471
		Total vcore-milliseconds taken by all reduce tasks=4151
		Total megabyte-milliseconds taken by all map tasks=46985216
		Total megabyte-milliseconds taken by all reduce tasks=17002496
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=684
		CPU time spent (ms)=7500
		Physical memory (bytes) snapshot=1497812992
		Virtual memory (bytes) snapshot=15793442816
		Total committed heap usage (bytes)=1803026432
		Peak Map Physical memory (bytes)=376545280
		Peak Map Virtual memory (bytes)=3944853504
		Peak Reduce Physical memory (bytes)=384045056
		Peak Reduce Virtual memory (bytes)=3968331776
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.967 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201211 01:57:17.327" starttime="20201211 01:57:17.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:57:17.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:57:17.328" starttime="20201211 01:57:17.328"></status>
</kw>
<status status="PASS" endtime="20201211 01:57:17.329" starttime="20201211 01:56:38.340"></status>
</kw>
<msg timestamp="20201211 01:57:17.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:57:17.329" starttime="20201211 01:56:38.339"></status>
</kw>
<msg timestamp="20201211 01:57:17.329" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:56:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:56:40 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201211 01:57:17.330" starttime="20201211 01:56:38.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:57:17.330" starttime="20201211 01:57:17.330"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:57:17.331" critical="yes" starttime="20201211 01:56:38.314"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:57:17.336" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:57:17.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:57:17.342" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:57:17.342" starttime="20201211 01:57:17.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:57:17.344" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:57:17.344" starttime="20201211 01:57:17.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:57:17.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:57:17.345" starttime="20201211 01:57:17.344"></status>
</kw>
<status status="PASS" endtime="20201211 01:57:17.345" starttime="20201211 01:57:17.334"></status>
</kw>
<msg timestamp="20201211 01:57:17.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:57:17.345" starttime="20201211 01:57:17.333"></status>
</kw>
<msg timestamp="20201211 01:57:17.346" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:57:17.346" starttime="20201211 01:57:17.333"></status>
</kw>
<msg timestamp="20201211 01:57:17.346" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:57:17.346" starttime="20201211 01:57:17.332"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:57:17.347" level="INFO">${random} = 27</msg>
<status status="PASS" endtime="20201211 01:57:17.347" starttime="20201211 01:57:17.346"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:57:17.351" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:57:17.351" starttime="20201211 01:57:17.351"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:57:17.352" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:57:17.352" starttime="20201211 01:57:17.352"></status>
</kw>
<status status="PASS" endtime="20201211 01:57:17.352" starttime="20201211 01:57:17.350"></status>
</kw>
<msg timestamp="20201211 01:57:17.352" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:57:17.353" starttime="20201211 01:57:17.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 01:57:17.354" starttime="20201211 01:57:17.353"></status>
</kw>
<msg timestamp="20201211 01:57:17.354" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 01:57:17.354" starttime="20201211 01:57:17.353"></status>
</kw>
<status status="PASS" endtime="20201211 01:57:17.354" starttime="20201211 01:57:17.349"></status>
</kw>
<msg timestamp="20201211 01:57:17.354" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:57:17.354" starttime="20201211 01:57:17.348"></status>
</kw>
<msg timestamp="20201211 01:57:17.355" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 01:57:17.355" starttime="20201211 01:57:17.347"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:57:17.358" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:57:17.358" starttime="20201211 01:57:17.358"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:57:17.359" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:57:17.359" starttime="20201211 01:57:17.358"></status>
</kw>
<status status="PASS" endtime="20201211 01:57:17.359" starttime="20201211 01:57:17.357"></status>
</kw>
<msg timestamp="20201211 01:57:17.359" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:57:17.359" starttime="20201211 01:57:17.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:57:17.361" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201211 01:57:17.361" starttime="20201211 01:57:17.361"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:57:17.362" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201211 01:57:17.362" starttime="20201211 01:57:17.361"></status>
</kw>
<status status="PASS" endtime="20201211 01:57:17.362" starttime="20201211 01:57:17.360"></status>
</kw>
<msg timestamp="20201211 01:57:17.362" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201211 01:57:17.362" starttime="20201211 01:57:17.359"></status>
</kw>
<status status="PASS" endtime="20201211 01:57:17.363" starttime="20201211 01:57:17.356"></status>
</kw>
<msg timestamp="20201211 01:57:17.363" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201211 01:57:17.363" starttime="20201211 01:57:17.356"></status>
</kw>
<msg timestamp="20201211 01:57:17.363" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201211 01:57:17.363" starttime="20201211 01:57:17.355"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 01:57:17.367" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 01:57:17.367" starttime="20201211 01:57:17.366"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:57:17.367" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 01:57:17.367" starttime="20201211 01:57:17.367"></status>
</kw>
<status status="PASS" endtime="20201211 01:57:17.368" starttime="20201211 01:57:17.366"></status>
</kw>
<msg timestamp="20201211 01:57:17.368" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 01:57:17.368" starttime="20201211 01:57:17.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:57:17.369" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201211 01:57:17.369" starttime="20201211 01:57:17.369"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:57:17.370" level="INFO">${result} = /wordcount-27.txt</msg>
<status status="PASS" endtime="20201211 01:57:17.370" starttime="20201211 01:57:17.370"></status>
</kw>
<status status="PASS" endtime="20201211 01:57:17.371" starttime="20201211 01:57:17.368"></status>
</kw>
<msg timestamp="20201211 01:57:17.371" level="INFO">${path_with_leading} = /wordcount-27.txt</msg>
<status status="PASS" endtime="20201211 01:57:17.371" starttime="20201211 01:57:17.368"></status>
</kw>
<status status="PASS" endtime="20201211 01:57:17.371" starttime="20201211 01:57:17.364"></status>
</kw>
<msg timestamp="20201211 01:57:17.371" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-27.txt</msg>
<status status="PASS" endtime="20201211 01:57:17.371" starttime="20201211 01:57:17.364"></status>
</kw>
<msg timestamp="20201211 01:57:17.371" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-27.txt</msg>
<status status="PASS" endtime="20201211 01:57:17.371" starttime="20201211 01:57:17.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:57:17.376" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-27.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:57:59.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:57:59.765" level="INFO">${output} = 2020-12-11 01:57:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-11 01:57:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201211 01:57:59.765" starttime="20201211 01:57:17.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:57:59.767" level="INFO">2020-12-11 01:57:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-11 01:57:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 01:57:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:57:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:57:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:57:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:57:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6CE8DDC8CF43-&gt;29159051-049c-4fdf-a68f-c6d41b37934b
2020-12-11 01:57:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-11 01:57:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 01:57:23 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 01:57:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607651566599_0004
2020-12-11 01:57:26 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-11 01:57:26 INFO  Configuration:2795 - resource-types.xml not found
2020-12-11 01:57:26 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-11 01:57:26 INFO  YarnClientImpl:329 - Submitted application application_1607651566599_0004
2020-12-11 01:57:26 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607651566599_0004/
2020-12-11 01:57:26 INFO  Job:1619 - Running job: job_1607651566599_0004
2020-12-11 01:57:34 INFO  Job:1640 - Job job_1607651566599_0004 running in uber mode : false
2020-12-11 01:57:34 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 01:57:41 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 01:57:47 INFO  Job:1647 -  map 67% reduce 0%
2020-12-11 01:57:53 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 01:57:59 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 01:57:59 INFO  Job:1658 - Job job_1607651566599_0004 completed successfully
2020-12-11 01:57:59 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118903
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46372
		Total time spent by all reduces in occupied slots (ms)=16704
		Total time spent by all map tasks (ms)=11593
		Total time spent by all reduce tasks (ms)=4176
		Total vcore-milliseconds taken by all map tasks=11593
		Total vcore-milliseconds taken by all reduce tasks=4176
		Total megabyte-milliseconds taken by all map tasks=47484928
		Total megabyte-milliseconds taken by all reduce tasks=17104896
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=680
		CPU time spent (ms)=8660
		Physical memory (bytes) snapshot=1512001536
		Virtual memory (bytes) snapshot=15803342848
		Total committed heap usage (bytes)=1803026432
		Peak Map Physical memory (bytes)=378249216
		Peak Map Virtual memory (bytes)=3947806720
		Peak Reduce Physical memory (bytes)=385658880
		Peak Reduce Virtual memory (bytes)=3966914560
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201211 01:57:59.767" starttime="20201211 01:57:59.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:57:59.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:57:59.769" starttime="20201211 01:57:59.767"></status>
</kw>
<status status="PASS" endtime="20201211 01:57:59.769" starttime="20201211 01:57:17.373"></status>
</kw>
<msg timestamp="20201211 01:57:59.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:57:59.769" starttime="20201211 01:57:17.372"></status>
</kw>
<msg timestamp="20201211 01:57:59.770" level="INFO">${output} = 2020-12-11 01:57:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-11 01:57:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201211 01:57:59.770" starttime="20201211 01:57:17.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201211 01:57:59.770" starttime="20201211 01:57:59.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:57:59.771" starttime="20201211 01:57:59.770"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:57:59.771" critical="yes" starttime="20201211 01:57:17.331"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201211 01:57:59.773" starttime="20201211 01:56:38.250"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:58.156" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:54:58.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:54:58.162" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:54:58.162" starttime="20201211 01:54:58.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:54:58.163" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:54:58.163" starttime="20201211 01:54:58.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:54:58.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:54:58.164" starttime="20201211 01:54:58.164"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:58.165" starttime="20201211 01:54:58.149"></status>
</kw>
<msg timestamp="20201211 01:54:58.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:54:58.165" starttime="20201211 01:54:58.149"></status>
</kw>
<msg timestamp="20201211 01:54:58.165" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:54:58.165" starttime="20201211 01:54:58.149"></status>
</kw>
<msg timestamp="20201211 01:54:58.165" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:54:58.165" starttime="20201211 01:54:58.148"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:54:58.171" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:54:58.171" starttime="20201211 01:54:58.170"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:54:58.172" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:54:58.172" starttime="20201211 01:54:58.171"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:58.172" starttime="20201211 01:54:58.169"></status>
</kw>
<msg timestamp="20201211 01:54:58.172" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:54:58.172" starttime="20201211 01:54:58.168"></status>
</kw>
<status status="PASS" endtime="20201211 01:54:58.173" starttime="20201211 01:54:58.167"></status>
</kw>
<msg timestamp="20201211 01:54:58.173" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:54:58.173" starttime="20201211 01:54:58.167"></status>
</kw>
<msg timestamp="20201211 01:54:58.173" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:54:58.173" starttime="20201211 01:54:58.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:54:58.177" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:55:39.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:55:39.920" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:55:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:55:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201211 01:55:39.920" starttime="20201211 01:54:58.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:55:39.922" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:55:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:55:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:55:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:55:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:55:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9D2FB183E437-&gt;29159051-049c-4fdf-a68f-c6d41b37934b
2020-12-11 01:55:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-11 01:55:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-11 01:55:02 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 01:55:02 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 01:55:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607651566599_0001
2020-12-11 01:55:02 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-11 01:55:03 INFO  Configuration:2795 - resource-types.xml not found
2020-12-11 01:55:03 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-11 01:55:03 INFO  YarnClientImpl:329 - Submitted application application_1607651566599_0001
2020-12-11 01:55:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607651566599_0001/
2020-12-11 01:55:03 INFO  Job:1619 - Running job: job_1607651566599_0001
2020-12-11 01:55:14 INFO  Job:1640 - Job job_1607651566599_0001 running in uber mode : false
2020-12-11 01:55:14 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 01:55:21 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 01:55:28 INFO  Job:1647 -  map 67% reduce 0%
2020-12-11 01:55:34 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 01:55:38 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 01:55:39 INFO  Job:1658 - Job job_1607651566599_0001 completed successfully
2020-12-11 01:55:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44036
		Total time spent by all reduces in occupied slots (ms)=16900
		Total time spent by all map tasks (ms)=11009
		Total time spent by all reduce tasks (ms)=4225
		Total vcore-milliseconds taken by all map tasks=11009
		Total vcore-milliseconds taken by all reduce tasks=4225
		Total megabyte-milliseconds taken by all map tasks=45092864
		Total megabyte-milliseconds taken by all reduce tasks=17305600
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=674
		CPU time spent (ms)=7410
		Physical memory (bytes) snapshot=1373704192
		Virtual memory (bytes) snapshot=15799930880
		Total committed heap usage (bytes)=1507852288
		Peak Map Physical memory (bytes)=376119296
		Peak Map Virtual memory (bytes)=3948044288
		Peak Reduce Physical memory (bytes)=392327168
		Peak Reduce Virtual memory (bytes)=3967496192
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.472 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201211 01:55:39.922" starttime="20201211 01:55:39.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:55:39.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:55:39.923" starttime="20201211 01:55:39.922"></status>
</kw>
<status status="PASS" endtime="20201211 01:55:39.923" starttime="20201211 01:54:58.174"></status>
</kw>
<msg timestamp="20201211 01:55:39.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:55:39.924" starttime="20201211 01:54:58.174"></status>
</kw>
<msg timestamp="20201211 01:55:39.924" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 01:55:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:55:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201211 01:55:39.924" starttime="20201211 01:54:58.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:55:39.925" starttime="20201211 01:55:39.924"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:55:39.925" critical="yes" starttime="20201211 01:54:58.147"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:55:39.932" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:55:39.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:55:39.940" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:55:39.940" starttime="20201211 01:55:39.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:55:39.942" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:55:39.945" starttime="20201211 01:55:39.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:55:39.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:55:39.946" starttime="20201211 01:55:39.945"></status>
</kw>
<status status="PASS" endtime="20201211 01:55:39.946" starttime="20201211 01:55:39.928"></status>
</kw>
<msg timestamp="20201211 01:55:39.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:55:39.946" starttime="20201211 01:55:39.928"></status>
</kw>
<msg timestamp="20201211 01:55:39.947" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:55:39.947" starttime="20201211 01:55:39.927"></status>
</kw>
<msg timestamp="20201211 01:55:39.947" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 01:55:39.947" starttime="20201211 01:55:39.927"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 01:55:39.948" level="INFO">${random} = 09</msg>
<status status="PASS" endtime="20201211 01:55:39.948" starttime="20201211 01:55:39.947"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:55:39.953" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:55:39.953" starttime="20201211 01:55:39.952"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:55:39.954" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:55:39.954" starttime="20201211 01:55:39.953"></status>
</kw>
<status status="PASS" endtime="20201211 01:55:39.954" starttime="20201211 01:55:39.952"></status>
</kw>
<msg timestamp="20201211 01:55:39.954" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:55:39.954" starttime="20201211 01:55:39.951"></status>
</kw>
<status status="PASS" endtime="20201211 01:55:39.954" starttime="20201211 01:55:39.950"></status>
</kw>
<msg timestamp="20201211 01:55:39.954" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:55:39.954" starttime="20201211 01:55:39.950"></status>
</kw>
<msg timestamp="20201211 01:55:39.955" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 01:55:39.955" starttime="20201211 01:55:39.948"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:55:39.959" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:55:39.959" starttime="20201211 01:55:39.958"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:55:39.960" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:55:39.960" starttime="20201211 01:55:39.959"></status>
</kw>
<status status="PASS" endtime="20201211 01:55:39.960" starttime="20201211 01:55:39.958"></status>
</kw>
<msg timestamp="20201211 01:55:39.960" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:55:39.960" starttime="20201211 01:55:39.957"></status>
</kw>
<status status="PASS" endtime="20201211 01:55:39.960" starttime="20201211 01:55:39.957"></status>
</kw>
<msg timestamp="20201211 01:55:39.961" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201211 01:55:39.961" starttime="20201211 01:55:39.956"></status>
</kw>
<msg timestamp="20201211 01:55:39.961" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201211 01:55:39.961" starttime="20201211 01:55:39.955"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 01:55:39.965" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 01:55:39.965" starttime="20201211 01:55:39.964"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 01:55:39.965" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 01:55:39.965" starttime="20201211 01:55:39.965"></status>
</kw>
<status status="PASS" endtime="20201211 01:55:39.965" starttime="20201211 01:55:39.963"></status>
</kw>
<msg timestamp="20201211 01:55:39.966" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 01:55:39.966" starttime="20201211 01:55:39.963"></status>
</kw>
<status status="PASS" endtime="20201211 01:55:39.966" starttime="20201211 01:55:39.962"></status>
</kw>
<msg timestamp="20201211 01:55:39.966" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-09.txt</msg>
<status status="PASS" endtime="20201211 01:55:39.966" starttime="20201211 01:55:39.962"></status>
</kw>
<msg timestamp="20201211 01:55:39.966" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-09.txt</msg>
<status status="PASS" endtime="20201211 01:55:39.966" starttime="20201211 01:55:39.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 01:55:39.971" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-09.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 01:56:19.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 01:56:19.558" level="INFO">${output} = 2020-12-11 01:55:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-11 01:55:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201211 01:56:19.559" starttime="20201211 01:55:39.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 01:56:19.560" level="INFO">2020-12-11 01:55:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-11 01:55:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 01:55:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 01:55:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 01:55:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 01:55:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 01:55:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-954CDCC46924-&gt;29159051-049c-4fdf-a68f-c6d41b37934b
2020-12-11 01:55:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-11 01:55:43 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 01:55:43 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 01:55:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607651566599_0002
2020-12-11 01:55:44 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-11 01:55:44 INFO  Configuration:2795 - resource-types.xml not found
2020-12-11 01:55:44 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-11 01:55:44 INFO  YarnClientImpl:329 - Submitted application application_1607651566599_0002
2020-12-11 01:55:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607651566599_0002/
2020-12-11 01:55:44 INFO  Job:1619 - Running job: job_1607651566599_0002
2020-12-11 01:55:52 INFO  Job:1640 - Job job_1607651566599_0002 running in uber mode : false
2020-12-11 01:55:52 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 01:56:00 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 01:56:05 INFO  Job:1647 -  map 67% reduce 0%
2020-12-11 01:56:11 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 01:56:18 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 01:56:19 INFO  Job:1658 - Job job_1607651566599_0002 completed successfully
2020-12-11 01:56:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118991
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45360
		Total time spent by all reduces in occupied slots (ms)=17788
		Total time spent by all map tasks (ms)=11340
		Total time spent by all reduce tasks (ms)=4447
		Total vcore-milliseconds taken by all map tasks=11340
		Total vcore-milliseconds taken by all reduce tasks=4447
		Total megabyte-milliseconds taken by all map tasks=46448640
		Total megabyte-milliseconds taken by all reduce tasks=18214912
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=698
		CPU time spent (ms)=7610
		Physical memory (bytes) snapshot=1389326336
		Virtual memory (bytes) snapshot=15778406400
		Total committed heap usage (bytes)=1590165504
		Peak Map Physical memory (bytes)=358604800
		Peak Map Virtual memory (bytes)=3945570304
		Peak Reduce Physical memory (bytes)=381345792
		Peak Reduce Virtual memory (bytes)=3970924544
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201211 01:56:19.560" starttime="20201211 01:56:19.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 01:56:19.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 01:56:19.561" starttime="20201211 01:56:19.561"></status>
</kw>
<status status="PASS" endtime="20201211 01:56:19.562" starttime="20201211 01:55:39.968"></status>
</kw>
<msg timestamp="20201211 01:56:19.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 01:56:19.562" starttime="20201211 01:55:39.967"></status>
</kw>
<msg timestamp="20201211 01:56:19.562" level="INFO">${output} = 2020-12-11 01:55:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-11 01:55:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201211 01:56:19.562" starttime="20201211 01:55:39.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201211 01:56:19.563" starttime="20201211 01:56:19.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 01:56:19.564" starttime="20201211 01:56:19.563"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 01:56:19.564" critical="yes" starttime="20201211 01:55:39.926"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201211 01:56:19.566" starttime="20201211 01:54:58.081"></status>
</suite>
<status status="PASS" elapsedtime="224772" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="640832" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
