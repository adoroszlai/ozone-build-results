<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 14:04:14.838" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:14.882" endtime="20200527 14:04:14.882"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:14.886" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:04:14.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:04:14.988" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:04:14 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 13:39:42 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200527 14:04:14.882" endtime="20200527 14:04:14.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:04:14.990" level="INFO">HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:04:14 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 13:39:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200527 14:04:14.989" endtime="20200527 14:04:14.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:04:14.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:04:14.990" endtime="20200527 14:04:14.990"></status>
</kw>
<msg timestamp="20200527 14:04:14.991" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:04:14 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 13:39:42 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200527 14:04:14.882" endtime="20200527 14:04:14.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:14.991" endtime="20200527 14:04:14.991"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:04:14.881" endtime="20200527 14:04:14.991" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:14.993" endtime="20200527 14:04:14.994"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:14.997" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:04:42.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:04:42.229" level="INFO">${output} = 2020-05-27 14:04:15,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:04:15,923 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:04:14.994" endtime="20200527 14:04:42.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:04:42.230" level="INFO">2020-05-27 14:04:15,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:04:15,923 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:04:15,923 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:04:16,953 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-27 14:04:16,954 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-05-27 14:04:16,954 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-05-27 14:04:16,954 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-05-27 14:04:16,955 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-27 14:04:16,955 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 14:04:16,955 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-05-27 14:04:16,956 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-05-27 14:04:16,958 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 14:04:16,978 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-05-27 14:04:17,006 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-49637, with hadoop as owner.
2020-05-27 14:04:17,160 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-56918, with hadoop as owner.
2020-05-27 14:04:17,172 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-07150, with hadoop as owner.
2020-05-27 14:04:17,181 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-30679, with hadoop as owner.
2020-05-27 14:04:17,191 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-39942, with hadoop as owner.
2020-05-27 14:04:17,204 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-49637/bucket-0-43637, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,232 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-56918/bucket-0-86883, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,241 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-07150/bucket-0-68539, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,252 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-30679/bucket-0-55773, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,262 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39942/bucket-0-71581, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,271 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-49637/bucket-1-37746, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,280 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-56918/bucket-1-51798, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,293 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-07150/bucket-1-02565, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,305 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-30679/bucket-1-92473, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,315 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39942/bucket-1-54480, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,327 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-49637/bucket-2-94187, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,335 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-56918/bucket-2-11539, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,343 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-07150/bucket-2-48694, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,354 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-30679/bucket-2-51254, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,362 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39942/bucket-2-22246, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,370 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-49637/bucket-3-95232, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,381 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-56918/bucket-3-26993, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,393 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-07150/bucket-3-75036, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,405 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-30679/bucket-3-43017, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,414 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39942/bucket-3-60202, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,422 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-49637/bucket-4-95791, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,430 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-56918/bucket-4-48431, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,443 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-07150/bucket-4-78617, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,450 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-30679/bucket-4-49879, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,458 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39942/bucket-4-01591, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:04:17,887 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 14:04:17,985 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-05-27 14:04:18,987 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-05-27 14:04:19,987 [Thread-5] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-05-27 14:04:20,988 [Thread-5] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-05-27 14:04:21,988 [Thread-5] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-05-27 14:04:22,989 [Thread-5] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-05-27 14:04:23,989 [Thread-5] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-05-27 14:04:24,990 [Thread-5] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-05-27 14:04:25,990 [Thread-5] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-05-27 14:04:26,991 [Thread-5] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-05-27 14:04:27,991 [Thread-5] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-05-27 14:04:28,992 [Thread-5] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-05-27 14:04:29,999 [Thread-5] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-05-27 14:04:31,001 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-05-27 14:04:32,001 [Thread-5] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-05-27 14:04:33,002 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-05-27 14:04:34,003 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-05-27 14:04:35,004 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-05-27 14:04:36,004 [Thread-5] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-05-27 14:04:37,005 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,203
Average Time spent in bucket creation: 00:00:00,220
Average Time spent in key creation: 00:00:02,117
Average Time spent in key write: 00:00:00,531
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:25,819
***************************************************</msg>
<status status="PASS" starttime="20200527 14:04:42.229" endtime="20200527 14:04:42.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:04:42.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:04:42.230" endtime="20200527 14:04:42.230"></status>
</kw>
<msg timestamp="20200527 14:04:42.231" level="INFO">${result} = 2020-05-27 14:04:15,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:04:15,923 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:04:14.994" endtime="20200527 14:04:42.231"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:42.231" endtime="20200527 14:04:42.231"></status>
</kw>
<status status="PASS" starttime="20200527 14:04:42.231" endtime="20200527 14:04:42.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:42.231" endtime="20200527 14:04:42.232"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:04:14.992" endtime="20200527 14:04:42.232" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200527 14:04:14.861" endtime="20200527 14:04:42.232"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200527 14:04:42.240" level="INFO">${random} = 01111</msg>
<status status="PASS" starttime="20200527 14:04:42.240" endtime="20200527 14:04:42.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200527 14:04:42.240" level="INFO">${prefix} = 01111</msg>
<status status="PASS" starttime="20200527 14:04:42.240" endtime="20200527 14:04:42.240"></status>
</kw>
<status status="PASS" starttime="20200527 14:04:42.239" endtime="20200527 14:04:42.240"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:42.241" endtime="20200527 14:04:42.241"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:42.244" level="INFO">Running command 'ozone sh volume info o3://om:9862/01111-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:04:43.597" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:04:43.597" level="INFO">${output} = VOLUME_NOT_FOUND Volume 01111-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 14:04:42.242" endtime="20200527 14:04:43.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:04:43.598" level="INFO">VOLUME_NOT_FOUND Volume 01111-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 14:04:43.597" endtime="20200527 14:04:43.598"></status>
</kw>
<msg timestamp="20200527 14:04:43.599" level="INFO">${result} = VOLUME_NOT_FOUND Volume 01111-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 14:04:42.241" endtime="20200527 14:04:43.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:43.599" endtime="20200527 14:04:43.599"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:43.602" level="INFO">Running command 'ozone sh volume create o3://om:9862/01111-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:04:45.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:04:45.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:04:43.600" endtime="20200527 14:04:45.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:04:45.368" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:04:45.367" endtime="20200527 14:04:45.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:04:45.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:04:45.368" endtime="20200527 14:04:45.368"></status>
</kw>
<msg timestamp="20200527 14:04:45.369" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:04:43.599" endtime="20200527 14:04:45.369"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:45.369" endtime="20200527 14:04:45.369"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:45.372" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="01111-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:04:47.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:04:47.440" level="INFO">${output} = {
  "metadata": {},
  "name": "01111-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:04:45.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 14:04:45.370" endtime="20200527 14:04:47.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:04:47.441" level="INFO">{
  "metadata": {},
  "name": "01111-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:04:45.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:04:47.440" endtime="20200527 14:04:47.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:04:47.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:04:47.441" endtime="20200527 14:04:47.442"></status>
</kw>
<msg timestamp="20200527 14:04:47.442" level="INFO">${result} = {
  "metadata": {},
  "name": "01111-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:04:45.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 14:04:45.369" endtime="20200527 14:04:47.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:47.442" endtime="20200527 14:04:47.442"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:47.446" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="01111-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:04:49.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:04:49.088" level="INFO">${output} = {
  "metadata": {},
  "name": "01111-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:04:45.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 14:04:47.443" endtime="20200527 14:04:49.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:04:49.089" level="INFO">{
  "metadata": {},
  "name": "01111-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:04:45.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:04:49.089" endtime="20200527 14:04:49.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:04:49.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:04:49.089" endtime="20200527 14:04:49.090"></status>
</kw>
<msg timestamp="20200527 14:04:49.090" level="INFO">${result} = {
  "metadata": {},
  "name": "01111-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:04:45.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 14:04:47.443" endtime="20200527 14:04:49.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:49.090" endtime="20200527 14:04:49.090"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:49.093" level="INFO">Running command 'ozone sh volume update o3://om:9862/01111-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:04:51.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:04:51.141" level="INFO">${output} = {
  "metadata" : { },
  "name" : "01111-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:04:45.102Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200527 14:04:49.091" endtime="20200527 14:04:51.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:04:51.142" level="INFO">{
  "metadata" : { },
  "name" : "01111-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:04:45.102Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 14:04:51.141" endtime="20200527 14:04:51.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:04:51.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:04:51.142" endtime="20200527 14:04:51.143"></status>
</kw>
<status status="PASS" starttime="20200527 14:04:49.091" endtime="20200527 14:04:51.143"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:51.146" level="INFO">Running command 'ozone sh volume info o3://om:9862/01111-rpcwoport | jq -r '. | select(.name=="01111-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:04:52.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:04:52.648" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:04:51.144" endtime="20200527 14:04:52.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:04:52.649" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 14:04:52.648" endtime="20200527 14:04:52.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:04:52.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:04:52.649" endtime="20200527 14:04:52.650"></status>
</kw>
<msg timestamp="20200527 14:04:52.650" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:04:51.143" endtime="20200527 14:04:52.650"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:52.650" endtime="20200527 14:04:52.650"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:52.654" level="INFO">Running command 'ozone sh bucket create o3://om:9862/01111-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:04:54.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:04:54.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:04:52.651" endtime="20200527 14:04:54.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:04:54.369" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:04:54.368" endtime="20200527 14:04:54.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:04:54.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:04:54.369" endtime="20200527 14:04:54.369"></status>
</kw>
<status status="PASS" starttime="20200527 14:04:52.650" endtime="20200527 14:04:54.370"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:54.373" level="INFO">Running command 'ozone sh bucket info o3://om:9862/01111-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:04:56.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:04:56.065" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 14:04:54.370" endtime="20200527 14:04:56.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:04:56.066" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 14:04:56.065" endtime="20200527 14:04:56.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:04:56.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:04:56.066" endtime="20200527 14:04:56.067"></status>
</kw>
<msg timestamp="20200527 14:04:56.067" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 14:04:54.370" endtime="20200527 14:04:56.067"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:56.067" endtime="20200527 14:04:56.067"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:56.070" level="INFO">Running command 'ozone sh bucket list o3://om:9862/01111-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:04:57.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:04:57.799" level="INFO">${output} = 01111-rpcwoport</msg>
<status status="PASS" starttime="20200527 14:04:56.068" endtime="20200527 14:04:57.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:04:57.800" level="INFO">01111-rpcwoport</msg>
<status status="PASS" starttime="20200527 14:04:57.799" endtime="20200527 14:04:57.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:04:57.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:04:57.800" endtime="20200527 14:04:57.800"></status>
</kw>
<msg timestamp="20200527 14:04:57.800" level="INFO">${result} = 01111-rpcwoport</msg>
<status status="PASS" starttime="20200527 14:04:56.068" endtime="20200527 14:04:57.800"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 14:04:57.800" endtime="20200527 14:04:57.801"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:04:57.804" level="INFO">Running command 'ozone sh key put o3://om:9862/01111-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:00.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:00.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:04:57.802" endtime="20200527 14:05:00.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:00.913" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:05:00.912" endtime="20200527 14:05:00.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:00.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:00.913" endtime="20200527 14:05:00.913"></status>
</kw>
<status status="PASS" starttime="20200527 14:04:57.801" endtime="20200527 14:05:00.913"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:00.916" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:00.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:00.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:05:00.914" endtime="20200527 14:05:00.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:00.919" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:05:00.919" endtime="20200527 14:05:00.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:00.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:00.919" endtime="20200527 14:05:00.920"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:00.914" endtime="20200527 14:05:00.920"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:00.923" level="INFO">Running command 'ozone sh key get o3://om:9862/01111-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:04.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:04.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:05:00.920" endtime="20200527 14:05:04.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:04.226" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:05:04.226" endtime="20200527 14:05:04.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:04.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:04.227" endtime="20200527 14:05:04.227"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:00.920" endtime="20200527 14:05:04.227"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:04.229" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:04.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:04.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:05:04.228" endtime="20200527 14:05:04.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:04.234" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:05:04.233" endtime="20200527 14:05:04.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:04.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:04.234" endtime="20200527 14:05:04.234"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:04.227" endtime="20200527 14:05:04.234"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:04.237" level="INFO">Running command 'ozone sh key get o3://om:9862/01111-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:05.689" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:05:05.689" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:05:04.235" endtime="20200527 14:05:05.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:05.690" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:05:05.690" endtime="20200527 14:05:05.690"></status>
</kw>
<msg timestamp="20200527 14:05:05.691" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:05:04.235" endtime="20200527 14:05:05.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:05.691" endtime="20200527 14:05:05.691"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:05.694" level="INFO">Running command 'ozone sh key get --force o3://om:9862/01111-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:08.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:08.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:05:05.692" endtime="20200527 14:05:08.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:08.616" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:05:08.616" endtime="20200527 14:05:08.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:08.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:08.617" endtime="20200527 14:05:08.617"></status>
</kw>
<msg timestamp="20200527 14:05:08.617" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:05:05.691" endtime="20200527 14:05:08.617"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:08.617" endtime="20200527 14:05:08.618"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:08.620" level="INFO">Running command 'ozone sh key info o3://om:9862/01111-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:10.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:10.180" level="INFO">${output} = {
  "volumeName": "01111-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:04:59.276Z",
  "modificationTime": "2020-05-27T14:05:00.561Z",
  "re...</msg>
<status status="PASS" starttime="20200527 14:05:08.618" endtime="20200527 14:05:10.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:10.181" level="INFO">{
  "volumeName": "01111-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:04:59.276Z",
  "modificationTime": "2020-05-27T14:05:00.561Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104240794781352060,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 14:05:10.181" endtime="20200527 14:05:10.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:10.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:10.182" endtime="20200527 14:05:10.182"></status>
</kw>
<msg timestamp="20200527 14:05:10.182" level="INFO">${result} = {
  "volumeName": "01111-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:04:59.276Z",
  "modificationTime": "2020-05-27T14:05:00.561Z",
  "re...</msg>
<status status="PASS" starttime="20200527 14:05:08.618" endtime="20200527 14:05:10.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:10.183" endtime="20200527 14:05:10.183"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:10.187" level="INFO">Running command 'ozone sh key list o3://om:9862/01111-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:11.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:11.899" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 14:05:10.184" endtime="20200527 14:05:11.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:11.900" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 14:05:11.899" endtime="20200527 14:05:11.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:11.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:11.900" endtime="20200527 14:05:11.900"></status>
</kw>
<msg timestamp="20200527 14:05:11.900" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 14:05:10.183" endtime="20200527 14:05:11.901"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:11.901" endtime="20200527 14:05:11.901"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:11.903" level="INFO">Running command 'ozone sh key rename o3://om:9862/01111-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:13.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:13.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:05:11.901" endtime="20200527 14:05:13.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:13.388" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:05:13.388" endtime="20200527 14:05:13.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:13.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:13.389" endtime="20200527 14:05:13.389"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:11.901" endtime="20200527 14:05:13.389"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:13.392" level="INFO">Running command 'ozone sh key list o3://om:9862/01111-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:15.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:15.020" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 14:05:13.390" endtime="20200527 14:05:15.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:15.021" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 14:05:15.020" endtime="20200527 14:05:15.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:15.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:15.021" endtime="20200527 14:05:15.022"></status>
</kw>
<msg timestamp="20200527 14:05:15.022" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 14:05:13.389" endtime="20200527 14:05:15.022"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:15.022" endtime="20200527 14:05:15.023"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:15.026" level="INFO">Running command 'ozone sh key delete o3://om:9862/01111-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:16.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:16.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:05:15.023" endtime="20200527 14:05:16.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:16.626" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:05:16.626" endtime="20200527 14:05:16.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:16.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:16.627" endtime="20200527 14:05:16.627"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:15.023" endtime="20200527 14:05:16.627"></status>
</kw>
<status status="PASS" starttime="20200527 14:04:57.801" endtime="20200527 14:05:16.627"></status>
</kw>
<status status="PASS" starttime="20200527 14:04:57.801" endtime="20200527 14:05:16.628"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:16.631" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/01111-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:18.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:18.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:05:16.628" endtime="20200527 14:05:18.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:18.077" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:05:18.076" endtime="20200527 14:05:18.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:18.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:18.077" endtime="20200527 14:05:18.078"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:16.628" endtime="20200527 14:05:18.078"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:18.080" level="INFO">Running command 'ozone sh volume delete o3://om:9862/01111-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:19.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:19.464" level="INFO">${output} = Volume 01111-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200527 14:05:18.078" endtime="20200527 14:05:19.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:19.465" level="INFO">Volume 01111-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200527 14:05:19.465" endtime="20200527 14:05:19.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:19.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:19.465" endtime="20200527 14:05:19.466"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:18.078" endtime="20200527 14:05:19.466"></status>
</kw>
<status status="PASS" starttime="20200527 14:04:42.241" endtime="20200527 14:05:19.466"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:04:42.240" endtime="20200527 14:05:19.466" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:19.467" endtime="20200527 14:05:19.468"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:19.471" level="INFO">Running command 'ozone sh volume create o3://om:9862/01111-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:21.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:21.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:05:19.469" endtime="20200527 14:05:21.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:21.095" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:05:21.095" endtime="20200527 14:05:21.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:21.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:21.095" endtime="20200527 14:05:21.096"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:19.468" endtime="20200527 14:05:21.096"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:21.098" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/01111-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:22.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:22.811" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:21.097" endtime="20200527 14:05:22.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:22.812" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:22.812" endtime="20200527 14:05:22.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:22.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:22.813" endtime="20200527 14:05:22.813"></status>
</kw>
<msg timestamp="20200527 14:05:22.813" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:21.096" endtime="20200527 14:05:22.813"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:22.814" endtime="20200527 14:05:22.814"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:22.818" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/01111-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:24.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:24.457" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 14:05:22.815" endtime="20200527 14:05:24.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:24.458" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 14:05:24.457" endtime="20200527 14:05:24.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:24.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:24.458" endtime="20200527 14:05:24.458"></status>
</kw>
<msg timestamp="20200527 14:05:24.458" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 14:05:22.815" endtime="20200527 14:05:24.459"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:24.462" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/01111-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:26.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:26.097" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:24.459" endtime="20200527 14:05:26.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:26.098" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:26.098" endtime="20200527 14:05:26.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:26.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:26.098" endtime="20200527 14:05:26.099"></status>
</kw>
<msg timestamp="20200527 14:05:26.099" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:24.459" endtime="20200527 14:05:26.099"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:26.099" endtime="20200527 14:05:26.100"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:26.103" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/01111-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:27.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:27.720" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 14:05:26.101" endtime="20200527 14:05:27.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:27.721" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 14:05:27.720" endtime="20200527 14:05:27.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:27.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:27.721" endtime="20200527 14:05:27.722"></status>
</kw>
<msg timestamp="20200527 14:05:27.722" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 14:05:26.100" endtime="20200527 14:05:27.722"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:27.724" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/01111-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:29.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:29.320" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:27.722" endtime="20200527 14:05:29.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:29.321" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:29.320" endtime="20200527 14:05:29.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:29.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:29.321" endtime="20200527 14:05:29.321"></status>
</kw>
<msg timestamp="20200527 14:05:29.322" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:27.722" endtime="20200527 14:05:29.322"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:29.322" endtime="20200527 14:05:29.322"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:29.325" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/01111-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:30.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:30.942" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:05:29.323" endtime="20200527 14:05:30.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:30.943" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:05:30.942" endtime="20200527 14:05:30.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:30.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:30.943" endtime="20200527 14:05:30.943"></status>
</kw>
<msg timestamp="20200527 14:05:30.944" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:05:29.323" endtime="20200527 14:05:30.944"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:30.948" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/01111-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:32.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:32.600" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200527 14:05:30.944" endtime="20200527 14:05:32.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:32.601" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:32.600" endtime="20200527 14:05:32.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:32.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:32.601" endtime="20200527 14:05:32.602"></status>
</kw>
<msg timestamp="20200527 14:05:32.602" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200527 14:05:30.944" endtime="20200527 14:05:32.602"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:32.602" endtime="20200527 14:05:32.603"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:32.603" endtime="20200527 14:05:32.603"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:19.468" endtime="20200527 14:05:32.603"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:05:19.467" endtime="20200527 14:05:32.604" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:32.604" endtime="20200527 14:05:32.605"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:32.608" level="INFO">Running command 'ozone sh bucket create o3://om:9862/01111-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:34.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:34.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:05:32.605" endtime="20200527 14:05:34.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:34.178" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:05:34.177" endtime="20200527 14:05:34.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:34.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:34.178" endtime="20200527 14:05:34.179"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:32.605" endtime="20200527 14:05:34.179"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:34.182" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/01111-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:35.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:35.747" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:34.179" endtime="20200527 14:05:35.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:35.748" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:35.747" endtime="20200527 14:05:35.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:35.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:35.748" endtime="20200527 14:05:35.748"></status>
</kw>
<msg timestamp="20200527 14:05:35.749" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:34.179" endtime="20200527 14:05:35.749"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:35.749" endtime="20200527 14:05:35.749"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:35.752" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/01111-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:37.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:37.293" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 14:05:35.750" endtime="20200527 14:05:37.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:37.294" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 14:05:37.293" endtime="20200527 14:05:37.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:37.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:37.294" endtime="20200527 14:05:37.295"></status>
</kw>
<msg timestamp="20200527 14:05:37.295" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 14:05:35.749" endtime="20200527 14:05:37.295"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:37.299" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/01111-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:38.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:38.905" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:37.296" endtime="20200527 14:05:38.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:38.906" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:38.905" endtime="20200527 14:05:38.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:38.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:38.906" endtime="20200527 14:05:38.907"></status>
</kw>
<msg timestamp="20200527 14:05:38.907" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:37.295" endtime="20200527 14:05:38.907"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:38.907" endtime="20200527 14:05:38.908"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:38.911" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/01111-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:40.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:40.441" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:05:38.909" endtime="20200527 14:05:40.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:40.441" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:05:40.441" endtime="20200527 14:05:40.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:40.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:40.442" endtime="20200527 14:05:40.442"></status>
</kw>
<msg timestamp="20200527 14:05:40.443" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:05:38.908" endtime="20200527 14:05:40.443"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:40.446" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/01111-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:42.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:42.057" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:40.443" endtime="20200527 14:05:42.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:42.058" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:42.057" endtime="20200527 14:05:42.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:42.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:42.058" endtime="20200527 14:05:42.058"></status>
</kw>
<msg timestamp="20200527 14:05:42.059" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:40.443" endtime="20200527 14:05:42.059"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:42.059" endtime="20200527 14:05:42.060"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:42.063" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/01111-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:43.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:43.444" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:05:42.060" endtime="20200527 14:05:43.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:43.445" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:05:43.444" endtime="20200527 14:05:43.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:43.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:43.445" endtime="20200527 14:05:43.445"></status>
</kw>
<msg timestamp="20200527 14:05:43.445" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:05:42.060" endtime="20200527 14:05:43.445"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:43.448" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/01111-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:45.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:45.092" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 14:05:43.446" endtime="20200527 14:05:45.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:45.093" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:45.092" endtime="20200527 14:05:45.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:45.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:45.093" endtime="20200527 14:05:45.094"></status>
</kw>
<msg timestamp="20200527 14:05:45.094" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 14:05:43.446" endtime="20200527 14:05:45.094"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:45.094" endtime="20200527 14:05:45.095"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:45.095" endtime="20200527 14:05:45.095"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:32.605" endtime="20200527 14:05:45.095"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:05:32.604" endtime="20200527 14:05:45.095" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:45.096" endtime="20200527 14:05:45.097"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:45.100" level="INFO">Running command 'ozone sh key put o3://om:9862/01111-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:47.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:47.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:05:45.097" endtime="20200527 14:05:47.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:47.996" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:05:47.995" endtime="20200527 14:05:47.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:47.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:47.996" endtime="20200527 14:05:47.996"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:45.097" endtime="20200527 14:05:47.997"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:48.001" level="INFO">Running command 'ozone sh key getacl o3://om:9862/01111-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:49.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:49.664" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:47.997" endtime="20200527 14:05:49.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:49.665" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:49.664" endtime="20200527 14:05:49.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:49.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:49.665" endtime="20200527 14:05:49.666"></status>
</kw>
<msg timestamp="20200527 14:05:49.666" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:47.997" endtime="20200527 14:05:49.666"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:49.667" endtime="20200527 14:05:49.667"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:49.670" level="INFO">Running command 'ozone sh key addacl o3://om:9862/01111-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:51.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:51.149" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 14:05:49.668" endtime="20200527 14:05:51.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:51.150" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 14:05:51.150" endtime="20200527 14:05:51.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:51.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:51.150" endtime="20200527 14:05:51.151"></status>
</kw>
<msg timestamp="20200527 14:05:51.151" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 14:05:49.667" endtime="20200527 14:05:51.151"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:51.153" level="INFO">Running command 'ozone sh key getacl o3://om:9862/01111-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:52.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:52.911" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:51.152" endtime="20200527 14:05:52.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:52.912" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:52.912" endtime="20200527 14:05:52.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:52.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:52.912" endtime="20200527 14:05:52.913"></status>
</kw>
<msg timestamp="20200527 14:05:52.913" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:51.151" endtime="20200527 14:05:52.913"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:52.913" endtime="20200527 14:05:52.914"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:52.917" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/01111-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:54.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:54.414" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:05:52.914" endtime="20200527 14:05:54.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:54.415" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:05:54.414" endtime="20200527 14:05:54.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:54.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:54.415" endtime="20200527 14:05:54.415"></status>
</kw>
<msg timestamp="20200527 14:05:54.415" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:05:52.914" endtime="20200527 14:05:54.416"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:54.418" level="INFO">Running command 'ozone sh key getacl o3://om:9862/01111-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:56.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:56.182" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:54.416" endtime="20200527 14:05:56.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:56.183" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:56.183" endtime="20200527 14:05:56.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:56.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:56.184" endtime="20200527 14:05:56.184"></status>
</kw>
<msg timestamp="20200527 14:05:56.184" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:05:54.416" endtime="20200527 14:05:56.184"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:56.184" endtime="20200527 14:05:56.185"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:56.188" level="INFO">Running command 'ozone sh key setacl o3://om:9862/01111-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:57.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:57.731" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:05:56.185" endtime="20200527 14:05:57.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:57.732" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:05:57.731" endtime="20200527 14:05:57.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:57.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:57.732" endtime="20200527 14:05:57.733"></status>
</kw>
<msg timestamp="20200527 14:05:57.733" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:05:56.185" endtime="20200527 14:05:57.733"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:57.736" level="INFO">Running command 'ozone sh key getacl o3://om:9862/01111-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:05:59.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:05:59.371" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 14:05:57.733" endtime="20200527 14:05:59.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:05:59.372" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:05:59.371" endtime="20200527 14:05:59.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:05:59.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:05:59.372" endtime="20200527 14:05:59.373"></status>
</kw>
<msg timestamp="20200527 14:05:59.373" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 14:05:57.733" endtime="20200527 14:05:59.373"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:59.373" endtime="20200527 14:05:59.374"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:59.374" endtime="20200527 14:05:59.375"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:45.097" endtime="20200527 14:05:59.375"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:05:45.096" endtime="20200527 14:05:59.375" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:05:59.376" endtime="20200527 14:05:59.376"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:05:59.379" level="INFO">Running command 'ozone sh volume info o3:///01111-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:00.829" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:06:00.829" level="INFO">${output} = VOLUME_NOT_FOUND Volume 01111-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 14:05:59.377" endtime="20200527 14:06:00.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:00.830" level="INFO">VOLUME_NOT_FOUND Volume 01111-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 14:06:00.829" endtime="20200527 14:06:00.830"></status>
</kw>
<msg timestamp="20200527 14:06:00.830" level="INFO">${result} = VOLUME_NOT_FOUND Volume 01111-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 14:05:59.377" endtime="20200527 14:06:00.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:00.830" endtime="20200527 14:06:00.830"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:00.833" level="INFO">Running command 'ozone sh volume create o3:///01111-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:02.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:02.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:00.831" endtime="20200527 14:06:02.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:02.321" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:02.320" endtime="20200527 14:06:02.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:02.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:02.321" endtime="20200527 14:06:02.321"></status>
</kw>
<msg timestamp="20200527 14:06:02.321" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:06:00.831" endtime="20200527 14:06:02.321"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:02.321" endtime="20200527 14:06:02.322"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:02.324" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="01111-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:04.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:04.143" level="INFO">${output} = {
  "metadata": {},
  "name": "01111-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:02.182Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 14:06:02.322" endtime="20200527 14:06:04.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:04.144" level="INFO">{
  "metadata": {},
  "name": "01111-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:02.182Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:06:04.143" endtime="20200527 14:06:04.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:04.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:04.144" endtime="20200527 14:06:04.144"></status>
</kw>
<msg timestamp="20200527 14:06:04.145" level="INFO">${result} = {
  "metadata": {},
  "name": "01111-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:02.182Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 14:06:02.322" endtime="20200527 14:06:04.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:04.145" endtime="20200527 14:06:04.145"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:04.147" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="01111-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:05.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:05.774" level="INFO">${output} = {
  "metadata": {},
  "name": "01111-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:02.182Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 14:06:04.146" endtime="20200527 14:06:05.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:05.775" level="INFO">{
  "metadata": {},
  "name": "01111-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:02.182Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:06:05.774" endtime="20200527 14:06:05.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:05.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:05.775" endtime="20200527 14:06:05.776"></status>
</kw>
<msg timestamp="20200527 14:06:05.776" level="INFO">${result} = {
  "metadata": {},
  "name": "01111-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:02.182Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 14:06:04.145" endtime="20200527 14:06:05.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:05.776" endtime="20200527 14:06:05.776"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:05.779" level="INFO">Running command 'ozone sh volume update o3:///01111-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:07.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:07.338" level="INFO">${output} = {
  "metadata" : { },
  "name" : "01111-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:06:02.182Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200527 14:06:05.777" endtime="20200527 14:06:07.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:07.340" level="INFO">{
  "metadata" : { },
  "name" : "01111-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:06:02.182Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 14:06:07.338" endtime="20200527 14:06:07.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:07.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:07.340" endtime="20200527 14:06:07.340"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:05.776" endtime="20200527 14:06:07.341"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:07.344" level="INFO">Running command 'ozone sh volume info o3:///01111-rpcwport | jq -r '. | select(.name=="01111-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:09.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:09.099" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:06:07.341" endtime="20200527 14:06:09.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:09.100" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 14:06:09.099" endtime="20200527 14:06:09.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:09.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:09.100" endtime="20200527 14:06:09.100"></status>
</kw>
<msg timestamp="20200527 14:06:09.100" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:06:07.341" endtime="20200527 14:06:09.100"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:09.100" endtime="20200527 14:06:09.101"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:09.103" level="INFO">Running command 'ozone sh bucket create o3:///01111-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:10.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:10.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:09.101" endtime="20200527 14:06:10.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:10.662" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:10.662" endtime="20200527 14:06:10.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:10.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:10.662" endtime="20200527 14:06:10.663"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:09.101" endtime="20200527 14:06:10.663"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:10.665" level="INFO">Running command 'ozone sh bucket info o3:///01111-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:12.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:12.160" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 14:06:10.664" endtime="20200527 14:06:12.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:12.161" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 14:06:12.161" endtime="20200527 14:06:12.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:12.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:12.161" endtime="20200527 14:06:12.162"></status>
</kw>
<msg timestamp="20200527 14:06:12.162" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 14:06:10.663" endtime="20200527 14:06:12.162"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:12.162" endtime="20200527 14:06:12.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:12.167" level="INFO">Running command 'ozone sh bucket list o3:///01111-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:13.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:13.795" level="INFO">${output} = 01111-rpcwport</msg>
<status status="PASS" starttime="20200527 14:06:12.163" endtime="20200527 14:06:13.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:13.795" level="INFO">01111-rpcwport</msg>
<status status="PASS" starttime="20200527 14:06:13.795" endtime="20200527 14:06:13.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:13.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:13.796" endtime="20200527 14:06:13.796"></status>
</kw>
<msg timestamp="20200527 14:06:13.797" level="INFO">${result} = 01111-rpcwport</msg>
<status status="PASS" starttime="20200527 14:06:12.163" endtime="20200527 14:06:13.797"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:13.797" endtime="20200527 14:06:13.797"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:13.800" level="INFO">Running command 'ozone sh key put o3:///01111-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:16.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:16.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:13.798" endtime="20200527 14:06:16.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:16.949" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:16.949" endtime="20200527 14:06:16.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:16.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:16.949" endtime="20200527 14:06:16.950"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:13.798" endtime="20200527 14:06:16.950"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:16.953" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:16.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:16.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:16.951" endtime="20200527 14:06:16.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:16.955" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:16.955" endtime="20200527 14:06:16.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:16.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:16.956" endtime="20200527 14:06:16.956"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:16.950" endtime="20200527 14:06:16.956"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:16.958" level="INFO">Running command 'ozone sh key get o3:///01111-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:19.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:19.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:16.957" endtime="20200527 14:06:19.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:19.783" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:19.782" endtime="20200527 14:06:19.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:19.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:19.783" endtime="20200527 14:06:19.784"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:16.956" endtime="20200527 14:06:19.784"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:19.787" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:19.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:19.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:19.784" endtime="20200527 14:06:19.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:19.791" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:19.790" endtime="20200527 14:06:19.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:19.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:19.791" endtime="20200527 14:06:19.791"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:19.784" endtime="20200527 14:06:19.792"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:19.794" level="INFO">Running command 'ozone sh key get o3:///01111-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:21.302" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:06:21.302" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:06:19.792" endtime="20200527 14:06:21.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:21.303" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:06:21.303" endtime="20200527 14:06:21.303"></status>
</kw>
<msg timestamp="20200527 14:06:21.303" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:06:19.792" endtime="20200527 14:06:21.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:21.304" endtime="20200527 14:06:21.304"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:21.306" level="INFO">Running command 'ozone sh key get --force o3:///01111-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:24.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:24.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:21.304" endtime="20200527 14:06:24.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:24.075" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:24.075" endtime="20200527 14:06:24.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:24.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:24.076" endtime="20200527 14:06:24.076"></status>
</kw>
<msg timestamp="20200527 14:06:24.076" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:06:21.304" endtime="20200527 14:06:24.076"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:24.076" endtime="20200527 14:06:24.077"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:24.079" level="INFO">Running command 'ozone sh key info o3:///01111-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:25.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:25.740" level="INFO">${output} = {
  "volumeName": "01111-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:06:15.253Z",
  "modificationTime": "2020-05-27T14:06:16.489Z",
  "rep...</msg>
<status status="PASS" starttime="20200527 14:06:24.077" endtime="20200527 14:06:25.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:25.741" level="INFO">{
  "volumeName": "01111-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:06:15.253Z",
  "modificationTime": "2020-05-27T14:06:16.489Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104240799760449660,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 14:06:25.740" endtime="20200527 14:06:25.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:25.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:25.741" endtime="20200527 14:06:25.741"></status>
</kw>
<msg timestamp="20200527 14:06:25.742" level="INFO">${result} = {
  "volumeName": "01111-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:06:15.253Z",
  "modificationTime": "2020-05-27T14:06:16.489Z",
  "rep...</msg>
<status status="PASS" starttime="20200527 14:06:24.077" endtime="20200527 14:06:25.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:25.742" endtime="20200527 14:06:25.743"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:25.746" level="INFO">Running command 'ozone sh key list o3:///01111-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:27.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:27.372" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 14:06:25.743" endtime="20200527 14:06:27.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:27.373" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 14:06:27.373" endtime="20200527 14:06:27.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:27.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:27.374" endtime="20200527 14:06:27.374"></status>
</kw>
<msg timestamp="20200527 14:06:27.374" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 14:06:25.743" endtime="20200527 14:06:27.374"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:27.374" endtime="20200527 14:06:27.375"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:27.378" level="INFO">Running command 'ozone sh key rename o3:///01111-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:28.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:28.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:27.376" endtime="20200527 14:06:28.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:28.915" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:28.914" endtime="20200527 14:06:28.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:28.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:28.915" endtime="20200527 14:06:28.915"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:27.375" endtime="20200527 14:06:28.915"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:28.918" level="INFO">Running command 'ozone sh key list o3:///01111-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:30.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:30.580" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 14:06:28.916" endtime="20200527 14:06:30.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:30.581" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 14:06:30.581" endtime="20200527 14:06:30.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:30.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:30.581" endtime="20200527 14:06:30.582"></status>
</kw>
<msg timestamp="20200527 14:06:30.582" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 14:06:28.915" endtime="20200527 14:06:30.582"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:30.582" endtime="20200527 14:06:30.582"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:30.585" level="INFO">Running command 'ozone sh key delete o3:///01111-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:31.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:31.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:30.583" endtime="20200527 14:06:31.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:31.995" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:31.995" endtime="20200527 14:06:31.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:31.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:31.996" endtime="20200527 14:06:31.996"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:30.582" endtime="20200527 14:06:31.996"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:13.797" endtime="20200527 14:06:31.997"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:13.797" endtime="20200527 14:06:31.997"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:32.001" level="INFO">Running command 'ozone sh bucket delete o3:///01111-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:33.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:33.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:31.997" endtime="20200527 14:06:33.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:33.535" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:33.535" endtime="20200527 14:06:33.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:33.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:33.536" endtime="20200527 14:06:33.536"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:31.997" endtime="20200527 14:06:33.536"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:33.539" level="INFO">Running command 'ozone sh volume delete o3:///01111-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:35.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:35.015" level="INFO">${output} = Volume 01111-rpcwport is deleted</msg>
<status status="PASS" starttime="20200527 14:06:33.537" endtime="20200527 14:06:35.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:35.016" level="INFO">Volume 01111-rpcwport is deleted</msg>
<status status="PASS" starttime="20200527 14:06:35.015" endtime="20200527 14:06:35.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:35.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:35.016" endtime="20200527 14:06:35.017"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:33.536" endtime="20200527 14:06:35.017"></status>
</kw>
<status status="PASS" starttime="20200527 14:05:59.377" endtime="20200527 14:06:35.017"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:05:59.375" endtime="20200527 14:06:35.017" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:35.018" endtime="20200527 14:06:35.018"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:35.023" level="INFO">Running command 'ozone sh volume info /01111-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:36.437" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:06:36.437" level="INFO">${output} = VOLUME_NOT_FOUND Volume 01111-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 14:06:35.020" endtime="20200527 14:06:36.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:36.439" level="INFO">VOLUME_NOT_FOUND Volume 01111-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 14:06:36.438" endtime="20200527 14:06:36.439"></status>
</kw>
<msg timestamp="20200527 14:06:36.439" level="INFO">${result} = VOLUME_NOT_FOUND Volume 01111-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 14:06:35.019" endtime="20200527 14:06:36.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:36.439" endtime="20200527 14:06:36.440"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:36.443" level="INFO">Running command 'ozone sh volume create /01111-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:38.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:38.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:36.440" endtime="20200527 14:06:38.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:38.025" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:38.025" endtime="20200527 14:06:38.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:38.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:38.026" endtime="20200527 14:06:38.026"></status>
</kw>
<msg timestamp="20200527 14:06:38.026" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:06:36.440" endtime="20200527 14:06:38.027"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:38.027" endtime="20200527 14:06:38.027"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:38.031" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="01111-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:39.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:39.592" level="INFO">${output} = {
  "metadata": {},
  "name": "01111-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:37.900Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 14:06:38.028" endtime="20200527 14:06:39.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:39.594" level="INFO">{
  "metadata": {},
  "name": "01111-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:37.900Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:06:39.593" endtime="20200527 14:06:39.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:39.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:39.594" endtime="20200527 14:06:39.594"></status>
</kw>
<msg timestamp="20200527 14:06:39.595" level="INFO">${result} = {
  "metadata": {},
  "name": "01111-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:37.900Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 14:06:38.027" endtime="20200527 14:06:39.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:39.595" endtime="20200527 14:06:39.595"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:39.598" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="01111-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:41.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:41.260" level="INFO">${output} = {
  "metadata": {},
  "name": "01111-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:37.900Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 14:06:39.596" endtime="20200527 14:06:41.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:41.261" level="INFO">{
  "metadata": {},
  "name": "01111-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:37.900Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:06:41.261" endtime="20200527 14:06:41.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:41.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:41.261" endtime="20200527 14:06:41.262"></status>
</kw>
<msg timestamp="20200527 14:06:41.262" level="INFO">${result} = {
  "metadata": {},
  "name": "01111-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:06:37.900Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 14:06:39.595" endtime="20200527 14:06:41.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:41.262" endtime="20200527 14:06:41.262"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:41.265" level="INFO">Running command 'ozone sh volume update /01111-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:42.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:42.959" level="INFO">${output} = {
  "metadata" : { },
  "name" : "01111-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:06:37.900Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200527 14:06:41.263" endtime="20200527 14:06:42.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:42.960" level="INFO">{
  "metadata" : { },
  "name" : "01111-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:06:37.900Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 14:06:42.960" endtime="20200527 14:06:42.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:42.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:42.961" endtime="20200527 14:06:42.961"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:41.262" endtime="20200527 14:06:42.962"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:42.966" level="INFO">Running command 'ozone sh volume info /01111-rpcwoscheme | jq -r '. | select(.name=="01111-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:44.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:44.568" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:06:42.962" endtime="20200527 14:06:44.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:44.569" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 14:06:44.568" endtime="20200527 14:06:44.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:44.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:44.569" endtime="20200527 14:06:44.569"></status>
</kw>
<msg timestamp="20200527 14:06:44.570" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:06:42.962" endtime="20200527 14:06:44.570"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:44.570" endtime="20200527 14:06:44.570"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:44.573" level="INFO">Running command 'ozone sh bucket create /01111-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:46.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:46.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:44.571" endtime="20200527 14:06:46.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:46.079" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:46.078" endtime="20200527 14:06:46.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:46.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:46.079" endtime="20200527 14:06:46.080"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:44.570" endtime="20200527 14:06:46.080"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:46.082" level="INFO">Running command 'ozone sh bucket info /01111-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:47.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:47.844" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 14:06:46.080" endtime="20200527 14:06:47.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:47.845" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 14:06:47.844" endtime="20200527 14:06:47.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:47.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:47.845" endtime="20200527 14:06:47.845"></status>
</kw>
<msg timestamp="20200527 14:06:47.846" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 14:06:46.080" endtime="20200527 14:06:47.846"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:47.846" endtime="20200527 14:06:47.846"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:47.851" level="INFO">Running command 'ozone sh bucket list /01111-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:49.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:49.582" level="INFO">${output} = 01111-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 14:06:47.847" endtime="20200527 14:06:49.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:49.583" level="INFO">01111-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 14:06:49.582" endtime="20200527 14:06:49.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:49.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:49.583" endtime="20200527 14:06:49.584"></status>
</kw>
<msg timestamp="20200527 14:06:49.584" level="INFO">${result} = 01111-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 14:06:47.846" endtime="20200527 14:06:49.584"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:49.584" endtime="20200527 14:06:49.585"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:49.589" level="INFO">Running command 'ozone sh key put /01111-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:52.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:52.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:49.586" endtime="20200527 14:06:52.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:52.608" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:52.607" endtime="20200527 14:06:52.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:52.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:52.608" endtime="20200527 14:06:52.609"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:49.586" endtime="20200527 14:06:52.609"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:52.612" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:52.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:52.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:52.609" endtime="20200527 14:06:52.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:52.614" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:52.614" endtime="20200527 14:06:52.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:52.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:52.614" endtime="20200527 14:06:52.615"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:52.609" endtime="20200527 14:06:52.615"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:52.617" level="INFO">Running command 'ozone sh key get /01111-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:55.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:55.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:52.615" endtime="20200527 14:06:55.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:55.439" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:55.439" endtime="20200527 14:06:55.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:55.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:55.440" endtime="20200527 14:06:55.440"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:52.615" endtime="20200527 14:06:55.440"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:55.442" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:55.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:06:55.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:55.441" endtime="20200527 14:06:55.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:55.445" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:06:55.445" endtime="20200527 14:06:55.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:06:55.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:06:55.446" endtime="20200527 14:06:55.446"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:55.440" endtime="20200527 14:06:55.446"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:55.448" level="INFO">Running command 'ozone sh key get /01111-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:06:57.016" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:06:57.016" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:06:55.447" endtime="20200527 14:06:57.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:06:57.017" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:06:57.016" endtime="20200527 14:06:57.017"></status>
</kw>
<msg timestamp="20200527 14:06:57.018" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:06:55.446" endtime="20200527 14:06:57.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:06:57.018" endtime="20200527 14:06:57.018"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:06:57.025" level="INFO">Running command 'ozone sh key get --force /01111-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:07:00.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:07:00.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:06:57.019" endtime="20200527 14:07:00.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:07:00.175" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:07:00.175" endtime="20200527 14:07:00.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:07:00.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:07:00.176" endtime="20200527 14:07:00.176"></status>
</kw>
<msg timestamp="20200527 14:07:00.176" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:06:57.018" endtime="20200527 14:07:00.176"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:07:00.176" endtime="20200527 14:07:00.177"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:07:00.181" level="INFO">Running command 'ozone sh key info /01111-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:07:01.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:07:01.971" level="INFO">${output} = {
  "volumeName": "01111-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:06:51.050Z",
  "modificationTime": "2020-05-27T14:06:52.248Z",
  "...</msg>
<status status="PASS" starttime="20200527 14:07:00.177" endtime="20200527 14:07:01.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:07:01.972" level="INFO">{
  "volumeName": "01111-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:06:51.050Z",
  "modificationTime": "2020-05-27T14:06:52.248Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104240802106572930,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 14:07:01.972" endtime="20200527 14:07:01.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:07:01.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:07:01.972" endtime="20200527 14:07:01.973"></status>
</kw>
<msg timestamp="20200527 14:07:01.973" level="INFO">${result} = {
  "volumeName": "01111-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:06:51.050Z",
  "modificationTime": "2020-05-27T14:06:52.248Z",
  "...</msg>
<status status="PASS" starttime="20200527 14:07:00.177" endtime="20200527 14:07:01.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:07:01.973" endtime="20200527 14:07:01.973"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:07:01.976" level="INFO">Running command 'ozone sh key list /01111-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:07:03.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:07:03.733" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 14:07:01.974" endtime="20200527 14:07:03.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:07:03.734" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 14:07:03.733" endtime="20200527 14:07:03.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:07:03.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:07:03.734" endtime="20200527 14:07:03.735"></status>
</kw>
<msg timestamp="20200527 14:07:03.735" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 14:07:01.973" endtime="20200527 14:07:03.735"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:07:03.735" endtime="20200527 14:07:03.735"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:07:03.739" level="INFO">Running command 'ozone sh key rename /01111-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:07:05.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:07:05.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:07:03.736" endtime="20200527 14:07:05.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:07:05.448" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:07:05.447" endtime="20200527 14:07:05.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:07:05.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:07:05.448" endtime="20200527 14:07:05.448"></status>
</kw>
<status status="PASS" starttime="20200527 14:07:03.735" endtime="20200527 14:07:05.448"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:07:05.452" level="INFO">Running command 'ozone sh key list /01111-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:07:07.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:07:07.054" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 14:07:05.449" endtime="20200527 14:07:07.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:07:07.055" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 14:07:07.054" endtime="20200527 14:07:07.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:07:07.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:07:07.055" endtime="20200527 14:07:07.055"></status>
</kw>
<msg timestamp="20200527 14:07:07.055" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 14:07:05.449" endtime="20200527 14:07:07.055"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 14:07:07.056" endtime="20200527 14:07:07.056"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:07:07.058" level="INFO">Running command 'ozone sh key delete /01111-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:07:08.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:07:08.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:07:07.056" endtime="20200527 14:07:08.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:07:08.441" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:07:08.440" endtime="20200527 14:07:08.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:07:08.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:07:08.441" endtime="20200527 14:07:08.441"></status>
</kw>
<status status="PASS" starttime="20200527 14:07:07.056" endtime="20200527 14:07:08.441"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:49.585" endtime="20200527 14:07:08.442"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:49.585" endtime="20200527 14:07:08.442"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:07:08.445" level="INFO">Running command 'ozone sh bucket delete /01111-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:07:09.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:07:09.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:07:08.442" endtime="20200527 14:07:09.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:07:09.879" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:07:09.878" endtime="20200527 14:07:09.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:07:09.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:07:09.879" endtime="20200527 14:07:09.880"></status>
</kw>
<status status="PASS" starttime="20200527 14:07:08.442" endtime="20200527 14:07:09.880"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:07:09.884" level="INFO">Running command 'ozone sh volume delete /01111-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:07:11.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:07:11.403" level="INFO">${output} = Volume 01111-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200527 14:07:09.881" endtime="20200527 14:07:11.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:07:11.404" level="INFO">Volume 01111-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200527 14:07:11.404" endtime="20200527 14:07:11.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:07:11.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:07:11.405" endtime="20200527 14:07:11.405"></status>
</kw>
<status status="PASS" starttime="20200527 14:07:09.880" endtime="20200527 14:07:11.405"></status>
</kw>
<status status="PASS" starttime="20200527 14:06:35.019" endtime="20200527 14:07:11.405"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:06:35.017" endtime="20200527 14:07:11.406" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200527 14:04:42.233" endtime="20200527 14:07:11.407"></status>
</suite>
<status status="PASS" starttime="20200527 14:04:14.839" endtime="20200527 14:07:11.410"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
