<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 14:13:26.282" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:13:26.330" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:13:33.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:13:33.363" level="INFO">${output} = 2020-05-27 14:13:27,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:27,227 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:13:26.326" endtime="20200527 14:13:33.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:13:33.364" level="INFO">2020-05-27 14:13:27,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:27,227 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:13:27,227 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:13:27,916 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-27 14:13:27,917 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-27 14:13:27,917 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-27 14:13:27,917 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-05-27 14:13:27,917 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-27 14:13:27,917 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 14:13:27,917 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-27 14:13:27,919 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 14:13:27,924 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:13:27,966 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-65934, with hadoop as owner.
2020-05-27 14:13:28,142 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-65934/bucket-0-44710, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:13:28,632 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 14:13:28,929 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,197
Average Time spent in bucket creation: 00:00:00,013
Average Time spent in key creation: 00:00:00,051
Average Time spent in key write: 00:00:00,561
Total bytes written: 10240
Total Execution time: 00:00:05,649
***************************************************</msg>
<status status="PASS" starttime="20200527 14:13:33.364" endtime="20200527 14:13:33.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:13:33.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:13:33.365" endtime="20200527 14:13:33.365"></status>
</kw>
<msg timestamp="20200527 14:13:33.365" level="INFO">${result} = 2020-05-27 14:13:27,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:27,227 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:13:26.325" endtime="20200527 14:13:33.365"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:13:33.366" endtime="20200527 14:13:33.366"></status>
</kw>
<status status="PASS" starttime="20200527 14:13:33.366" endtime="20200527 14:13:33.366"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:13:26.325" endtime="20200527 14:13:33.367" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:13:33.370" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:13:37.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:13:37.446" level="INFO">${output} = 2020-05-27 14:13:34,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:34,317 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:13:33.368" endtime="20200527 14:13:37.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:13:37.447" level="INFO">2020-05-27 14:13:34,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:34,317 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:13:34,317 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:13:34,453 [main] INFO freon.BaseFreonGenerator: Executing test with prefix rymw44bgcc
2020-05-27 14:13:34,466 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:13:34,945 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-05-27 14:13:34,974 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:13:35,452 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 14:13:35,479 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:13:36,479 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:13:37,121 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1212.116574, max=1212.116574, mean=1212.116574, stddev=0.0, median=1212.116574, p75=1212.116574, p95=1212.116574, p98=1212.116574, p99=1212.116574, p999=1212.116574, mean_rate=0.47018730160358646, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:13:37,121 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-05-27 14:13:37,121 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:13:37,121 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:13:37.446" endtime="20200527 14:13:37.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:13:37.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:13:37.447" endtime="20200527 14:13:37.448"></status>
</kw>
<msg timestamp="20200527 14:13:37.448" level="INFO">${result} = 2020-05-27 14:13:34,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:34,317 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:13:33.368" endtime="20200527 14:13:37.448"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:13:37.449" endtime="20200527 14:13:37.449"></status>
</kw>
<status status="PASS" starttime="20200527 14:13:37.448" endtime="20200527 14:13:37.449"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:13:33.367" endtime="20200527 14:13:37.449" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:13:37.453" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:13:40.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:13:40.172" level="INFO">${output} = 2020-05-27 14:13:38,226 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:38,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:13:37.451" endtime="20200527 14:13:40.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:13:40.173" level="INFO">2020-05-27 14:13:38,226 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:38,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:13:38,367 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:13:38,509 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bscih9aj1a
2020-05-27 14:13:38,525 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:13:39,530 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:13:40,163 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=49.323855, max=49.323855, mean=49.323855, stddev=0.0, median=49.323855, p75=49.323855, p95=49.323855, p98=49.323855, p99=49.323855, p999=49.323855, mean_rate=0.9012018268049548, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:13:40,164 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 14:13:40,164 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:13:40,164 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:13:40.172" endtime="20200527 14:13:40.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:13:40.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:13:40.173" endtime="20200527 14:13:40.174"></status>
</kw>
<msg timestamp="20200527 14:13:40.174" level="INFO">${result} = 2020-05-27 14:13:38,226 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:38,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:13:37.450" endtime="20200527 14:13:40.174"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:13:40.175" endtime="20200527 14:13:40.175"></status>
</kw>
<status status="PASS" starttime="20200527 14:13:40.174" endtime="20200527 14:13:40.175"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:13:37.450" endtime="20200527 14:13:40.175" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:13:40.179" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:13:42.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:13:42.802" level="INFO">${output} = 2020-05-27 14:13:40,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:41,083 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:13:40.177" endtime="20200527 14:13:42.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:13:42.803" level="INFO">2020-05-27 14:13:40,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:41,083 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:13:41,083 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:13:41,218 [main] INFO freon.BaseFreonGenerator: Executing test with prefix wrxxkydxb8
2020-05-27 14:13:41,237 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:13:42,245 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:13:42,793 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=18.830522, max=18.830522, mean=18.830522, stddev=0.0, median=18.830522, p75=18.830522, p95=18.830522, p98=18.830522, p99=18.830522, p999=18.830522, mean_rate=0.9008428314357885, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:13:42,794 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 14:13:42,794 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:13:42,794 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:13:42.802" endtime="20200527 14:13:42.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:13:42.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:13:42.803" endtime="20200527 14:13:42.804"></status>
</kw>
<msg timestamp="20200527 14:13:42.804" level="INFO">${result} = 2020-05-27 14:13:40,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:13:41,083 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:13:40.177" endtime="20200527 14:13:42.804"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:13:42.804" endtime="20200527 14:13:42.805"></status>
</kw>
<status status="PASS" starttime="20200527 14:13:42.804" endtime="20200527 14:13:42.805"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:13:40.176" endtime="20200527 14:13:42.805" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200527 14:13:26.305" endtime="20200527 14:13:42.806"></status>
</suite>
<status status="PASS" starttime="20200527 14:13:26.283" endtime="20200527 14:13:42.808"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
