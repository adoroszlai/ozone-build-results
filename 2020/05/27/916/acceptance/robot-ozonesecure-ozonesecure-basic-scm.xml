<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 14:21:51.665" rpa="false">
<suite id="s1" name="ozonesecure-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:21:51.707" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:21:51.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:21:51.709" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:21:51.704" endtime="20200527 14:21:51.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:21:51.710" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:21:51.709" endtime="20200527 14:21:51.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:21:51.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:21:51.710" endtime="20200527 14:21:51.710"></status>
</kw>
<msg timestamp="20200527 14:21:51.711" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:21:51.704" endtime="20200527 14:21:51.711"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:21:51.713" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:21:51.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:21:51.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:21:51.711" endtime="20200527 14:21:51.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:21:51.728" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:21:51.727" endtime="20200527 14:21:51.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:21:51.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:21:51.728" endtime="20200527 14:21:51.728"></status>
</kw>
<status status="PASS" starttime="20200527 14:21:51.711" endtime="20200527 14:21:51.729"></status>
</kw>
<status status="PASS" starttime="20200527 14:21:51.711" endtime="20200527 14:21:51.729"></status>
</kw>
<status status="PASS" starttime="20200527 14:21:51.703" endtime="20200527 14:21:51.729"></status>
</kw>
<status status="PASS" starttime="20200527 14:21:51.703" endtime="20200527 14:21:51.729"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:21:51.731" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:21:51.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:21:51.870" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20200527 14:21:51.729" endtime="20200527 14:21:51.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:21:51.871" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:21:51 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCd6vw2scy6n1svz8OyAVAwbbzwbg5s3PPqGxZXbtYD255FPuiOq1izMamZdhQjaHzaFG2eV16AOVgM03rUNlOciRZ
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590625311862&amp;s=hA75L4SbRkZ4rwhjQQr64aCaDAtDknmd7iXchji0kF0="; Path=/; HttpOnly
Last-Modified: Wed, 27 May 2020 13:39:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200527 14:21:51.870" endtime="20200527 14:21:51.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:21:51.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:21:51.871" endtime="20200527 14:21:51.872"></status>
</kw>
<msg timestamp="20200527 14:21:51.872" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20200527 14:21:51.729" endtime="20200527 14:21:51.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200527 14:21:51.872" endtime="20200527 14:21:51.872"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:21:51.702" endtime="20200527 14:21:51.873" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:21:51.882" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:21:51.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:21:51.885" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:21:51.876" endtime="20200527 14:21:51.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:21:51.885" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:21:51.885" endtime="20200527 14:21:51.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:21:51.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:21:51.886" endtime="20200527 14:21:51.886"></status>
</kw>
<msg timestamp="20200527 14:21:51.886" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:21:51.875" endtime="20200527 14:21:51.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:21:51.887" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:21:51.886" endtime="20200527 14:21:51.888"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:21:51.890" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:21:51.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:21:51.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:21:51.889" endtime="20200527 14:21:51.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:21:51.908" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:21:51.907" endtime="20200527 14:21:51.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:21:51.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:21:51.908" endtime="20200527 14:21:51.908"></status>
</kw>
<status status="PASS" starttime="20200527 14:21:51.888" endtime="20200527 14:21:51.909"></status>
</kw>
<status status="PASS" starttime="20200527 14:21:51.888" endtime="20200527 14:21:51.909"></status>
</kw>
<status status="PASS" starttime="20200527 14:21:51.875" endtime="20200527 14:21:51.909"></status>
</kw>
<status status="PASS" starttime="20200527 14:21:51.874" endtime="20200527 14:21:51.909"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:21:51.911" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:26:51.875" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20200527 14:21:51.909" endtime="20200527 14:26:51.875"></status>
</kw>
<status status="FAIL" starttime="20200527 14:21:51.909" endtime="20200527 14:26:51.875"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" starttime="20200527 14:21:51.873" endtime="20200527 14:26:51.876" critical="yes">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20200527 14:21:51.684" endtime="20200527 14:26:51.876"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200527 14:26:51.884" level="INFO">${random} = 68143</msg>
<status status="PASS" starttime="20200527 14:26:51.884" endtime="20200527 14:26:51.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200527 14:26:51.884" level="INFO">${prefix} = 68143</msg>
<status status="PASS" starttime="20200527 14:26:51.884" endtime="20200527 14:26:51.884"></status>
</kw>
<status status="PASS" starttime="20200527 14:26:51.883" endtime="20200527 14:26:51.885"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:26:51.888" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:26:51.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:26:51.890" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:26:51.886" endtime="20200527 14:26:51.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:26:51.891" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:26:51.891" endtime="20200527 14:26:51.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:26:51.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:26:51.892" endtime="20200527 14:26:51.892"></status>
</kw>
<msg timestamp="20200527 14:26:51.892" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:26:51.886" endtime="20200527 14:26:51.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:26:51.893" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:26:51.892" endtime="20200527 14:26:51.893"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:26:51.896" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:26:51.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:26:51.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:26:51.894" endtime="20200527 14:26:51.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:26:51.913" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:26:51.913" endtime="20200527 14:26:51.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:26:51.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:26:51.914" endtime="20200527 14:26:51.914"></status>
</kw>
<status status="PASS" starttime="20200527 14:26:51.894" endtime="20200527 14:26:51.914"></status>
</kw>
<status status="PASS" starttime="20200527 14:26:51.894" endtime="20200527 14:26:51.914"></status>
</kw>
<status status="PASS" starttime="20200527 14:26:51.885" endtime="20200527 14:26:51.914"></status>
</kw>
<status status="PASS" starttime="20200527 14:26:51.885" endtime="20200527 14:26:51.914"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:26:51.918" level="INFO">Running command 'ozone sh volume info o3://om:9862/68143-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:26:53.705" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:26:53.705" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:26:51.915" endtime="20200527 14:26:53.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:26:53.706" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 68143-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 14:26:53.705" endtime="20200527 14:26:53.706"></status>
</kw>
<msg timestamp="20200527 14:26:53.706" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:26:51.915" endtime="20200527 14:26:53.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 14:26:53.706" endtime="20200527 14:26:53.707"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:26:53.710" level="INFO">Running command 'ozone sh volume create o3://om:9862/68143-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:26:55.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:26:55.458" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:26:53.708" endtime="20200527 14:26:55.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:26:55.459" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200527 14:26:55.458" endtime="20200527 14:26:55.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:26:55.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:26:55.459" endtime="20200527 14:26:55.459"></status>
</kw>
<msg timestamp="20200527 14:26:55.460" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:26:53.707" endtime="20200527 14:26:55.460"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 14:26:55.460" endtime="20200527 14:26:55.460"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:26:55.463" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="68143-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:26:57.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:26:57.618" level="INFO">${output} = {
  "metadata": {},
  "name": "68143-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:26:55.418Z",
  "acls": [
    {
      "ty...</msg>
<status status="PASS" starttime="20200527 14:26:55.461" endtime="20200527 14:26:57.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:26:57.619" level="INFO">{
  "metadata": {},
  "name": "68143-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:26:55.418Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:26:57.618" endtime="20200527 14:26:57.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:26:57.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:26:57.619" endtime="20200527 14:26:57.619"></status>
</kw>
<msg timestamp="20200527 14:26:57.620" level="INFO">${result} = {
  "metadata": {},
  "name": "68143-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:26:55.418Z",
  "acls": [
    {
      "ty...</msg>
<status status="PASS" starttime="20200527 14:26:55.460" endtime="20200527 14:26:57.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:26:57.620" endtime="20200527 14:26:57.620"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:26:57.623" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="68143-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:26:59.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:26:59.555" level="INFO">${output} = {
  "metadata": {},
  "name": "68143-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:26:55.418Z",
  "acls": [
    {
      "ty...</msg>
<status status="PASS" starttime="20200527 14:26:57.621" endtime="20200527 14:26:59.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:26:59.556" level="INFO">{
  "metadata": {},
  "name": "68143-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:26:55.418Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:26:59.556" endtime="20200527 14:26:59.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:26:59.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:26:59.557" endtime="20200527 14:26:59.557"></status>
</kw>
<msg timestamp="20200527 14:26:59.557" level="INFO">${result} = {
  "metadata": {},
  "name": "68143-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:26:55.418Z",
  "acls": [
    {
      "ty...</msg>
<status status="PASS" starttime="20200527 14:26:57.620" endtime="20200527 14:26:59.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:26:59.557" endtime="20200527 14:26:59.558"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:26:59.561" level="INFO">Running command 'ozone sh volume update o3://om:9862/68143-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:27:01.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:27:01.703" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:26:59.558" endtime="20200527 14:27:01.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:27:01.705" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "68143-rpcwoport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-05-27T14:26:55.418Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 14:27:01.704" endtime="20200527 14:27:01.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:27:01.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:27:01.705" endtime="20200527 14:27:01.705"></status>
</kw>
<status status="PASS" starttime="20200527 14:26:59.558" endtime="20200527 14:27:01.705"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:27:01.709" level="INFO">Running command 'ozone sh volume info o3://om:9862/68143-rpcwoport | jq -r '. | select(.name=="68143-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:27:03.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:27:03.650" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:27:01.706" endtime="20200527 14:27:03.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:27:03.651" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 14:27:03.651" endtime="20200527 14:27:03.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:27:03.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:27:03.652" endtime="20200527 14:27:03.652"></status>
</kw>
<msg timestamp="20200527 14:27:03.652" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:27:01.706" endtime="20200527 14:27:03.652"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 14:27:03.653" endtime="20200527 14:27:03.653"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:27:03.656" level="INFO">Running command 'ozone sh bucket create o3://om:9862/68143-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:27:05.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:27:05.435" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:27:03.654" endtime="20200527 14:27:05.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:27:05.436" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200527 14:27:05.435" endtime="20200527 14:27:05.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:27:05.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:27:05.436" endtime="20200527 14:27:05.436"></status>
</kw>
<status status="PASS" starttime="20200527 14:27:03.653" endtime="20200527 14:27:05.436"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:27:05.439" level="INFO">Running command 'ozone sh bucket info o3://om:9862/68143-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:27:07.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:27:07.515" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 14:27:05.437" endtime="20200527 14:27:07.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:27:07.516" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 14:27:07.515" endtime="20200527 14:27:07.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:27:07.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:27:07.517" endtime="20200527 14:27:07.518"></status>
</kw>
<msg timestamp="20200527 14:27:07.518" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 14:27:05.436" endtime="20200527 14:27:07.518"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:27:07.518" endtime="20200527 14:27:07.518"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:27:07.522" level="INFO">Running command 'ozone sh bucket list o3://om:9862/68143-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:27:09.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:27:09.648" level="INFO">${output} = 68143-rpcwoport</msg>
<status status="PASS" starttime="20200527 14:27:07.519" endtime="20200527 14:27:09.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:27:09.649" level="INFO">68143-rpcwoport</msg>
<status status="PASS" starttime="20200527 14:27:09.648" endtime="20200527 14:27:09.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:27:09.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:27:09.649" endtime="20200527 14:27:09.649"></status>
</kw>
<msg timestamp="20200527 14:27:09.650" level="INFO">${result} = 68143-rpcwoport</msg>
<status status="PASS" starttime="20200527 14:27:07.519" endtime="20200527 14:27:09.650"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 14:27:09.650" endtime="20200527 14:27:09.650"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:27:09.654" level="INFO">Running command 'ozone sh key put o3://om:9862/68143-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:51.886" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20200527 14:27:09.651" endtime="20200527 14:28:51.886"></status>
</kw>
<status status="FAIL" starttime="20200527 14:27:09.651" endtime="20200527 14:28:51.886"></status>
</kw>
<status status="FAIL" starttime="20200527 14:27:09.650" endtime="20200527 14:28:51.886"></status>
</kw>
<status status="FAIL" starttime="20200527 14:27:09.650" endtime="20200527 14:28:51.887"></status>
</kw>
<status status="FAIL" starttime="20200527 14:26:51.914" endtime="20200527 14:28:51.887"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" starttime="20200527 14:26:51.885" endtime="20200527 14:28:51.887" critical="yes">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:51.892" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:51.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:51.894" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:28:51.890" endtime="20200527 14:28:51.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:51.895" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:28:51.894" endtime="20200527 14:28:51.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:51.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:51.895" endtime="20200527 14:28:51.895"></status>
</kw>
<msg timestamp="20200527 14:28:51.896" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:28:51.889" endtime="20200527 14:28:51.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:28:51.896" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:28:51.896" endtime="20200527 14:28:51.896"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:51.899" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:51.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:51.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:28:51.897" endtime="20200527 14:28:51.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:51.913" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:28:51.913" endtime="20200527 14:28:51.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:51.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:51.914" endtime="20200527 14:28:51.914"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:51.897" endtime="20200527 14:28:51.914"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:51.896" endtime="20200527 14:28:51.914"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:51.889" endtime="20200527 14:28:51.914"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:51.888" endtime="20200527 14:28:51.914"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:51.917" level="INFO">Running command 'ozone sh volume create o3://om:9862/68143-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:53.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:53.810" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:28:51.915" endtime="20200527 14:28:53.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:53.811" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200527 14:28:53.810" endtime="20200527 14:28:53.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:53.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:53.811" endtime="20200527 14:28:53.812"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:51.915" endtime="20200527 14:28:53.812"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:53.815" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/68143-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:55.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:55.820" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:28:53.812" endtime="20200527 14:28:55.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:55.821" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:28:55.820" endtime="20200527 14:28:55.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:55.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:55.821" endtime="20200527 14:28:55.821"></status>
</kw>
<msg timestamp="20200527 14:28:55.821" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:28:53.812" endtime="20200527 14:28:55.821"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:55.822" endtime="20200527 14:28:55.822"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:55.825" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/68143-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:57.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:57.825" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:28:55.823" endtime="20200527 14:28:57.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:57.827" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 14:28:57.826" endtime="20200527 14:28:57.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:57.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:57.827" endtime="20200527 14:28:57.828"></status>
</kw>
<msg timestamp="20200527 14:28:57.828" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:28:55.823" endtime="20200527 14:28:57.828"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:57.832" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/68143-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:59.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:59.825" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:28:57.828" endtime="20200527 14:28:59.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:59.826" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:28:59.825" endtime="20200527 14:28:59.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:59.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:59.826" endtime="20200527 14:28:59.826"></status>
</kw>
<msg timestamp="20200527 14:28:59.827" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:28:57.828" endtime="20200527 14:28:59.827"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:59.827" endtime="20200527 14:28:59.828"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:59.831" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/68143-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:01.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:01.657" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:28:59.829" endtime="20200527 14:29:01.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:01.658" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 14:29:01.658" endtime="20200527 14:29:01.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:01.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:01.659" endtime="20200527 14:29:01.659"></status>
</kw>
<msg timestamp="20200527 14:29:01.659" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:28:59.828" endtime="20200527 14:29:01.659"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:01.662" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/68143-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:03.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:03.531" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:01.660" endtime="20200527 14:29:03.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:03.532" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:03.531" endtime="20200527 14:29:03.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:03.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:03.532" endtime="20200527 14:29:03.533"></status>
</kw>
<msg timestamp="20200527 14:29:03.533" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:01.659" endtime="20200527 14:29:03.533"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:03.533" endtime="20200527 14:29:03.534"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:03.538" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/68143-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:05.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:05.252" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:03.535" endtime="20200527 14:29:05.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:05.253" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:29:05.252" endtime="20200527 14:29:05.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:05.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:05.253" endtime="20200527 14:29:05.253"></status>
</kw>
<msg timestamp="20200527 14:29:05.254" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:03.534" endtime="20200527 14:29:05.254"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:05.256" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/68143-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:07.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:07.253" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:05.254" endtime="20200527 14:29:07.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:07.254" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:07.254" endtime="20200527 14:29:07.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:07.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:07.254" endtime="20200527 14:29:07.255"></status>
</kw>
<msg timestamp="20200527 14:29:07.255" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:05.254" endtime="20200527 14:29:07.255"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:07.255" endtime="20200527 14:29:07.255"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:07.256" endtime="20200527 14:29:07.256"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:51.914" endtime="20200527 14:29:07.256"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:28:51.888" endtime="20200527 14:29:07.257" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:07.262" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:07.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:07.264" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:29:07.260" endtime="20200527 14:29:07.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:07.265" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:29:07.265" endtime="20200527 14:29:07.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:07.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:07.265" endtime="20200527 14:29:07.266"></status>
</kw>
<msg timestamp="20200527 14:29:07.266" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:29:07.259" endtime="20200527 14:29:07.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:29:07.267" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:29:07.266" endtime="20200527 14:29:07.267"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:07.270" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:07.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:07.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:29:07.268" endtime="20200527 14:29:07.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:07.287" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:29:07.287" endtime="20200527 14:29:07.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:07.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:07.288" endtime="20200527 14:29:07.288"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:07.267" endtime="20200527 14:29:07.288"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:07.267" endtime="20200527 14:29:07.288"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:07.259" endtime="20200527 14:29:07.288"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:07.258" endtime="20200527 14:29:07.288"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:07.292" level="INFO">Running command 'ozone sh bucket create o3://om:9862/68143-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:09.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:09.079" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:07.289" endtime="20200527 14:29:09.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:09.080" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200527 14:29:09.079" endtime="20200527 14:29:09.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:09.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:09.080" endtime="20200527 14:29:09.081"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:07.289" endtime="20200527 14:29:09.081"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:09.084" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/68143-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:10.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:10.978" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:09.081" endtime="20200527 14:29:10.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:10.979" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:10.979" endtime="20200527 14:29:10.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:10.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:10.980" endtime="20200527 14:29:10.980"></status>
</kw>
<msg timestamp="20200527 14:29:10.980" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:09.081" endtime="20200527 14:29:10.980"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:10.981" endtime="20200527 14:29:10.981"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:10.983" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/68143-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:12.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:12.925" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:10.982" endtime="20200527 14:29:12.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:12.926" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 14:29:12.926" endtime="20200527 14:29:12.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:12.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:12.926" endtime="20200527 14:29:12.927"></status>
</kw>
<msg timestamp="20200527 14:29:12.927" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:10.981" endtime="20200527 14:29:12.927"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:12.930" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/68143-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:15.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:15.032" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:12.928" endtime="20200527 14:29:15.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:15.033" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:15.033" endtime="20200527 14:29:15.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:15.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:15.033" endtime="20200527 14:29:15.034"></status>
</kw>
<msg timestamp="20200527 14:29:15.034" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:12.927" endtime="20200527 14:29:15.034"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:15.034" endtime="20200527 14:29:15.035"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:15.038" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/68143-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:16.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:16.844" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:15.035" endtime="20200527 14:29:16.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:16.845" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:29:16.845" endtime="20200527 14:29:16.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:16.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:16.846" endtime="20200527 14:29:16.846"></status>
</kw>
<msg timestamp="20200527 14:29:16.847" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:15.035" endtime="20200527 14:29:16.847"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:16.851" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/68143-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:18.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:18.833" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:16.847" endtime="20200527 14:29:18.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:18.834" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:18.833" endtime="20200527 14:29:18.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:18.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:18.834" endtime="20200527 14:29:18.834"></status>
</kw>
<msg timestamp="20200527 14:29:18.835" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:16.847" endtime="20200527 14:29:18.835"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:18.835" endtime="20200527 14:29:18.836"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:18.840" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/68143-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:20.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:20.549" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:18.837" endtime="20200527 14:29:20.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:20.550" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:29:20.550" endtime="20200527 14:29:20.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:20.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:20.551" endtime="20200527 14:29:20.551"></status>
</kw>
<msg timestamp="20200527 14:29:20.551" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:18.836" endtime="20200527 14:29:20.551"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:20.555" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/68143-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:22.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:22.574" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:20.552" endtime="20200527 14:29:22.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:22.575" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:22.574" endtime="20200527 14:29:22.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:22.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:22.575" endtime="20200527 14:29:22.575"></status>
</kw>
<msg timestamp="20200527 14:29:22.576" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:29:20.552" endtime="20200527 14:29:22.576"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:22.576" endtime="20200527 14:29:22.576"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:22.576" endtime="20200527 14:29:22.577"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:07.289" endtime="20200527 14:29:22.577"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:29:07.257" endtime="20200527 14:29:22.577" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:22.582" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:22.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:22.584" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:29:22.579" endtime="20200527 14:29:22.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:22.585" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:29:22.584" endtime="20200527 14:29:22.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:22.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:22.585" endtime="20200527 14:29:22.585"></status>
</kw>
<msg timestamp="20200527 14:29:22.585" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:29:22.578" endtime="20200527 14:29:22.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:29:22.586" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:29:22.586" endtime="20200527 14:29:22.586"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:22.589" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:22.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:22.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:29:22.587" endtime="20200527 14:29:22.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:22.604" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:29:22.604" endtime="20200527 14:29:22.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:22.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:22.605" endtime="20200527 14:29:22.605"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:22.586" endtime="20200527 14:29:22.605"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:22.586" endtime="20200527 14:29:22.605"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:22.578" endtime="20200527 14:29:22.605"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:22.578" endtime="20200527 14:29:22.605"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:22.608" level="INFO">Running command 'ozone sh key put o3://om:9862/68143-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:22.578" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20200527 14:29:22.606" endtime="20200527 14:31:22.579"></status>
</kw>
<status status="FAIL" starttime="20200527 14:29:22.606" endtime="20200527 14:31:22.579"></status>
</kw>
<status status="FAIL" starttime="20200527 14:29:22.605" endtime="20200527 14:31:22.579"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" starttime="20200527 14:29:22.577" endtime="20200527 14:31:22.580" critical="yes">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:22.586" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:22.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:22.588" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:31:22.583" endtime="20200527 14:31:22.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:22.589" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:31:22.589" endtime="20200527 14:31:22.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:22.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:22.589" endtime="20200527 14:31:22.590"></status>
</kw>
<msg timestamp="20200527 14:31:22.590" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:31:22.583" endtime="20200527 14:31:22.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:31:22.590" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:31:22.590" endtime="20200527 14:31:22.591"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:22.593" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:22.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:22.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:31:22.592" endtime="20200527 14:31:22.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:22.611" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:31:22.610" endtime="20200527 14:31:22.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:22.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:22.611" endtime="20200527 14:31:22.611"></status>
</kw>
<status status="PASS" starttime="20200527 14:31:22.591" endtime="20200527 14:31:22.612"></status>
</kw>
<status status="PASS" starttime="20200527 14:31:22.591" endtime="20200527 14:31:22.612"></status>
</kw>
<status status="PASS" starttime="20200527 14:31:22.582" endtime="20200527 14:31:22.612"></status>
</kw>
<status status="PASS" starttime="20200527 14:31:22.582" endtime="20200527 14:31:22.612"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:22.614" level="INFO">Running command 'ozone sh volume info o3:///68143-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:24.468" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:31:24.468" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:31:22.613" endtime="20200527 14:31:24.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:24.469" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 68143-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 14:31:24.468" endtime="20200527 14:31:24.469"></status>
</kw>
<msg timestamp="20200527 14:31:24.469" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:31:22.613" endtime="20200527 14:31:24.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:24.469" endtime="20200527 14:31:24.470"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:24.472" level="INFO">Running command 'ozone sh volume create o3:///68143-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:26.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:26.339" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:31:24.470" endtime="20200527 14:31:26.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:26.341" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200527 14:31:26.340" endtime="20200527 14:31:26.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:26.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:26.341" endtime="20200527 14:31:26.341"></status>
</kw>
<msg timestamp="20200527 14:31:26.342" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:31:24.470" endtime="20200527 14:31:26.342"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:26.342" endtime="20200527 14:31:26.342"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:26.346" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="68143-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:28.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:28.448" level="INFO">${output} = {
  "metadata": {},
  "name": "68143-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:31:26.190Z",
  "acls": [
    {
      "typ...</msg>
<status status="PASS" starttime="20200527 14:31:26.343" endtime="20200527 14:31:28.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:28.449" level="INFO">{
  "metadata": {},
  "name": "68143-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:31:26.190Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:31:28.448" endtime="20200527 14:31:28.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:28.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:28.449" endtime="20200527 14:31:28.449"></status>
</kw>
<msg timestamp="20200527 14:31:28.450" level="INFO">${result} = {
  "metadata": {},
  "name": "68143-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:31:26.190Z",
  "acls": [
    {
      "typ...</msg>
<status status="PASS" starttime="20200527 14:31:26.342" endtime="20200527 14:31:28.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:28.450" endtime="20200527 14:31:28.450"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:28.454" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="68143-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:30.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:30.392" level="INFO">${output} = {
  "metadata": {},
  "name": "68143-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:31:26.190Z",
  "acls": [
    {
      "typ...</msg>
<status status="PASS" starttime="20200527 14:31:28.451" endtime="20200527 14:31:30.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:30.393" level="INFO">{
  "metadata": {},
  "name": "68143-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:31:26.190Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:31:30.392" endtime="20200527 14:31:30.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:30.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:30.393" endtime="20200527 14:31:30.393"></status>
</kw>
<msg timestamp="20200527 14:31:30.393" level="INFO">${result} = {
  "metadata": {},
  "name": "68143-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:31:26.190Z",
  "acls": [
    {
      "typ...</msg>
<status status="PASS" starttime="20200527 14:31:28.450" endtime="20200527 14:31:30.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:30.393" endtime="20200527 14:31:30.394"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:30.397" level="INFO">Running command 'ozone sh volume update o3:///68143-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:32.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:32.357" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:31:30.394" endtime="20200527 14:31:32.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:32.358" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "68143-rpcwport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-05-27T14:31:26.190Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 14:31:32.357" endtime="20200527 14:31:32.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:32.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:32.358" endtime="20200527 14:31:32.359"></status>
</kw>
<status status="PASS" starttime="20200527 14:31:30.394" endtime="20200527 14:31:32.359"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:32.363" level="INFO">Running command 'ozone sh volume info o3:///68143-rpcwport | jq -r '. | select(.name=="68143-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:34.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:34.419" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:31:32.360" endtime="20200527 14:31:34.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:34.420" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 14:31:34.420" endtime="20200527 14:31:34.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:34.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:34.421" endtime="20200527 14:31:34.421"></status>
</kw>
<msg timestamp="20200527 14:31:34.421" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:31:32.359" endtime="20200527 14:31:34.421"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:34.421" endtime="20200527 14:31:34.422"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:34.424" level="INFO">Running command 'ozone sh bucket create o3:///68143-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:36.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:36.348" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:31:34.422" endtime="20200527 14:31:36.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:36.349" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200527 14:31:36.349" endtime="20200527 14:31:36.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:36.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:36.350" endtime="20200527 14:31:36.350"></status>
</kw>
<status status="PASS" starttime="20200527 14:31:34.422" endtime="20200527 14:31:36.350"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:36.354" level="INFO">Running command 'ozone sh bucket info o3:///68143-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:38.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:38.347" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 14:31:36.351" endtime="20200527 14:31:38.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:38.348" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 14:31:38.348" endtime="20200527 14:31:38.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:38.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:38.348" endtime="20200527 14:31:38.349"></status>
</kw>
<msg timestamp="20200527 14:31:38.349" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 14:31:36.350" endtime="20200527 14:31:38.349"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:38.349" endtime="20200527 14:31:38.350"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:38.354" level="INFO">Running command 'ozone sh bucket list o3:///68143-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:40.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:40.294" level="INFO">${output} = 68143-rpcwport</msg>
<status status="PASS" starttime="20200527 14:31:38.351" endtime="20200527 14:31:40.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:40.295" level="INFO">68143-rpcwport</msg>
<status status="PASS" starttime="20200527 14:31:40.295" endtime="20200527 14:31:40.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:40.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:40.296" endtime="20200527 14:31:40.296"></status>
</kw>
<msg timestamp="20200527 14:31:40.296" level="INFO">${result} = 68143-rpcwport</msg>
<status status="PASS" starttime="20200527 14:31:38.350" endtime="20200527 14:31:40.296"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:40.296" endtime="20200527 14:31:40.297"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:40.300" level="INFO">Running command 'ozone sh key put o3:///68143-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:22.581" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20200527 14:31:40.298" endtime="20200527 14:33:22.582"></status>
</kw>
<status status="FAIL" starttime="20200527 14:31:40.298" endtime="20200527 14:33:22.582"></status>
</kw>
<status status="FAIL" starttime="20200527 14:31:40.297" endtime="20200527 14:33:22.582"></status>
</kw>
<status status="FAIL" starttime="20200527 14:31:40.297" endtime="20200527 14:33:22.582"></status>
</kw>
<status status="FAIL" starttime="20200527 14:31:22.612" endtime="20200527 14:33:22.582"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" starttime="20200527 14:31:22.581" endtime="20200527 14:33:22.582" critical="yes">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:22.588" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:22.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:33:22.590" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:33:22.585" endtime="20200527 14:33:22.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:33:22.591" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:33:22.590" endtime="20200527 14:33:22.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:33:22.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:33:22.591" endtime="20200527 14:33:22.592"></status>
</kw>
<msg timestamp="20200527 14:33:22.592" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:33:22.585" endtime="20200527 14:33:22.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:33:22.592" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:33:22.592" endtime="20200527 14:33:22.592"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:22.596" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:22.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:33:22.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:33:22.594" endtime="20200527 14:33:22.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:33:22.617" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:33:22.617" endtime="20200527 14:33:22.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:33:22.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:33:22.617" endtime="20200527 14:33:22.618"></status>
</kw>
<status status="PASS" starttime="20200527 14:33:22.594" endtime="20200527 14:33:22.618"></status>
</kw>
<status status="PASS" starttime="20200527 14:33:22.592" endtime="20200527 14:33:22.618"></status>
</kw>
<status status="PASS" starttime="20200527 14:33:22.585" endtime="20200527 14:33:22.618"></status>
</kw>
<status status="PASS" starttime="20200527 14:33:22.584" endtime="20200527 14:33:22.618"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:22.621" level="INFO">Running command 'ozone sh volume info /68143-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:24.320" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:33:24.320" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:33:22.619" endtime="20200527 14:33:24.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:33:24.321" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 68143-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 14:33:24.321" endtime="20200527 14:33:24.322"></status>
</kw>
<msg timestamp="20200527 14:33:24.322" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:33:22.619" endtime="20200527 14:33:24.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 14:33:24.322" endtime="20200527 14:33:24.322"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:24.326" level="INFO">Running command 'ozone sh volume create /68143-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:26.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:33:26.227" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:33:24.323" endtime="20200527 14:33:26.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:33:26.228" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200527 14:33:26.228" endtime="20200527 14:33:26.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:33:26.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:33:26.229" endtime="20200527 14:33:26.229"></status>
</kw>
<msg timestamp="20200527 14:33:26.229" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:33:24.322" endtime="20200527 14:33:26.229"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 14:33:26.229" endtime="20200527 14:33:26.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:26.232" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="68143-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:28.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:33:28.272" level="INFO">${output} = {
  "metadata": {},
  "name": "68143-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:33:26.077Z",
  "acls": [
    {
      "...</msg>
<status status="PASS" starttime="20200527 14:33:26.230" endtime="20200527 14:33:28.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:33:28.273" level="INFO">{
  "metadata": {},
  "name": "68143-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:33:26.077Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:33:28.272" endtime="20200527 14:33:28.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:33:28.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:33:28.273" endtime="20200527 14:33:28.273"></status>
</kw>
<msg timestamp="20200527 14:33:28.273" level="INFO">${result} = {
  "metadata": {},
  "name": "68143-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:33:26.077Z",
  "acls": [
    {
      "...</msg>
<status status="PASS" starttime="20200527 14:33:26.230" endtime="20200527 14:33:28.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:33:28.273" endtime="20200527 14:33:28.274"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:28.277" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="68143-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:30.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:33:30.128" level="INFO">${output} = {
  "metadata": {},
  "name": "68143-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:33:26.077Z",
  "acls": [
    {
      "...</msg>
<status status="PASS" starttime="20200527 14:33:28.274" endtime="20200527 14:33:30.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:33:30.128" level="INFO">{
  "metadata": {},
  "name": "68143-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:33:26.077Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:33:30.128" endtime="20200527 14:33:30.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:33:30.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:33:30.129" endtime="20200527 14:33:30.129"></status>
</kw>
<msg timestamp="20200527 14:33:30.129" level="INFO">${result} = {
  "metadata": {},
  "name": "68143-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-05-27T14:33:26.077Z",
  "acls": [
    {
      "...</msg>
<status status="PASS" starttime="20200527 14:33:28.274" endtime="20200527 14:33:30.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:33:30.129" endtime="20200527 14:33:30.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:30.132" level="INFO">Running command 'ozone sh volume update /68143-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:32.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:33:32.064" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:33:30.130" endtime="20200527 14:33:32.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:33:32.065" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "68143-rpcwoscheme",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-05-27T14:33:26.077Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 14:33:32.065" endtime="20200527 14:33:32.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:33:32.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:33:32.065" endtime="20200527 14:33:32.066"></status>
</kw>
<status status="PASS" starttime="20200527 14:33:30.130" endtime="20200527 14:33:32.066"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:32.073" level="INFO">Running command 'ozone sh volume info /68143-rpcwoscheme | jq -r '. | select(.name=="68143-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:34.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:33:34.095" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:33:32.066" endtime="20200527 14:33:34.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:33:34.096" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 14:33:34.095" endtime="20200527 14:33:34.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:33:34.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:33:34.096" endtime="20200527 14:33:34.096"></status>
</kw>
<msg timestamp="20200527 14:33:34.097" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:33:32.066" endtime="20200527 14:33:34.097"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 14:33:34.097" endtime="20200527 14:33:34.097"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:34.100" level="INFO">Running command 'ozone sh bucket create /68143-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:36.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:33:36.075" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200527 14:33:34.098" endtime="20200527 14:33:36.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:33:36.076" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200527 14:33:36.076" endtime="20200527 14:33:36.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:33:36.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:33:36.077" endtime="20200527 14:33:36.077"></status>
</kw>
<status status="PASS" starttime="20200527 14:33:34.097" endtime="20200527 14:33:36.077"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:36.080" level="INFO">Running command 'ozone sh bucket info /68143-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:38.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:33:38.184" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 14:33:36.078" endtime="20200527 14:33:38.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:33:38.185" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 14:33:38.184" endtime="20200527 14:33:38.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:33:38.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:33:38.185" endtime="20200527 14:33:38.185"></status>
</kw>
<msg timestamp="20200527 14:33:38.185" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 14:33:36.077" endtime="20200527 14:33:38.185"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:33:38.186" endtime="20200527 14:33:38.186"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:38.190" level="INFO">Running command 'ozone sh bucket list /68143-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:33:40.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:33:40.188" level="INFO">${output} = 68143-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 14:33:38.186" endtime="20200527 14:33:40.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:33:40.189" level="INFO">68143-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 14:33:40.188" endtime="20200527 14:33:40.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:33:40.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:33:40.189" endtime="20200527 14:33:40.189"></status>
</kw>
<msg timestamp="20200527 14:33:40.190" level="INFO">${result} = 68143-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 14:33:38.186" endtime="20200527 14:33:40.190"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 14:33:40.190" endtime="20200527 14:33:40.190"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:33:40.195" level="INFO">Running command 'ozone sh key put /68143-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:35:22.585" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20200527 14:33:40.192" endtime="20200527 14:35:22.585"></status>
</kw>
<status status="FAIL" starttime="20200527 14:33:40.191" endtime="20200527 14:35:22.585"></status>
</kw>
<status status="FAIL" starttime="20200527 14:33:40.191" endtime="20200527 14:35:22.585"></status>
</kw>
<status status="FAIL" starttime="20200527 14:33:40.190" endtime="20200527 14:35:22.585"></status>
</kw>
<status status="FAIL" starttime="20200527 14:33:22.618" endtime="20200527 14:35:22.586"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" starttime="20200527 14:33:22.583" endtime="20200527 14:35:22.586" critical="yes">Test timeout 2 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20200527 14:26:51.878" endtime="20200527 14:35:22.588"></status>
</suite>
<status status="FAIL" starttime="20200527 14:21:51.665" endtime="20200527 14:35:22.591"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="5">Critical Tests</stat>
<stat pass="3" fail="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="5" id="s1" name="ozonesecure-basic">ozonesecure-basic</stat>
<stat pass="1" fail="1" id="s1-s1" name="Basic">ozonesecure-basic.Basic</stat>
<stat pass="2" fail="4" id="s1-s2" name="Ozone-Shell">ozonesecure-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
