<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 13:59:57.273" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 13:59:57.315" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:00:04.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:00:04.519" level="INFO">${output} = 2020-05-27 13:59:58,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 13:59:58,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 13:59:57.311" endtime="20200527 14:00:04.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:00:04.520" level="INFO">2020-05-27 13:59:58,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 13:59:58,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 13:59:58,294 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 13:59:59,038 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-27 13:59:59,040 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-27 13:59:59,040 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-27 13:59:59,040 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-05-27 13:59:59,040 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-27 13:59:59,040 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 13:59:59,040 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-27 13:59:59,054 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 13:59:59,067 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 13:59:59,112 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-22017, with hadoop as owner.
2020-05-27 13:59:59,161 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-22017/bucket-0-38224, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 13:59:59,792 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 14:00:00,073 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,071
Average Time spent in bucket creation: 00:00:00,022
Average Time spent in key creation: 00:00:00,202
Average Time spent in key write: 00:00:00,564
Total bytes written: 10240
Total Execution time: 00:00:05,728
***************************************************</msg>
<status status="PASS" starttime="20200527 14:00:04.519" endtime="20200527 14:00:04.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:00:04.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:00:04.520" endtime="20200527 14:00:04.521"></status>
</kw>
<msg timestamp="20200527 14:00:04.521" level="INFO">${result} = 2020-05-27 13:59:58,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 13:59:58,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 13:59:57.311" endtime="20200527 14:00:04.521"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:00:04.522" endtime="20200527 14:00:04.522"></status>
</kw>
<status status="PASS" starttime="20200527 14:00:04.521" endtime="20200527 14:00:04.522"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 13:59:57.310" endtime="20200527 14:00:04.522" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:00:04.526" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:00:08.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:00:08.695" level="INFO">${output} = 2020-05-27 14:00:05,303 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:00:05,421 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:00:04.524" endtime="20200527 14:00:08.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:00:08.696" level="INFO">2020-05-27 14:00:05,303 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:00:05,421 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:00:05,421 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:00:05,551 [main] INFO freon.BaseFreonGenerator: Executing test with prefix htitamrsmr
2020-05-27 14:00:05,580 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:00:06,164 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-05-27 14:00:06,198 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:00:06,582 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:00:06,754 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 14:00:07,583 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:00:08,370 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1192.511482, max=1192.511482, mean=1192.511482, stddev=0.0, median=1192.511482, p75=1192.511482, p95=1192.511482, p98=1192.511482, p99=1192.511482, p999=1192.511482, mean_rate=0.4661860872393792, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:00:08,371 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-05-27 14:00:08,371 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:00:08,371 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:00:08.696" endtime="20200527 14:00:08.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:00:08.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:00:08.697" endtime="20200527 14:00:08.697"></status>
</kw>
<msg timestamp="20200527 14:00:08.697" level="INFO">${result} = 2020-05-27 14:00:05,303 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:00:05,421 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:00:04.523" endtime="20200527 14:00:08.697"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:00:08.698" endtime="20200527 14:00:08.698"></status>
</kw>
<status status="PASS" starttime="20200527 14:00:08.697" endtime="20200527 14:00:08.698"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:00:04.523" endtime="20200527 14:00:08.698" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:00:08.702" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:00:11.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:00:11.510" level="INFO">${output} = 2020-05-27 14:00:09,521 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:00:09,679 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:00:08.700" endtime="20200527 14:00:11.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:00:11.511" level="INFO">2020-05-27 14:00:09,521 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:00:09,679 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:00:09,679 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:00:09,811 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 9divo41p87
2020-05-27 14:00:09,830 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:00:10,836 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:00:11,502 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=52.676153, max=52.676153, mean=52.676153, stddev=0.0, median=52.676153, p75=52.676153, p95=52.676153, p98=52.676153, p99=52.676153, p999=52.676153, mean_rate=0.8999523632715312, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:00:11,502 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 14:00:11,503 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:00:11,503 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:00:11.510" endtime="20200527 14:00:11.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:00:11.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:00:11.511" endtime="20200527 14:00:11.512"></status>
</kw>
<msg timestamp="20200527 14:00:11.512" level="INFO">${result} = 2020-05-27 14:00:09,521 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:00:09,679 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:00:08.699" endtime="20200527 14:00:11.512"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:00:11.513" endtime="20200527 14:00:11.513"></status>
</kw>
<status status="PASS" starttime="20200527 14:00:11.512" endtime="20200527 14:00:11.513"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:00:08.699" endtime="20200527 14:00:11.513" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:00:11.518" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:00:14.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:00:14.381" level="INFO">${output} = 2020-05-27 14:00:12,413 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:00:12,544 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:00:11.516" endtime="20200527 14:00:14.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:00:14.381" level="INFO">2020-05-27 14:00:12,413 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:00:12,544 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:00:12,544 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:00:12,706 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 9rqvtcopsq
2020-05-27 14:00:12,731 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:00:13,738 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:00:14,372 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=40.642017, max=40.642017, mean=40.642017, stddev=0.0, median=40.642017, p75=40.642017, p95=40.642017, p98=40.642017, p99=40.642017, p999=40.642017, mean_rate=0.8993055547218244, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:00:14,373 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 14:00:14,373 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:00:14,373 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:00:14.381" endtime="20200527 14:00:14.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:00:14.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:00:14.382" endtime="20200527 14:00:14.382"></status>
</kw>
<msg timestamp="20200527 14:00:14.382" level="INFO">${result} = 2020-05-27 14:00:12,413 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:00:12,544 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:00:11.515" endtime="20200527 14:00:14.383"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:00:14.383" endtime="20200527 14:00:14.383"></status>
</kw>
<status status="PASS" starttime="20200527 14:00:14.383" endtime="20200527 14:00:14.384"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:00:11.514" endtime="20200527 14:00:14.384" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200527 13:59:57.293" endtime="20200527 14:00:14.385"></status>
</suite>
<status status="PASS" starttime="20200527 13:59:57.273" endtime="20200527 14:00:14.388"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
