<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 03:43:15.033" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:43:15.091" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:43:22.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:43:22.200" level="INFO">${output} = 2020-05-27 03:43:15,967 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:16,115 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 03:43:15.086" endtime="20200527 03:43:22.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:43:22.201" level="INFO">2020-05-27 03:43:15,967 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:16,115 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 03:43:16,116 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 03:43:16,838 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-27 03:43:16,839 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-27 03:43:16,839 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-27 03:43:16,839 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-05-27 03:43:16,839 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-27 03:43:16,839 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 03:43:16,839 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-27 03:43:16,852 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 03:43:16,861 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 03:43:16,901 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-64099, with hadoop as owner.
2020-05-27 03:43:16,920 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64099/bucket-0-94922, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:43:17,424 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 03:43:17,864 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,052
Average Time spent in bucket creation: 00:00:00,008
Average Time spent in key creation: 00:00:00,032
Average Time spent in key write: 00:00:00,613
Total bytes written: 10240
Total Execution time: 00:00:05,599
***************************************************</msg>
<status status="PASS" starttime="20200527 03:43:22.201" endtime="20200527 03:43:22.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:43:22.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:43:22.201" endtime="20200527 03:43:22.202"></status>
</kw>
<msg timestamp="20200527 03:43:22.202" level="INFO">${result} = 2020-05-27 03:43:15,967 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:16,115 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 03:43:15.086" endtime="20200527 03:43:22.202"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 03:43:22.203" endtime="20200527 03:43:22.203"></status>
</kw>
<status status="PASS" starttime="20200527 03:43:22.202" endtime="20200527 03:43:22.203"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 03:43:15.085" endtime="20200527 03:43:22.204" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:43:22.208" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:43:26.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:43:26.457" level="INFO">${output} = 2020-05-27 03:43:23,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:23,255 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 03:43:22.205" endtime="20200527 03:43:26.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:43:26.458" level="INFO">2020-05-27 03:43:23,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:23,255 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 03:43:23,255 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 03:43:23,433 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nsrafqblfa
2020-05-27 03:43:23,454 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 03:43:24,042 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-05-27 03:43:24,059 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:43:24,457 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 03:43:24,660 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 03:43:25,457 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 03:43:26,129 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1306.842784, max=1306.842784, mean=1306.842784, stddev=0.0, median=1306.842784, p75=1306.842784, p95=1306.842784, p98=1306.842784, p99=1306.842784, p999=1306.842784, mean_rate=0.4916881983402614, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 03:43:26,129 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-05-27 03:43:26,130 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 03:43:26,130 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 03:43:26.457" endtime="20200527 03:43:26.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:43:26.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:43:26.458" endtime="20200527 03:43:26.459"></status>
</kw>
<msg timestamp="20200527 03:43:26.459" level="INFO">${result} = 2020-05-27 03:43:23,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:23,255 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 03:43:22.205" endtime="20200527 03:43:26.459"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 03:43:26.460" endtime="20200527 03:43:26.460"></status>
</kw>
<status status="PASS" starttime="20200527 03:43:26.459" endtime="20200527 03:43:26.460"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 03:43:22.204" endtime="20200527 03:43:26.460" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:43:26.464" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:43:29.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:43:29.371" level="INFO">${output} = 2020-05-27 03:43:27,393 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:27,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 03:43:26.462" endtime="20200527 03:43:29.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:43:29.372" level="INFO">2020-05-27 03:43:27,393 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:27,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 03:43:27,552 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 03:43:27,731 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zhcsndi7jt
2020-05-27 03:43:27,746 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 03:43:28,760 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 03:43:29,362 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=27.312993, max=27.312993, mean=27.312993, stddev=0.0, median=27.312993, p75=27.312993, p95=27.312993, p98=27.312993, p99=27.312993, p999=27.312993, mean_rate=0.985316098252458, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 03:43:29,362 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 03:43:29,363 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 03:43:29,363 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 03:43:29.371" endtime="20200527 03:43:29.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:43:29.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:43:29.372" endtime="20200527 03:43:29.372"></status>
</kw>
<msg timestamp="20200527 03:43:29.373" level="INFO">${result} = 2020-05-27 03:43:27,393 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:27,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 03:43:26.462" endtime="20200527 03:43:29.373"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 03:43:29.373" endtime="20200527 03:43:29.373"></status>
</kw>
<status status="PASS" starttime="20200527 03:43:29.373" endtime="20200527 03:43:29.373"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 03:43:26.461" endtime="20200527 03:43:29.374" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:43:29.378" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:43:32.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:43:32.180" level="INFO">${output} = 2020-05-27 03:43:30,262 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:30,408 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 03:43:29.375" endtime="20200527 03:43:32.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:43:32.181" level="INFO">2020-05-27 03:43:30,262 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:30,408 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 03:43:30,408 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 03:43:30,596 [main] INFO freon.BaseFreonGenerator: Executing test with prefix upnh6vnfuo
2020-05-27 03:43:30,617 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 03:43:31,624 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 03:43:32,171 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=7.74527, max=7.74527, mean=7.74527, stddev=0.0, median=7.74527, p75=7.74527, p95=7.74527, p98=7.74527, p99=7.74527, p999=7.74527, mean_rate=0.984962834407219, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 03:43:32,172 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 03:43:32,172 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 03:43:32,172 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 03:43:32.180" endtime="20200527 03:43:32.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:43:32.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:43:32.181" endtime="20200527 03:43:32.182"></status>
</kw>
<msg timestamp="20200527 03:43:32.182" level="INFO">${result} = 2020-05-27 03:43:30,262 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:43:30,408 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 03:43:29.375" endtime="20200527 03:43:32.182"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 03:43:32.183" endtime="20200527 03:43:32.183"></status>
</kw>
<status status="PASS" starttime="20200527 03:43:32.182" endtime="20200527 03:43:32.183"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 03:43:29.374" endtime="20200527 03:43:32.183" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200527 03:43:15.062" endtime="20200527 03:43:32.185"></status>
</suite>
<status status="PASS" starttime="20200527 03:43:15.034" endtime="20200527 03:43:32.189"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
