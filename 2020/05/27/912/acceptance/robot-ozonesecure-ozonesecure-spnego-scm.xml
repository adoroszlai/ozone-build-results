<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 04:11:02.566" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:02.631" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:02.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:02.633" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 04:11:02.627" endtime="20200527 04:11:02.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:02.634" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 04:11:02.634" endtime="20200527 04:11:02.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:02.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:02.634" endtime="20200527 04:11:02.635"></status>
</kw>
<msg timestamp="20200527 04:11:02.635" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 04:11:02.627" endtime="20200527 04:11:02.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 04:11:02.636" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 04:11:02.635" endtime="20200527 04:11:02.636"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:02.640" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:02.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:02.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 04:11:02.637" endtime="20200527 04:11:02.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:02.656" level="INFO"></msg>
<status status="PASS" starttime="20200527 04:11:02.656" endtime="20200527 04:11:02.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:02.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:02.657" endtime="20200527 04:11:02.657"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:02.637" endtime="20200527 04:11:02.657"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:02.636" endtime="20200527 04:11:02.657"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:02.626" endtime="20200527 04:11:02.657"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:02.626" endtime="20200527 04:11:02.657"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:02.661" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.311" level="INFO">${output} = 2020-05-27 04:11:03,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 04:11:03,703 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 04:11:02.658" endtime="20200527 04:11:10.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.313" level="INFO">2020-05-27 04:11:03,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 04:11:03,703 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 04:11:03,703 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-05-27 04:11:04,875 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-05-27 04:11:04,876 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-27 04:11:04,876 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-27 04:11:04,876 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-05-27 04:11:04,876 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-05-27 04:11:04,876 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 04:11:04,877 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-27 04:11:04,896 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 04:11:04,905 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-05-27 04:11:04,935 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-41512, with testuser/scm@EXAMPLE.COM as owner.
2020-05-27 04:11:04,963 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-41512/bucket-0-19281, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 04:11:05,396 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 04:11:05,907 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,017
Average Time spent in key write: 00:00:00,084
Total bytes written: 2050
Total Execution time: 00:00:06,061
***************************************************</msg>
<status status="PASS" starttime="20200527 04:11:10.312" endtime="20200527 04:11:10.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.313" endtime="20200527 04:11:10.313"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:02.658" endtime="20200527 04:11:10.314"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 04:11:02.625" endtime="20200527 04:11:10.314" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.319" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 04:11:10.317" endtime="20200527 04:11:10.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.324" level="INFO"></msg>
<status status="PASS" starttime="20200527 04:11:10.323" endtime="20200527 04:11:10.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.324" endtime="20200527 04:11:10.325"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.316" endtime="20200527 04:11:10.325"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.316" endtime="20200527 04:11:10.325"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.329" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.349" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200527 04:11:10.326" endtime="20200527 04:11:10.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.351" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 441
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 441
</msg>
<status status="PASS" starttime="20200527 04:11:10.350" endtime="20200527 04:11:10.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.351" endtime="20200527 04:11:10.351"></status>
</kw>
<msg timestamp="20200527 04:11:10.352" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200527 04:11:10.326" endtime="20200527 04:11:10.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 04:11:10.352" endtime="20200527 04:11:10.352"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.355" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.358" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 04:11:10.354" endtime="20200527 04:11:10.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.359" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 04:11:10.358" endtime="20200527 04:11:10.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.359" endtime="20200527 04:11:10.359"></status>
</kw>
<msg timestamp="20200527 04:11:10.360" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 04:11:10.353" endtime="20200527 04:11:10.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 04:11:10.360" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 04:11:10.360" endtime="20200527 04:11:10.360"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.363" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 04:11:10.362" endtime="20200527 04:11:10.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.405" level="INFO"></msg>
<status status="PASS" starttime="20200527 04:11:10.405" endtime="20200527 04:11:10.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.406" endtime="20200527 04:11:10.406"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.361" endtime="20200527 04:11:10.406"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.361" endtime="20200527 04:11:10.406"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.353" endtime="20200527 04:11:10.406"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.352" endtime="20200527 04:11:10.407"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.409" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.435" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200527 04:11:10.407" endtime="20200527 04:11:10.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.437" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 441
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x18d3f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.8) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZP3pW0MSBKo6EDU0G+/SwfNXi3pBdh7AXlCSj4qUpX4+HLo0fqS9M6dwzuaJrxO+PlA/kD2CLuEddyTz185zMn74Io329twaWXafRnjmBW2CKx76yEnyzb148yf/8wDY5jsqmVfTeZFuOh1KqdazUvCfFh8z/U9BXr0e3UwX9Tb+zy5MltE17lPpniUuBumpwEG4iSxKkgWlaYA6p5wlIPYYKoM77uTJwu/CbUInnIPMPQbZf5Ojlm9S6brKWhjis4xnOgEtooCStVY9mjx12ZPkTTZ9rdqELH8g8OQcpFsFYe2P/fi7uGL/G9aIWFwGQxHxnphWbQyp7CGKSjYOyc2Y3tf23xpIHWMIHToAMCARKigcsEgcg9CoMN+y0f0nZBFvYvfbZBRhkHJSO3HjsON8yRqUe3i36xbOqdjjJAd5dusOW4CEvh/IHOkCYkb+2cziSxrcggW6dwYtZaYT/2ePshoGuda9ciHal563pHkl+LDN4J1jjQ51WchsMSk3CFwagStR2kJWbvk118y3Q4XPe8lDv9F8zLGpsDpmcLlT5tHQeE1/K2hmAcIhBgZYOTORCTv8IVPiqaolnCpp99BxC8WFjP7XcLo20ezzNK8BHxrOOCblobuL0clzCbpw==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 04:11:10 GMT
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 27 May 2020 04:11:10 GMT
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCkT0NoOdL0qvHABscTCYpNneTeCfnMotyXvaZPwPoIvWaMp5RMK/+BsP+gKtqnKHV0DlgwicVjkGtQS8EyrMjNPco
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590588670431&amp;s=6KpAZGaEdhwf7mv+/nd4dKSS1ukzt7uw+la+4wLapAU="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 27 May 2020 03:09:34 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 441

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 04:11:10 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 04:11:10 GMT
Date: Wed, 27 May 2020 04:11:10 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 27 May 2020 04:11:10 GMT
Date: Wed, 27 May 2020 04:11:10 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCkT0NoOdL0qvHABscTCYpNneTeCfnMotyXvaZPwPoIvWaMp5RMK/+BsP+gKtqnKHV0DlgwicVjkGtQS8EyrMjNPco
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590588670431&amp;s=6KpAZGaEdhwf7mv+/nd4dKSS1ukzt7uw+la+4wLapAU="; Path=/; HttpOnly
Last-Modified: Wed, 27 May 2020 03:09:34 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200527 04:11:10.436" endtime="20200527 04:11:10.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.437" endtime="20200527 04:11:10.437"></status>
</kw>
<msg timestamp="20200527 04:11:10.438" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200527 04:11:10.407" endtime="20200527 04:11:10.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 04:11:10.438" endtime="20200527 04:11:10.438"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.315" endtime="20200527 04:11:10.438"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 04:11:10.315" endtime="20200527 04:11:10.439" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.444" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 04:11:10.442" endtime="20200527 04:11:10.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.448" level="INFO"></msg>
<status status="PASS" starttime="20200527 04:11:10.448" endtime="20200527 04:11:10.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.448" endtime="20200527 04:11:10.449"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.441" endtime="20200527 04:11:10.449"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.441" endtime="20200527 04:11:10.449"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.452" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.467" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200527 04:11:10.450" endtime="20200527 04:11:10.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.468" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200527 04:11:10.467" endtime="20200527 04:11:10.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.468" endtime="20200527 04:11:10.468"></status>
</kw>
<msg timestamp="20200527 04:11:10.469" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200527 04:11:10.449" endtime="20200527 04:11:10.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 04:11:10.469" endtime="20200527 04:11:10.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.475" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.477" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 04:11:10.472" endtime="20200527 04:11:10.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.478" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 04:11:10.477" endtime="20200527 04:11:10.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.478" endtime="20200527 04:11:10.478"></status>
</kw>
<msg timestamp="20200527 04:11:10.479" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 04:11:10.471" endtime="20200527 04:11:10.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 04:11:10.479" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 04:11:10.479" endtime="20200527 04:11:10.479"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.483" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 04:11:10.481" endtime="20200527 04:11:10.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.494" level="INFO"></msg>
<status status="PASS" starttime="20200527 04:11:10.494" endtime="20200527 04:11:10.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.495" endtime="20200527 04:11:10.495"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.480" endtime="20200527 04:11:10.496"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.480" endtime="20200527 04:11:10.496"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.471" endtime="20200527 04:11:10.496"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.470" endtime="20200527 04:11:10.496"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.499" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.569" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200527 04:11:10.497" endtime="20200527 04:11:10.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.571" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x24dbf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.8) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQb+POzvu5UeAUJp6Q2UtJGyHVhqleqa8jYPjdMwGH7dAEB12zCWRlQBYifebs9l958US4eIHqrvVn0Adw2F9Md93NecTctUZtHvIn9xOPg+nCMKj4SQDyJQS61gudzymDoQektuYYyqhRezXlJUyJ/JAdq795UX748zqPV7DRJrDED3dmST4j5KDk1tBbe96PO/8Or9jWrdICcrBUE2TgTIpH6rbOv8SIMnpLPlS+sWqiTsQBAbQWr+VMfa97AMeiETMcOECM0lpXcTDy9mPmu2vriK9itztpnIu1+wK8vs87YoyN7vXdxoJqKCls9UiZv4b8q7ULAM+udPvU96BNhA628qSoxupIHWMIHToAMCARKigcsEgcicZHH2ml9PvF87rINN9fq49UY871/KPdtLoRHnIeWOVjXNMZIfHxRoDW4Z7p7iAWa76njiB1HNf/4V/kDFNGBmZdFKFzOkgp1jxIisAqOWCJUmYvUymMrCINBMvYenbLwBRhdW5B0c1VSJ1P0rn50/UhXDlTFhjxURiR5vd3fNpE36bfn721a+K3BDZzHpgr0WTYAaVHA8OEs9xfYG6yJzXNMRw4cbs9areAFXW2CrdGoPQrHmZJ4QXVNeUD/LccEG3lZ9j+ANFA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 04:11:10 GMT
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCIC+YTsvlSuJtpZboIFu6kV41xovx8dzUOfZgPg91qq56BOO5m2+CWwmOlmtRwPig+NZqHIFIkqwcpKj6n85/UsYz
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590588670520&amp;s=lD8mhihiwkladD2U38JhmA0B6KHPdEY8U3nCPuSKZeA="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1590552670520.tgz"
&lt; Content-Length: 72910
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 04:11:10 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 04:11:10 GMT
Date: Wed, 27 May 2020 04:11:10 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCIC+YTsvlSuJtpZboIFu6kV41xovx8dzUOfZgPg91qq56BOO5m2+CWwmOlmtRwPig+NZqHIFIkqwcpKj6n85/UsYz
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590588670520&amp;s=lD8mhihiwkladD2U38JhmA0B6KHPdEY8U3nCPuSKZeA="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1590552670520.tgz"
Content-Length: 72910
</msg>
<status status="PASS" starttime="20200527 04:11:10.570" endtime="20200527 04:11:10.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.571" endtime="20200527 04:11:10.572"></status>
</kw>
<msg timestamp="20200527 04:11:10.572" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200527 04:11:10.496" endtime="20200527 04:11:10.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 04:11:10.572" endtime="20200527 04:11:10.573"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.440" endtime="20200527 04:11:10.573"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 04:11:10.440" endtime="20200527 04:11:10.573" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.580" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 04:11:10.576" endtime="20200527 04:11:10.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.583" level="INFO"></msg>
<status status="PASS" starttime="20200527 04:11:10.583" endtime="20200527 04:11:10.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.583" endtime="20200527 04:11:10.584"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.576" endtime="20200527 04:11:10.584"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.575" endtime="20200527 04:11:10.584"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.588" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.603" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 04:11:10.585" endtime="20200527 04:11:10.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.603" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200527 04:11:10.603" endtime="20200527 04:11:10.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.604" endtime="20200527 04:11:10.604"></status>
</kw>
<msg timestamp="20200527 04:11:10.605" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 04:11:10.584" endtime="20200527 04:11:10.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 04:11:10.605" endtime="20200527 04:11:10.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.608" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.611" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 04:11:10.607" endtime="20200527 04:11:10.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.612" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 04:11:10.611" endtime="20200527 04:11:10.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.612" endtime="20200527 04:11:10.613"></status>
</kw>
<msg timestamp="20200527 04:11:10.613" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 04:11:10.606" endtime="20200527 04:11:10.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 04:11:10.614" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 04:11:10.613" endtime="20200527 04:11:10.614"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.617" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 04:11:10.615" endtime="20200527 04:11:10.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.628" level="INFO"></msg>
<status status="PASS" starttime="20200527 04:11:10.627" endtime="20200527 04:11:10.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.628" endtime="20200527 04:11:10.628"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.614" endtime="20200527 04:11:10.629"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.614" endtime="20200527 04:11:10.629"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.606" endtime="20200527 04:11:10.629"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.605" endtime="20200527 04:11:10.629"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.632" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.661" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 04:11:10.630" endtime="20200527 04:11:10.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.662" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x1b24f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.8) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaDu2CKRSMvz2NeM/Och4QmjDg3tuMYiQ7UstqtI+wpBHe0v9Anc6s66AiVJSRPC5lE20EeeEAay/6mssIU6qGhYBowT1j9Wifrz3eJZqFa/O9d7eaKm1RFL26czhVv7SHJz06jCduoTrCHdWR9w+oKyX2Ue4/8nrQUj+6ZsXV1zUSYouiMX+C4wslWc3QEKGxfJpvjkXHN6qQDBNF5xMK0EggLqvTx327BEdsKvt66Tfv8UOkb12VsL4IHxssY5kEgl6lv5b+sYJATjRiTFZYCTEBGvgFp5w9oaMlYpaz/KvH/9YLnAV22wIOeNz6J51rlVb6QwWqKdhimbYfXhIE82aLgYEOZpIHWMIHToAMCARKigcsEgcjWQW8vtED+XbztwqJ+hFt8MvrPRg2uMirmFcZ8NfIBIOH3hFjpqPCQWHFgH8UttPgKMCkxF7fHKTm72vRf2rXZAEk5dxqebe9eyQz1Y5DMJMs50PP1FDGCIgRXq9BHqypbrDtHKrO+8gWjHyId34MIyvrTtKv72ZJ7Y4HvWoA4jhk9VKXLUKdqYkijuDZASabXzlN0OefPUYaLsJK3S4kQR19HtSXWc73q0N/ck7ITgajKTltwjnweESgL3vPXo3g/EEqWXFAipQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 04:11:10 GMT
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARClgoVyVYG3Y48uuW12ndxtktKIvSI5ewYV2+S5eAODgLNpnBWYUdCG2Jj9qviubURYWaJZMFdhDmIamkMnm2NWRVs
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590588670650&amp;s=3GpyAOWD5pHmnqydNWdCvoQkwMUn2E2ccQFmLpWrEmU="; Path=/; HttpOnly
&lt; Content-Length: 534
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 04:11:10 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 04:11:10 GMT
Date: Wed, 27 May 2020 04:11:10 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARClgoVyVYG3Y48uuW12ndxtktKIvSI5ewYV2+S5eAODgLNpnBWYUdCG2Jj9qviubURYWaJZMFdhDmIamkMnm2NWRVs
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590588670650&amp;s=3GpyAOWD5pHmnqydNWdCvoQkwMUn2E2ccQFmLpWrEmU="; Path=/; HttpOnly
Content-Length: 534
</msg>
<status status="PASS" starttime="20200527 04:11:10.662" endtime="20200527 04:11:10.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.663" endtime="20200527 04:11:10.663"></status>
</kw>
<msg timestamp="20200527 04:11:10.664" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.8...
* Connected to om (172.25.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 04:11:10.629" endtime="20200527 04:11:10.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 04:11:10.664" endtime="20200527 04:11:10.665"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.575" endtime="20200527 04:11:10.665"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 04:11:10.574" endtime="20200527 04:11:10.665" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.671" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 04:11:10.667" endtime="20200527 04:11:10.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.674" level="INFO"></msg>
<status status="PASS" starttime="20200527 04:11:10.673" endtime="20200527 04:11:10.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.674" endtime="20200527 04:11:10.674"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.667" endtime="20200527 04:11:10.674"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.667" endtime="20200527 04:11:10.674"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.678" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.693" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 04:11:10.675" endtime="20200527 04:11:10.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.694" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200527 04:11:10.694" endtime="20200527 04:11:10.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.694" endtime="20200527 04:11:10.695"></status>
</kw>
<msg timestamp="20200527 04:11:10.695" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 04:11:10.675" endtime="20200527 04:11:10.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 04:11:10.696" endtime="20200527 04:11:10.696"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.699" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.702" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 04:11:10.698" endtime="20200527 04:11:10.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.703" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 04:11:10.702" endtime="20200527 04:11:10.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.703" endtime="20200527 04:11:10.703"></status>
</kw>
<msg timestamp="20200527 04:11:10.704" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 04:11:10.697" endtime="20200527 04:11:10.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 04:11:10.704" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 04:11:10.704" endtime="20200527 04:11:10.704"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.708" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 04:11:10.706" endtime="20200527 04:11:10.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.719" level="INFO"></msg>
<status status="PASS" starttime="20200527 04:11:10.718" endtime="20200527 04:11:10.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.719" endtime="20200527 04:11:10.720"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.705" endtime="20200527 04:11:10.720"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.705" endtime="20200527 04:11:10.720"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.697" endtime="20200527 04:11:10.720"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.696" endtime="20200527 04:11:10.720"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.723" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.750" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 04:11:10.721" endtime="20200527 04:11:10.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.751" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x1722f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.25.0.6) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEG2XNRbdU1tFRQk7B+n/+hiV8GJRk4asEy3OKGfPFoRtttlkuE+bIw/BG1AIJY4I0bU6mjloQjfhx1gPKtGaGbky2FcJX8T1Zi4DIir9UljP812sZLTdoT8F8CsFmZDSFFyvR2Xu7nR5+6inQoMl2T31G/qpvq8qIUdC96/0xfRfb4CYhGqxFodYbBVHIKLewQB6irW3mIXz/Jieaui2OaaEGjS2lW8qZKtALdrTQctrKu0k1OwRROHjP+alayoguX5iUJRHKmLlNm3Lk4rx/49aH+Kntma4ZH9J+c2t9BkNRUe4yY0hNvFul1zwqgGswXvFmeSGqejBj6jnZk0e3PygE+QsWbVqSB1jCB06ADAgESooHLBIHIdNdOXgB7GFfy+pHfRATibz0bTyeeWXsPpm9VgVRlmqaPPZijjBpYh8ZQnVEvPjYBs0/nDnfa7utpQaWO5wvsn8XGCvEXpaOQiIaH9RA8HWYoFCeEL/3Z3Dqk5AYHzUdwYptJS87/pzMNs0sj3LVnMCsUn/DiT7PdhL/YD/1WifYvA+g4mFihxMh5YBoId3Fe1R72JyjRFUIxt7ndEouJjfqazL01RQuwyH077aUFsBCYdTRlDrfK+X44baCguNBZUn0a7OITBbg=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 04:11:10 GMT
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 27 May 2020 04:11:10 GMT
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCFu4oa6oucuelBtfMt5fIGPcU0aN2hdtx6miDQEvmsui9IPmqbAVLPonIQuwXCGNRkujxpV6Wjo+9wdtoMx9k6NI7
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590588670746&amp;s=XWdvp2os6OPk5K4YnvGi+RqnwUZJaQVFBMJVTpVb+CA="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 27 May 2020 03:09:10 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 04:11:10 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 04:11:10 GMT
Date: Wed, 27 May 2020 04:11:10 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 27 May 2020 04:11:10 GMT
Date: Wed, 27 May 2020 04:11:10 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCFu4oa6oucuelBtfMt5fIGPcU0aN2hdtx6miDQEvmsui9IPmqbAVLPonIQuwXCGNRkujxpV6Wjo+9wdtoMx9k6NI7
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590588670746&amp;s=XWdvp2os6OPk5K4YnvGi+RqnwUZJaQVFBMJVTpVb+CA="; Path=/; HttpOnly
Last-Modified: Wed, 27 May 2020 03:09:10 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200527 04:11:10.750" endtime="20200527 04:11:10.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.751" endtime="20200527 04:11:10.752"></status>
</kw>
<msg timestamp="20200527 04:11:10.752" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 04:11:10.720" endtime="20200527 04:11:10.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 04:11:10.753" endtime="20200527 04:11:10.753"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.666" endtime="20200527 04:11:10.753"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 04:11:10.666" endtime="20200527 04:11:10.753" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.759" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 04:11:10.756" endtime="20200527 04:11:10.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.761" level="INFO"></msg>
<status status="PASS" starttime="20200527 04:11:10.761" endtime="20200527 04:11:10.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.762" endtime="20200527 04:11:10.762"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.755" endtime="20200527 04:11:10.762"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.755" endtime="20200527 04:11:10.762"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.765" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.782" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.9...
* Connected to recon (172.25.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200527 04:11:10.763" endtime="20200527 04:11:10.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.783" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.9...
* Connected to recon (172.25.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200527 04:11:10.782" endtime="20200527 04:11:10.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.783" endtime="20200527 04:11:10.783"></status>
</kw>
<msg timestamp="20200527 04:11:10.784" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.9...
* Connected to recon (172.25.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200527 04:11:10.762" endtime="20200527 04:11:10.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 04:11:10.784" endtime="20200527 04:11:10.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.788" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.790" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 04:11:10.786" endtime="20200527 04:11:10.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.791" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 04:11:10.790" endtime="20200527 04:11:10.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.791" endtime="20200527 04:11:10.792"></status>
</kw>
<msg timestamp="20200527 04:11:10.792" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 04:11:10.785" endtime="20200527 04:11:10.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 04:11:10.793" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 04:11:10.792" endtime="20200527 04:11:10.793"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.796" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 04:11:10.794" endtime="20200527 04:11:10.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.808" level="INFO"></msg>
<status status="PASS" starttime="20200527 04:11:10.807" endtime="20200527 04:11:10.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.808" endtime="20200527 04:11:10.809"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.793" endtime="20200527 04:11:10.809"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.793" endtime="20200527 04:11:10.809"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.785" endtime="20200527 04:11:10.809"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.785" endtime="20200527 04:11:10.809"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 04:11:10.812" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 04:11:10.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 04:11:10.842" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.9...
* Connected to recon (172.25.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200527 04:11:10.810" endtime="20200527 04:11:10.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 04:11:10.844" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.9...
* Connected to recon (172.25.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x2226f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.25.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbESuTF+49Hf6nI+o6LAyhhmzAKOMan9uiV7eEx73+2vUstPhyYSlsOcZvz0ASX4u1UmVXF+jV/z4cZ06a96iIF7j1ktjU0531aZ1MEro/ZZZVRpl3HkkO9389B43hYzePXi/6lM/k4wUeg0PyT2adpV8nGorJsL++Dso7JmxLZC4y0jcz8iqJcuMmHL51OROwVS72zdx4vAz8T6VdKV6RWxLwpgYg937IDz/bRrZ3tmzbkTqDcp2meMwQj92yFfpT6vxvvINL+faCTb3bFHZ7sX6nWo3IuSwJVrXQsfX0ocJrd8QPC+my2Dygn2DqBN9G1s5XLNFMAlNe2NhcmvIQMS1KsGIbspIHWMIHToAMCARKigcsEgchd7QbOWKAN5fYHsQgnMhEwzGv/+RBr/n3xE/wYpqUi5MubF0YU7OYK2R2oheMCbIjZAESM9Xpc38K+vYLwHPkZx0ChHVkiPmlPvJIYyBI4+6t54rMNKUJWv+U6FN2HfITZc4k+wrkIu7h5IRP16DZJ9SSzdSv28UWu07h94OUIJoqXcAk/DU9/rzdQ2nRGMP/DNgz/ZtP7hgIbStqiu9I0BLfgBeKPWVwn/lMr6UhdRKs2fKVJpoMRYVOoTAGszWP59u1njmkO1w==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 04:11:10 GMT
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 27 May 2020 04:11:10 GMT
&lt; Date: Wed, 27 May 2020 04:11:10 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC4LGPuU36EkP6vpWOeBuD+zbqcg1A+edobZiDGiTrUiBwcQX382YmysrSMY5ZdKW4SqxAQWTqAcL/egXTeZEhf8LT
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590588670837&amp;s=OfBATU0zcL1FoP3Qp7ddwFfluODf9ECpcnzRr3dsZks="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 27 May 2020 03:14:00 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 04:11:10 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 04:11:10 GMT
Date: Wed, 27 May 2020 04:11:10 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 27 May 2020 04:11:10 GMT
Date: Wed, 27 May 2020 04:11:10 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC4LGPuU36EkP6vpWOeBuD+zbqcg1A+edobZiDGiTrUiBwcQX382YmysrSMY5ZdKW4SqxAQWTqAcL/egXTeZEhf8LT
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590588670837&amp;s=OfBATU0zcL1FoP3Qp7ddwFfluODf9ECpcnzRr3dsZks="; Path=/; HttpOnly
Last-Modified: Wed, 27 May 2020 03:14:00 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200527 04:11:10.843" endtime="20200527 04:11:10.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 04:11:10.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 04:11:10.844" endtime="20200527 04:11:10.845"></status>
</kw>
<msg timestamp="20200527 04:11:10.845" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.9...
* Connected to recon (172.25.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200527 04:11:10.809" endtime="20200527 04:11:10.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 04:11:10.845" endtime="20200527 04:11:10.845"></status>
</kw>
<status status="PASS" starttime="20200527 04:11:10.754" endtime="20200527 04:11:10.846"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 04:11:10.754" endtime="20200527 04:11:10.846" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200527 04:11:02.598" endtime="20200527 04:11:10.847"></status>
</suite>
<status status="PASS" starttime="20200527 04:11:02.567" endtime="20200527 04:11:10.850"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
