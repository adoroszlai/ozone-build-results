<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 03:33:05.659" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200527 03:33:05.720" endtime="20200527 03:33:05.721"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:33:05.726" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:33:05.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:33:05.817" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 27 May 2020 03:33:05 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 03:08:56 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200527 03:33:05.721" endtime="20200527 03:33:05.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:33:05.818" level="INFO">HTTP/1.1 200 OK
Date: Wed, 27 May 2020 03:33:05 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 03:08:56 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200527 03:33:05.817" endtime="20200527 03:33:05.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:33:05.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:33:05.818" endtime="20200527 03:33:05.819"></status>
</kw>
<msg timestamp="20200527 03:33:05.820" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 27 May 2020 03:33:05 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 03:08:56 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200527 03:33:05.721" endtime="20200527 03:33:05.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200527 03:33:05.820" endtime="20200527 03:33:05.821"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 03:33:05.719" endtime="20200527 03:33:05.821" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 03:33:05.823" endtime="20200527 03:33:05.824"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:33:05.827" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:05.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:05.602" level="INFO">${output} = 2020-05-27 03:33:06,839 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:33:07,015 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 03:33:05.824" endtime="20200527 03:34:05.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:05.603" level="INFO">2020-05-27 03:33:06,839 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:33:07,015 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 03:33:07,015 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 03:33:08,181 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-27 03:33:08,182 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-05-27 03:33:08,183 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-05-27 03:33:08,183 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-05-27 03:33:08,183 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-27 03:33:08,183 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 03:33:08,183 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-05-27 03:33:08,188 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-05-27 03:33:08,189 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 03:33:08,200 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-05-27 03:33:08,226 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-33602, with hadoop as owner.
2020-05-27 03:33:08,442 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-33931, with hadoop as owner.
2020-05-27 03:33:08,453 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-53865, with hadoop as owner.
2020-05-27 03:33:08,464 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-67889, with hadoop as owner.
2020-05-27 03:33:08,472 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-30667, with hadoop as owner.
2020-05-27 03:33:08,481 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33602/bucket-0-01518, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,506 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-33931/bucket-0-81483, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,514 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-53865/bucket-0-70178, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,522 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-67889/bucket-0-47917, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,527 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-30667/bucket-0-80641, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,533 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33602/bucket-1-24664, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,538 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-33931/bucket-1-29397, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,544 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-53865/bucket-1-21900, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,549 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-67889/bucket-1-12658, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,561 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-30667/bucket-1-18303, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,566 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33602/bucket-2-22852, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,573 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-33931/bucket-2-16924, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,577 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-53865/bucket-2-27930, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,582 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-67889/bucket-2-30669, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,586 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-30667/bucket-2-87662, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,591 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33602/bucket-3-50763, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,597 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-33931/bucket-3-39421, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,601 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-53865/bucket-3-20128, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,607 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-67889/bucket-3-04174, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-30667/bucket-3-48196, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,618 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33602/bucket-4-63761, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,623 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-33931/bucket-4-66238, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,628 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-53865/bucket-4-02796, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,632 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-67889/bucket-4-11803, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:08,637 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-30667/bucket-4-68562, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 03:33:09,204 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-05-27 03:33:09,215 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 03:33:10,214 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-05-27 03:33:11,228 [Thread-5] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-05-27 03:33:12,229 [Thread-5] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-05-27 03:33:13,230 [Thread-5] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-05-27 03:33:14,232 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-05-27 03:33:15,233 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-05-27 03:33:16,233 [Thread-5] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-05-27 03:33:17,234 [Thread-5] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-05-27 03:33:18,234 [Thread-5] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-05-27 03:33:19,235 [Thread-5] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-05-27 03:33:20,235 [Thread-5] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-05-27 03:33:21,236 [Thread-5] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-05-27 03:33:22,236 [Thread-5] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-05-27 03:33:23,237 [Thread-5] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-05-27 03:33:24,237 [Thread-5] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-05-27 03:33:25,238 [Thread-5] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-05-27 03:33:26,238 [Thread-5] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-05-27 03:33:27,239 [Thread-5] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-05-27 03:33:28,239 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-05-27 03:33:29,240 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-05-27 03:33:30,241 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-05-27 03:33:31,241 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-05-27 03:33:32,242 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-05-27 03:33:33,242 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-05-27 03:33:34,244 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-05-27 03:33:35,244 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-05-27 03:33:36,244 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-05-27 03:33:37,245 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-05-27 03:33:38,245 [Thread-5] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-05-27 03:33:39,246 [Thread-5] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-05-27 03:33:40,246 [Thread-5] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-05-27 03:33:41,247 [Thread-5] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-05-27 03:33:42,247 [Thread-5] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-05-27 03:33:43,248 [Thread-5] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-05-27 03:33:44,248 [Thread-5] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-05-27 03:33:45,249 [Thread-5] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-05-27 03:33:46,249 [Thread-5] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-05-27 03:33:47,250 [Thread-5] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-05-27 03:33:48,251 [Thread-5] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-05-27 03:33:49,252 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-05-27 03:33:50,252 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-05-27 03:33:51,253 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-05-27 03:33:52,253 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-05-27 03:33:53,254 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-05-27 03:33:54,254 [Thread-5] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-05-27 03:33:55,254 [Thread-5] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-05-27 03:33:56,255 [Thread-5] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-05-27 03:33:57,256 [Thread-5] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-05-27 03:33:58,257 [Thread-5] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-05-27 03:33:59,257 [Thread-5] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-05-27 03:34:00,258 [Thread-5] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-05-27 03:34:01,259 [Thread-5] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-05-27 03:34:02,259 [Thread-5] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-05-27 03:34:03,260 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,245
Average Time spent in bucket creation: 00:00:00,117
Average Time spent in key creation: 00:00:01,792
Average Time spent in key write: 00:00:00,737
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:58,079
***************************************************</msg>
<status status="PASS" starttime="20200527 03:34:05.602" endtime="20200527 03:34:05.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:05.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:05.603" endtime="20200527 03:34:05.604"></status>
</kw>
<msg timestamp="20200527 03:34:05.604" level="INFO">${result} = 2020-05-27 03:33:06,839 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 03:33:07,015 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 03:33:05.824" endtime="20200527 03:34:05.604"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:05.605" endtime="20200527 03:34:05.605"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:05.604" endtime="20200527 03:34:05.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:05.606" endtime="20200527 03:34:05.606"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 03:33:05.822" endtime="20200527 03:34:05.606" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200527 03:33:05.691" endtime="20200527 03:34:05.607"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200527 03:34:05.616" level="INFO">${random} = 29274</msg>
<status status="PASS" starttime="20200527 03:34:05.615" endtime="20200527 03:34:05.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200527 03:34:05.617" level="INFO">${prefix} = 29274</msg>
<status status="PASS" starttime="20200527 03:34:05.616" endtime="20200527 03:34:05.617"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:05.615" endtime="20200527 03:34:05.617"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:05.618" endtime="20200527 03:34:05.618"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:05.621" level="INFO">Running command 'ozone sh volume info o3://om:9862/29274-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:07.437" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 03:34:07.437" level="INFO">${output} = VOLUME_NOT_FOUND Volume 29274-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 03:34:05.619" endtime="20200527 03:34:07.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:07.438" level="INFO">VOLUME_NOT_FOUND Volume 29274-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 03:34:07.438" endtime="20200527 03:34:07.439"></status>
</kw>
<msg timestamp="20200527 03:34:07.439" level="INFO">${result} = VOLUME_NOT_FOUND Volume 29274-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 03:34:05.619" endtime="20200527 03:34:07.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:07.439" endtime="20200527 03:34:07.440"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:07.443" level="INFO">Running command 'ozone sh volume create o3://om:9862/29274-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:09.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:09.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:34:07.440" endtime="20200527 03:34:09.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:09.275" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:34:09.275" endtime="20200527 03:34:09.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:09.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:09.276" endtime="20200527 03:34:09.276"></status>
</kw>
<msg timestamp="20200527 03:34:09.276" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 03:34:07.440" endtime="20200527 03:34:09.276"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:09.277" endtime="20200527 03:34:09.277"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:09.280" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="29274-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:11.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:11.418" level="INFO">${output} = {
  "metadata": {},
  "name": "29274-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:34:09.262Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 03:34:09.278" endtime="20200527 03:34:11.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:11.419" level="INFO">{
  "metadata": {},
  "name": "29274-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:34:09.262Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 03:34:11.418" endtime="20200527 03:34:11.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:11.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:11.419" endtime="20200527 03:34:11.420"></status>
</kw>
<msg timestamp="20200527 03:34:11.420" level="INFO">${result} = {
  "metadata": {},
  "name": "29274-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:34:09.262Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 03:34:09.277" endtime="20200527 03:34:11.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:11.420" endtime="20200527 03:34:11.421"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:11.424" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="29274-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:13.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:13.453" level="INFO">${output} = {
  "metadata": {},
  "name": "29274-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:34:09.262Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 03:34:11.422" endtime="20200527 03:34:13.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:13.454" level="INFO">{
  "metadata": {},
  "name": "29274-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:34:09.262Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 03:34:13.454" endtime="20200527 03:34:13.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:13.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:13.455" endtime="20200527 03:34:13.455"></status>
</kw>
<msg timestamp="20200527 03:34:13.455" level="INFO">${result} = {
  "metadata": {},
  "name": "29274-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:34:09.262Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 03:34:11.421" endtime="20200527 03:34:13.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:13.456" endtime="20200527 03:34:13.456"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:13.459" level="INFO">Running command 'ozone sh volume update o3://om:9862/29274-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:15.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:15.513" level="INFO">${output} = {
  "metadata" : { },
  "name" : "29274-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T03:34:09.262Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200527 03:34:13.457" endtime="20200527 03:34:15.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:15.514" level="INFO">{
  "metadata" : { },
  "name" : "29274-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T03:34:09.262Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 03:34:15.513" endtime="20200527 03:34:15.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:15.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:15.514" endtime="20200527 03:34:15.514"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:13.456" endtime="20200527 03:34:15.515"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:15.519" level="INFO">Running command 'ozone sh volume info o3://om:9862/29274-rpcwoport | jq -r '. | select(.name=="29274-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:17.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:17.537" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 03:34:15.516" endtime="20200527 03:34:17.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:17.539" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 03:34:17.538" endtime="20200527 03:34:17.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:17.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:17.540" endtime="20200527 03:34:17.540"></status>
</kw>
<msg timestamp="20200527 03:34:17.541" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 03:34:15.515" endtime="20200527 03:34:17.541"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:17.541" endtime="20200527 03:34:17.541"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:17.544" level="INFO">Running command 'ozone sh bucket create o3://om:9862/29274-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:19.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:19.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:34:17.542" endtime="20200527 03:34:19.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:19.350" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:34:19.349" endtime="20200527 03:34:19.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:19.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:19.350" endtime="20200527 03:34:19.351"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:17.541" endtime="20200527 03:34:19.351"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:19.355" level="INFO">Running command 'ozone sh bucket info o3://om:9862/29274-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:21.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:21.135" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 03:34:19.352" endtime="20200527 03:34:21.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:21.137" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 03:34:21.136" endtime="20200527 03:34:21.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:21.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:21.137" endtime="20200527 03:34:21.137"></status>
</kw>
<msg timestamp="20200527 03:34:21.138" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 03:34:19.351" endtime="20200527 03:34:21.138"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:21.138" endtime="20200527 03:34:21.138"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:21.141" level="INFO">Running command 'ozone sh bucket list o3://om:9862/29274-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:22.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:22.935" level="INFO">${output} = 29274-rpcwoport</msg>
<status status="PASS" starttime="20200527 03:34:21.139" endtime="20200527 03:34:22.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:22.936" level="INFO">29274-rpcwoport</msg>
<status status="PASS" starttime="20200527 03:34:22.935" endtime="20200527 03:34:22.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:22.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:22.936" endtime="20200527 03:34:22.936"></status>
</kw>
<msg timestamp="20200527 03:34:22.937" level="INFO">${result} = 29274-rpcwoport</msg>
<status status="PASS" starttime="20200527 03:34:21.138" endtime="20200527 03:34:22.937"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:22.937" endtime="20200527 03:34:22.938"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:22.943" level="INFO">Running command 'ozone sh key put o3://om:9862/29274-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:26.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:26.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:34:22.939" endtime="20200527 03:34:26.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:26.310" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:34:26.309" endtime="20200527 03:34:26.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:26.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:26.310" endtime="20200527 03:34:26.311"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:22.939" endtime="20200527 03:34:26.311"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:26.313" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:26.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:26.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:34:26.311" endtime="20200527 03:34:26.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:26.316" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:34:26.316" endtime="20200527 03:34:26.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:26.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:26.317" endtime="20200527 03:34:26.317"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:26.311" endtime="20200527 03:34:26.318"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:26.321" level="INFO">Running command 'ozone sh key get o3://om:9862/29274-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:29.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:29.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:34:26.318" endtime="20200527 03:34:29.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:29.949" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:34:29.948" endtime="20200527 03:34:29.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:29.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:29.949" endtime="20200527 03:34:29.950"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:26.318" endtime="20200527 03:34:29.950"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:29.954" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:29.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:29.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:34:29.950" endtime="20200527 03:34:29.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:29.957" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:34:29.957" endtime="20200527 03:34:29.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:29.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:29.958" endtime="20200527 03:34:29.958"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:29.950" endtime="20200527 03:34:29.958"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:29.962" level="INFO">Running command 'ozone sh key get o3://om:9862/29274-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:31.753" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 03:34:31.753" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 03:34:29.959" endtime="20200527 03:34:31.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:31.754" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 03:34:31.754" endtime="20200527 03:34:31.754"></status>
</kw>
<msg timestamp="20200527 03:34:31.755" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 03:34:29.959" endtime="20200527 03:34:31.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:31.755" endtime="20200527 03:34:31.755"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:31.759" level="INFO">Running command 'ozone sh key get --force o3://om:9862/29274-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:35.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:35.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:34:31.756" endtime="20200527 03:34:35.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:35.172" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:34:35.172" endtime="20200527 03:34:35.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:35.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:35.173" endtime="20200527 03:34:35.173"></status>
</kw>
<msg timestamp="20200527 03:34:35.173" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 03:34:31.755" endtime="20200527 03:34:35.173"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:35.174" endtime="20200527 03:34:35.174"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:35.176" level="INFO">Running command 'ozone sh key info o3://om:9862/29274-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:37.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:37.250" level="INFO">${output} = {
  "volumeName": "29274-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T03:34:24.510Z",
  "modificationTime": "2020-05-27T03:34:25.961Z",
  "re...</msg>
<status status="PASS" starttime="20200527 03:34:35.175" endtime="20200527 03:34:37.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:37.251" level="INFO">{
  "volumeName": "29274-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T03:34:24.510Z",
  "modificationTime": "2020-05-27T03:34:25.961Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104238315242061950,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 03:34:37.251" endtime="20200527 03:34:37.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:37.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:37.252" endtime="20200527 03:34:37.252"></status>
</kw>
<msg timestamp="20200527 03:34:37.252" level="INFO">${result} = {
  "volumeName": "29274-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T03:34:24.510Z",
  "modificationTime": "2020-05-27T03:34:25.961Z",
  "re...</msg>
<status status="PASS" starttime="20200527 03:34:35.174" endtime="20200527 03:34:37.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:37.253" endtime="20200527 03:34:37.254"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:37.257" level="INFO">Running command 'ozone sh key list o3://om:9862/29274-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:39.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:39.314" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 03:34:37.254" endtime="20200527 03:34:39.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:39.316" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 03:34:39.315" endtime="20200527 03:34:39.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:39.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:39.316" endtime="20200527 03:34:39.317"></status>
</kw>
<msg timestamp="20200527 03:34:39.317" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 03:34:37.254" endtime="20200527 03:34:39.317"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:39.317" endtime="20200527 03:34:39.317"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:39.320" level="INFO">Running command 'ozone sh key rename o3://om:9862/29274-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:41.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:41.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:34:39.318" endtime="20200527 03:34:41.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:41.110" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:34:41.109" endtime="20200527 03:34:41.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:41.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:41.110" endtime="20200527 03:34:41.111"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:39.317" endtime="20200527 03:34:41.111"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:41.114" level="INFO">Running command 'ozone sh key list o3://om:9862/29274-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:43.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:43.153" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 03:34:41.112" endtime="20200527 03:34:43.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:43.154" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 03:34:43.153" endtime="20200527 03:34:43.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:43.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:43.154" endtime="20200527 03:34:43.155"></status>
</kw>
<msg timestamp="20200527 03:34:43.155" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 03:34:41.111" endtime="20200527 03:34:43.155"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:43.155" endtime="20200527 03:34:43.156"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:43.158" level="INFO">Running command 'ozone sh key delete o3://om:9862/29274-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:44.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:44.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:34:43.157" endtime="20200527 03:34:44.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:44.987" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:34:44.986" endtime="20200527 03:34:44.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:44.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:44.987" endtime="20200527 03:34:44.988"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:43.156" endtime="20200527 03:34:44.988"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:22.938" endtime="20200527 03:34:44.988"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:22.938" endtime="20200527 03:34:44.988"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:44.992" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/29274-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:46.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:46.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:34:44.989" endtime="20200527 03:34:46.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:46.694" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:34:46.693" endtime="20200527 03:34:46.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:46.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:46.694" endtime="20200527 03:34:46.695"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:44.988" endtime="20200527 03:34:46.695"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:46.698" level="INFO">Running command 'ozone sh volume delete o3://om:9862/29274-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:48.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:48.461" level="INFO">${output} = Volume 29274-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200527 03:34:46.696" endtime="20200527 03:34:48.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:48.462" level="INFO">Volume 29274-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200527 03:34:48.462" endtime="20200527 03:34:48.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:48.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:48.462" endtime="20200527 03:34:48.463"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:46.695" endtime="20200527 03:34:48.463"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:05.618" endtime="20200527 03:34:48.463"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 03:34:05.617" endtime="20200527 03:34:48.463" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:48.465" endtime="20200527 03:34:48.465"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:48.468" level="INFO">Running command 'ozone sh volume create o3://om:9862/29274-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:50.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:50.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:34:48.466" endtime="20200527 03:34:50.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:50.215" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:34:50.215" endtime="20200527 03:34:50.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:50.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:50.216" endtime="20200527 03:34:50.216"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:48.466" endtime="20200527 03:34:50.216"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:50.220" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/29274-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:52.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:52.182" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:34:50.217" endtime="20200527 03:34:52.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:52.186" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:34:52.183" endtime="20200527 03:34:52.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:52.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:52.186" endtime="20200527 03:34:52.188"></status>
</kw>
<msg timestamp="20200527 03:34:52.188" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:34:50.217" endtime="20200527 03:34:52.188"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:52.189" endtime="20200527 03:34:52.190"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:52.197" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/29274-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:54.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:54.201" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 03:34:52.191" endtime="20200527 03:34:54.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:54.202" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 03:34:54.202" endtime="20200527 03:34:54.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:54.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:54.202" endtime="20200527 03:34:54.203"></status>
</kw>
<msg timestamp="20200527 03:34:54.203" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 03:34:52.190" endtime="20200527 03:34:54.203"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:54.206" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/29274-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:56.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:56.002" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:34:54.204" endtime="20200527 03:34:56.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:56.003" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:34:56.002" endtime="20200527 03:34:56.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:56.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:56.003" endtime="20200527 03:34:56.003"></status>
</kw>
<msg timestamp="20200527 03:34:56.004" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:34:54.203" endtime="20200527 03:34:56.004"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:56.004" endtime="20200527 03:34:56.005"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:56.007" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/29274-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:57.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:57.708" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 03:34:56.006" endtime="20200527 03:34:57.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:57.710" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 03:34:57.709" endtime="20200527 03:34:57.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:57.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:57.710" endtime="20200527 03:34:57.711"></status>
</kw>
<msg timestamp="20200527 03:34:57.711" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 03:34:56.005" endtime="20200527 03:34:57.711"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:57.718" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/29274-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:34:59.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:34:59.682" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:34:57.712" endtime="20200527 03:34:59.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:34:59.683" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:34:59.682" endtime="20200527 03:34:59.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:34:59.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:34:59.683" endtime="20200527 03:34:59.684"></status>
</kw>
<msg timestamp="20200527 03:34:59.684" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:34:57.711" endtime="20200527 03:34:59.684"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 03:34:59.684" endtime="20200527 03:34:59.685"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:34:59.688" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/29274-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:01.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:01.288" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 03:34:59.686" endtime="20200527 03:35:01.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:01.289" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 03:35:01.289" endtime="20200527 03:35:01.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:01.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:01.290" endtime="20200527 03:35:01.290"></status>
</kw>
<msg timestamp="20200527 03:35:01.290" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 03:34:59.685" endtime="20200527 03:35:01.290"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:01.294" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/29274-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:03.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:03.263" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200527 03:35:01.291" endtime="20200527 03:35:03.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:03.264" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:35:03.263" endtime="20200527 03:35:03.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:03.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:03.264" endtime="20200527 03:35:03.265"></status>
</kw>
<msg timestamp="20200527 03:35:03.265" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200527 03:35:01.290" endtime="20200527 03:35:03.265"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:03.265" endtime="20200527 03:35:03.266"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:03.266" endtime="20200527 03:35:03.267"></status>
</kw>
<status status="PASS" starttime="20200527 03:34:48.465" endtime="20200527 03:35:03.267"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 03:34:48.464" endtime="20200527 03:35:03.267" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:03.268" endtime="20200527 03:35:03.269"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:03.271" level="INFO">Running command 'ozone sh bucket create o3://om:9862/29274-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:05.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:05.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:35:03.270" endtime="20200527 03:35:05.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:05.101" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:35:05.100" endtime="20200527 03:35:05.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:05.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:05.101" endtime="20200527 03:35:05.102"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:03.269" endtime="20200527 03:35:05.102"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:05.105" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/29274-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:07.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:07.036" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:05.103" endtime="20200527 03:35:07.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:07.037" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:35:07.037" endtime="20200527 03:35:07.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:07.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:07.038" endtime="20200527 03:35:07.038"></status>
</kw>
<msg timestamp="20200527 03:35:07.039" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:05.102" endtime="20200527 03:35:07.039"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:07.040" endtime="20200527 03:35:07.041"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:07.044" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/29274-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:08.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:08.779" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 03:35:07.042" endtime="20200527 03:35:08.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:08.780" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 03:35:08.779" endtime="20200527 03:35:08.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:08.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:08.780" endtime="20200527 03:35:08.781"></status>
</kw>
<msg timestamp="20200527 03:35:08.781" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 03:35:07.041" endtime="20200527 03:35:08.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:08.783" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/29274-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:10.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:10.623" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:08.782" endtime="20200527 03:35:10.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:10.624" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:35:10.624" endtime="20200527 03:35:10.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:10.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:10.625" endtime="20200527 03:35:10.626"></status>
</kw>
<msg timestamp="20200527 03:35:10.626" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:08.781" endtime="20200527 03:35:10.626"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:10.626" endtime="20200527 03:35:10.627"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:10.631" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/29274-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:12.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:12.220" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 03:35:10.628" endtime="20200527 03:35:12.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:12.221" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 03:35:12.221" endtime="20200527 03:35:12.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:12.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:12.222" endtime="20200527 03:35:12.222"></status>
</kw>
<msg timestamp="20200527 03:35:12.223" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 03:35:10.627" endtime="20200527 03:35:12.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:12.225" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/29274-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:14.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:14.020" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:12.223" endtime="20200527 03:35:14.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:14.021" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:35:14.020" endtime="20200527 03:35:14.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:14.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:14.021" endtime="20200527 03:35:14.021"></status>
</kw>
<msg timestamp="20200527 03:35:14.022" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:12.223" endtime="20200527 03:35:14.022"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:14.022" endtime="20200527 03:35:14.023"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:14.025" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/29274-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:15.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:15.677" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 03:35:14.024" endtime="20200527 03:35:15.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:15.680" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 03:35:15.678" endtime="20200527 03:35:15.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:15.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:15.680" endtime="20200527 03:35:15.681"></status>
</kw>
<msg timestamp="20200527 03:35:15.681" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 03:35:14.023" endtime="20200527 03:35:15.681"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:15.685" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/29274-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:17.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:17.653" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 03:35:15.682" endtime="20200527 03:35:17.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:17.654" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:35:17.653" endtime="20200527 03:35:17.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:17.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:17.654" endtime="20200527 03:35:17.655"></status>
</kw>
<msg timestamp="20200527 03:35:17.655" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 03:35:15.681" endtime="20200527 03:35:17.655"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:17.655" endtime="20200527 03:35:17.656"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:17.656" endtime="20200527 03:35:17.656"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:03.269" endtime="20200527 03:35:17.656"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 03:35:03.268" endtime="20200527 03:35:17.657" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:17.658" endtime="20200527 03:35:17.658"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:17.662" level="INFO">Running command 'ozone sh key put o3://om:9862/29274-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:21.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:21.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:35:17.659" endtime="20200527 03:35:21.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:21.328" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:35:21.327" endtime="20200527 03:35:21.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:21.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:21.328" endtime="20200527 03:35:21.328"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:17.659" endtime="20200527 03:35:21.329"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:21.332" level="INFO">Running command 'ozone sh key getacl o3://om:9862/29274-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:23.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:23.318" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:21.330" endtime="20200527 03:35:23.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:23.319" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:35:23.319" endtime="20200527 03:35:23.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:23.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:23.320" endtime="20200527 03:35:23.321"></status>
</kw>
<msg timestamp="20200527 03:35:23.321" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:21.329" endtime="20200527 03:35:23.321"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:23.322" endtime="20200527 03:35:23.322"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:23.326" level="INFO">Running command 'ozone sh key addacl o3://om:9862/29274-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:25.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:25.060" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 03:35:23.323" endtime="20200527 03:35:25.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:25.061" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 03:35:25.060" endtime="20200527 03:35:25.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:25.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:25.061" endtime="20200527 03:35:25.061"></status>
</kw>
<msg timestamp="20200527 03:35:25.062" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 03:35:23.322" endtime="20200527 03:35:25.062"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:25.065" level="INFO">Running command 'ozone sh key getacl o3://om:9862/29274-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:27.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:27.026" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:25.063" endtime="20200527 03:35:27.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:27.027" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:35:27.027" endtime="20200527 03:35:27.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:27.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:27.028" endtime="20200527 03:35:27.028"></status>
</kw>
<msg timestamp="20200527 03:35:27.028" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:25.062" endtime="20200527 03:35:27.028"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:27.028" endtime="20200527 03:35:27.029"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:27.032" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/29274-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:28.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:28.882" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 03:35:27.030" endtime="20200527 03:35:28.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:28.883" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 03:35:28.882" endtime="20200527 03:35:28.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:28.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:28.884" endtime="20200527 03:35:28.884"></status>
</kw>
<msg timestamp="20200527 03:35:28.885" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 03:35:27.030" endtime="20200527 03:35:28.885"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:28.888" level="INFO">Running command 'ozone sh key getacl o3://om:9862/29274-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:30.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:30.812" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:28.886" endtime="20200527 03:35:30.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:30.813" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:35:30.813" endtime="20200527 03:35:30.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:30.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:30.813" endtime="20200527 03:35:30.814"></status>
</kw>
<msg timestamp="20200527 03:35:30.814" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 03:35:28.885" endtime="20200527 03:35:30.814"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:30.814" endtime="20200527 03:35:30.815"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:30.818" level="INFO">Running command 'ozone sh key setacl o3://om:9862/29274-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:32.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:32.471" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 03:35:30.816" endtime="20200527 03:35:32.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:32.472" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 03:35:32.471" endtime="20200527 03:35:32.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:32.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:32.472" endtime="20200527 03:35:32.473"></status>
</kw>
<msg timestamp="20200527 03:35:32.473" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 03:35:30.815" endtime="20200527 03:35:32.473"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:32.476" level="INFO">Running command 'ozone sh key getacl o3://om:9862/29274-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:34.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:34.441" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 03:35:32.474" endtime="20200527 03:35:34.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:34.442" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 03:35:34.441" endtime="20200527 03:35:34.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:34.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:34.442" endtime="20200527 03:35:34.443"></status>
</kw>
<msg timestamp="20200527 03:35:34.443" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 03:35:32.473" endtime="20200527 03:35:34.443"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:34.443" endtime="20200527 03:35:34.444"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:34.444" endtime="20200527 03:35:34.445"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:17.658" endtime="20200527 03:35:34.445"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 03:35:17.657" endtime="20200527 03:35:34.446" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:34.447" endtime="20200527 03:35:34.447"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:34.451" level="INFO">Running command 'ozone sh volume info o3:///29274-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:36.196" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 03:35:36.196" level="INFO">${output} = VOLUME_NOT_FOUND Volume 29274-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 03:35:34.449" endtime="20200527 03:35:36.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:36.198" level="INFO">VOLUME_NOT_FOUND Volume 29274-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 03:35:36.197" endtime="20200527 03:35:36.198"></status>
</kw>
<msg timestamp="20200527 03:35:36.198" level="INFO">${result} = VOLUME_NOT_FOUND Volume 29274-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 03:35:34.448" endtime="20200527 03:35:36.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:36.198" endtime="20200527 03:35:36.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:36.202" level="INFO">Running command 'ozone sh volume create o3:///29274-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:38.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:38.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:35:36.199" endtime="20200527 03:35:38.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:38.043" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:35:38.042" endtime="20200527 03:35:38.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:38.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:38.043" endtime="20200527 03:35:38.044"></status>
</kw>
<msg timestamp="20200527 03:35:38.044" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 03:35:36.199" endtime="20200527 03:35:38.044"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:38.044" endtime="20200527 03:35:38.045"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:38.048" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="29274-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:39.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:39.957" level="INFO">${output} = {
  "metadata": {},
  "name": "29274-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:35:38.013Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 03:35:38.046" endtime="20200527 03:35:39.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:39.958" level="INFO">{
  "metadata": {},
  "name": "29274-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:35:38.013Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 03:35:39.958" endtime="20200527 03:35:39.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:39.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:39.959" endtime="20200527 03:35:39.959"></status>
</kw>
<msg timestamp="20200527 03:35:39.959" level="INFO">${result} = {
  "metadata": {},
  "name": "29274-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:35:38.013Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 03:35:38.045" endtime="20200527 03:35:39.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:39.960" endtime="20200527 03:35:39.960"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:39.964" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="29274-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:42.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:42.004" level="INFO">${output} = {
  "metadata": {},
  "name": "29274-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:35:38.013Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 03:35:39.961" endtime="20200527 03:35:42.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:42.005" level="INFO">{
  "metadata": {},
  "name": "29274-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:35:38.013Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 03:35:42.004" endtime="20200527 03:35:42.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:42.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:42.005" endtime="20200527 03:35:42.005"></status>
</kw>
<msg timestamp="20200527 03:35:42.006" level="INFO">${result} = {
  "metadata": {},
  "name": "29274-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:35:38.013Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 03:35:39.960" endtime="20200527 03:35:42.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:42.006" endtime="20200527 03:35:42.006"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:42.009" level="INFO">Running command 'ozone sh volume update o3:///29274-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:43.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:43.929" level="INFO">${output} = {
  "metadata" : { },
  "name" : "29274-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T03:35:38.013Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200527 03:35:42.007" endtime="20200527 03:35:43.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:43.931" level="INFO">{
  "metadata" : { },
  "name" : "29274-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T03:35:38.013Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 03:35:43.930" endtime="20200527 03:35:43.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:43.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:43.931" endtime="20200527 03:35:43.932"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:42.007" endtime="20200527 03:35:43.932"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:43.936" level="INFO">Running command 'ozone sh volume info o3:///29274-rpcwport | jq -r '. | select(.name=="29274-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:45.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:45.992" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 03:35:43.933" endtime="20200527 03:35:45.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:45.994" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 03:35:45.993" endtime="20200527 03:35:45.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:45.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:45.994" endtime="20200527 03:35:45.994"></status>
</kw>
<msg timestamp="20200527 03:35:45.995" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 03:35:43.932" endtime="20200527 03:35:45.995"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:45.995" endtime="20200527 03:35:45.995"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:45.998" level="INFO">Running command 'ozone sh bucket create o3:///29274-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:47.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:47.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:35:45.996" endtime="20200527 03:35:47.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:47.824" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:35:47.823" endtime="20200527 03:35:47.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:47.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:47.824" endtime="20200527 03:35:47.825"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:45.995" endtime="20200527 03:35:47.825"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:47.829" level="INFO">Running command 'ozone sh bucket info o3:///29274-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:50.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:50.046" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 03:35:47.826" endtime="20200527 03:35:50.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:50.048" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 03:35:50.047" endtime="20200527 03:35:50.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:50.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:50.048" endtime="20200527 03:35:50.048"></status>
</kw>
<msg timestamp="20200527 03:35:50.049" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 03:35:47.825" endtime="20200527 03:35:50.049"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:50.049" endtime="20200527 03:35:50.049"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:50.052" level="INFO">Running command 'ozone sh bucket list o3:///29274-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:52.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:52.298" level="INFO">${output} = 29274-rpcwport</msg>
<status status="PASS" starttime="20200527 03:35:50.050" endtime="20200527 03:35:52.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:52.299" level="INFO">29274-rpcwport</msg>
<status status="PASS" starttime="20200527 03:35:52.298" endtime="20200527 03:35:52.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:52.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:52.299" endtime="20200527 03:35:52.300"></status>
</kw>
<msg timestamp="20200527 03:35:52.300" level="INFO">${result} = 29274-rpcwport</msg>
<status status="PASS" starttime="20200527 03:35:50.050" endtime="20200527 03:35:52.300"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 03:35:52.301" endtime="20200527 03:35:52.301"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:52.306" level="INFO">Running command 'ozone sh key put o3:///29274-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:56.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:56.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:35:52.303" endtime="20200527 03:35:56.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:56.445" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:35:56.444" endtime="20200527 03:35:56.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:56.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:56.445" endtime="20200527 03:35:56.445"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:52.302" endtime="20200527 03:35:56.446"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:56.449" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:35:56.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:35:56.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:35:56.446" endtime="20200527 03:35:56.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:35:56.452" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:35:56.451" endtime="20200527 03:35:56.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:35:56.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:35:56.452" endtime="20200527 03:35:56.453"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:56.446" endtime="20200527 03:35:56.453"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:35:56.456" level="INFO">Running command 'ozone sh key get o3:///29274-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:00.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:00.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:35:56.454" endtime="20200527 03:36:00.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:00.081" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:00.081" endtime="20200527 03:36:00.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:00.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:00.082" endtime="20200527 03:36:00.082"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:56.453" endtime="20200527 03:36:00.083"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:00.086" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:00.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:00.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:00.083" endtime="20200527 03:36:00.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:00.089" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:00.089" endtime="20200527 03:36:00.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:00.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:00.090" endtime="20200527 03:36:00.090"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:00.083" endtime="20200527 03:36:00.090"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:00.093" level="INFO">Running command 'ozone sh key get o3:///29274-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:01.883" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 03:36:01.883" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 03:36:00.091" endtime="20200527 03:36:01.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:01.884" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 03:36:01.884" endtime="20200527 03:36:01.884"></status>
</kw>
<msg timestamp="20200527 03:36:01.885" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 03:36:00.091" endtime="20200527 03:36:01.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:01.885" endtime="20200527 03:36:01.885"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:01.888" level="INFO">Running command 'ozone sh key get --force o3:///29274-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:05.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:05.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:01.886" endtime="20200527 03:36:05.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:05.357" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:05.356" endtime="20200527 03:36:05.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:05.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:05.357" endtime="20200527 03:36:05.358"></status>
</kw>
<msg timestamp="20200527 03:36:05.358" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 03:36:01.885" endtime="20200527 03:36:05.358"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:05.358" endtime="20200527 03:36:05.359"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:05.361" level="INFO">Running command 'ozone sh key info o3:///29274-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:07.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:07.465" level="INFO">${output} = {
  "volumeName": "29274-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T03:35:54.434Z",
  "modificationTime": "2020-05-27T03:35:56.087Z",
  "rep...</msg>
<status status="PASS" starttime="20200527 03:36:05.359" endtime="20200527 03:36:07.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:07.467" level="INFO">{
  "volumeName": "29274-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T03:35:54.434Z",
  "modificationTime": "2020-05-27T03:35:56.087Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104238321135321220,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 03:36:07.466" endtime="20200527 03:36:07.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:07.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:07.467" endtime="20200527 03:36:07.468"></status>
</kw>
<msg timestamp="20200527 03:36:07.468" level="INFO">${result} = {
  "volumeName": "29274-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T03:35:54.434Z",
  "modificationTime": "2020-05-27T03:35:56.087Z",
  "rep...</msg>
<status status="PASS" starttime="20200527 03:36:05.359" endtime="20200527 03:36:07.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:07.468" endtime="20200527 03:36:07.469"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:07.473" level="INFO">Running command 'ozone sh key list o3:///29274-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:09.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:09.566" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 03:36:07.469" endtime="20200527 03:36:09.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:09.567" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 03:36:09.566" endtime="20200527 03:36:09.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:09.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:09.567" endtime="20200527 03:36:09.568"></status>
</kw>
<msg timestamp="20200527 03:36:09.568" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 03:36:07.469" endtime="20200527 03:36:09.568"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:09.568" endtime="20200527 03:36:09.569"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:09.572" level="INFO">Running command 'ozone sh key rename o3:///29274-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:11.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:11.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:09.570" endtime="20200527 03:36:11.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:11.441" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:11.440" endtime="20200527 03:36:11.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:11.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:11.441" endtime="20200527 03:36:11.442"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:09.569" endtime="20200527 03:36:11.442"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:11.446" level="INFO">Running command 'ozone sh key list o3:///29274-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:13.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:13.525" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 03:36:11.443" endtime="20200527 03:36:13.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:13.526" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 03:36:13.526" endtime="20200527 03:36:13.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:13.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:13.527" endtime="20200527 03:36:13.527"></status>
</kw>
<msg timestamp="20200527 03:36:13.527" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 03:36:11.442" endtime="20200527 03:36:13.527"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:13.528" endtime="20200527 03:36:13.528"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:13.531" level="INFO">Running command 'ozone sh key delete o3:///29274-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:15.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:15.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:13.529" endtime="20200527 03:36:15.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:15.243" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:15.242" endtime="20200527 03:36:15.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:15.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:15.243" endtime="20200527 03:36:15.244"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:13.528" endtime="20200527 03:36:15.244"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:52.302" endtime="20200527 03:36:15.244"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:52.301" endtime="20200527 03:36:15.244"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:15.247" level="INFO">Running command 'ozone sh bucket delete o3:///29274-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:16.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:16.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:15.245" endtime="20200527 03:36:16.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:16.958" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:16.957" endtime="20200527 03:36:16.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:16.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:16.958" endtime="20200527 03:36:16.959"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:15.244" endtime="20200527 03:36:16.959"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:16.963" level="INFO">Running command 'ozone sh volume delete o3:///29274-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:18.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:18.745" level="INFO">${output} = Volume 29274-rpcwport is deleted</msg>
<status status="PASS" starttime="20200527 03:36:16.960" endtime="20200527 03:36:18.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:18.746" level="INFO">Volume 29274-rpcwport is deleted</msg>
<status status="PASS" starttime="20200527 03:36:18.745" endtime="20200527 03:36:18.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:18.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:18.746" endtime="20200527 03:36:18.747"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:16.959" endtime="20200527 03:36:18.747"></status>
</kw>
<status status="PASS" starttime="20200527 03:35:34.448" endtime="20200527 03:36:18.747"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 03:35:34.446" endtime="20200527 03:36:18.748" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:18.749" endtime="20200527 03:36:18.749"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:18.753" level="INFO">Running command 'ozone sh volume info /29274-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:20.336" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 03:36:20.336" level="INFO">${output} = VOLUME_NOT_FOUND Volume 29274-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 03:36:18.751" endtime="20200527 03:36:20.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:20.337" level="INFO">VOLUME_NOT_FOUND Volume 29274-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 03:36:20.337" endtime="20200527 03:36:20.338"></status>
</kw>
<msg timestamp="20200527 03:36:20.338" level="INFO">${result} = VOLUME_NOT_FOUND Volume 29274-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 03:36:18.750" endtime="20200527 03:36:20.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:20.338" endtime="20200527 03:36:20.338"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:20.341" level="INFO">Running command 'ozone sh volume create /29274-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:22.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:22.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:20.339" endtime="20200527 03:36:22.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:22.114" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:22.113" endtime="20200527 03:36:22.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:22.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:22.114" endtime="20200527 03:36:22.115"></status>
</kw>
<msg timestamp="20200527 03:36:22.115" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 03:36:20.339" endtime="20200527 03:36:22.115"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:22.115" endtime="20200527 03:36:22.116"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:22.119" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="29274-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:24.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:24.030" level="INFO">${output} = {
  "metadata": {},
  "name": "29274-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:36:22.099Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 03:36:22.116" endtime="20200527 03:36:24.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:24.031" level="INFO">{
  "metadata": {},
  "name": "29274-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:36:22.099Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 03:36:24.030" endtime="20200527 03:36:24.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:24.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:24.031" endtime="20200527 03:36:24.032"></status>
</kw>
<msg timestamp="20200527 03:36:24.032" level="INFO">${result} = {
  "metadata": {},
  "name": "29274-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:36:22.099Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 03:36:22.116" endtime="20200527 03:36:24.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:24.032" endtime="20200527 03:36:24.033"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:24.035" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="29274-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:26.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:26.098" level="INFO">${output} = {
  "metadata": {},
  "name": "29274-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:36:22.099Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 03:36:24.033" endtime="20200527 03:36:26.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:26.100" level="INFO">{
  "metadata": {},
  "name": "29274-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:36:22.099Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 03:36:26.099" endtime="20200527 03:36:26.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:26.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:26.100" endtime="20200527 03:36:26.101"></status>
</kw>
<msg timestamp="20200527 03:36:26.101" level="INFO">${result} = {
  "metadata": {},
  "name": "29274-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T03:36:22.099Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 03:36:24.033" endtime="20200527 03:36:26.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:26.101" endtime="20200527 03:36:26.102"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:26.105" level="INFO">Running command 'ozone sh volume update /29274-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:28.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:28.001" level="INFO">${output} = {
  "metadata" : { },
  "name" : "29274-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T03:36:22.099Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200527 03:36:26.102" endtime="20200527 03:36:28.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:28.003" level="INFO">{
  "metadata" : { },
  "name" : "29274-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T03:36:22.099Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 03:36:28.002" endtime="20200527 03:36:28.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:28.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:28.003" endtime="20200527 03:36:28.004"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:26.102" endtime="20200527 03:36:28.004"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:28.007" level="INFO">Running command 'ozone sh volume info /29274-rpcwoscheme | jq -r '. | select(.name=="29274-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:30.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:30.125" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 03:36:28.005" endtime="20200527 03:36:30.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:30.126" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 03:36:30.126" endtime="20200527 03:36:30.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:30.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:30.127" endtime="20200527 03:36:30.127"></status>
</kw>
<msg timestamp="20200527 03:36:30.127" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 03:36:28.004" endtime="20200527 03:36:30.127"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:30.128" endtime="20200527 03:36:30.128"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:30.131" level="INFO">Running command 'ozone sh bucket create /29274-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:31.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:31.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:30.129" endtime="20200527 03:36:31.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:31.871" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:31.871" endtime="20200527 03:36:31.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:31.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:31.872" endtime="20200527 03:36:31.872"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:30.128" endtime="20200527 03:36:31.872"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:31.876" level="INFO">Running command 'ozone sh bucket info /29274-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:33.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:33.936" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 03:36:31.873" endtime="20200527 03:36:33.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:33.937" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 03:36:33.936" endtime="20200527 03:36:33.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:33.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:33.937" endtime="20200527 03:36:33.938"></status>
</kw>
<msg timestamp="20200527 03:36:33.938" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 03:36:31.873" endtime="20200527 03:36:33.938"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:33.938" endtime="20200527 03:36:33.939"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:33.942" level="INFO">Running command 'ozone sh bucket list /29274-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:36.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:36.020" level="INFO">${output} = 29274-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 03:36:33.940" endtime="20200527 03:36:36.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:36.021" level="INFO">29274-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 03:36:36.020" endtime="20200527 03:36:36.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:36.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:36.021" endtime="20200527 03:36:36.022"></status>
</kw>
<msg timestamp="20200527 03:36:36.022" level="INFO">${result} = 29274-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 03:36:33.939" endtime="20200527 03:36:36.022"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:36.022" endtime="20200527 03:36:36.023"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:36.027" level="INFO">Running command 'ozone sh key put /29274-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:39.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:39.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:36.024" endtime="20200527 03:36:39.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:39.839" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:39.838" endtime="20200527 03:36:39.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:39.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:39.839" endtime="20200527 03:36:39.840"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:36.024" endtime="20200527 03:36:39.841"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:39.844" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:39.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:39.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:39.841" endtime="20200527 03:36:39.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:39.847" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:39.847" endtime="20200527 03:36:39.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:39.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:39.847" endtime="20200527 03:36:39.848"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:39.841" endtime="20200527 03:36:39.848"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:39.851" level="INFO">Running command 'ozone sh key get /29274-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:43.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:43.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:39.849" endtime="20200527 03:36:43.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:43.542" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:43.541" endtime="20200527 03:36:43.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:43.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:43.542" endtime="20200527 03:36:43.543"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:39.848" endtime="20200527 03:36:43.543"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:43.547" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:43.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:43.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:43.543" endtime="20200527 03:36:43.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:43.550" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:43.550" endtime="20200527 03:36:43.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:43.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:43.551" endtime="20200527 03:36:43.551"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:43.543" endtime="20200527 03:36:43.551"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:43.555" level="INFO">Running command 'ozone sh key get /29274-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:45.405" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 03:36:45.405" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 03:36:43.552" endtime="20200527 03:36:45.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:45.406" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 03:36:45.406" endtime="20200527 03:36:45.406"></status>
</kw>
<msg timestamp="20200527 03:36:45.407" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 03:36:43.552" endtime="20200527 03:36:45.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:45.407" endtime="20200527 03:36:45.407"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:45.410" level="INFO">Running command 'ozone sh key get --force /29274-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:48.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:48.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:45.408" endtime="20200527 03:36:48.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:48.874" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:48.873" endtime="20200527 03:36:48.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:48.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:48.874" endtime="20200527 03:36:48.875"></status>
</kw>
<msg timestamp="20200527 03:36:48.875" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 03:36:45.407" endtime="20200527 03:36:48.875"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:48.875" endtime="20200527 03:36:48.876"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:48.879" level="INFO">Running command 'ozone sh key info /29274-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:50.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:50.855" level="INFO">${output} = {
  "volumeName": "29274-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T03:36:37.853Z",
  "modificationTime": "2020-05-27T03:36:39.469Z",
  "...</msg>
<status status="PASS" starttime="20200527 03:36:48.877" endtime="20200527 03:36:50.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:50.856" level="INFO">{
  "volumeName": "29274-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T03:36:37.853Z",
  "modificationTime": "2020-05-27T03:36:39.469Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104238323980763260,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 03:36:50.855" endtime="20200527 03:36:50.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:50.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:50.856" endtime="20200527 03:36:50.857"></status>
</kw>
<msg timestamp="20200527 03:36:50.857" level="INFO">${result} = {
  "volumeName": "29274-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T03:36:37.853Z",
  "modificationTime": "2020-05-27T03:36:39.469Z",
  "...</msg>
<status status="PASS" starttime="20200527 03:36:48.876" endtime="20200527 03:36:50.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:50.858" endtime="20200527 03:36:50.858"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:50.862" level="INFO">Running command 'ozone sh key list /29274-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:52.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:52.813" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 03:36:50.859" endtime="20200527 03:36:52.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:52.814" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 03:36:52.813" endtime="20200527 03:36:52.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:52.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:52.814" endtime="20200527 03:36:52.814"></status>
</kw>
<msg timestamp="20200527 03:36:52.815" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 03:36:50.858" endtime="20200527 03:36:52.815"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:52.815" endtime="20200527 03:36:52.815"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:52.818" level="INFO">Running command 'ozone sh key rename /29274-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:54.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:54.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:52.816" endtime="20200527 03:36:54.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:54.739" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:54.738" endtime="20200527 03:36:54.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:54.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:54.739" endtime="20200527 03:36:54.740"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:52.815" endtime="20200527 03:36:54.740"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:54.743" level="INFO">Running command 'ozone sh key list /29274-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:56.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:56.663" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 03:36:54.741" endtime="20200527 03:36:56.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:56.664" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 03:36:56.663" endtime="20200527 03:36:56.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:56.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:56.664" endtime="20200527 03:36:56.665"></status>
</kw>
<msg timestamp="20200527 03:36:56.665" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 03:36:54.740" endtime="20200527 03:36:56.665"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 03:36:56.665" endtime="20200527 03:36:56.666"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:56.669" level="INFO">Running command 'ozone sh key delete /29274-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:36:58.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:36:58.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:56.667" endtime="20200527 03:36:58.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:36:58.850" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:36:58.849" endtime="20200527 03:36:58.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:36:58.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:36:58.851" endtime="20200527 03:36:58.851"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:56.666" endtime="20200527 03:36:58.851"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:36.023" endtime="20200527 03:36:58.852"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:36.023" endtime="20200527 03:36:58.852"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:36:58.854" level="INFO">Running command 'ozone sh bucket delete /29274-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:37:00.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:37:00.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 03:36:58.852" endtime="20200527 03:37:00.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:37:00.589" level="INFO"></msg>
<status status="PASS" starttime="20200527 03:37:00.588" endtime="20200527 03:37:00.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:37:00.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:37:00.589" endtime="20200527 03:37:00.590"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:58.852" endtime="20200527 03:37:00.590"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 03:37:00.593" level="INFO">Running command 'ozone sh volume delete /29274-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 03:37:02.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 03:37:02.225" level="INFO">${output} = Volume 29274-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200527 03:37:00.591" endtime="20200527 03:37:02.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 03:37:02.227" level="INFO">Volume 29274-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200527 03:37:02.226" endtime="20200527 03:37:02.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 03:37:02.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 03:37:02.227" endtime="20200527 03:37:02.228"></status>
</kw>
<status status="PASS" starttime="20200527 03:37:00.590" endtime="20200527 03:37:02.228"></status>
</kw>
<status status="PASS" starttime="20200527 03:36:18.749" endtime="20200527 03:37:02.229"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 03:36:18.748" endtime="20200527 03:37:02.229" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200527 03:34:05.609" endtime="20200527 03:37:02.231"></status>
</suite>
<status status="PASS" starttime="20200527 03:33:05.660" endtime="20200527 03:37:02.235"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
