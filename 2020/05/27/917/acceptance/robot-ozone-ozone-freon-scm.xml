<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 14:37:36.875" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:37:36.924" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:37:44.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:37:44.006" level="INFO">${output} = 2020-05-27 14:37:37,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:37,877 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:37:36.920" endtime="20200527 14:37:44.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:37:44.007" level="INFO">2020-05-27 14:37:37,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:37,877 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:37:37,877 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:37:38,546 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-27 14:37:38,547 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-27 14:37:38,547 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-27 14:37:38,547 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-05-27 14:37:38,548 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-27 14:37:38,548 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 14:37:38,548 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-27 14:37:38,549 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 14:37:38,564 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:37:38,590 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-94794, with hadoop as owner.
2020-05-27 14:37:38,612 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-94794/bucket-0-47354, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:37:39,097 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 14:37:39,571 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,041
Average Time spent in bucket creation: 00:00:00,009
Average Time spent in key creation: 00:00:00,044
Average Time spent in key write: 00:00:00,589
Total bytes written: 10240
Total Execution time: 00:00:05,681
***************************************************</msg>
<status status="PASS" starttime="20200527 14:37:44.006" endtime="20200527 14:37:44.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:37:44.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:37:44.007" endtime="20200527 14:37:44.008"></status>
</kw>
<msg timestamp="20200527 14:37:44.008" level="INFO">${result} = 2020-05-27 14:37:37,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:37,877 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:37:36.919" endtime="20200527 14:37:44.008"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:37:44.009" endtime="20200527 14:37:44.009"></status>
</kw>
<status status="PASS" starttime="20200527 14:37:44.008" endtime="20200527 14:37:44.009"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:37:36.918" endtime="20200527 14:37:44.009" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:37:44.014" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:37:48.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:37:48.108" level="INFO">${output} = 2020-05-27 14:37:44,839 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:44,945 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:37:44.011" endtime="20200527 14:37:48.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:37:48.109" level="INFO">2020-05-27 14:37:44,839 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:44,945 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:37:44,945 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:37:45,059 [main] INFO freon.BaseFreonGenerator: Executing test with prefix f06t1uzurz
2020-05-27 14:37:45,072 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:37:45,611 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-05-27 14:37:45,627 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:37:46,052 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 14:37:46,088 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:37:47,088 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:37:47,783 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1128.705852, max=1128.705852, mean=1128.705852, stddev=0.0, median=1128.705852, p75=1128.705852, p95=1128.705852, p98=1128.705852, p99=1128.705852, p999=1128.705852, mean_rate=0.4670426571159731, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:37:47,783 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-05-27 14:37:47,784 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:37:47,784 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:37:48.108" endtime="20200527 14:37:48.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:37:48.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:37:48.109" endtime="20200527 14:37:48.110"></status>
</kw>
<msg timestamp="20200527 14:37:48.110" level="INFO">${result} = 2020-05-27 14:37:44,839 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:44,945 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:37:44.010" endtime="20200527 14:37:48.110"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:37:48.110" endtime="20200527 14:37:48.111"></status>
</kw>
<status status="PASS" starttime="20200527 14:37:48.110" endtime="20200527 14:37:48.111"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:37:44.010" endtime="20200527 14:37:48.111" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:37:48.115" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:37:50.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:37:50.977" level="INFO">${output} = 2020-05-27 14:37:48,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:49,104 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:37:48.113" endtime="20200527 14:37:50.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:37:50.978" level="INFO">2020-05-27 14:37:48,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:49,104 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:37:49,105 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:37:49,288 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yuymjzaxv5
2020-05-27 14:37:49,312 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:37:50,320 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:37:50,968 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=29.936939, max=29.936939, mean=29.936939, stddev=0.0, median=29.936939, p75=29.936939, p95=29.936939, p98=29.936939, p99=29.936939, p999=29.936939, mean_rate=0.8952952628761072, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:37:50,969 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 14:37:50,969 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:37:50,969 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:37:50.978" endtime="20200527 14:37:50.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:37:50.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:37:50.979" endtime="20200527 14:37:50.979"></status>
</kw>
<msg timestamp="20200527 14:37:50.980" level="INFO">${result} = 2020-05-27 14:37:48,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:49,104 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:37:48.112" endtime="20200527 14:37:50.980"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:37:50.980" endtime="20200527 14:37:50.981"></status>
</kw>
<status status="PASS" starttime="20200527 14:37:50.980" endtime="20200527 14:37:50.981"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:37:48.111" endtime="20200527 14:37:50.981" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:37:50.985" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:37:53.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:37:53.731" level="INFO">${output} = 2020-05-27 14:37:51,800 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:51,930 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:37:50.983" endtime="20200527 14:37:53.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:37:53.732" level="INFO">2020-05-27 14:37:51,800 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:51,930 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:37:51,930 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:37:52,096 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ncmmjzkprh
2020-05-27 14:37:52,114 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:37:53,120 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:37:53,723 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=7.98615, max=7.98615, mean=7.98615, stddev=0.0, median=7.98615, p75=7.98615, p95=7.98615, p98=7.98615, p99=7.98615, p999=7.98615, mean_rate=0.8919539924529222, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:37:53,723 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 14:37:53,724 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:37:53,724 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:37:53.732" endtime="20200527 14:37:53.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:37:53.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:37:53.733" endtime="20200527 14:37:53.733"></status>
</kw>
<msg timestamp="20200527 14:37:53.733" level="INFO">${result} = 2020-05-27 14:37:51,800 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:37:51,930 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:37:50.982" endtime="20200527 14:37:53.733"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:37:53.734" endtime="20200527 14:37:53.734"></status>
</kw>
<status status="PASS" starttime="20200527 14:37:53.733" endtime="20200527 14:37:53.734"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:37:50.982" endtime="20200527 14:37:53.734" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200527 14:37:36.898" endtime="20200527 14:37:53.736"></status>
</suite>
<status status="PASS" starttime="20200527 14:37:36.875" endtime="20200527 14:37:53.738"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
