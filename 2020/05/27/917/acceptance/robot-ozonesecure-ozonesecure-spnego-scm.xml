<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 14:58:55.226" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:58:55.281" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:58:55.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:58:55.282" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:58:55.276" endtime="20200527 14:58:55.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:58:55.283" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:58:55.282" endtime="20200527 14:58:55.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:58:55.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:58:55.283" endtime="20200527 14:58:55.283"></status>
</kw>
<msg timestamp="20200527 14:58:55.284" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:58:55.276" endtime="20200527 14:58:55.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:58:55.285" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:58:55.284" endtime="20200527 14:58:55.285"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:58:55.288" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:58:55.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:58:55.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:58:55.286" endtime="20200527 14:58:55.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:58:55.298" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:58:55.297" endtime="20200527 14:58:55.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:58:55.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:58:55.298" endtime="20200527 14:58:55.298"></status>
</kw>
<status status="PASS" starttime="20200527 14:58:55.285" endtime="20200527 14:58:55.298"></status>
</kw>
<status status="PASS" starttime="20200527 14:58:55.285" endtime="20200527 14:58:55.299"></status>
</kw>
<status status="PASS" starttime="20200527 14:58:55.275" endtime="20200527 14:58:55.299"></status>
</kw>
<status status="PASS" starttime="20200527 14:58:55.275" endtime="20200527 14:58:55.299"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:58:55.302" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:02.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:02.900" level="INFO">${output} = 2020-05-27 14:58:56,181 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:58:56,333 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:58:55.299" endtime="20200527 14:59:02.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:02.901" level="INFO">2020-05-27 14:58:56,181 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:58:56,333 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:58:56,334 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-05-27 14:58:57,415 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-05-27 14:58:57,416 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-27 14:58:57,416 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-27 14:58:57,416 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-05-27 14:58:57,416 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-05-27 14:58:57,416 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 14:58:57,416 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-27 14:58:57,432 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 14:58:57,445 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-05-27 14:58:57,487 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-02510, with testuser/scm@EXAMPLE.COM as owner.
2020-05-27 14:58:57,520 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-02510/bucket-0-64050, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:58:57,869 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 14:58:58,449 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,013
Average Time spent in key write: 00:00:00,074
Total bytes written: 2050
Total Execution time: 00:00:06,100
***************************************************</msg>
<status status="PASS" starttime="20200527 14:59:02.901" endtime="20200527 14:59:02.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:02.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:02.902" endtime="20200527 14:59:02.902"></status>
</kw>
<status status="PASS" starttime="20200527 14:58:55.299" endtime="20200527 14:59:02.902"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:58:55.274" endtime="20200527 14:59:02.902" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:02.907" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:02.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:02.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:59:02.905" endtime="20200527 14:59:02.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:02.912" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:59:02.911" endtime="20200527 14:59:02.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:02.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:02.912" endtime="20200527 14:59:02.912"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:02.905" endtime="20200527 14:59:02.912"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:02.904" endtime="20200527 14:59:02.913"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:02.915" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:02.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:02.936" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200527 14:59:02.913" endtime="20200527 14:59:02.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:02.937" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200527 14:59:02.937" endtime="20200527 14:59:02.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:02.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:02.938" endtime="20200527 14:59:02.938"></status>
</kw>
<msg timestamp="20200527 14:59:02.938" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200527 14:59:02.913" endtime="20200527 14:59:02.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 14:59:02.938" endtime="20200527 14:59:02.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:02.943" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:02.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:02.944" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:59:02.940" endtime="20200527 14:59:02.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:02.945" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:59:02.945" endtime="20200527 14:59:02.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:02.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:02.945" endtime="20200527 14:59:02.946"></status>
</kw>
<msg timestamp="20200527 14:59:02.946" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:59:02.940" endtime="20200527 14:59:02.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:59:02.946" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:59:02.946" endtime="20200527 14:59:02.946"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:02.949" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:02.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:02.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:59:02.947" endtime="20200527 14:59:02.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:02.959" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:59:02.958" endtime="20200527 14:59:02.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:02.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:02.959" endtime="20200527 14:59:02.960"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:02.947" endtime="20200527 14:59:02.960"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:02.947" endtime="20200527 14:59:02.960"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:02.939" endtime="20200527 14:59:02.960"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:02.939" endtime="20200527 14:59:02.960"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:02.962" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:02.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:02.986" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200527 14:59:02.960" endtime="20200527 14:59:02.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:02.987" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x830f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.10) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaHEFJRMaysA9oNXezHYjF9aVHoT1/Vgm129S2mnWe6A17SgZwrbEgdsnHbdy5/9YeFZkq8MkhAmm5mvoWFMC+cgt2TF9NfnnXJW+A7f3JumEyQjftBKPcFZW1WsfnYqhPQhf7sC7wad57/42EtX673herUCliYhJAYsYtXnX55eFQm3o1A1E0dkCJVT76BWouHiYifB6lA45xrRJ1nqWjbkpxEpenDw6DdMaPYQCxvROc7B6LB/kvBLD/ndumj9VLzau46UxuSe/baoRN9YPXtk9TrouIML4CrjJ+xuqZ3BqYxvXQDPzQT8sSd34jbgBon75dgHPfytNgXlLYVPT5h6kaHhKWbpIHWMIHToAMCARKigcsEgcgorKekjf/nGDSAP4Qt3pOPP8XXNGRIIvWoexqTf+/xWPQLyDEWzdmaSCticXKbDmi+4pdk+Ei6S8OQl0X2aau+WBWT7O3WrEP8nsi0tQ7Pwv+/CEiiMt07x99ZVytcA7OxVQfAt4fnHNOfQwtlpBOiYdxINLqkwBmrPMeN8IZNB5DArUzmDLe0Lk3h7BOiiOJAZnkVn3ylcQlP9TBCgyS5OAvWkN0PYpGpOkOuvYMRRFErkantZjqg+ihXyuWnWLxRKM/wGkeu8w==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 14:59:02 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 14:59:02 GMT
&lt; Date: Wed, 27 May 2020 14:59:02 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 27 May 2020 14:59:02 GMT
&lt; Date: Wed, 27 May 2020 14:59:02 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCyzhf5oWRcBgBsFtc90QpSSi1x7+O8NfeIA53AN2ZZIUDIZaYiaMWJ1pFatR4UHBsVeDAYxnCsiJKOs/j8EGo5zVD
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590627542982&amp;s=WBePhokaUpQehHjf22BVhecoA5uJQae1Qg/mcu/t+9k="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 27 May 2020 14:00:14 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:59:02 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 14:59:02 GMT
Date: Wed, 27 May 2020 14:59:02 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 27 May 2020 14:59:02 GMT
Date: Wed, 27 May 2020 14:59:02 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCyzhf5oWRcBgBsFtc90QpSSi1x7+O8NfeIA53AN2ZZIUDIZaYiaMWJ1pFatR4UHBsVeDAYxnCsiJKOs/j8EGo5zVD
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590627542982&amp;s=WBePhokaUpQehHjf22BVhecoA5uJQae1Qg/mcu/t+9k="; Path=/; HttpOnly
Last-Modified: Wed, 27 May 2020 14:00:14 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200527 14:59:02.987" endtime="20200527 14:59:02.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:02.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:02.988" endtime="20200527 14:59:02.988"></status>
</kw>
<msg timestamp="20200527 14:59:02.988" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200527 14:59:02.960" endtime="20200527 14:59:02.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:59:02.988" endtime="20200527 14:59:02.989"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:02.904" endtime="20200527 14:59:02.989"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:59:02.903" endtime="20200527 14:59:02.989" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:02.995" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:02.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:02.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:59:02.992" endtime="20200527 14:59:02.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:02.998" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:59:02.997" endtime="20200527 14:59:02.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:02.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:02.998" endtime="20200527 14:59:02.998"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:02.991" endtime="20200527 14:59:02.999"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:02.991" endtime="20200527 14:59:02.999"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.002" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.014" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200527 14:59:02.999" endtime="20200527 14:59:03.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.015" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200527 14:59:03.015" endtime="20200527 14:59:03.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.016" endtime="20200527 14:59:03.016"></status>
</kw>
<msg timestamp="20200527 14:59:03.016" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200527 14:59:02.999" endtime="20200527 14:59:03.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 14:59:03.016" endtime="20200527 14:59:03.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.021" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.022" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:59:03.018" endtime="20200527 14:59:03.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.022" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:59:03.022" endtime="20200527 14:59:03.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.023" endtime="20200527 14:59:03.023"></status>
</kw>
<msg timestamp="20200527 14:59:03.024" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:59:03.017" endtime="20200527 14:59:03.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:59:03.024" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:59:03.024" endtime="20200527 14:59:03.024"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.027" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:59:03.025" endtime="20200527 14:59:03.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.035" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:59:03.035" endtime="20200527 14:59:03.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.036" endtime="20200527 14:59:03.036"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.025" endtime="20200527 14:59:03.036"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.024" endtime="20200527 14:59:03.036"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.017" endtime="20200527 14:59:03.036"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.017" endtime="20200527 14:59:03.036"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.039" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.110" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200527 14:59:03.037" endtime="20200527 14:59:03.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.111" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x14bbf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.10) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQa+z8/a8KI3mrY4DdrUDggKgFZh3bUKFYItg2h1C+5aWjfitQJsYJ6aRoKEocTvaPc8p8lvMDLALdaaRYD+ZXaYK+5+ML+rYNBdvxNQdkgHoPIwF88xTFFb5tj8c43zNeEgi2tgorNAkeMoyWvKyhWN+4Sy1NM8xqg1FOBxsGu5rWOfqMmKzxKap6yyix3UmeXZ/zmmgBcOB9+3SgmNfOrgi4Ed7YA1WZa9+BhG0NoT0hTft1NmwlNmjHmHnMkr4BSSaD0YvKZ+YwEFFkqLwWxb29+GrSmApW5Wn3v3ExtfEekDHkjsChFBY+NHXmETZcRwcQUPJAy4UNb1T4tTfysJcht/0mrHpIHWMIHToAMCARKigcsEgcgMq0gPAuf1gMVDXaCKHeiSQSEEP5qeoveCTQdGy9c/UEosoJQmU2X6Qpg126/ihZRnNb2RiaJdLj5j7j5DC76LHzvtMdKXi0ouP0wkAzo7b+Bsh1HQNRv4nGuMLeu5NFhvRixc8kx+6/MXPuYP4Dkl4ku48k5xeqSjwEnm7uLXyH56jeIJv2f7mQsesehYlTCKtlJ7+uXxDwnrTF/WeE/N1VEqYqmEj2XG+kW8/Wz3Wb3kQfFfAv0EazUxwyWR0eWf9Cx+R9PxLg==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 14:59:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 14:59:03 GMT
&lt; Date: Wed, 27 May 2020 14:59:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCIrFn8nnWwhrudK/6UAO948k533DwmqiYopAyC+uiW3HK6yWEGj951MMRxurxaXn5wQ6M4Zdhgy84zCA644nHhMQU
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590627543074&amp;s=fMtSxVxBSGfqZ3KaMvBkNc2MNd9+uHrHUKtH8GqQ4Qk="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1590591543074.tgz"
&lt; Content-Length: 73637
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:59:03 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 14:59:03 GMT
Date: Wed, 27 May 2020 14:59:03 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCIrFn8nnWwhrudK/6UAO948k533DwmqiYopAyC+uiW3HK6yWEGj951MMRxurxaXn5wQ6M4Zdhgy84zCA644nHhMQU
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590627543074&amp;s=fMtSxVxBSGfqZ3KaMvBkNc2MNd9+uHrHUKtH8GqQ4Qk="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1590591543074.tgz"
Content-Length: 73637
</msg>
<status status="PASS" starttime="20200527 14:59:03.110" endtime="20200527 14:59:03.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.111" endtime="20200527 14:59:03.112"></status>
</kw>
<msg timestamp="20200527 14:59:03.112" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200527 14:59:03.037" endtime="20200527 14:59:03.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:59:03.112" endtime="20200527 14:59:03.112"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:02.991" endtime="20200527 14:59:03.112"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:59:02.990" endtime="20200527 14:59:03.113" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.117" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:59:03.115" endtime="20200527 14:59:03.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.121" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:59:03.121" endtime="20200527 14:59:03.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.122" endtime="20200527 14:59:03.122"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.115" endtime="20200527 14:59:03.122"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.114" endtime="20200527 14:59:03.122"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.126" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.137" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200527 14:59:03.123" endtime="20200527 14:59:03.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.138" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200527 14:59:03.137" endtime="20200527 14:59:03.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.138" endtime="20200527 14:59:03.138"></status>
</kw>
<msg timestamp="20200527 14:59:03.139" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200527 14:59:03.122" endtime="20200527 14:59:03.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 14:59:03.139" endtime="20200527 14:59:03.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.143" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.144" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:59:03.140" endtime="20200527 14:59:03.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.145" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:59:03.144" endtime="20200527 14:59:03.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.145" endtime="20200527 14:59:03.146"></status>
</kw>
<msg timestamp="20200527 14:59:03.146" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:59:03.140" endtime="20200527 14:59:03.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:59:03.146" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:59:03.146" endtime="20200527 14:59:03.146"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.150" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:59:03.147" endtime="20200527 14:59:03.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.162" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:59:03.162" endtime="20200527 14:59:03.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.162" endtime="20200527 14:59:03.163"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.147" endtime="20200527 14:59:03.163"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.147" endtime="20200527 14:59:03.163"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.140" endtime="20200527 14:59:03.163"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.139" endtime="20200527 14:59:03.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.166" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.198" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200527 14:59:03.164" endtime="20200527 14:59:03.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.199" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x9fff50
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.10) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZ7GclqBFIBgjSG3OOZfFKSuYDUgR7CneqnNUianpDf9X0jt7/tO2vp8vF+0j+K5KFhlBULEOc7UvYGC+kQ6kXBt/fsVX1RLAj6qYHgpfLaNBGxYrookmkMLCxjMsvkMUx4YkYuopSSS0q4cjukVxksfsNeM6Y4u4lOUl4nrQRI9xanIhJ9AQkPogLoo7PM5NtXJNZICN/bBtkzRumuqmh2qYsgdSs61MPZTaSr8TM/19c3cPGEH9O71i+ZFj9bH3V92xX9UycL8KoGH1IOvfVs5SxdRPzXLxK7ImxwQBVyYbhxM6gToaAceqtcoNpZmUiFyTqR89QJTuhGdYSYEdjmYU7OQ7nBpIHWMIHToAMCARKigcsEgch6LCSELZZzS25RblOnPchq0SkTOx3ZnMKT8N+z51T1vbQX9jD7487mZYMtcgZ6mGFen7HcDqJQNDTddJYzbIKM0bZkK7ZOdASnjimXFYfOrn7nw8JiSnJeaWmRYsdoS263uMtWHl9Yf1p3AJy1BLaj82AcYYc0+OekQp4LVe5Qh0dhn20K1cPNuAi8q/Ld1gCzRr1oLlUgE3RS+BdlH0MJkLELM1fJQmmJgEwmUTaKAjz1Lh8TSapSNTL4/ifmkYka/p/XHP7cLA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 14:59:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 14:59:03 GMT
&lt; Date: Wed, 27 May 2020 14:59:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCnZNcL/da1pkoIROoeFyg+2XqItf2/xG0dvrW1h/3BuIh/Zo9YYmL4dZEcDxKe2y4HxlH1GubT7l3xHnbdB+ZNAn7
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590627543182&amp;s=NgJzosNIJgLnD9G9IdICbmVWfNBGaivU6ZTTvl+UUow="; Path=/; HttpOnly
&lt; Content-Length: 534
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:59:03 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 14:59:03 GMT
Date: Wed, 27 May 2020 14:59:03 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCnZNcL/da1pkoIROoeFyg+2XqItf2/xG0dvrW1h/3BuIh/Zo9YYmL4dZEcDxKe2y4HxlH1GubT7l3xHnbdB+ZNAn7
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590627543182&amp;s=NgJzosNIJgLnD9G9IdICbmVWfNBGaivU6ZTTvl+UUow="; Path=/; HttpOnly
Content-Length: 534
</msg>
<status status="PASS" starttime="20200527 14:59:03.199" endtime="20200527 14:59:03.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.200" endtime="20200527 14:59:03.200"></status>
</kw>
<msg timestamp="20200527 14:59:03.200" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.10...
* Connected to om (172.25.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200527 14:59:03.163" endtime="20200527 14:59:03.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:59:03.201" endtime="20200527 14:59:03.201"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.114" endtime="20200527 14:59:03.201"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:59:03.113" endtime="20200527 14:59:03.201" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.207" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:59:03.204" endtime="20200527 14:59:03.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.210" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:59:03.209" endtime="20200527 14:59:03.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.210" endtime="20200527 14:59:03.210"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.203" endtime="20200527 14:59:03.211"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.203" endtime="20200527 14:59:03.211"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.214" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.229" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.9...
* Connected to scm (172.25.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 14:59:03.211" endtime="20200527 14:59:03.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.230" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.9...
* Connected to scm (172.25.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200527 14:59:03.229" endtime="20200527 14:59:03.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.230" endtime="20200527 14:59:03.230"></status>
</kw>
<msg timestamp="20200527 14:59:03.231" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.9...
* Connected to scm (172.25.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 14:59:03.211" endtime="20200527 14:59:03.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 14:59:03.231" endtime="20200527 14:59:03.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.235" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.237" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:59:03.232" endtime="20200527 14:59:03.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.237" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:59:03.237" endtime="20200527 14:59:03.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.238" endtime="20200527 14:59:03.238"></status>
</kw>
<msg timestamp="20200527 14:59:03.238" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:59:03.232" endtime="20200527 14:59:03.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:59:03.239" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:59:03.238" endtime="20200527 14:59:03.239"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.242" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:59:03.240" endtime="20200527 14:59:03.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.252" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:59:03.252" endtime="20200527 14:59:03.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.252" endtime="20200527 14:59:03.253"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.239" endtime="20200527 14:59:03.253"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.239" endtime="20200527 14:59:03.253"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.232" endtime="20200527 14:59:03.253"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.231" endtime="20200527 14:59:03.253"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.256" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.282" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.9...
* Connected to scm (172.25.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 14:59:03.254" endtime="20200527 14:59:03.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.283" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.9...
* Connected to scm (172.25.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0xc7cf20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.25.0.9) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGOnyuaxNM7vw4CKcHU983aoMW35U0QUcJ5SMNbYD0N3VioBgWpKyA6ZrSHgzGEOcYboXpPmjKdrxpKbSr+5m1+4tGr2gRD/yxn14bW2+BBqYVVlBtFFwLDMb7onYmQal+oP1bTa0vDw7aKzrJ7qxpkkx0k0AmXsnN6XkFrvRtlEFl6rHGZB66RSonW4jNdui49EbrRL7y/Qp5ZXi5KvUO2GvgVGsLjAat7r0UwxPI4tuDLmrHDEDW6npw/Lqpq16ndJ/gaH8WVk00vfsutwuPB5N+FJEwJdSAt1Hcz/bMVWu1JHS4KQB7eF0VoiACas3VwUItjyVryBI2q81QPgj9aPmZHTJMKqSB1jCB06ADAgESooHLBIHI9mxuMkTOSOxbOiL/d/OJtTErWxJgSCn5AZs1Zj3glkP5sc/MGzjx6sWIl5OmzDOiVXQOJDJtn/Rc791Ipg3PJKc/IbLmRSQxKZv3TJ6SVYK+nYeg70cKIbmjQNRAmy8W8U9RD3RXfcUkqdZT/X9veIhyLGQD5rNZ8EsCeMfP+v/c4PpE5n3cMtxdoTgrl48UXHdv0pbzL8e4qQvpShue/g21Xrv0yVXYmavC4EdHNSzxTyRW463NEtBIbC/gqmD12e1EHulcbJ0=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 14:59:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 14:59:03 GMT
&lt; Date: Wed, 27 May 2020 14:59:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 27 May 2020 14:59:03 GMT
&lt; Date: Wed, 27 May 2020 14:59:03 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC+inPIlAd5JiMULfnqNKsI0lVnw/7gCBmW/k6XM1uNqDixVMAAX/OrSQdu5iv83L5BiSSjALBQeGlIvbqmu+S8LAy
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590627543277&amp;s=X2nSVeyTMD+5Hf94pvV1jkFWXXo9zvZvC8r4axPRCNw="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 27 May 2020 13:59:52 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:59:03 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 14:59:03 GMT
Date: Wed, 27 May 2020 14:59:03 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 27 May 2020 14:59:03 GMT
Date: Wed, 27 May 2020 14:59:03 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC+inPIlAd5JiMULfnqNKsI0lVnw/7gCBmW/k6XM1uNqDixVMAAX/OrSQdu5iv83L5BiSSjALBQeGlIvbqmu+S8LAy
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590627543277&amp;s=X2nSVeyTMD+5Hf94pvV1jkFWXXo9zvZvC8r4axPRCNw="; Path=/; HttpOnly
Last-Modified: Wed, 27 May 2020 13:59:52 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200527 14:59:03.282" endtime="20200527 14:59:03.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.283" endtime="20200527 14:59:03.284"></status>
</kw>
<msg timestamp="20200527 14:59:03.284" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.9...
* Connected to scm (172.25.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 14:59:03.253" endtime="20200527 14:59:03.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:59:03.284" endtime="20200527 14:59:03.284"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.203" endtime="20200527 14:59:03.284"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:59:03.202" endtime="20200527 14:59:03.285" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.290" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:59:03.287" endtime="20200527 14:59:03.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.293" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:59:03.292" endtime="20200527 14:59:03.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.293" endtime="20200527 14:59:03.293"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.287" endtime="20200527 14:59:03.294"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.286" endtime="20200527 14:59:03.294"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.298" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.312" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200527 14:59:03.294" endtime="20200527 14:59:03.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.313" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200527 14:59:03.312" endtime="20200527 14:59:03.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.313" endtime="20200527 14:59:03.314"></status>
</kw>
<msg timestamp="20200527 14:59:03.314" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200527 14:59:03.294" endtime="20200527 14:59:03.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 14:59:03.314" endtime="20200527 14:59:03.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.319" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.320" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 14:59:03.316" endtime="20200527 14:59:03.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.321" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 14:59:03.320" endtime="20200527 14:59:03.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.321" endtime="20200527 14:59:03.322"></status>
</kw>
<msg timestamp="20200527 14:59:03.322" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 14:59:03.316" endtime="20200527 14:59:03.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 14:59:03.322" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 14:59:03.322" endtime="20200527 14:59:03.322"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.326" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:59:03.323" endtime="20200527 14:59:03.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.343" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:59:03.342" endtime="20200527 14:59:03.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.343" endtime="20200527 14:59:03.343"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.323" endtime="20200527 14:59:03.343"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.323" endtime="20200527 14:59:03.343"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.315" endtime="20200527 14:59:03.344"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.315" endtime="20200527 14:59:03.344"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:59:03.347" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:59:03.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:59:03.370" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200527 14:59:03.344" endtime="20200527 14:59:03.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:59:03.371" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0xff0f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.25.0.7) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYLJ6kM/68htcbF1Jzp058o+T61+StnzYR+wNQcyf36gI7nmnfjmSL3F236+KLkl4TFI7CcAUH7p9P+EwUMFVZ3+KH2ir5ijzPdtJRN98l+ZQXMaKM9z32v8QdtOnPv1Lzm8VL/2Oth4c7wJFdEa1/i0Kx6rTgDVH8W7l3wrJNRzvO5MSvjGW5q2GNXBDNCFKjLwKRTVWj1crvS9gYtZ8BfjgB6cC+ZX5Gn0PS52BdacQXGlvgtfmUk3H6XZCZaKVyQ1DNrIaeCqfXT5wc6FnBIkMHJwtvHRo7i/baxWtZQwpWwYdqBuSAvNUJYQz3Z1JzMTsV28AMCRbyf9iPoSj7auorDpH83pIHWMIHToAMCARKigcsEgcjsWp3HbR7wd0a+DjQzM7lvyrb517zBMlTXKiNQ4TfvwUpqZuEB36+YgPnmYlWqw87ltLRfzp9yMX+2BQ7IFsgvlPrHRUCkrXQxjDtBbD4G6MsWi/mraftBFuF++OUk5gfvpWPUbSLh1+oaW8E+mOsZ54lJ0H3eE2p9a1orjc40VjSML2xs8dEhBeu7whf+Wgc1sWDPTm8M4tVxqUT94Jt4rP+wp+94XlcqM6jKKHYiVZcdjD9VIuLZZdc/yyS6TUSyxIHT7GPIFg==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 14:59:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 14:59:03 GMT
&lt; Date: Wed, 27 May 2020 14:59:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 27 May 2020 14:59:03 GMT
&lt; Date: Wed, 27 May 2020 14:59:03 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCc17eSn3Nk51UE4aitkJZGDaVDzjwdmQof9ZNjdGlyNa+rDPYOw2DdW2TthjnS/+dqGq1zVU0k0+lOj+ksqEGsvQi
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590627543366&amp;s=7sftzxjzDq3g7IcMtM4kyr2a2YsDTxaxua94/TY61Q8="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 27 May 2020 14:05:26 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:59:03 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 14:59:03 GMT
Date: Wed, 27 May 2020 14:59:03 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 27 May 2020 14:59:03 GMT
Date: Wed, 27 May 2020 14:59:03 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCc17eSn3Nk51UE4aitkJZGDaVDzjwdmQof9ZNjdGlyNa+rDPYOw2DdW2TthjnS/+dqGq1zVU0k0+lOj+ksqEGsvQi
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590627543366&amp;s=7sftzxjzDq3g7IcMtM4kyr2a2YsDTxaxua94/TY61Q8="; Path=/; HttpOnly
Last-Modified: Wed, 27 May 2020 14:05:26 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200527 14:59:03.370" endtime="20200527 14:59:03.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:59:03.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:59:03.371" endtime="20200527 14:59:03.372"></status>
</kw>
<msg timestamp="20200527 14:59:03.372" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200527 14:59:03.344" endtime="20200527 14:59:03.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:59:03.372" endtime="20200527 14:59:03.372"></status>
</kw>
<status status="PASS" starttime="20200527 14:59:03.286" endtime="20200527 14:59:03.372"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:59:03.285" endtime="20200527 14:59:03.373" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200527 14:58:55.253" endtime="20200527 14:59:03.374"></status>
</suite>
<status status="PASS" starttime="20200527 14:58:55.227" endtime="20200527 14:59:03.376"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
