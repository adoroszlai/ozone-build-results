<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 14:20:23.355" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:20:23.409" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:20:30.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:20:30.698" level="INFO">${output} = 2020-05-27 14:20:24,290 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:24,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:20:23.403" endtime="20200527 14:20:30.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:20:30.699" level="INFO">2020-05-27 14:20:24,290 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:24,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:20:24,463 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:20:25,238 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-27 14:20:25,239 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-27 14:20:25,239 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-27 14:20:25,239 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-05-27 14:20:25,239 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-27 14:20:25,239 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 14:20:25,239 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-27 14:20:25,245 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 14:20:25,259 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:20:25,292 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-83546, with hadoop as owner.
2020-05-27 14:20:25,326 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83546/bucket-0-32556, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:20:25,881 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 14:20:26,267 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,062
Average Time spent in bucket creation: 00:00:00,020
Average Time spent in key creation: 00:00:00,056
Average Time spent in key write: 00:00:00,642
Total bytes written: 10240
Total Execution time: 00:00:05,699
***************************************************</msg>
<status status="PASS" starttime="20200527 14:20:30.698" endtime="20200527 14:20:30.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:20:30.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:20:30.699" endtime="20200527 14:20:30.700"></status>
</kw>
<msg timestamp="20200527 14:20:30.700" level="INFO">${result} = 2020-05-27 14:20:24,290 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:24,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:20:23.403" endtime="20200527 14:20:30.700"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:20:30.700" endtime="20200527 14:20:30.701"></status>
</kw>
<status status="PASS" starttime="20200527 14:20:30.700" endtime="20200527 14:20:30.701"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:20:23.402" endtime="20200527 14:20:30.701" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:20:30.705" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:20:35.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:20:35.036" level="INFO">${output} = 2020-05-27 14:20:31,592 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:31,751 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:20:30.703" endtime="20200527 14:20:35.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:20:35.037" level="INFO">2020-05-27 14:20:31,592 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:31,751 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:20:31,751 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:20:31,932 [main] INFO freon.BaseFreonGenerator: Executing test with prefix amona3szz2
2020-05-27 14:20:31,952 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:20:32,506 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-05-27 14:20:32,538 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:20:32,955 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:20:33,103 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 14:20:33,956 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:20:34,708 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1262.478249, max=1262.478249, mean=1262.478249, stddev=0.0, median=1262.478249, p75=1262.478249, p95=1262.478249, p98=1262.478249, p99=1262.478249, p999=1262.478249, mean_rate=0.4687343235467477, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:20:34,708 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-05-27 14:20:34,710 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:20:34,710 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:20:35.037" endtime="20200527 14:20:35.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:20:35.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:20:35.038" endtime="20200527 14:20:35.038"></status>
</kw>
<msg timestamp="20200527 14:20:35.038" level="INFO">${result} = 2020-05-27 14:20:31,592 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:31,751 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:20:30.702" endtime="20200527 14:20:35.038"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:20:35.039" endtime="20200527 14:20:35.039"></status>
</kw>
<status status="PASS" starttime="20200527 14:20:35.039" endtime="20200527 14:20:35.039"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:20:30.702" endtime="20200527 14:20:35.040" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:20:35.044" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:20:37.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:20:37.912" level="INFO">${output} = 2020-05-27 14:20:35,896 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:36,021 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:20:35.042" endtime="20200527 14:20:37.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:20:37.913" level="INFO">2020-05-27 14:20:35,896 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:36,021 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:20:36,021 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:20:36,221 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lgv8t9fkgr
2020-05-27 14:20:36,237 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:20:37,248 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:20:37,904 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=69.213617, max=69.213617, mean=69.213617, stddev=0.0, median=69.213617, p75=69.213617, p95=69.213617, p98=69.213617, p99=69.213617, p999=69.213617, mean_rate=0.895743582177726, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:20:37,904 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 14:20:37,904 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:20:37,905 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:20:37.913" endtime="20200527 14:20:37.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:20:37.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:20:37.914" endtime="20200527 14:20:37.914"></status>
</kw>
<msg timestamp="20200527 14:20:37.914" level="INFO">${result} = 2020-05-27 14:20:35,896 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:36,021 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:20:35.041" endtime="20200527 14:20:37.914"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:20:37.915" endtime="20200527 14:20:37.915"></status>
</kw>
<status status="PASS" starttime="20200527 14:20:37.915" endtime="20200527 14:20:37.915"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:20:35.040" endtime="20200527 14:20:37.916" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:20:37.919" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:20:40.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:20:40.843" level="INFO">${output} = 2020-05-27 14:20:38,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:38,949 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:20:37.917" endtime="20200527 14:20:40.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:20:40.844" level="INFO">2020-05-27 14:20:38,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:38,949 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:20:38,949 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:20:39,090 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 5rgmc4m2kd
2020-05-27 14:20:39,111 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 14:20:40,114 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 14:20:40,828 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=18.295806, max=18.295806, mean=18.295806, stddev=0.0, median=18.295806, p75=18.295806, p95=18.295806, p98=18.295806, p99=18.295806, p999=18.295806, mean_rate=0.8991699501430944, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 14:20:40,835 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 14:20:40,835 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 14:20:40,835 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 14:20:40.843" endtime="20200527 14:20:40.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:20:40.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:20:40.844" endtime="20200527 14:20:40.845"></status>
</kw>
<msg timestamp="20200527 14:20:40.845" level="INFO">${result} = 2020-05-27 14:20:38,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:20:38,949 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:20:37.917" endtime="20200527 14:20:40.845"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:20:40.846" endtime="20200527 14:20:40.846"></status>
</kw>
<status status="PASS" starttime="20200527 14:20:40.845" endtime="20200527 14:20:40.846"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:20:37.916" endtime="20200527 14:20:40.846" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200527 14:20:23.381" endtime="20200527 14:20:40.847"></status>
</suite>
<status status="PASS" starttime="20200527 14:20:23.356" endtime="20200527 14:20:40.850"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
