<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 14:27:27.187" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200527 14:27:27.235" endtime="20200527 14:27:27.235"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:27:27.241" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:27:27.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:27:27.319" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:27:27 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 13:59:38 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200527 14:27:27.236" endtime="20200527 14:27:27.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:27:27.320" level="INFO">HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:27:27 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 13:59:38 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200527 14:27:27.319" endtime="20200527 14:27:27.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:27:27.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:27:27.320" endtime="20200527 14:27:27.321"></status>
</kw>
<msg timestamp="20200527 14:27:27.321" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 27 May 2020 14:27:27 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 13:59:38 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200527 14:27:27.235" endtime="20200527 14:27:27.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200527 14:27:27.321" endtime="20200527 14:27:27.322"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:27:27.234" endtime="20200527 14:27:27.322" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:27:27.324" endtime="20200527 14:27:27.325"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:27:27.330" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:36.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:36.292" level="INFO">${output} = 2020-05-27 14:27:28,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:27:28,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:27:27.325" endtime="20200527 14:28:36.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:36.293" level="INFO">2020-05-27 14:27:28,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:27:28,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 14:27:28,357 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 14:27:29,387 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-27 14:27:29,388 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-05-27 14:27:29,388 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-05-27 14:27:29,388 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-05-27 14:27:29,389 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-27 14:27:29,389 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 14:27:29,389 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-05-27 14:27:29,394 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-05-27 14:27:29,396 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 14:27:29,401 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-05-27 14:27:29,440 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-67246, with hadoop as owner.
2020-05-27 14:27:29,584 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-18334, with hadoop as owner.
2020-05-27 14:27:29,590 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-90269, with hadoop as owner.
2020-05-27 14:27:29,596 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-90948, with hadoop as owner.
2020-05-27 14:27:29,602 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-12545, with hadoop as owner.
2020-05-27 14:27:29,610 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-67246/bucket-0-49724, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,636 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-18334/bucket-0-54669, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,640 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90269/bucket-0-07396, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,647 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-90948/bucket-0-67098, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,652 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-12545/bucket-0-96548, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,656 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-67246/bucket-1-71275, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,662 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-18334/bucket-1-36529, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,667 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90269/bucket-1-41014, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,674 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-90948/bucket-1-11112, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,679 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-12545/bucket-1-11280, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,795 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-67246/bucket-2-46376, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,800 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-18334/bucket-2-56121, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,804 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90269/bucket-2-95517, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,812 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-90948/bucket-2-72845, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,818 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-12545/bucket-2-39298, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,824 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-67246/bucket-3-13564, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,830 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-18334/bucket-3-14713, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,836 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90269/bucket-3-75273, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,840 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-90948/bucket-3-08661, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,844 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-12545/bucket-3-17319, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,851 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-67246/bucket-4-27706, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,856 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-18334/bucket-4-21321, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,859 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90269/bucket-4-35392, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,863 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-90948/bucket-4-03466, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:29,867 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-12545/bucket-4-66900, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 14:27:30,411 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-05-27 14:27:30,440 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 14:27:31,413 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-05-27 14:27:32,413 [Thread-5] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-05-27 14:27:33,414 [Thread-5] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-05-27 14:27:34,414 [Thread-5] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-05-27 14:27:35,415 [Thread-5] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-05-27 14:27:36,419 [Thread-5] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-05-27 14:27:37,419 [Thread-5] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-05-27 14:27:38,420 [Thread-5] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-05-27 14:27:39,421 [Thread-5] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-05-27 14:27:40,421 [Thread-5] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-05-27 14:27:41,422 [Thread-5] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-05-27 14:27:42,422 [Thread-5] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-05-27 14:27:43,423 [Thread-5] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-05-27 14:27:44,424 [Thread-5] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-05-27 14:27:45,424 [Thread-5] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-05-27 14:27:46,425 [Thread-5] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-05-27 14:27:47,425 [Thread-5] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-05-27 14:27:48,426 [Thread-5] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-05-27 14:27:49,427 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-05-27 14:27:50,427 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-05-27 14:27:51,428 [Thread-5] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-05-27 14:27:52,428 [Thread-5] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-05-27 14:27:53,429 [Thread-5] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-05-27 14:27:54,429 [Thread-5] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-05-27 14:27:55,430 [Thread-5] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-05-27 14:27:56,430 [Thread-5] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-05-27 14:27:57,431 [Thread-5] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-05-27 14:27:58,432 [Thread-5] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-05-27 14:27:59,432 [Thread-5] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-05-27 14:28:00,433 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-05-27 14:28:01,433 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-05-27 14:28:02,434 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-05-27 14:28:03,435 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-05-27 14:28:04,435 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-05-27 14:28:05,436 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-05-27 14:28:06,436 [Thread-5] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-05-27 14:28:07,436 [Thread-5] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-05-27 14:28:08,437 [Thread-5] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-05-27 14:28:09,438 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-05-27 14:28:10,438 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-05-27 14:28:11,439 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-05-27 14:28:12,439 [Thread-5] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-05-27 14:28:13,440 [Thread-5] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-05-27 14:28:14,440 [Thread-5] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-05-27 14:28:15,441 [Thread-5] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-05-27 14:28:16,441 [Thread-5] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-05-27 14:28:17,442 [Thread-5] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-05-27 14:28:18,442 [Thread-5] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-05-27 14:28:19,443 [Thread-5] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-05-27 14:28:20,443 [Thread-5] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-05-27 14:28:21,444 [Thread-5] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-05-27 14:28:22,444 [Thread-5] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-05-27 14:28:23,445 [Thread-5] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-05-27 14:28:24,445 [Thread-5] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-05-27 14:28:25,446 [Thread-5] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-05-27 14:28:26,446 [Thread-5] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-05-27 14:28:27,447 [Thread-5] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-05-27 14:28:28,448 [Thread-5] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-05-27 14:28:29,448 [Thread-5] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-05-27 14:28:30,449 [Thread-5] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-05-27 14:28:31,449 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,177
Average Time spent in bucket creation: 00:00:00,207
Average Time spent in key creation: 00:00:01,644
Average Time spent in key write: 00:00:00,701
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:07,409
***************************************************</msg>
<status status="PASS" starttime="20200527 14:28:36.293" endtime="20200527 14:28:36.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:36.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:36.294" endtime="20200527 14:28:36.294"></status>
</kw>
<msg timestamp="20200527 14:28:36.294" level="INFO">${result} = 2020-05-27 14:27:28,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 14:27:28,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 14:27:27.325" endtime="20200527 14:28:36.294"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:36.295" endtime="20200527 14:28:36.295"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:36.295" endtime="20200527 14:28:36.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:36.296" endtime="20200527 14:28:36.296"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 14:27:27.323" endtime="20200527 14:28:36.296" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200527 14:27:27.213" endtime="20200527 14:28:36.297"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200527 14:28:36.304" level="INFO">${random} = 12345</msg>
<status status="PASS" starttime="20200527 14:28:36.303" endtime="20200527 14:28:36.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200527 14:28:36.304" level="INFO">${prefix} = 12345</msg>
<status status="PASS" starttime="20200527 14:28:36.304" endtime="20200527 14:28:36.304"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:36.303" endtime="20200527 14:28:36.304"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:36.305" endtime="20200527 14:28:36.305"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:36.308" level="INFO">Running command 'ozone sh volume info o3://om:9862/12345-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:37.916" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:28:37.916" level="INFO">${output} = VOLUME_NOT_FOUND Volume 12345-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 14:28:36.306" endtime="20200527 14:28:37.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:37.917" level="INFO">VOLUME_NOT_FOUND Volume 12345-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 14:28:37.916" endtime="20200527 14:28:37.917"></status>
</kw>
<msg timestamp="20200527 14:28:37.917" level="INFO">${result} = VOLUME_NOT_FOUND Volume 12345-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 14:28:36.306" endtime="20200527 14:28:37.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:37.918" endtime="20200527 14:28:37.918"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:37.921" level="INFO">Running command 'ozone sh volume create o3://om:9862/12345-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:39.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:39.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:28:37.919" endtime="20200527 14:28:39.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:39.630" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:28:39.629" endtime="20200527 14:28:39.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:39.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:39.630" endtime="20200527 14:28:39.630"></status>
</kw>
<msg timestamp="20200527 14:28:39.631" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:28:37.918" endtime="20200527 14:28:39.631"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:39.631" endtime="20200527 14:28:39.631"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:39.635" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="12345-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:41.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:41.438" level="INFO">${output} = {
  "metadata": {},
  "name": "12345-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:28:39.510Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 14:28:39.632" endtime="20200527 14:28:41.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:41.439" level="INFO">{
  "metadata": {},
  "name": "12345-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:28:39.510Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:28:41.438" endtime="20200527 14:28:41.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:41.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:41.439" endtime="20200527 14:28:41.440"></status>
</kw>
<msg timestamp="20200527 14:28:41.440" level="INFO">${result} = {
  "metadata": {},
  "name": "12345-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:28:39.510Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 14:28:39.631" endtime="20200527 14:28:41.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:41.440" endtime="20200527 14:28:41.440"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:41.443" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="12345-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:43.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:43.208" level="INFO">${output} = {
  "metadata": {},
  "name": "12345-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:28:39.510Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 14:28:41.441" endtime="20200527 14:28:43.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:43.209" level="INFO">{
  "metadata": {},
  "name": "12345-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:28:39.510Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:28:43.208" endtime="20200527 14:28:43.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:43.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:43.209" endtime="20200527 14:28:43.210"></status>
</kw>
<msg timestamp="20200527 14:28:43.210" level="INFO">${result} = {
  "metadata": {},
  "name": "12345-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:28:39.510Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 14:28:41.440" endtime="20200527 14:28:43.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:43.210" endtime="20200527 14:28:43.211"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:43.213" level="INFO">Running command 'ozone sh volume update o3://om:9862/12345-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:44.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:44.945" level="INFO">${output} = {
  "metadata" : { },
  "name" : "12345-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:28:39.510Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200527 14:28:43.211" endtime="20200527 14:28:44.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:44.946" level="INFO">{
  "metadata" : { },
  "name" : "12345-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:28:39.510Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 14:28:44.946" endtime="20200527 14:28:44.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:44.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:44.947" endtime="20200527 14:28:44.947"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:43.211" endtime="20200527 14:28:44.947"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:44.951" level="INFO">Running command 'ozone sh volume info o3://om:9862/12345-rpcwoport | jq -r '. | select(.name=="12345-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:46.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:46.802" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:28:44.948" endtime="20200527 14:28:46.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:46.803" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 14:28:46.803" endtime="20200527 14:28:46.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:46.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:46.803" endtime="20200527 14:28:46.804"></status>
</kw>
<msg timestamp="20200527 14:28:46.804" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:28:44.947" endtime="20200527 14:28:46.804"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:46.804" endtime="20200527 14:28:46.805"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:46.807" level="INFO">Running command 'ozone sh bucket create o3://om:9862/12345-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:48.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:48.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:28:46.805" endtime="20200527 14:28:48.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:48.307" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:28:48.307" endtime="20200527 14:28:48.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:48.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:48.308" endtime="20200527 14:28:48.308"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:46.805" endtime="20200527 14:28:48.308"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:48.311" level="INFO">Running command 'ozone sh bucket info o3://om:9862/12345-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:50.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:50.114" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 14:28:48.309" endtime="20200527 14:28:50.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:50.116" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 14:28:50.114" endtime="20200527 14:28:50.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:50.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:50.116" endtime="20200527 14:28:50.117"></status>
</kw>
<msg timestamp="20200527 14:28:50.117" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 14:28:48.308" endtime="20200527 14:28:50.117"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:50.117" endtime="20200527 14:28:50.117"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:50.121" level="INFO">Running command 'ozone sh bucket list o3://om:9862/12345-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:51.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:51.951" level="INFO">${output} = 12345-rpcwoport</msg>
<status status="PASS" starttime="20200527 14:28:50.118" endtime="20200527 14:28:51.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:51.952" level="INFO">12345-rpcwoport</msg>
<status status="PASS" starttime="20200527 14:28:51.952" endtime="20200527 14:28:51.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:51.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:51.953" endtime="20200527 14:28:51.953"></status>
</kw>
<msg timestamp="20200527 14:28:51.953" level="INFO">${result} = 12345-rpcwoport</msg>
<status status="PASS" starttime="20200527 14:28:50.117" endtime="20200527 14:28:51.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:51.954" endtime="20200527 14:28:51.954"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:51.958" level="INFO">Running command 'ozone sh key put o3://om:9862/12345-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:55.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:55.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:28:51.955" endtime="20200527 14:28:55.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:55.223" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:28:55.222" endtime="20200527 14:28:55.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:55.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:55.223" endtime="20200527 14:28:55.224"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:51.955" endtime="20200527 14:28:55.224"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:55.227" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:55.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:55.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:28:55.225" endtime="20200527 14:28:55.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:55.230" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:28:55.229" endtime="20200527 14:28:55.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:55.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:55.230" endtime="20200527 14:28:55.230"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:55.224" endtime="20200527 14:28:55.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:55.234" level="INFO">Running command 'ozone sh key get o3://om:9862/12345-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:58.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:58.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:28:55.231" endtime="20200527 14:28:58.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:58.255" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:28:58.254" endtime="20200527 14:28:58.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:58.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:58.256" endtime="20200527 14:28:58.256"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:55.231" endtime="20200527 14:28:58.256"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:58.259" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:58.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:28:58.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:28:58.257" endtime="20200527 14:28:58.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:58.265" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:28:58.264" endtime="20200527 14:28:58.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:28:58.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:28:58.265" endtime="20200527 14:28:58.265"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:58.256" endtime="20200527 14:28:58.266"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:58.268" level="INFO">Running command 'ozone sh key get o3://om:9862/12345-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:28:59.847" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:28:59.847" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:28:58.266" endtime="20200527 14:28:59.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:28:59.848" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:28:59.848" endtime="20200527 14:28:59.848"></status>
</kw>
<msg timestamp="20200527 14:28:59.849" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:28:58.266" endtime="20200527 14:28:59.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:28:59.849" endtime="20200527 14:28:59.849"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:28:59.853" level="INFO">Running command 'ozone sh key get --force o3://om:9862/12345-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:03.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:03.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:28:59.850" endtime="20200527 14:29:03.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:03.126" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:29:03.125" endtime="20200527 14:29:03.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:03.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:03.126" endtime="20200527 14:29:03.127"></status>
</kw>
<msg timestamp="20200527 14:29:03.127" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:28:59.849" endtime="20200527 14:29:03.127"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:03.127" endtime="20200527 14:29:03.128"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:03.131" level="INFO">Running command 'ozone sh key info o3://om:9862/12345-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:05.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:05.019" level="INFO">${output} = {
  "volumeName": "12345-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:28:53.433Z",
  "modificationTime": "2020-05-27T14:28:54.878Z",
  "re...</msg>
<status status="PASS" starttime="20200527 14:29:03.128" endtime="20200527 14:29:05.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:05.020" level="INFO">{
  "volumeName": "12345-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:28:53.433Z",
  "modificationTime": "2020-05-27T14:28:54.878Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104240888770199680,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 14:29:05.020" endtime="20200527 14:29:05.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:05.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:05.021" endtime="20200527 14:29:05.021"></status>
</kw>
<msg timestamp="20200527 14:29:05.021" level="INFO">${result} = {
  "volumeName": "12345-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:28:53.433Z",
  "modificationTime": "2020-05-27T14:28:54.878Z",
  "re...</msg>
<status status="PASS" starttime="20200527 14:29:03.128" endtime="20200527 14:29:05.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:05.021" endtime="20200527 14:29:05.022"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:05.025" level="INFO">Running command 'ozone sh key list o3://om:9862/12345-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:06.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:06.921" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 14:29:05.022" endtime="20200527 14:29:06.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:06.922" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 14:29:06.921" endtime="20200527 14:29:06.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:06.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:06.922" endtime="20200527 14:29:06.922"></status>
</kw>
<msg timestamp="20200527 14:29:06.923" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 14:29:05.022" endtime="20200527 14:29:06.923"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:06.923" endtime="20200527 14:29:06.923"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:06.927" level="INFO">Running command 'ozone sh key rename o3://om:9862/12345-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:08.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:08.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:29:06.925" endtime="20200527 14:29:08.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:08.592" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:29:08.592" endtime="20200527 14:29:08.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:08.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:08.592" endtime="20200527 14:29:08.593"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:06.923" endtime="20200527 14:29:08.593"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:08.596" level="INFO">Running command 'ozone sh key list o3://om:9862/12345-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:10.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:10.498" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 14:29:08.594" endtime="20200527 14:29:10.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:10.499" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 14:29:10.498" endtime="20200527 14:29:10.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:10.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:10.499" endtime="20200527 14:29:10.500"></status>
</kw>
<msg timestamp="20200527 14:29:10.500" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 14:29:08.593" endtime="20200527 14:29:10.500"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:10.500" endtime="20200527 14:29:10.501"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:10.504" level="INFO">Running command 'ozone sh key delete o3://om:9862/12345-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:12.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:12.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:29:10.501" endtime="20200527 14:29:12.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:12.175" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:29:12.175" endtime="20200527 14:29:12.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:12.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:12.175" endtime="20200527 14:29:12.176"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:10.501" endtime="20200527 14:29:12.176"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:51.954" endtime="20200527 14:29:12.176"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:51.954" endtime="20200527 14:29:12.176"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:12.179" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/12345-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:13.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:13.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:29:12.177" endtime="20200527 14:29:13.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:13.932" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:29:13.931" endtime="20200527 14:29:13.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:13.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:13.932" endtime="20200527 14:29:13.932"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:12.176" endtime="20200527 14:29:13.933"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:13.936" level="INFO">Running command 'ozone sh volume delete o3://om:9862/12345-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:15.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:15.660" level="INFO">${output} = Volume 12345-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200527 14:29:13.933" endtime="20200527 14:29:15.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:15.661" level="INFO">Volume 12345-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200527 14:29:15.661" endtime="20200527 14:29:15.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:15.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:15.662" endtime="20200527 14:29:15.662"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:13.933" endtime="20200527 14:29:15.662"></status>
</kw>
<status status="PASS" starttime="20200527 14:28:36.305" endtime="20200527 14:29:15.662"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:28:36.304" endtime="20200527 14:29:15.663" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:15.664" endtime="20200527 14:29:15.664"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:15.667" level="INFO">Running command 'ozone sh volume create o3://om:9862/12345-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:17.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:17.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:29:15.665" endtime="20200527 14:29:17.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:17.307" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:29:17.307" endtime="20200527 14:29:17.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:17.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:17.308" endtime="20200527 14:29:17.308"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:15.665" endtime="20200527 14:29:17.308"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:17.312" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/12345-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:19.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:19.135" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:17.309" endtime="20200527 14:29:19.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:19.136" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:19.136" endtime="20200527 14:29:19.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:19.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:19.137" endtime="20200527 14:29:19.137"></status>
</kw>
<msg timestamp="20200527 14:29:19.137" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:17.308" endtime="20200527 14:29:19.137"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:19.138" endtime="20200527 14:29:19.139"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:19.143" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/12345-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:20.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:20.972" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 14:29:19.140" endtime="20200527 14:29:20.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:20.973" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 14:29:20.972" endtime="20200527 14:29:20.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:20.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:20.973" endtime="20200527 14:29:20.974"></status>
</kw>
<msg timestamp="20200527 14:29:20.974" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 14:29:19.139" endtime="20200527 14:29:20.974"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:20.978" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/12345-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:22.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:22.799" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:20.974" endtime="20200527 14:29:22.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:22.800" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:22.799" endtime="20200527 14:29:22.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:22.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:22.800" endtime="20200527 14:29:22.800"></status>
</kw>
<msg timestamp="20200527 14:29:22.801" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:20.974" endtime="20200527 14:29:22.801"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:22.801" endtime="20200527 14:29:22.802"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:22.806" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/12345-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:24.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:24.472" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 14:29:22.803" endtime="20200527 14:29:24.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:24.473" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 14:29:24.472" endtime="20200527 14:29:24.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:24.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:24.473" endtime="20200527 14:29:24.474"></status>
</kw>
<msg timestamp="20200527 14:29:24.474" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 14:29:22.802" endtime="20200527 14:29:24.474"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:24.477" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/12345-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:26.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:26.245" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:24.475" endtime="20200527 14:29:26.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:26.246" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:26.246" endtime="20200527 14:29:26.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:26.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:26.247" endtime="20200527 14:29:26.247"></status>
</kw>
<msg timestamp="20200527 14:29:26.247" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:24.474" endtime="20200527 14:29:26.247"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:26.248" endtime="20200527 14:29:26.249"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:26.251" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/12345-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:27.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:27.962" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:29:26.249" endtime="20200527 14:29:27.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:27.963" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:29:27.963" endtime="20200527 14:29:27.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:27.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:27.964" endtime="20200527 14:29:27.964"></status>
</kw>
<msg timestamp="20200527 14:29:27.964" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:29:26.249" endtime="20200527 14:29:27.964"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:27.968" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/12345-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:29.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:29.917" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200527 14:29:27.965" endtime="20200527 14:29:29.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:29.918" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:29.917" endtime="20200527 14:29:29.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:29.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:29.918" endtime="20200527 14:29:29.919"></status>
</kw>
<msg timestamp="20200527 14:29:29.919" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200527 14:29:27.965" endtime="20200527 14:29:29.919"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:29.919" endtime="20200527 14:29:29.920"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:29.920" endtime="20200527 14:29:29.921"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:15.664" endtime="20200527 14:29:29.921"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:29:15.663" endtime="20200527 14:29:29.921" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:29.924" endtime="20200527 14:29:29.925"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:29.928" level="INFO">Running command 'ozone sh bucket create o3://om:9862/12345-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:31.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:31.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:29:29.926" endtime="20200527 14:29:31.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:31.853" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:29:31.852" endtime="20200527 14:29:31.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:31.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:31.853" endtime="20200527 14:29:31.854"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:29.925" endtime="20200527 14:29:31.854"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:31.857" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/12345-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:33.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:33.647" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:31.854" endtime="20200527 14:29:33.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:33.648" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:33.647" endtime="20200527 14:29:33.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:33.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:33.648" endtime="20200527 14:29:33.648"></status>
</kw>
<msg timestamp="20200527 14:29:33.649" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:31.854" endtime="20200527 14:29:33.649"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:33.649" endtime="20200527 14:29:33.649"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:33.652" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/12345-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:35.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:35.349" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 14:29:33.650" endtime="20200527 14:29:35.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:35.350" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 14:29:35.350" endtime="20200527 14:29:35.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:35.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:35.351" endtime="20200527 14:29:35.351"></status>
</kw>
<msg timestamp="20200527 14:29:35.351" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 14:29:33.650" endtime="20200527 14:29:35.351"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:35.355" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/12345-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:37.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:37.195" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:35.352" endtime="20200527 14:29:37.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:37.196" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:37.195" endtime="20200527 14:29:37.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:37.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:37.196" endtime="20200527 14:29:37.197"></status>
</kw>
<msg timestamp="20200527 14:29:37.197" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:35.351" endtime="20200527 14:29:37.197"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:37.197" endtime="20200527 14:29:37.198"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:37.200" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/12345-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:38.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:38.894" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:29:37.198" endtime="20200527 14:29:38.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:38.895" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:29:38.894" endtime="20200527 14:29:38.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:38.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:38.895" endtime="20200527 14:29:38.896"></status>
</kw>
<msg timestamp="20200527 14:29:38.896" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:29:37.198" endtime="20200527 14:29:38.896"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:38.900" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/12345-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:40.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:40.721" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:38.897" endtime="20200527 14:29:40.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:40.722" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:40.722" endtime="20200527 14:29:40.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:40.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:40.723" endtime="20200527 14:29:40.723"></status>
</kw>
<msg timestamp="20200527 14:29:40.723" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:38.896" endtime="20200527 14:29:40.723"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:40.724" endtime="20200527 14:29:40.725"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:40.728" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/12345-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:42.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:42.262" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:29:40.725" endtime="20200527 14:29:42.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:42.263" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:29:42.262" endtime="20200527 14:29:42.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:42.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:42.263" endtime="20200527 14:29:42.263"></status>
</kw>
<msg timestamp="20200527 14:29:42.264" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:29:40.725" endtime="20200527 14:29:42.264"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:42.270" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/12345-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:44.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:44.027" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 14:29:42.264" endtime="20200527 14:29:44.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:44.028" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:44.027" endtime="20200527 14:29:44.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:44.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:44.028" endtime="20200527 14:29:44.028"></status>
</kw>
<msg timestamp="20200527 14:29:44.028" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 14:29:42.264" endtime="20200527 14:29:44.028"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:44.029" endtime="20200527 14:29:44.029"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:44.029" endtime="20200527 14:29:44.030"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:29.925" endtime="20200527 14:29:44.030"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:29:29.924" endtime="20200527 14:29:44.030" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:44.031" endtime="20200527 14:29:44.032"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:44.036" level="INFO">Running command 'ozone sh key put o3://om:9862/12345-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:47.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:47.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:29:44.033" endtime="20200527 14:29:47.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:47.295" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:29:47.294" endtime="20200527 14:29:47.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:47.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:47.296" endtime="20200527 14:29:47.296"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:44.032" endtime="20200527 14:29:47.296"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:47.299" level="INFO">Running command 'ozone sh key getacl o3://om:9862/12345-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:49.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:49.204" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:47.297" endtime="20200527 14:29:49.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:49.206" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:49.205" endtime="20200527 14:29:49.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:49.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:49.206" endtime="20200527 14:29:49.207"></status>
</kw>
<msg timestamp="20200527 14:29:49.208" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:47.297" endtime="20200527 14:29:49.208"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:49.208" endtime="20200527 14:29:49.208"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:49.212" level="INFO">Running command 'ozone sh key addacl o3://om:9862/12345-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:50.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:50.952" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 14:29:49.209" endtime="20200527 14:29:50.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:50.953" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 14:29:50.952" endtime="20200527 14:29:50.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:50.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:50.953" endtime="20200527 14:29:50.954"></status>
</kw>
<msg timestamp="20200527 14:29:50.954" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 14:29:49.208" endtime="20200527 14:29:50.954"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:50.957" level="INFO">Running command 'ozone sh key getacl o3://om:9862/12345-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:52.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:52.724" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:50.955" endtime="20200527 14:29:52.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:52.725" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:52.724" endtime="20200527 14:29:52.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:52.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:52.725" endtime="20200527 14:29:52.726"></status>
</kw>
<msg timestamp="20200527 14:29:52.726" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:50.954" endtime="20200527 14:29:52.726"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:52.726" endtime="20200527 14:29:52.727"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:52.731" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/12345-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:54.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:54.468" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:29:52.728" endtime="20200527 14:29:54.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:54.469" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:29:54.469" endtime="20200527 14:29:54.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:54.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:54.470" endtime="20200527 14:29:54.470"></status>
</kw>
<msg timestamp="20200527 14:29:54.470" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 14:29:52.727" endtime="20200527 14:29:54.470"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:54.473" level="INFO">Running command 'ozone sh key getacl o3://om:9862/12345-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:56.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:56.341" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:54.471" endtime="20200527 14:29:56.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:56.342" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:56.341" endtime="20200527 14:29:56.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:56.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:56.342" endtime="20200527 14:29:56.343"></status>
</kw>
<msg timestamp="20200527 14:29:56.343" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 14:29:54.471" endtime="20200527 14:29:56.343"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:56.343" endtime="20200527 14:29:56.344"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:56.346" level="INFO">Running command 'ozone sh key setacl o3://om:9862/12345-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:57.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:57.984" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:29:56.344" endtime="20200527 14:29:57.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:57.985" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:29:57.985" endtime="20200527 14:29:57.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:57.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:57.985" endtime="20200527 14:29:57.986"></status>
</kw>
<msg timestamp="20200527 14:29:57.986" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 14:29:56.344" endtime="20200527 14:29:57.986"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:57.990" level="INFO">Running command 'ozone sh key getacl o3://om:9862/12345-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:29:59.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:29:59.748" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 14:29:57.987" endtime="20200527 14:29:59.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:29:59.749" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 14:29:59.748" endtime="20200527 14:29:59.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:29:59.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:29:59.750" endtime="20200527 14:29:59.750"></status>
</kw>
<msg timestamp="20200527 14:29:59.750" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 14:29:57.986" endtime="20200527 14:29:59.750"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:59.751" endtime="20200527 14:29:59.751"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:59.751" endtime="20200527 14:29:59.752"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:44.032" endtime="20200527 14:29:59.752"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:29:44.031" endtime="20200527 14:29:59.752" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:29:59.754" endtime="20200527 14:29:59.754"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:29:59.757" level="INFO">Running command 'ozone sh volume info o3:///12345-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:01.422" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:30:01.422" level="INFO">${output} = VOLUME_NOT_FOUND Volume 12345-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 14:29:59.755" endtime="20200527 14:30:01.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:01.423" level="INFO">VOLUME_NOT_FOUND Volume 12345-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 14:30:01.423" endtime="20200527 14:30:01.423"></status>
</kw>
<msg timestamp="20200527 14:30:01.424" level="INFO">${result} = VOLUME_NOT_FOUND Volume 12345-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 14:29:59.755" endtime="20200527 14:30:01.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:01.424" endtime="20200527 14:30:01.424"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:01.427" level="INFO">Running command 'ozone sh volume create o3:///12345-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:03.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:03.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:01.425" endtime="20200527 14:30:03.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:03.235" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:03.232" endtime="20200527 14:30:03.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:03.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:03.235" endtime="20200527 14:30:03.236"></status>
</kw>
<msg timestamp="20200527 14:30:03.236" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:30:01.424" endtime="20200527 14:30:03.236"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:03.236" endtime="20200527 14:30:03.236"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:03.240" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="12345-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:05.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:05.128" level="INFO">${output} = {
  "metadata": {},
  "name": "12345-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:03.115Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 14:30:03.237" endtime="20200527 14:30:05.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:05.129" level="INFO">{
  "metadata": {},
  "name": "12345-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:03.115Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:30:05.128" endtime="20200527 14:30:05.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:05.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:05.129" endtime="20200527 14:30:05.130"></status>
</kw>
<msg timestamp="20200527 14:30:05.130" level="INFO">${result} = {
  "metadata": {},
  "name": "12345-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:03.115Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 14:30:03.236" endtime="20200527 14:30:05.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:05.130" endtime="20200527 14:30:05.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:05.134" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="12345-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:06.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:06.980" level="INFO">${output} = {
  "metadata": {},
  "name": "12345-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:03.115Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 14:30:05.131" endtime="20200527 14:30:06.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:06.981" level="INFO">{
  "metadata": {},
  "name": "12345-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:03.115Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:30:06.981" endtime="20200527 14:30:06.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:06.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:06.982" endtime="20200527 14:30:06.982"></status>
</kw>
<msg timestamp="20200527 14:30:06.982" level="INFO">${result} = {
  "metadata": {},
  "name": "12345-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:03.115Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 14:30:05.131" endtime="20200527 14:30:06.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:06.982" endtime="20200527 14:30:06.983"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:06.986" level="INFO">Running command 'ozone sh volume update o3:///12345-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:08.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:08.706" level="INFO">${output} = {
  "metadata" : { },
  "name" : "12345-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:30:03.115Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200527 14:30:06.983" endtime="20200527 14:30:08.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:08.707" level="INFO">{
  "metadata" : { },
  "name" : "12345-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:30:03.115Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 14:30:08.706" endtime="20200527 14:30:08.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:08.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:08.708" endtime="20200527 14:30:08.709"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:06.983" endtime="20200527 14:30:08.709"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:08.712" level="INFO">Running command 'ozone sh volume info o3:///12345-rpcwport | jq -r '. | select(.name=="12345-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:10.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:10.501" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:30:08.710" endtime="20200527 14:30:10.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:10.502" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 14:30:10.501" endtime="20200527 14:30:10.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:10.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:10.502" endtime="20200527 14:30:10.503"></status>
</kw>
<msg timestamp="20200527 14:30:10.503" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:30:08.709" endtime="20200527 14:30:10.503"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:10.503" endtime="20200527 14:30:10.503"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:10.507" level="INFO">Running command 'ozone sh bucket create o3:///12345-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:12.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:12.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:10.504" endtime="20200527 14:30:12.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:12.123" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:12.122" endtime="20200527 14:30:12.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:12.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:12.123" endtime="20200527 14:30:12.123"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:10.503" endtime="20200527 14:30:12.123"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:12.127" level="INFO">Running command 'ozone sh bucket info o3:///12345-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:13.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:13.852" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 14:30:12.124" endtime="20200527 14:30:13.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:13.853" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 14:30:13.852" endtime="20200527 14:30:13.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:13.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:13.853" endtime="20200527 14:30:13.853"></status>
</kw>
<msg timestamp="20200527 14:30:13.854" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 14:30:12.124" endtime="20200527 14:30:13.854"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:13.854" endtime="20200527 14:30:13.854"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:13.857" level="INFO">Running command 'ozone sh bucket list o3:///12345-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:15.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:15.778" level="INFO">${output} = 12345-rpcwport</msg>
<status status="PASS" starttime="20200527 14:30:13.855" endtime="20200527 14:30:15.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:15.779" level="INFO">12345-rpcwport</msg>
<status status="PASS" starttime="20200527 14:30:15.779" endtime="20200527 14:30:15.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:15.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:15.779" endtime="20200527 14:30:15.780"></status>
</kw>
<msg timestamp="20200527 14:30:15.780" level="INFO">${result} = 12345-rpcwport</msg>
<status status="PASS" starttime="20200527 14:30:13.854" endtime="20200527 14:30:15.780"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:15.780" endtime="20200527 14:30:15.781"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:15.785" level="INFO">Running command 'ozone sh key put o3:///12345-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:18.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:18.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:15.782" endtime="20200527 14:30:18.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:18.924" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:18.923" endtime="20200527 14:30:18.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:18.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:18.924" endtime="20200527 14:30:18.924"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:15.782" endtime="20200527 14:30:18.925"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:18.927" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:18.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:18.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:18.925" endtime="20200527 14:30:18.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:18.930" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:18.930" endtime="20200527 14:30:18.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:18.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:18.931" endtime="20200527 14:30:18.931"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:18.925" endtime="20200527 14:30:18.931"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:18.934" level="INFO">Running command 'ozone sh key get o3:///12345-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:21.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:21.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:18.932" endtime="20200527 14:30:21.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:21.919" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:21.918" endtime="20200527 14:30:21.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:21.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:21.919" endtime="20200527 14:30:21.920"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:18.932" endtime="20200527 14:30:21.920"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:21.922" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:21.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:21.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:21.920" endtime="20200527 14:30:21.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:21.925" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:21.925" endtime="20200527 14:30:21.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:21.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:21.926" endtime="20200527 14:30:21.926"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:21.920" endtime="20200527 14:30:21.926"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:21.929" level="INFO">Running command 'ozone sh key get o3:///12345-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:23.539" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:30:23.539" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:30:21.927" endtime="20200527 14:30:23.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:23.540" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:30:23.539" endtime="20200527 14:30:23.540"></status>
</kw>
<msg timestamp="20200527 14:30:23.540" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:30:21.926" endtime="20200527 14:30:23.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:23.540" endtime="20200527 14:30:23.541"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:23.545" level="INFO">Running command 'ozone sh key get --force o3:///12345-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:26.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:26.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:23.541" endtime="20200527 14:30:26.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:26.579" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:26.578" endtime="20200527 14:30:26.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:26.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:26.579" endtime="20200527 14:30:26.580"></status>
</kw>
<msg timestamp="20200527 14:30:26.580" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:30:23.541" endtime="20200527 14:30:26.580"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:26.580" endtime="20200527 14:30:26.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:26.583" level="INFO">Running command 'ozone sh key info o3:///12345-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:28.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:28.428" level="INFO">${output} = {
  "volumeName": "12345-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:30:17.330Z",
  "modificationTime": "2020-05-27T14:30:18.571Z",
  "rep...</msg>
<status status="PASS" starttime="20200527 14:30:26.581" endtime="20200527 14:30:28.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:28.429" level="INFO">{
  "volumeName": "12345-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:30:17.330Z",
  "modificationTime": "2020-05-27T14:30:18.571Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104240894268473470,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 14:30:28.429" endtime="20200527 14:30:28.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:28.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:28.429" endtime="20200527 14:30:28.430"></status>
</kw>
<msg timestamp="20200527 14:30:28.430" level="INFO">${result} = {
  "volumeName": "12345-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:30:17.330Z",
  "modificationTime": "2020-05-27T14:30:18.571Z",
  "rep...</msg>
<status status="PASS" starttime="20200527 14:30:26.581" endtime="20200527 14:30:28.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:28.430" endtime="20200527 14:30:28.431"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:28.434" level="INFO">Running command 'ozone sh key list o3:///12345-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:30.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:30.236" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 14:30:28.432" endtime="20200527 14:30:30.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:30.237" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 14:30:30.236" endtime="20200527 14:30:30.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:30.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:30.237" endtime="20200527 14:30:30.238"></status>
</kw>
<msg timestamp="20200527 14:30:30.238" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 14:30:28.431" endtime="20200527 14:30:30.238"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:30.238" endtime="20200527 14:30:30.238"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:30.241" level="INFO">Running command 'ozone sh key rename o3:///12345-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:31.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:31.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:30.239" endtime="20200527 14:30:31.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:31.851" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:31.850" endtime="20200527 14:30:31.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:31.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:31.851" endtime="20200527 14:30:31.852"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:30.239" endtime="20200527 14:30:31.852"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:31.855" level="INFO">Running command 'ozone sh key list o3:///12345-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:33.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:33.550" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 14:30:31.852" endtime="20200527 14:30:33.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:33.551" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 14:30:33.550" endtime="20200527 14:30:33.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:33.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:33.551" endtime="20200527 14:30:33.552"></status>
</kw>
<msg timestamp="20200527 14:30:33.552" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 14:30:31.852" endtime="20200527 14:30:33.552"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:33.552" endtime="20200527 14:30:33.553"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:33.556" level="INFO">Running command 'ozone sh key delete o3:///12345-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:35.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:35.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:33.553" endtime="20200527 14:30:35.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:35.205" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:35.205" endtime="20200527 14:30:35.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:35.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:35.206" endtime="20200527 14:30:35.206"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:33.553" endtime="20200527 14:30:35.206"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:15.781" endtime="20200527 14:30:35.206"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:15.781" endtime="20200527 14:30:35.206"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:35.210" level="INFO">Running command 'ozone sh bucket delete o3:///12345-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:36.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:36.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:35.207" endtime="20200527 14:30:36.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:36.765" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:36.764" endtime="20200527 14:30:36.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:36.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:36.765" endtime="20200527 14:30:36.765"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:35.207" endtime="20200527 14:30:36.766"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:36.769" level="INFO">Running command 'ozone sh volume delete o3:///12345-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:38.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:38.412" level="INFO">${output} = Volume 12345-rpcwport is deleted</msg>
<status status="PASS" starttime="20200527 14:30:36.766" endtime="20200527 14:30:38.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:38.413" level="INFO">Volume 12345-rpcwport is deleted</msg>
<status status="PASS" starttime="20200527 14:30:38.412" endtime="20200527 14:30:38.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:38.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:38.413" endtime="20200527 14:30:38.414"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:36.766" endtime="20200527 14:30:38.414"></status>
</kw>
<status status="PASS" starttime="20200527 14:29:59.754" endtime="20200527 14:30:38.414"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:29:59.753" endtime="20200527 14:30:38.414" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:38.415" endtime="20200527 14:30:38.416"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:38.419" level="INFO">Running command 'ozone sh volume info /12345-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:40.000" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:30:40.000" level="INFO">${output} = VOLUME_NOT_FOUND Volume 12345-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 14:30:38.417" endtime="20200527 14:30:40.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:40.001" level="INFO">VOLUME_NOT_FOUND Volume 12345-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 14:30:40.001" endtime="20200527 14:30:40.001"></status>
</kw>
<msg timestamp="20200527 14:30:40.002" level="INFO">${result} = VOLUME_NOT_FOUND Volume 12345-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 14:30:38.417" endtime="20200527 14:30:40.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:40.002" endtime="20200527 14:30:40.002"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:40.005" level="INFO">Running command 'ozone sh volume create /12345-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:41.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:41.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:40.003" endtime="20200527 14:30:41.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:41.643" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:41.642" endtime="20200527 14:30:41.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:41.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:41.643" endtime="20200527 14:30:41.644"></status>
</kw>
<msg timestamp="20200527 14:30:41.644" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:30:40.002" endtime="20200527 14:30:41.644"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:41.644" endtime="20200527 14:30:41.645"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:41.648" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="12345-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:43.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:43.425" level="INFO">${output} = {
  "metadata": {},
  "name": "12345-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:41.526Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 14:30:41.645" endtime="20200527 14:30:43.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:43.426" level="INFO">{
  "metadata": {},
  "name": "12345-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:41.526Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:30:43.426" endtime="20200527 14:30:43.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:43.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:43.426" endtime="20200527 14:30:43.427"></status>
</kw>
<msg timestamp="20200527 14:30:43.427" level="INFO">${result} = {
  "metadata": {},
  "name": "12345-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:41.526Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 14:30:41.645" endtime="20200527 14:30:43.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:43.427" endtime="20200527 14:30:43.428"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:43.431" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="12345-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:45.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:45.136" level="INFO">${output} = {
  "metadata": {},
  "name": "12345-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:41.526Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 14:30:43.428" endtime="20200527 14:30:45.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:45.137" level="INFO">{
  "metadata": {},
  "name": "12345-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:41.526Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 14:30:45.136" endtime="20200527 14:30:45.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:45.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:45.137" endtime="20200527 14:30:45.138"></status>
</kw>
<msg timestamp="20200527 14:30:45.138" level="INFO">${result} = {
  "metadata": {},
  "name": "12345-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T14:30:41.526Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 14:30:43.428" endtime="20200527 14:30:45.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:45.138" endtime="20200527 14:30:45.138"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:45.142" level="INFO">Running command 'ozone sh volume update /12345-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:46.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:46.901" level="INFO">${output} = {
  "metadata" : { },
  "name" : "12345-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:30:41.526Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200527 14:30:45.139" endtime="20200527 14:30:46.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:46.902" level="INFO">{
  "metadata" : { },
  "name" : "12345-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T14:30:41.526Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 14:30:46.901" endtime="20200527 14:30:46.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:46.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:46.902" endtime="20200527 14:30:46.903"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:45.138" endtime="20200527 14:30:46.903"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:46.906" level="INFO">Running command 'ozone sh volume info /12345-rpcwoscheme | jq -r '. | select(.name=="12345-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:48.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:48.677" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:30:46.904" endtime="20200527 14:30:48.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:48.678" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 14:30:48.677" endtime="20200527 14:30:48.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:48.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:48.678" endtime="20200527 14:30:48.678"></status>
</kw>
<msg timestamp="20200527 14:30:48.679" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 14:30:46.903" endtime="20200527 14:30:48.679"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:48.679" endtime="20200527 14:30:48.679"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:48.683" level="INFO">Running command 'ozone sh bucket create /12345-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:50.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:50.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:48.680" endtime="20200527 14:30:50.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:50.372" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:50.372" endtime="20200527 14:30:50.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:50.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:50.373" endtime="20200527 14:30:50.373"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:48.679" endtime="20200527 14:30:50.373"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:50.377" level="INFO">Running command 'ozone sh bucket info /12345-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:52.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:52.172" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 14:30:50.374" endtime="20200527 14:30:52.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:52.173" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 14:30:52.172" endtime="20200527 14:30:52.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:52.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:52.174" endtime="20200527 14:30:52.174"></status>
</kw>
<msg timestamp="20200527 14:30:52.174" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 14:30:50.373" endtime="20200527 14:30:52.174"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:52.175" endtime="20200527 14:30:52.175"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:52.178" level="INFO">Running command 'ozone sh bucket list /12345-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:53.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:53.968" level="INFO">${output} = 12345-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 14:30:52.176" endtime="20200527 14:30:53.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:53.969" level="INFO">12345-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 14:30:53.968" endtime="20200527 14:30:53.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:53.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:53.969" endtime="20200527 14:30:53.970"></status>
</kw>
<msg timestamp="20200527 14:30:53.970" level="INFO">${result} = 12345-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 14:30:52.175" endtime="20200527 14:30:53.970"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 14:30:53.970" endtime="20200527 14:30:53.971"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:53.975" level="INFO">Running command 'ozone sh key put /12345-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:57.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:57.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:53.972" endtime="20200527 14:30:57.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:57.261" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:57.260" endtime="20200527 14:30:57.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:57.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:57.261" endtime="20200527 14:30:57.262"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:53.972" endtime="20200527 14:30:57.262"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:57.265" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:30:57.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:30:57.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:57.262" endtime="20200527 14:30:57.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:30:57.268" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:30:57.268" endtime="20200527 14:30:57.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:30:57.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:30:57.268" endtime="20200527 14:30:57.269"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:57.262" endtime="20200527 14:30:57.269"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:30:57.271" level="INFO">Running command 'ozone sh key get /12345-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:00.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:00.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:30:57.269" endtime="20200527 14:31:00.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:00.368" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:31:00.367" endtime="20200527 14:31:00.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:00.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:00.368" endtime="20200527 14:31:00.368"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:57.269" endtime="20200527 14:31:00.369"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:00.371" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:00.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:00.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:31:00.369" endtime="20200527 14:31:00.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:00.374" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:31:00.374" endtime="20200527 14:31:00.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:00.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:00.375" endtime="20200527 14:31:00.375"></status>
</kw>
<status status="PASS" starttime="20200527 14:31:00.369" endtime="20200527 14:31:00.375"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:00.378" level="INFO">Running command 'ozone sh key get /12345-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:02.116" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 14:31:02.116" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:31:00.376" endtime="20200527 14:31:02.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:02.117" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:31:02.116" endtime="20200527 14:31:02.117"></status>
</kw>
<msg timestamp="20200527 14:31:02.117" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 14:31:00.375" endtime="20200527 14:31:02.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:02.118" endtime="20200527 14:31:02.118"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:02.122" level="INFO">Running command 'ozone sh key get --force /12345-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:05.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:05.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:31:02.119" endtime="20200527 14:31:05.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:05.092" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:31:05.091" endtime="20200527 14:31:05.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:05.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:05.092" endtime="20200527 14:31:05.093"></status>
</kw>
<msg timestamp="20200527 14:31:05.093" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 14:31:02.118" endtime="20200527 14:31:05.093"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:05.093" endtime="20200527 14:31:05.094"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:05.096" level="INFO">Running command 'ozone sh key info /12345-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:06.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:06.941" level="INFO">${output} = {
  "volumeName": "12345-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:30:55.498Z",
  "modificationTime": "2020-05-27T14:30:56.913Z",
  "...</msg>
<status status="PASS" starttime="20200527 14:31:05.094" endtime="20200527 14:31:06.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:06.942" level="INFO">{
  "volumeName": "12345-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:30:55.498Z",
  "modificationTime": "2020-05-27T14:30:56.913Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104240896769917060,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 14:31:06.941" endtime="20200527 14:31:06.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:06.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:06.942" endtime="20200527 14:31:06.943"></status>
</kw>
<msg timestamp="20200527 14:31:06.943" level="INFO">${result} = {
  "volumeName": "12345-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T14:30:55.498Z",
  "modificationTime": "2020-05-27T14:30:56.913Z",
  "...</msg>
<status status="PASS" starttime="20200527 14:31:05.094" endtime="20200527 14:31:06.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:06.943" endtime="20200527 14:31:06.944"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:06.948" level="INFO">Running command 'ozone sh key list /12345-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:08.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:08.738" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 14:31:06.944" endtime="20200527 14:31:08.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:08.739" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 14:31:08.738" endtime="20200527 14:31:08.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:08.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:08.739" endtime="20200527 14:31:08.740"></status>
</kw>
<msg timestamp="20200527 14:31:08.740" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 14:31:06.944" endtime="20200527 14:31:08.740"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:08.740" endtime="20200527 14:31:08.740"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:08.743" level="INFO">Running command 'ozone sh key rename /12345-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:10.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:10.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:31:08.741" endtime="20200527 14:31:10.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:10.520" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:31:10.519" endtime="20200527 14:31:10.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:10.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:10.520" endtime="20200527 14:31:10.520"></status>
</kw>
<status status="PASS" starttime="20200527 14:31:08.741" endtime="20200527 14:31:10.520"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:10.524" level="INFO">Running command 'ozone sh key list /12345-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:12.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:12.416" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 14:31:10.521" endtime="20200527 14:31:12.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:12.417" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 14:31:12.417" endtime="20200527 14:31:12.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:12.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:12.417" endtime="20200527 14:31:12.418"></status>
</kw>
<msg timestamp="20200527 14:31:12.418" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 14:31:10.521" endtime="20200527 14:31:12.418"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 14:31:12.418" endtime="20200527 14:31:12.419"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:12.421" level="INFO">Running command 'ozone sh key delete /12345-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:14.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:14.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:31:12.419" endtime="20200527 14:31:14.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:14.013" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:31:14.012" endtime="20200527 14:31:14.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:14.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:14.013" endtime="20200527 14:31:14.013"></status>
</kw>
<status status="PASS" starttime="20200527 14:31:12.419" endtime="20200527 14:31:14.013"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:53.971" endtime="20200527 14:31:14.014"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:53.971" endtime="20200527 14:31:14.014"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:14.016" level="INFO">Running command 'ozone sh bucket delete /12345-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:15.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:15.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 14:31:14.014" endtime="20200527 14:31:15.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:15.729" level="INFO"></msg>
<status status="PASS" starttime="20200527 14:31:15.728" endtime="20200527 14:31:15.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:15.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:15.729" endtime="20200527 14:31:15.729"></status>
</kw>
<status status="PASS" starttime="20200527 14:31:14.014" endtime="20200527 14:31:15.730"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 14:31:15.733" level="INFO">Running command 'ozone sh volume delete /12345-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 14:31:17.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 14:31:17.390" level="INFO">${output} = Volume 12345-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200527 14:31:15.730" endtime="20200527 14:31:17.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 14:31:17.391" level="INFO">Volume 12345-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200527 14:31:17.390" endtime="20200527 14:31:17.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 14:31:17.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 14:31:17.391" endtime="20200527 14:31:17.392"></status>
</kw>
<status status="PASS" starttime="20200527 14:31:15.730" endtime="20200527 14:31:17.392"></status>
</kw>
<status status="PASS" starttime="20200527 14:30:38.416" endtime="20200527 14:31:17.392"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 14:30:38.415" endtime="20200527 14:31:17.392" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200527 14:28:36.298" endtime="20200527 14:31:17.394"></status>
</suite>
<status status="PASS" starttime="20200527 14:27:27.188" endtime="20200527 14:31:17.398"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
