<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 19:13:49.876" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:13:49.947" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:13:57.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:13:57.463" level="INFO">${output} = 2020-05-27 19:13:50,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:13:51,146 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 19:13:49.941" endtime="20200527 19:13:57.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:13:57.464" level="INFO">2020-05-27 19:13:50,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:13:51,146 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 19:13:51,146 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 19:13:51,993 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-27 19:13:51,994 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-27 19:13:51,995 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-27 19:13:51,995 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-05-27 19:13:51,995 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-27 19:13:51,995 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 19:13:51,995 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-27 19:13:52,005 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 19:13:52,012 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 19:13:52,044 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-45759, with hadoop as owner.
2020-05-27 19:13:52,065 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-45759/bucket-0-76471, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:13:52,722 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 19:13:53,016 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,041
Average Time spent in bucket creation: 00:00:00,010
Average Time spent in key creation: 00:00:00,051
Average Time spent in key write: 00:00:00,784
Total bytes written: 10240
Total Execution time: 00:00:05,796
***************************************************</msg>
<status status="PASS" starttime="20200527 19:13:57.463" endtime="20200527 19:13:57.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:13:57.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:13:57.464" endtime="20200527 19:13:57.465"></status>
</kw>
<msg timestamp="20200527 19:13:57.465" level="INFO">${result} = 2020-05-27 19:13:50,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:13:51,146 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 19:13:49.940" endtime="20200527 19:13:57.465"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 19:13:57.466" endtime="20200527 19:13:57.467"></status>
</kw>
<status status="PASS" starttime="20200527 19:13:57.465" endtime="20200527 19:13:57.467"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:13:49.939" endtime="20200527 19:13:57.467" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:13:57.472" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:14:02.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:14:02.264" level="INFO">${output} = 2020-05-27 19:13:58,479 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:13:58,623 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 19:13:57.469" endtime="20200527 19:14:02.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:14:02.266" level="INFO">2020-05-27 19:13:58,479 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:13:58,623 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 19:13:58,623 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 19:13:58,785 [main] INFO freon.BaseFreonGenerator: Executing test with prefix mge91nmbgb
2020-05-27 19:13:58,799 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 19:13:59,445 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-05-27 19:13:59,467 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:13:59,800 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 19:14:00,050 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 19:14:00,801 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 19:14:01,802 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 19:14:01,939 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1381.365799, max=1381.365799, mean=1381.365799, stddev=0.0, median=1381.365799, p75=1381.365799, p95=1381.365799, p98=1381.365799, p99=1381.365799, p999=1381.365799, mean_rate=0.4078038642650839, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 19:14:01,940 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-05-27 19:14:01,940 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 19:14:01,940 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 19:14:02.265" endtime="20200527 19:14:02.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:14:02.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:14:02.266" endtime="20200527 19:14:02.267"></status>
</kw>
<msg timestamp="20200527 19:14:02.267" level="INFO">${result} = 2020-05-27 19:13:58,479 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:13:58,623 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 19:13:57.469" endtime="20200527 19:14:02.267"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 19:14:02.268" endtime="20200527 19:14:02.268"></status>
</kw>
<status status="PASS" starttime="20200527 19:14:02.267" endtime="20200527 19:14:02.268"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:13:57.468" endtime="20200527 19:14:02.268" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:14:02.273" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:14:05.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:14:05.277" level="INFO">${output} = 2020-05-27 19:14:03,291 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:14:03,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 19:14:02.271" endtime="20200527 19:14:05.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:14:05.279" level="INFO">2020-05-27 19:14:03,291 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:14:03,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 19:14:03,456 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 19:14:03,649 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gqx46u9cqy
2020-05-27 19:14:03,665 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 19:14:04,668 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 19:14:05,267 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=38.806324, max=38.806324, mean=38.806324, stddev=0.0, median=38.806324, p75=38.806324, p95=38.806324, p98=38.806324, p99=38.806324, p999=38.806324, mean_rate=0.9800341503876084, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 19:14:05,269 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 19:14:05,269 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 19:14:05,269 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 19:14:05.278" endtime="20200527 19:14:05.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:14:05.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:14:05.279" endtime="20200527 19:14:05.280"></status>
</kw>
<msg timestamp="20200527 19:14:05.280" level="INFO">${result} = 2020-05-27 19:14:03,291 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:14:03,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 19:14:02.270" endtime="20200527 19:14:05.280"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 19:14:05.281" endtime="20200527 19:14:05.281"></status>
</kw>
<status status="PASS" starttime="20200527 19:14:05.281" endtime="20200527 19:14:05.282"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:14:02.269" endtime="20200527 19:14:05.282" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:14:05.287" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:14:08.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:14:08.444" level="INFO">${output} = 2020-05-27 19:14:06,334 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:14:06,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 19:14:05.284" endtime="20200527 19:14:08.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:14:08.445" level="INFO">2020-05-27 19:14:06,334 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:14:06,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 19:14:06,501 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 19:14:06,692 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 3r7kvadpha
2020-05-27 19:14:06,705 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-27 19:14:07,711 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-27 19:14:08,433 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=7.716585, max=7.716585, mean=7.716585, stddev=0.0, median=7.716585, p75=7.716585, p95=7.716585, p98=7.716585, p99=7.716585, p999=7.716585, mean_rate=0.8939157825761359, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-27 19:14:08,434 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-27 19:14:08,435 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-27 19:14:08,435 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200527 19:14:08.444" endtime="20200527 19:14:08.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:14:08.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:14:08.445" endtime="20200527 19:14:08.446"></status>
</kw>
<msg timestamp="20200527 19:14:08.446" level="INFO">${result} = 2020-05-27 19:14:06,334 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:14:06,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 19:14:05.283" endtime="20200527 19:14:08.446"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200527 19:14:08.447" endtime="20200527 19:14:08.448"></status>
</kw>
<status status="PASS" starttime="20200527 19:14:08.446" endtime="20200527 19:14:08.448"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:14:05.282" endtime="20200527 19:14:08.448" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200527 19:13:49.911" endtime="20200527 19:14:08.449"></status>
</suite>
<status status="PASS" starttime="20200527 19:13:49.877" endtime="20200527 19:14:08.453"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
