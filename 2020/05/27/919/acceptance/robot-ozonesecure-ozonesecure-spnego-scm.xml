<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 19:40:50.031" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:50.104" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:50.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:50.107" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 19:40:50.100" endtime="20200527 19:40:50.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:50.108" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 19:40:50.107" endtime="20200527 19:40:50.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:50.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:50.108" endtime="20200527 19:40:50.109"></status>
</kw>
<msg timestamp="20200527 19:40:50.109" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 19:40:50.099" endtime="20200527 19:40:50.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 19:40:50.111" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 19:40:50.110" endtime="20200527 19:40:50.111"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:50.116" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:50.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:50.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:40:50.113" endtime="20200527 19:40:50.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:50.133" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:40:50.133" endtime="20200527 19:40:50.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:50.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:50.134" endtime="20200527 19:40:50.134"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:50.111" endtime="20200527 19:40:50.135"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:50.111" endtime="20200527 19:40:50.135"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:50.099" endtime="20200527 19:40:50.135"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:50.099" endtime="20200527 19:40:50.135"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:50.137" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.122" level="INFO">${output} = 2020-05-27 19:40:51,144 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:40:51,337 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 19:40:50.135" endtime="20200527 19:40:58.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.123" level="INFO">2020-05-27 19:40:51,144 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:40:51,337 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 19:40:51,337 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-05-27 19:40:52,588 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-05-27 19:40:52,588 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-27 19:40:52,588 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-27 19:40:52,588 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-05-27 19:40:52,589 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-05-27 19:40:52,589 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 19:40:52,589 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-27 19:40:52,601 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 19:40:52,603 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-05-27 19:40:52,638 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-57361, with testuser/scm@EXAMPLE.COM as owner.
2020-05-27 19:40:52,676 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-57361/bucket-0-51574, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:40:53,149 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 19:40:53,612 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,013
Average Time spent in key write: 00:00:00,102
Total bytes written: 2050
Total Execution time: 00:00:06,223
***************************************************</msg>
<status status="PASS" starttime="20200527 19:40:58.122" endtime="20200527 19:40:58.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.124" endtime="20200527 19:40:58.125"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:50.135" endtime="20200527 19:40:58.125"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:40:50.098" endtime="20200527 19:40:58.125" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.131" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:40:58.128" endtime="20200527 19:40:58.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.136" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:40:58.135" endtime="20200527 19:40:58.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.136" endtime="20200527 19:40:58.136"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.128" endtime="20200527 19:40:58.137"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.127" endtime="20200527 19:40:58.137"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.139" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.164" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200527 19:40:58.137" endtime="20200527 19:40:58.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.165" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200527 19:40:58.164" endtime="20200527 19:40:58.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.166" endtime="20200527 19:40:58.166"></status>
</kw>
<msg timestamp="20200527 19:40:58.166" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200527 19:40:58.137" endtime="20200527 19:40:58.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 19:40:58.167" endtime="20200527 19:40:58.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.172" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.173" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 19:40:58.169" endtime="20200527 19:40:58.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.174" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 19:40:58.174" endtime="20200527 19:40:58.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.175" endtime="20200527 19:40:58.175"></status>
</kw>
<msg timestamp="20200527 19:40:58.176" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 19:40:58.168" endtime="20200527 19:40:58.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 19:40:58.176" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 19:40:58.176" endtime="20200527 19:40:58.177"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.181" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:40:58.178" endtime="20200527 19:40:58.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.193" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:40:58.192" endtime="20200527 19:40:58.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.193" endtime="20200527 19:40:58.194"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.177" endtime="20200527 19:40:58.194"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.177" endtime="20200527 19:40:58.194"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.168" endtime="20200527 19:40:58.194"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.167" endtime="20200527 19:40:58.194"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.197" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.225" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200527 19:40:58.195" endtime="20200527 19:40:58.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.226" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x6f5f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.6) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZXgaOb+2lu5Vf2Aa/+YzHGN5TlcPR/vWGwEjwwxzukTFkUfIg/2iL/wE7Cd/ZTVyFlDb7a+w6zYepdkDR7LIJ+ubXmFIhRL6HWPIGAYYhmOqAOMp2EHcaQsAmPPqWfc0Gb1jjP3l0gU3Kakq+M/Nm/ABdWfpHZbl3lozHcwHnyslGGQxRgfDD8NlNOxrPTNVvMH/mhPqbKKvdsRKZx943ZoT1dty0iikrjBqM1/ChidaxDlRw6W8prT3fkXKCDHB93QsNvS8autRZNcJDrO4fM3yBZHK5FFn4thm3k0OeriXaS+EI987xdOr0dSnpHqeBtV/v6TLkM/yf49SK6dFPCJemzUvjMpIHWMIHToAMCARKigcsEgcjWdpikba6LWWAchiZvqUhDtdjwlycvSTsSalltJtN9aOlwx8nHqRu5ouFw7uzDk/9HnYkSdOIkOfmMFlqp6ua6FZLHPC13idXibINauw45sCNIRPWB89z3I3VcY4IaeFS9i3IH+gQg4Lio+vN6Dw5TBmoEOtk2zsNeHGqXwQGonR0trClVWKhS7e2MPIpWi3ReWyEvqetgQqS8pY/hAT8rouuM9YJtxdbTgQz1eY4itM4Snpu3D/ax2Zd3F+BJsAcX/PvIjiKJiA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 19:40:58 GMT
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 27 May 2020 19:40:58 GMT
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC11K9RuXYSPKcu4C9FBR2OOipxXCy4QnfpJxVCCCoVfz1WCzmKnXE6lGoSwH/pB0I+yPD4OAnUJ7+V3oToOPBpuYv
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590644458220&amp;s=B//ZqY+kj7EoVZybcyxFzWl3xzeEeAPQiIIrsYei/sE="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 27 May 2020 18:34:10 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 19:40:58 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 19:40:58 GMT
Date: Wed, 27 May 2020 19:40:58 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 27 May 2020 19:40:58 GMT
Date: Wed, 27 May 2020 19:40:58 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC11K9RuXYSPKcu4C9FBR2OOipxXCy4QnfpJxVCCCoVfz1WCzmKnXE6lGoSwH/pB0I+yPD4OAnUJ7+V3oToOPBpuYv
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590644458220&amp;s=B//ZqY+kj7EoVZybcyxFzWl3xzeEeAPQiIIrsYei/sE="; Path=/; HttpOnly
Last-Modified: Wed, 27 May 2020 18:34:10 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200527 19:40:58.225" endtime="20200527 19:40:58.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.226" endtime="20200527 19:40:58.227"></status>
</kw>
<msg timestamp="20200527 19:40:58.227" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200527 19:40:58.194" endtime="20200527 19:40:58.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 19:40:58.227" endtime="20200527 19:40:58.228"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.126" endtime="20200527 19:40:58.228"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:40:58.126" endtime="20200527 19:40:58.228" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.234" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:40:58.231" endtime="20200527 19:40:58.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.239" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:40:58.238" endtime="20200527 19:40:58.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.239" endtime="20200527 19:40:58.240"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.231" endtime="20200527 19:40:58.240"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.230" endtime="20200527 19:40:58.240"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.244" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.259" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200527 19:40:58.241" endtime="20200527 19:40:58.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.260" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200527 19:40:58.259" endtime="20200527 19:40:58.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.260" endtime="20200527 19:40:58.261"></status>
</kw>
<msg timestamp="20200527 19:40:58.262" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200527 19:40:58.240" endtime="20200527 19:40:58.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 19:40:58.262" endtime="20200527 19:40:58.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.266" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.269" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 19:40:58.264" endtime="20200527 19:40:58.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.270" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 19:40:58.269" endtime="20200527 19:40:58.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.270" endtime="20200527 19:40:58.271"></status>
</kw>
<msg timestamp="20200527 19:40:58.271" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 19:40:58.263" endtime="20200527 19:40:58.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 19:40:58.272" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 19:40:58.272" endtime="20200527 19:40:58.272"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.276" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:40:58.273" endtime="20200527 19:40:58.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.294" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:40:58.293" endtime="20200527 19:40:58.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.294" endtime="20200527 19:40:58.294"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.273" endtime="20200527 19:40:58.295"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.272" endtime="20200527 19:40:58.295"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.263" endtime="20200527 19:40:58.295"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.262" endtime="20200527 19:40:58.295"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.298" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.358" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200527 19:40:58.296" endtime="20200527 19:40:58.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.360" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x1d05f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.6) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbYhniLTkeRk5Ao2DvsUCHpoZsgUaRBjK4AHbNocY+FTNwu37HRgV8WVE8gxsDuVoYxdlZwPH61QEGtrtG5XtCbsU4D3NDOqy9y+CnkboupI+ZBxkEynTLnlg7eqe1yxdrrvFQg9WWyiQWwqdxfruFXknOIrMC5yPDkk4Nf2xrr1SsKdi7Zv4QXu1flQVSGyEUsf6zVcXepvBXU+xO+9xGNhvL/EG2XX5LsxRkd9vWVlZtfhcLCH6wRZfEIN6p4I144zzcgF7+9l5ZvxAj57nERnxdoCqMhpkC800xSsrAZWhNBQxei7BnUOb/mf5ri5xgIU4oL/WzAgL4XWiR1i6gYM6IFCyFUpIHWMIHToAMCARKigcsEgcgzFx27EmzjnbXJuyLuStfSD9QPL1ShOUS9wI+6dm+CNOdDcBboMT79+aRpZ21Lh6xyBBgK9Eg+4J9ecJ6gDJ2++EwI11UtDf2iXw1s+cRZXRYOQJOP2nSsYfWNoTEMI+EuePvEbj7+FaJUnuYLNBqo5B4c9fOPS//mINWoqe1soz1cUcRjjK4riN07Ccul1jQ8RVTTb78R9gFtccQcfNxxjobiJ4b7k9Vvp2IW8MtQg2N2xZ8/aTx3l6G04AGZLb39L2MGXfyiLQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 19:40:58 GMT
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC+9jGF4RaE1CV16PeE1jAZT2IFS29nsEtyim/uwJFq444X5okvjL2iaMggAm55a73I8z5hZVvm07n0JxqIWVa7zMk
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590644458319&amp;s=en8Wbp8iGJo/rwJ1fLImRx2vAV8LOSy0i+q0rAhPskI="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1590608458319.tgz"
&lt; Content-Length: 73182
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 19:40:58 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 19:40:58 GMT
Date: Wed, 27 May 2020 19:40:58 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC+9jGF4RaE1CV16PeE1jAZT2IFS29nsEtyim/uwJFq444X5okvjL2iaMggAm55a73I8z5hZVvm07n0JxqIWVa7zMk
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590644458319&amp;s=en8Wbp8iGJo/rwJ1fLImRx2vAV8LOSy0i+q0rAhPskI="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1590608458319.tgz"
Content-Length: 73182
</msg>
<status status="PASS" starttime="20200527 19:40:58.359" endtime="20200527 19:40:58.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.360" endtime="20200527 19:40:58.361"></status>
</kw>
<msg timestamp="20200527 19:40:58.361" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200527 19:40:58.295" endtime="20200527 19:40:58.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 19:40:58.361" endtime="20200527 19:40:58.361"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.230" endtime="20200527 19:40:58.362"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:40:58.229" endtime="20200527 19:40:58.362" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.368" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:40:58.365" endtime="20200527 19:40:58.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.372" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:40:58.371" endtime="20200527 19:40:58.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.372" endtime="20200527 19:40:58.373"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.365" endtime="20200527 19:40:58.373"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.364" endtime="20200527 19:40:58.373"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.378" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.389" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 19:40:58.374" endtime="20200527 19:40:58.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.391" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200527 19:40:58.390" endtime="20200527 19:40:58.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.391" endtime="20200527 19:40:58.392"></status>
</kw>
<msg timestamp="20200527 19:40:58.392" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 19:40:58.374" endtime="20200527 19:40:58.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 19:40:58.392" endtime="20200527 19:40:58.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.397" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.398" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 19:40:58.394" endtime="20200527 19:40:58.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.399" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 19:40:58.399" endtime="20200527 19:40:58.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.400" endtime="20200527 19:40:58.400"></status>
</kw>
<msg timestamp="20200527 19:40:58.401" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 19:40:58.394" endtime="20200527 19:40:58.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 19:40:58.401" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 19:40:58.401" endtime="20200527 19:40:58.401"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.406" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:40:58.402" endtime="20200527 19:40:58.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.420" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:40:58.419" endtime="20200527 19:40:58.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.420" endtime="20200527 19:40:58.421"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.402" endtime="20200527 19:40:58.421"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.401" endtime="20200527 19:40:58.421"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.394" endtime="20200527 19:40:58.421"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.393" endtime="20200527 19:40:58.421"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.425" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.461" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 19:40:58.422" endtime="20200527 19:40:58.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.462" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x1a55f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.6) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaSTQ4y0EbcLpNxe8VoHCsALRwXGVV+ERSDfj/9SGXBPl6IYLSze9j3ZV/GIik3sCKEBmkSZ8D9ykHcq4oyDI0PrwzE7GJyUqvWdlYMQ99rxJN71IkX7MmY1/4noh7NHvFtNfcAGx5DgDQsCFdqonrQ2JJ4ajxm4ybAFSpp4EaVadMxKRkkV++va1Q/taeVEm5kbRDwxoH/yK6p5HunJfmyOxd6Thu/0IBjIollMnTgcA5hYhzWcdyB7pf5fgXvCAxCaKYrmngb8+3gY4Yv/1aSBNhYJz346wypW6u0449h4qbFjPZ4a9naArenkEvzf1uFQ6ol7jNmxR5L0Aw0XByb2gh+PllEpIHWMIHToAMCARKigcsEgciLscWRvsXkfYoSUUhxSwvQ/v2x8aHas22vGQkx4H+cBVZB7oUYsTUIaG5usmYQy/7J0HsaoyCNJZBP1ObIOFjAKtr+XBMqJH3n6fNqAK6ryhiGdRusBBrX04Y8HBbo4If83OM9LoFCxFoXu3dicg5N0W2tHMv32r25a3heScdvRQn8zNaDc26S8FS0MY5eKwMwqGs8VdiiDL1zRAPAU06nIzK598iLfPRulAX9+x5I0akQvNQVhg6PrHT2c65R24GVOkxTVeaanw==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 19:40:58 GMT
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCJDQmcTX4FdcTVvrU3FrrdT8dWIpwtPL/mT8n2quxyYp4unN2UJ+pi3gGEh/+xO3WJLD4Cvmre+m2ZCDItOztvavp
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590644458444&amp;s=GTZDaRf5H2TvyXXKbT8sb7dK9hf1U/IoxFY5dvzL0HY="; Path=/; HttpOnly
&lt; Content-Length: 534
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 19:40:58 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 19:40:58 GMT
Date: Wed, 27 May 2020 19:40:58 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCJDQmcTX4FdcTVvrU3FrrdT8dWIpwtPL/mT8n2quxyYp4unN2UJ+pi3gGEh/+xO3WJLD4Cvmre+m2ZCDItOztvavp
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590644458444&amp;s=GTZDaRf5H2TvyXXKbT8sb7dK9hf1U/IoxFY5dvzL0HY="; Path=/; HttpOnly
Content-Length: 534
</msg>
<status status="PASS" starttime="20200527 19:40:58.461" endtime="20200527 19:40:58.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.462" endtime="20200527 19:40:58.463"></status>
</kw>
<msg timestamp="20200527 19:40:58.463" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.6...
* Connected to om (172.25.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 19:40:58.421" endtime="20200527 19:40:58.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 19:40:58.463" endtime="20200527 19:40:58.464"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.364" endtime="20200527 19:40:58.464"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:40:58.363" endtime="20200527 19:40:58.464" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.470" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:40:58.467" endtime="20200527 19:40:58.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.474" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:40:58.473" endtime="20200527 19:40:58.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.474" endtime="20200527 19:40:58.474"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.466" endtime="20200527 19:40:58.475"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.466" endtime="20200527 19:40:58.475"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.479" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.502" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.5...
* Connected to scm (172.25.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 19:40:58.475" endtime="20200527 19:40:58.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.504" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.5...
* Connected to scm (172.25.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200527 19:40:58.503" endtime="20200527 19:40:58.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.504" endtime="20200527 19:40:58.505"></status>
</kw>
<msg timestamp="20200527 19:40:58.505" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.5...
* Connected to scm (172.25.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 19:40:58.475" endtime="20200527 19:40:58.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 19:40:58.505" endtime="20200527 19:40:58.506"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.510" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.511" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 19:40:58.507" endtime="20200527 19:40:58.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.513" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 19:40:58.512" endtime="20200527 19:40:58.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.513" endtime="20200527 19:40:58.514"></status>
</kw>
<msg timestamp="20200527 19:40:58.514" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 19:40:58.507" endtime="20200527 19:40:58.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 19:40:58.515" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 19:40:58.514" endtime="20200527 19:40:58.515"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.520" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:40:58.516" endtime="20200527 19:40:58.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.531" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:40:58.531" endtime="20200527 19:40:58.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.531" endtime="20200527 19:40:58.532"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.516" endtime="20200527 19:40:58.532"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.515" endtime="20200527 19:40:58.532"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.506" endtime="20200527 19:40:58.532"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.506" endtime="20200527 19:40:58.533"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.536" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.565" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.5...
* Connected to scm (172.25.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 19:40:58.533" endtime="20200527 19:40:58.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.567" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.5...
* Connected to scm (172.25.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x1163f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.25.0.5) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGUNjuaCeUeBA9BewhxkMXG9JZWQVnm5suthHPUCJCJz2uomU/b5y8zZymhuA22zsbfEF52Wb5YClzCn0HGkVHSpqRwIkoDKwFhbtaYpEO+yu09osUUOOgYJS2cc4ERphkXkUCSwGpOFw9yybcXM8IrHX+PYBXppsnJw5VJNtUoi9u5SHovLkswHgoKPn5cfMLsn+PqGoHkA289UGVEddq4+YrGtkyhFZ8cpmlP81JCKFtZyElkofBd5PpINq1h4WBYZy+w04Qf35Eki0ncNurBbZgvXKZpw8mKOrIFWjSkzTYq1HlyRQcw04WBJebI0J8J3AXrc22ZUy6foWXmed8mzixBG63V6SB1jCB06ADAgESooHLBIHIBxVGWFrcbdgOHqoIR8WkO9Dtfmu/38zS4LnVIDA5MpL8wf5d0TvM14czu28TniyhbLs/155EDmEHYhSVv6XUldRP+MU54iajdZuTYaXH5Crgtc50JTLhk/W5X8czs3TrNGoLZTznRZgBk96Q5uC5iTjIecbQSE3p37TwnJ317cFS9LzsmgI7LhSp3omGXdm4C4wtG3zCUJfLDfaw77rl36YH22VI8jewkyhQqSaqD4uflLdpXZtCalKiiSPohOd2q24RHiu1Bjo=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 19:40:58 GMT
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 27 May 2020 19:40:58 GMT
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCrQAulgWAir1iZaMfgIdOUB+XSaMkOLs/Q2IWwJGewAoCqmom43Wbg/Va87l15HixVIYd1fvDoesI0WldRqMM7Tze
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590644458560&amp;s=KlDeBLAA+b/XEP2wC0bjJ167oTyIFY2SVD7CFpkDg9s="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 27 May 2020 18:33:46 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 19:40:58 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 19:40:58 GMT
Date: Wed, 27 May 2020 19:40:58 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 27 May 2020 19:40:58 GMT
Date: Wed, 27 May 2020 19:40:58 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCrQAulgWAir1iZaMfgIdOUB+XSaMkOLs/Q2IWwJGewAoCqmom43Wbg/Va87l15HixVIYd1fvDoesI0WldRqMM7Tze
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590644458560&amp;s=KlDeBLAA+b/XEP2wC0bjJ167oTyIFY2SVD7CFpkDg9s="; Path=/; HttpOnly
Last-Modified: Wed, 27 May 2020 18:33:46 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200527 19:40:58.566" endtime="20200527 19:40:58.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.567" endtime="20200527 19:40:58.568"></status>
</kw>
<msg timestamp="20200527 19:40:58.568" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.5...
* Connected to scm (172.25.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200527 19:40:58.533" endtime="20200527 19:40:58.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 19:40:58.568" endtime="20200527 19:40:58.569"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.465" endtime="20200527 19:40:58.569"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:40:58.464" endtime="20200527 19:40:58.569" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.575" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:40:58.572" endtime="20200527 19:40:58.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.578" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:40:58.578" endtime="20200527 19:40:58.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.579" endtime="20200527 19:40:58.579"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.571" endtime="20200527 19:40:58.579"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.571" endtime="20200527 19:40:58.579"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.584" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.598" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.10...
* Connected to recon (172.25.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 19:40:58.580" endtime="20200527 19:40:58.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.599" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.10...
* Connected to recon (172.25.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200527 19:40:58.599" endtime="20200527 19:40:58.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.600" endtime="20200527 19:40:58.600"></status>
</kw>
<msg timestamp="20200527 19:40:58.601" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.10...
* Connected to recon (172.25.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 19:40:58.580" endtime="20200527 19:40:58.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200527 19:40:58.601" endtime="20200527 19:40:58.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.604" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.607" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200527 19:40:58.603" endtime="20200527 19:40:58.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.608" level="INFO">scm</msg>
<status status="PASS" starttime="20200527 19:40:58.608" endtime="20200527 19:40:58.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.609" endtime="20200527 19:40:58.609"></status>
</kw>
<msg timestamp="20200527 19:40:58.610" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200527 19:40:58.602" endtime="20200527 19:40:58.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200527 19:40:58.610" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200527 19:40:58.610" endtime="20200527 19:40:58.610"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.615" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:40:58.611" endtime="20200527 19:40:58.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.638" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:40:58.638" endtime="20200527 19:40:58.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.639" endtime="20200527 19:40:58.639"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.611" endtime="20200527 19:40:58.639"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.611" endtime="20200527 19:40:58.640"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.602" endtime="20200527 19:40:58.640"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.601" endtime="20200527 19:40:58.640"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:40:58.643" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:40:58.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:40:58.676" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.10...
* Connected to recon (172.25.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 19:40:58.641" endtime="20200527 19:40:58.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:40:58.677" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.10...
* Connected to recon (172.25.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x102bf20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.25.0.10) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQb0w0H95P8j7dQyEpNp0cLp4pHGjR1+/8p0Yf7aMSoHcwJMUuA8XF4dN3xErH/cO6N5MF/rsMuRfosRxiWqNqXrXlFB5+AGsMBCqxsOATHXuD2UdlMcRexi2QGM6BT35VYJLlqDVb0laVnEJry6YNWoklum9nUoRc3bXEXFAG25GnskzstHXA3t6aP1Bu3/3FRsWg7I6YIRAuJGH0nXDQwGSLySK+H5Wvi6NhQp/B/s8+CQBJ+Zed7ZwTZC4Nz8H08F5hQpp2RTwV01EdHuEqeJrUOi7v3f0vC0eh6RlAFzjO7PGs4yBiWHGoZe32sNJZSCN/m0HCBaosE3sMo6cr/VNdBiTk/2pIHWMIHToAMCARKigcsEgcgK6W8L5WrwomETRWHc1poB8/jLt3z9roVE2lFCyly9qKltD9F0ElpXkxH4/HAxWd/+9VQLTwPsRyPrWe6CQOS05C/6kbKdxFeJrKFVgFmmyM99xvi9FD+rhqnaUdfGlClK/tMfL5EsKWc0eww5+BCrNTfPdSpfLHGl4gR44Xrl9LSAsqF57L3AhS21zc/4cUV7FX/1bePFIbCAOVbCo0qyb2QfCba5Sa6vnBl3lxN8VdXKArfomHou8HMPRPBmbJBDjzg3NT+g0Q==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 27 May 2020 19:40:58 GMT
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 27 May 2020 19:40:58 GMT
&lt; Date: Wed, 27 May 2020 19:40:58 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCneELoGKuTf62+yZFQ7tf6Uz2PGjiPCspGm/sUukNnMBWzJMxus70J5JzsoNpfY+RVz7133k7O+1KUyGdTnJKk4gL
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590644458668&amp;s=7FQ9f5uileglGPzGpfXNV9sJGxEd+juxNublFMS45AY="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 27 May 2020 18:39:02 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 27 May 2020 19:40:58 GMT
Cache-Control: no-cache
Expires: Wed, 27 May 2020 19:40:58 GMT
Date: Wed, 27 May 2020 19:40:58 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 27 May 2020 19:40:58 GMT
Date: Wed, 27 May 2020 19:40:58 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCneELoGKuTf62+yZFQ7tf6Uz2PGjiPCspGm/sUukNnMBWzJMxus70J5JzsoNpfY+RVz7133k7O+1KUyGdTnJKk4gL
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590644458668&amp;s=7FQ9f5uileglGPzGpfXNV9sJGxEd+juxNublFMS45AY="; Path=/; HttpOnly
Last-Modified: Wed, 27 May 2020 18:39:02 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200527 19:40:58.676" endtime="20200527 19:40:58.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:40:58.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:40:58.678" endtime="20200527 19:40:58.678"></status>
</kw>
<msg timestamp="20200527 19:40:58.680" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.10...
* Connected to recon (172.25.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200527 19:40:58.640" endtime="20200527 19:40:58.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200527 19:40:58.680" endtime="20200527 19:40:58.680"></status>
</kw>
<status status="PASS" starttime="20200527 19:40:58.570" endtime="20200527 19:40:58.680"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:40:58.570" endtime="20200527 19:40:58.681" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200527 19:40:50.067" endtime="20200527 19:40:58.682"></status>
</suite>
<status status="PASS" starttime="20200527 19:40:50.032" endtime="20200527 19:40:58.685"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
