<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200527 19:01:45.097" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200527 19:01:45.156" endtime="20200527 19:01:45.156"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:01:45.161" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:01:45.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:01:45.250" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 27 May 2020 19:01:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 18:33:30 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200527 19:01:45.157" endtime="20200527 19:01:45.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:01:45.251" level="INFO">HTTP/1.1 200 OK
Date: Wed, 27 May 2020 19:01:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 18:33:30 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200527 19:01:45.250" endtime="20200527 19:01:45.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:01:45.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:01:45.251" endtime="20200527 19:01:45.252"></status>
</kw>
<msg timestamp="20200527 19:01:45.252" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 27 May 2020 19:01:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 May 2020 18:33:30 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200527 19:01:45.157" endtime="20200527 19:01:45.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200527 19:01:45.252" endtime="20200527 19:01:45.253"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:01:45.155" endtime="20200527 19:01:45.253" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 19:01:45.255" endtime="20200527 19:01:45.255"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:01:45.267" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:02:50.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:02:50.657" level="INFO">${output} = 2020-05-27 19:01:46,482 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:01:46,633 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 19:01:45.256" endtime="20200527 19:02:50.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:02:50.658" level="INFO">2020-05-27 19:01:46,482 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:01:46,633 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-27 19:01:46,633 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-27 19:01:47,804 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-27 19:01:47,806 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-05-27 19:01:47,806 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-05-27 19:01:47,806 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-05-27 19:01:47,806 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-27 19:01:47,806 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-27 19:01:47,806 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-05-27 19:01:47,813 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-05-27 19:01:47,815 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-27 19:01:47,820 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-05-27 19:01:47,854 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-02881, with hadoop as owner.
2020-05-27 19:01:48,027 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-72303, with hadoop as owner.
2020-05-27 19:01:48,039 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-75692, with hadoop as owner.
2020-05-27 19:01:48,045 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-13727, with hadoop as owner.
2020-05-27 19:01:48,052 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-08814, with hadoop as owner.
2020-05-27 19:01:48,061 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-02881/bucket-0-96906, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,091 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-72303/bucket-0-15294, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,099 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75692/bucket-0-92479, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,108 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-13727/bucket-0-17805, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,113 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-08814/bucket-0-15103, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,117 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-02881/bucket-1-19320, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,122 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-72303/bucket-1-42567, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,128 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75692/bucket-1-71107, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,132 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-13727/bucket-1-08471, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,139 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-08814/bucket-1-11820, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,143 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-02881/bucket-2-01017, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,152 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-72303/bucket-2-01294, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,159 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75692/bucket-2-88575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,164 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-13727/bucket-2-58328, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,169 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-08814/bucket-2-27250, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,174 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-02881/bucket-3-99278, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,178 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-72303/bucket-3-73897, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,184 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75692/bucket-3-50528, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,190 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-13727/bucket-3-44232, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,195 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-08814/bucket-3-05139, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,202 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-02881/bucket-4-55796, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,206 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-72303/bucket-4-12310, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,211 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75692/bucket-4-17506, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,221 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-13727/bucket-4-27195, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,225 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-08814/bucket-4-96262, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-27 19:01:48,825 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-05-27 19:01:48,871 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-27 19:01:49,826 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-05-27 19:01:50,827 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-05-27 19:01:51,828 [Thread-5] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-05-27 19:01:52,829 [Thread-5] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-05-27 19:01:53,829 [Thread-5] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-05-27 19:01:54,829 [Thread-5] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-05-27 19:01:55,830 [Thread-5] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-05-27 19:01:56,830 [Thread-5] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-05-27 19:01:57,831 [Thread-5] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-05-27 19:01:58,831 [Thread-5] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-05-27 19:01:59,833 [Thread-5] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-05-27 19:02:00,833 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-05-27 19:02:01,834 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-05-27 19:02:02,834 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-05-27 19:02:03,835 [Thread-5] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-05-27 19:02:04,835 [Thread-5] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-05-27 19:02:05,836 [Thread-5] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-05-27 19:02:06,836 [Thread-5] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-05-27 19:02:07,837 [Thread-5] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-05-27 19:02:08,837 [Thread-5] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-05-27 19:02:09,838 [Thread-5] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-05-27 19:02:10,839 [Thread-5] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-05-27 19:02:11,839 [Thread-5] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-05-27 19:02:12,840 [Thread-5] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-05-27 19:02:13,840 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-05-27 19:02:14,841 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-05-27 19:02:15,843 [Thread-5] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-05-27 19:02:16,844 [Thread-5] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-05-27 19:02:17,844 [Thread-5] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-05-27 19:02:18,845 [Thread-5] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-05-27 19:02:19,845 [Thread-5] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-05-27 19:02:20,846 [Thread-5] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-05-27 19:02:21,846 [Thread-5] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-05-27 19:02:22,847 [Thread-5] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-05-27 19:02:23,850 [Thread-5] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-05-27 19:02:24,851 [Thread-5] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-05-27 19:02:25,851 [Thread-5] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-05-27 19:02:26,851 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-05-27 19:02:27,852 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-05-27 19:02:28,852 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-05-27 19:02:29,853 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-05-27 19:02:30,854 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-05-27 19:02:31,854 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-05-27 19:02:32,855 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-05-27 19:02:33,855 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-05-27 19:02:34,856 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-05-27 19:02:35,856 [Thread-5] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-05-27 19:02:36,857 [Thread-5] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-05-27 19:02:37,857 [Thread-5] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-05-27 19:02:38,858 [Thread-5] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-05-27 19:02:39,858 [Thread-5] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-05-27 19:02:40,858 [Thread-5] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-05-27 19:02:41,859 [Thread-5] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-05-27 19:02:42,859 [Thread-5] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-05-27 19:02:43,860 [Thread-5] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-05-27 19:02:44,860 [Thread-5] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-05-27 19:02:45,861 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,206
Average Time spent in bucket creation: 00:00:00,116
Average Time spent in key creation: 00:00:01,777
Average Time spent in key write: 00:00:00,802
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:03,436
***************************************************</msg>
<status status="PASS" starttime="20200527 19:02:50.657" endtime="20200527 19:02:50.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:02:50.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:02:50.659" endtime="20200527 19:02:50.659"></status>
</kw>
<msg timestamp="20200527 19:02:50.659" level="INFO">${result} = 2020-05-27 19:01:46,482 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-27 19:01:46,633 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200527 19:01:45.255" endtime="20200527 19:02:50.659"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200527 19:02:50.660" endtime="20200527 19:02:50.661"></status>
</kw>
<status status="PASS" starttime="20200527 19:02:50.660" endtime="20200527 19:02:50.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200527 19:02:50.661" endtime="20200527 19:02:50.661"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200527 19:01:45.254" endtime="20200527 19:02:50.662" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200527 19:01:45.129" endtime="20200527 19:02:50.663"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200527 19:02:50.672" level="INFO">${random} = 15861</msg>
<status status="PASS" starttime="20200527 19:02:50.671" endtime="20200527 19:02:50.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200527 19:02:50.672" level="INFO">${prefix} = 15861</msg>
<status status="PASS" starttime="20200527 19:02:50.672" endtime="20200527 19:02:50.673"></status>
</kw>
<status status="PASS" starttime="20200527 19:02:50.671" endtime="20200527 19:02:50.673"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 19:02:50.673" endtime="20200527 19:02:50.674"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:02:50.677" level="INFO">Running command 'ozone sh volume info o3://om:9862/15861-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:02:52.569" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 19:02:52.569" level="INFO">${output} = VOLUME_NOT_FOUND Volume 15861-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 19:02:50.675" endtime="20200527 19:02:52.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:02:52.571" level="INFO">VOLUME_NOT_FOUND Volume 15861-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 19:02:52.570" endtime="20200527 19:02:52.571"></status>
</kw>
<msg timestamp="20200527 19:02:52.571" level="INFO">${result} = VOLUME_NOT_FOUND Volume 15861-rpcwoport is not found</msg>
<status status="PASS" starttime="20200527 19:02:50.674" endtime="20200527 19:02:52.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 19:02:52.571" endtime="20200527 19:02:52.571"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:02:52.574" level="INFO">Running command 'ozone sh volume create o3://om:9862/15861-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:02:54.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:02:54.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:02:52.572" endtime="20200527 19:02:54.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:02:54.470" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:02:54.469" endtime="20200527 19:02:54.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:02:54.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:02:54.470" endtime="20200527 19:02:54.471"></status>
</kw>
<msg timestamp="20200527 19:02:54.472" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 19:02:52.572" endtime="20200527 19:02:54.472"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 19:02:54.472" endtime="20200527 19:02:54.472"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:02:54.475" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="15861-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:02:56.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:02:56.517" level="INFO">${output} = {
  "metadata": {},
  "name": "15861-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:02:54.442Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 19:02:54.473" endtime="20200527 19:02:56.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:02:56.519" level="INFO">{
  "metadata": {},
  "name": "15861-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:02:54.442Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 19:02:56.518" endtime="20200527 19:02:56.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:02:56.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:02:56.519" endtime="20200527 19:02:56.520"></status>
</kw>
<msg timestamp="20200527 19:02:56.520" level="INFO">${result} = {
  "metadata": {},
  "name": "15861-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:02:54.442Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 19:02:54.472" endtime="20200527 19:02:56.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 19:02:56.520" endtime="20200527 19:02:56.521"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:02:56.523" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="15861-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:02:58.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:02:58.536" level="INFO">${output} = {
  "metadata": {},
  "name": "15861-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:02:54.442Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 19:02:56.521" endtime="20200527 19:02:58.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:02:58.537" level="INFO">{
  "metadata": {},
  "name": "15861-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:02:54.442Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 19:02:58.536" endtime="20200527 19:02:58.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:02:58.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:02:58.537" endtime="20200527 19:02:58.538"></status>
</kw>
<msg timestamp="20200527 19:02:58.538" level="INFO">${result} = {
  "metadata": {},
  "name": "15861-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:02:54.442Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200527 19:02:56.521" endtime="20200527 19:02:58.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 19:02:58.538" endtime="20200527 19:02:58.538"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:02:58.543" level="INFO">Running command 'ozone sh volume update o3://om:9862/15861-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:00.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:00.665" level="INFO">${output} = {
  "metadata" : { },
  "name" : "15861-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T19:02:54.442Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200527 19:02:58.539" endtime="20200527 19:03:00.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:00.667" level="INFO">{
  "metadata" : { },
  "name" : "15861-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T19:02:54.442Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 19:03:00.665" endtime="20200527 19:03:00.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:00.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:00.667" endtime="20200527 19:03:00.668"></status>
</kw>
<status status="PASS" starttime="20200527 19:02:58.539" endtime="20200527 19:03:00.669"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:00.674" level="INFO">Running command 'ozone sh volume info o3://om:9862/15861-rpcwoport | jq -r '. | select(.name=="15861-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:02.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:02.694" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 19:03:00.670" endtime="20200527 19:03:02.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:02.696" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 19:03:02.695" endtime="20200527 19:03:02.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:02.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:02.696" endtime="20200527 19:03:02.697"></status>
</kw>
<msg timestamp="20200527 19:03:02.697" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 19:03:00.669" endtime="20200527 19:03:02.697"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:02.697" endtime="20200527 19:03:02.698"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:02.701" level="INFO">Running command 'ozone sh bucket create o3://om:9862/15861-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:04.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:04.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:02.698" endtime="20200527 19:03:04.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:04.651" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:04.651" endtime="20200527 19:03:04.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:04.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:04.652" endtime="20200527 19:03:04.652"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:02.698" endtime="20200527 19:03:04.652"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:04.657" level="INFO">Running command 'ozone sh bucket info o3://om:9862/15861-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:06.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:06.704" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 19:03:04.654" endtime="20200527 19:03:06.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:06.706" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 19:03:06.705" endtime="20200527 19:03:06.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:06.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:06.706" endtime="20200527 19:03:06.707"></status>
</kw>
<msg timestamp="20200527 19:03:06.707" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 19:03:04.653" endtime="20200527 19:03:06.707"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:06.707" endtime="20200527 19:03:06.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:06.711" level="INFO">Running command 'ozone sh bucket list o3://om:9862/15861-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:08.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:08.828" level="INFO">${output} = 15861-rpcwoport</msg>
<status status="PASS" starttime="20200527 19:03:06.709" endtime="20200527 19:03:08.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:08.829" level="INFO">15861-rpcwoport</msg>
<status status="PASS" starttime="20200527 19:03:08.828" endtime="20200527 19:03:08.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:08.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:08.829" endtime="20200527 19:03:08.830"></status>
</kw>
<msg timestamp="20200527 19:03:08.830" level="INFO">${result} = 15861-rpcwoport</msg>
<status status="PASS" starttime="20200527 19:03:06.708" endtime="20200527 19:03:08.830"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:08.830" endtime="20200527 19:03:08.831"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:08.835" level="INFO">Running command 'ozone sh key put o3://om:9862/15861-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:12.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:12.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:08.832" endtime="20200527 19:03:12.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:12.704" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:12.703" endtime="20200527 19:03:12.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:12.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:12.704" endtime="20200527 19:03:12.705"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:08.832" endtime="20200527 19:03:12.705"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:12.708" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:12.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:12.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:12.706" endtime="20200527 19:03:12.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:12.711" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:12.711" endtime="20200527 19:03:12.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:12.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:12.712" endtime="20200527 19:03:12.712"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:12.705" endtime="20200527 19:03:12.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:12.716" level="INFO">Running command 'ozone sh key get o3://om:9862/15861-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:16.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:16.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:12.713" endtime="20200527 19:03:16.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:16.143" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:16.143" endtime="20200527 19:03:16.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:16.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:16.144" endtime="20200527 19:03:16.144"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:12.713" endtime="20200527 19:03:16.144"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:16.147" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:16.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:16.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:16.145" endtime="20200527 19:03:16.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:16.153" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:16.152" endtime="20200527 19:03:16.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:16.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:16.153" endtime="20200527 19:03:16.153"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:16.145" endtime="20200527 19:03:16.154"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:16.157" level="INFO">Running command 'ozone sh key cp o3://om:9862/15861-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:19.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:19.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:16.155" endtime="20200527 19:03:19.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:19.990" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:19.990" endtime="20200527 19:03:19.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:19.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:19.991" endtime="20200527 19:03:19.991"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:16.154" endtime="20200527 19:03:19.991"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:19.994" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:19.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:19.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:19.992" endtime="20200527 19:03:19.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:19.997" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:19.997" endtime="20200527 19:03:19.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:19.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:19.998" endtime="20200527 19:03:20.002"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:19.992" endtime="20200527 19:03:20.002"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:20.005" level="INFO">Running command 'ozone sh key get o3://om:9862/15861-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:23.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:23.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:20.003" endtime="20200527 19:03:23.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:23.535" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:23.534" endtime="20200527 19:03:23.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:23.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:23.535" endtime="20200527 19:03:23.536"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:20.002" endtime="20200527 19:03:23.536"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:23.539" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:23.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:23.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:23.537" endtime="20200527 19:03:23.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:23.543" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:23.542" endtime="20200527 19:03:23.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:23.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:23.543" endtime="20200527 19:03:23.543"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:23.536" endtime="20200527 19:03:23.543"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:23.546" level="INFO">Running command 'ozone sh key delete o3://om:9862/15861-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:25.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:25.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:23.544" endtime="20200527 19:03:25.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:25.425" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:25.424" endtime="20200527 19:03:25.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:25.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:25.425" endtime="20200527 19:03:25.426"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:23.544" endtime="20200527 19:03:25.426"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:25.429" level="INFO">Running command 'ozone sh key get o3://om:9862/15861-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:27.109" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 19:03:27.110" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 19:03:25.427" endtime="20200527 19:03:27.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:27.111" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 19:03:27.110" endtime="20200527 19:03:27.111"></status>
</kw>
<msg timestamp="20200527 19:03:27.111" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 19:03:25.426" endtime="20200527 19:03:27.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:27.112" endtime="20200527 19:03:27.112"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:27.115" level="INFO">Running command 'ozone sh key get --force o3://om:9862/15861-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:30.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:30.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:27.113" endtime="20200527 19:03:30.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:30.622" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:30.621" endtime="20200527 19:03:30.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:30.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:30.622" endtime="20200527 19:03:30.623"></status>
</kw>
<msg timestamp="20200527 19:03:30.627" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 19:03:27.112" endtime="20200527 19:03:30.627"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:30.627" endtime="20200527 19:03:30.627"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:30.639" level="INFO">Running command 'ozone sh key info o3://om:9862/15861-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:32.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:32.816" level="INFO">${output} = {
  "volumeName": "15861-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T19:03:10.707Z",
  "modificationTime": "2020-05-27T19:03:12.248Z",
  "re...</msg>
<status status="PASS" starttime="20200527 19:03:30.629" endtime="20200527 19:03:32.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:32.817" level="INFO">{
  "volumeName": "15861-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T19:03:10.707Z",
  "modificationTime": "2020-05-27T19:03:12.248Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104241967314108540,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 19:03:32.817" endtime="20200527 19:03:32.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:32.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:32.817" endtime="20200527 19:03:32.818"></status>
</kw>
<msg timestamp="20200527 19:03:32.818" level="INFO">${result} = {
  "volumeName": "15861-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T19:03:10.707Z",
  "modificationTime": "2020-05-27T19:03:12.248Z",
  "re...</msg>
<status status="PASS" starttime="20200527 19:03:30.628" endtime="20200527 19:03:32.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:32.818" endtime="20200527 19:03:32.819"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:32.823" level="INFO">Running command 'ozone sh key list o3://om:9862/15861-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:34.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:34.976" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 19:03:32.820" endtime="20200527 19:03:34.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:34.977" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 19:03:34.976" endtime="20200527 19:03:34.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:34.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:34.977" endtime="20200527 19:03:34.978"></status>
</kw>
<msg timestamp="20200527 19:03:34.978" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 19:03:32.819" endtime="20200527 19:03:34.978"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:34.979" endtime="20200527 19:03:34.979"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:34.983" level="INFO">Running command 'ozone sh key rename o3://om:9862/15861-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:36.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:36.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:34.980" endtime="20200527 19:03:36.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:36.761" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:36.760" endtime="20200527 19:03:36.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:36.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:36.761" endtime="20200527 19:03:36.762"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:34.979" endtime="20200527 19:03:36.762"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:36.766" level="INFO">Running command 'ozone sh key list o3://om:9862/15861-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:38.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:38.947" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 19:03:36.763" endtime="20200527 19:03:38.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:38.948" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 19:03:38.947" endtime="20200527 19:03:38.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:38.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:38.949" endtime="20200527 19:03:38.949"></status>
</kw>
<msg timestamp="20200527 19:03:38.950" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 19:03:36.762" endtime="20200527 19:03:38.950"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:38.950" endtime="20200527 19:03:38.950"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:38.954" level="INFO">Running command 'ozone sh key delete o3://om:9862/15861-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:40.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:40.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:38.951" endtime="20200527 19:03:40.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:40.822" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:40.821" endtime="20200527 19:03:40.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:40.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:40.822" endtime="20200527 19:03:40.823"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:38.950" endtime="20200527 19:03:40.823"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:08.831" endtime="20200527 19:03:40.823"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:08.831" endtime="20200527 19:03:40.824"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:40.827" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/15861-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:42.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:42.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:40.824" endtime="20200527 19:03:42.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:42.670" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:42.669" endtime="20200527 19:03:42.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:42.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:42.671" endtime="20200527 19:03:42.671"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:40.824" endtime="20200527 19:03:42.671"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:42.675" level="INFO">Running command 'ozone sh volume delete o3://om:9862/15861-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:44.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:44.539" level="INFO">${output} = Volume 15861-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200527 19:03:42.672" endtime="20200527 19:03:44.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:44.540" level="INFO">Volume 15861-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200527 19:03:44.539" endtime="20200527 19:03:44.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:44.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:44.540" endtime="20200527 19:03:44.541"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:42.672" endtime="20200527 19:03:44.541"></status>
</kw>
<status status="PASS" starttime="20200527 19:02:50.674" endtime="20200527 19:03:44.541"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 19:02:50.673" endtime="20200527 19:03:44.541" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:44.543" endtime="20200527 19:03:44.543"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:44.548" level="INFO">Running command 'ozone sh volume create o3://om:9862/15861-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:46.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:46.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:03:44.545" endtime="20200527 19:03:46.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:46.484" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:03:46.483" endtime="20200527 19:03:46.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:46.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:46.484" endtime="20200527 19:03:46.485"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:44.544" endtime="20200527 19:03:46.485"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:46.489" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15861-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:48.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:48.712" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:03:46.486" endtime="20200527 19:03:48.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:48.714" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:03:48.713" endtime="20200527 19:03:48.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:48.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:48.714" endtime="20200527 19:03:48.714"></status>
</kw>
<msg timestamp="20200527 19:03:48.715" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:03:46.486" endtime="20200527 19:03:48.715"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:48.715" endtime="20200527 19:03:48.716"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:48.720" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/15861-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:50.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:50.659" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 19:03:48.717" endtime="20200527 19:03:50.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:50.661" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 19:03:50.660" endtime="20200527 19:03:50.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:50.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:50.661" endtime="20200527 19:03:50.662"></status>
</kw>
<msg timestamp="20200527 19:03:50.662" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200527 19:03:48.716" endtime="20200527 19:03:50.662"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:50.665" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15861-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:52.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:52.679" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:03:50.663" endtime="20200527 19:03:52.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:52.680" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:03:52.680" endtime="20200527 19:03:52.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:52.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:52.681" endtime="20200527 19:03:52.681"></status>
</kw>
<msg timestamp="20200527 19:03:52.681" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:03:50.662" endtime="20200527 19:03:52.681"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:52.681" endtime="20200527 19:03:52.683"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:52.686" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/15861-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:54.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:54.409" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 19:03:52.683" endtime="20200527 19:03:54.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:54.410" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 19:03:54.409" endtime="20200527 19:03:54.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:54.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:54.410" endtime="20200527 19:03:54.411"></status>
</kw>
<msg timestamp="20200527 19:03:54.411" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200527 19:03:52.683" endtime="20200527 19:03:54.411"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:54.414" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15861-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:56.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:56.453" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:03:54.412" endtime="20200527 19:03:56.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:56.454" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:03:56.453" endtime="20200527 19:03:56.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:56.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:56.455" endtime="20200527 19:03:56.455"></status>
</kw>
<msg timestamp="20200527 19:03:56.455" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:03:54.411" endtime="20200527 19:03:56.456"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 19:03:56.456" endtime="20200527 19:03:56.457"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:56.461" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/15861-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:03:58.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:03:58.300" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 19:03:56.458" endtime="20200527 19:03:58.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:03:58.301" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 19:03:58.301" endtime="20200527 19:03:58.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:03:58.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:03:58.302" endtime="20200527 19:03:58.302"></status>
</kw>
<msg timestamp="20200527 19:03:58.303" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 19:03:56.457" endtime="20200527 19:03:58.303"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:03:58.307" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/15861-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:00.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:00.391" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200527 19:03:58.304" endtime="20200527 19:04:00.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:00.393" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:04:00.392" endtime="20200527 19:04:00.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:00.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:00.393" endtime="20200527 19:04:00.394"></status>
</kw>
<msg timestamp="20200527 19:04:00.394" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200527 19:03:58.303" endtime="20200527 19:04:00.394"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:00.394" endtime="20200527 19:04:00.395"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:00.395" endtime="20200527 19:04:00.396"></status>
</kw>
<status status="PASS" starttime="20200527 19:03:44.543" endtime="20200527 19:04:00.396"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 19:03:44.542" endtime="20200527 19:04:00.396" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:00.398" endtime="20200527 19:04:00.398"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:00.401" level="INFO">Running command 'ozone sh bucket create o3://om:9862/15861-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:02.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:02.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:04:00.399" endtime="20200527 19:04:02.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:02.406" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:04:02.405" endtime="20200527 19:04:02.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:02.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:02.406" endtime="20200527 19:04:02.406"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:00.399" endtime="20200527 19:04:02.407"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:02.410" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15861-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:04.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:04.392" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:02.408" endtime="20200527 19:04:04.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:04.393" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:04:04.392" endtime="20200527 19:04:04.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:04.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:04.394" endtime="20200527 19:04:04.394"></status>
</kw>
<msg timestamp="20200527 19:04:04.395" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:02.407" endtime="20200527 19:04:04.395"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:04.395" endtime="20200527 19:04:04.396"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:04.398" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/15861-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:06.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:06.168" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 19:04:04.396" endtime="20200527 19:04:06.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:06.170" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 19:04:06.169" endtime="20200527 19:04:06.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:06.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:06.170" endtime="20200527 19:04:06.171"></status>
</kw>
<msg timestamp="20200527 19:04:06.171" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200527 19:04:04.396" endtime="20200527 19:04:06.171"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:06.174" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15861-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:08.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:08.365" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:06.172" endtime="20200527 19:04:08.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:08.367" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:04:08.366" endtime="20200527 19:04:08.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:08.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:08.367" endtime="20200527 19:04:08.368"></status>
</kw>
<msg timestamp="20200527 19:04:08.368" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:06.171" endtime="20200527 19:04:08.368"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:08.368" endtime="20200527 19:04:08.369"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:08.373" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/15861-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:10.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:10.228" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 19:04:08.370" endtime="20200527 19:04:10.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:10.229" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 19:04:10.229" endtime="20200527 19:04:10.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:10.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:10.230" endtime="20200527 19:04:10.230"></status>
</kw>
<msg timestamp="20200527 19:04:10.231" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 19:04:08.369" endtime="20200527 19:04:10.231"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:10.235" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15861-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:12.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:12.258" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:10.231" endtime="20200527 19:04:12.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:12.259" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:04:12.259" endtime="20200527 19:04:12.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:12.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:12.260" endtime="20200527 19:04:12.260"></status>
</kw>
<msg timestamp="20200527 19:04:12.260" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:10.231" endtime="20200527 19:04:12.261"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:12.261" endtime="20200527 19:04:12.262"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:12.266" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/15861-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:13.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:13.978" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 19:04:12.263" endtime="20200527 19:04:13.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:13.979" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 19:04:13.978" endtime="20200527 19:04:13.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:13.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:13.979" endtime="20200527 19:04:13.980"></status>
</kw>
<msg timestamp="20200527 19:04:13.980" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 19:04:12.262" endtime="20200527 19:04:13.980"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:13.983" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/15861-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:16.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:16.146" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 19:04:13.981" endtime="20200527 19:04:16.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:16.147" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:04:16.146" endtime="20200527 19:04:16.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:16.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:16.147" endtime="20200527 19:04:16.148"></status>
</kw>
<msg timestamp="20200527 19:04:16.148" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 19:04:13.980" endtime="20200527 19:04:16.148"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:16.148" endtime="20200527 19:04:16.149"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:16.149" endtime="20200527 19:04:16.150"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:00.398" endtime="20200527 19:04:16.150"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 19:04:00.397" endtime="20200527 19:04:16.150" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:16.151" endtime="20200527 19:04:16.152"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:16.156" level="INFO">Running command 'ozone sh key put o3://om:9862/15861-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:20.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:20.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:04:16.153" endtime="20200527 19:04:20.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:20.146" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:04:20.145" endtime="20200527 19:04:20.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:20.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:20.146" endtime="20200527 19:04:20.146"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:16.152" endtime="20200527 19:04:20.147"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:20.150" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15861-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:22.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:22.300" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:20.147" endtime="20200527 19:04:22.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:22.302" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:04:22.301" endtime="20200527 19:04:22.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:22.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:22.302" endtime="20200527 19:04:22.303"></status>
</kw>
<msg timestamp="20200527 19:04:22.303" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:20.147" endtime="20200527 19:04:22.303"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:22.303" endtime="20200527 19:04:22.304"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:22.308" level="INFO">Running command 'ozone sh key addacl o3://om:9862/15861-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:24.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:24.127" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 19:04:22.305" endtime="20200527 19:04:24.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:24.128" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 19:04:24.127" endtime="20200527 19:04:24.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:24.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:24.128" endtime="20200527 19:04:24.129"></status>
</kw>
<msg timestamp="20200527 19:04:24.129" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200527 19:04:22.304" endtime="20200527 19:04:24.129"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:24.133" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15861-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:26.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:26.110" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:24.130" endtime="20200527 19:04:26.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:26.111" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:04:26.110" endtime="20200527 19:04:26.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:26.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:26.111" endtime="20200527 19:04:26.112"></status>
</kw>
<msg timestamp="20200527 19:04:26.112" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:24.129" endtime="20200527 19:04:26.112"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:26.113" endtime="20200527 19:04:26.114"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:26.117" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/15861-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:28.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:28.217" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 19:04:26.114" endtime="20200527 19:04:28.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:28.218" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 19:04:28.218" endtime="20200527 19:04:28.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:28.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:28.219" endtime="20200527 19:04:28.219"></status>
</kw>
<msg timestamp="20200527 19:04:28.220" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200527 19:04:26.114" endtime="20200527 19:04:28.220"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:28.223" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15861-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:30.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:30.341" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:28.220" endtime="20200527 19:04:30.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:30.342" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:04:30.341" endtime="20200527 19:04:30.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:30.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:30.343" endtime="20200527 19:04:30.343"></status>
</kw>
<msg timestamp="20200527 19:04:30.343" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200527 19:04:28.220" endtime="20200527 19:04:30.343"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:30.343" endtime="20200527 19:04:30.344"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:30.347" level="INFO">Running command 'ozone sh key setacl o3://om:9862/15861-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:32.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:32.496" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 19:04:30.345" endtime="20200527 19:04:32.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:32.497" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 19:04:32.497" endtime="20200527 19:04:32.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:32.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:32.498" endtime="20200527 19:04:32.499"></status>
</kw>
<msg timestamp="20200527 19:04:32.499" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200527 19:04:30.344" endtime="20200527 19:04:32.499"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:32.503" level="INFO">Running command 'ozone sh key getacl o3://om:9862/15861-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:34.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:34.414" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 19:04:32.500" endtime="20200527 19:04:34.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:34.416" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200527 19:04:34.415" endtime="20200527 19:04:34.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:34.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:34.416" endtime="20200527 19:04:34.416"></status>
</kw>
<msg timestamp="20200527 19:04:34.417" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200527 19:04:32.499" endtime="20200527 19:04:34.417"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:34.417" endtime="20200527 19:04:34.418"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:34.418" endtime="20200527 19:04:34.419"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:16.152" endtime="20200527 19:04:34.419"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 19:04:16.150" endtime="20200527 19:04:34.419" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:34.421" endtime="20200527 19:04:34.421"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:34.426" level="INFO">Running command 'ozone sh volume info o3:///15861-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:36.239" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 19:04:36.239" level="INFO">${output} = VOLUME_NOT_FOUND Volume 15861-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 19:04:34.423" endtime="20200527 19:04:36.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:36.240" level="INFO">VOLUME_NOT_FOUND Volume 15861-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 19:04:36.239" endtime="20200527 19:04:36.240"></status>
</kw>
<msg timestamp="20200527 19:04:36.240" level="INFO">${result} = VOLUME_NOT_FOUND Volume 15861-rpcwport is not found</msg>
<status status="PASS" starttime="20200527 19:04:34.422" endtime="20200527 19:04:36.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:36.241" endtime="20200527 19:04:36.241"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:36.244" level="INFO">Running command 'ozone sh volume create o3:///15861-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:38.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:38.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:04:36.242" endtime="20200527 19:04:38.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:38.242" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:04:38.241" endtime="20200527 19:04:38.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:38.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:38.242" endtime="20200527 19:04:38.243"></status>
</kw>
<msg timestamp="20200527 19:04:38.243" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 19:04:36.241" endtime="20200527 19:04:38.243"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:38.243" endtime="20200527 19:04:38.244"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:38.248" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="15861-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:40.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:40.284" level="INFO">${output} = {
  "metadata": {},
  "name": "15861-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:04:38.125Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 19:04:38.244" endtime="20200527 19:04:40.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:40.286" level="INFO">{
  "metadata": {},
  "name": "15861-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:04:38.125Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 19:04:40.285" endtime="20200527 19:04:40.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:40.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:40.286" endtime="20200527 19:04:40.287"></status>
</kw>
<msg timestamp="20200527 19:04:40.287" level="INFO">${result} = {
  "metadata": {},
  "name": "15861-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:04:38.125Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 19:04:38.244" endtime="20200527 19:04:40.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:40.287" endtime="20200527 19:04:40.288"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:40.290" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="15861-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:42.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:42.384" level="INFO">${output} = {
  "metadata": {},
  "name": "15861-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:04:38.125Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 19:04:40.288" endtime="20200527 19:04:42.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:42.385" level="INFO">{
  "metadata": {},
  "name": "15861-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:04:38.125Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 19:04:42.385" endtime="20200527 19:04:42.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:42.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:42.386" endtime="20200527 19:04:42.386"></status>
</kw>
<msg timestamp="20200527 19:04:42.387" level="INFO">${result} = {
  "metadata": {},
  "name": "15861-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:04:38.125Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200527 19:04:40.288" endtime="20200527 19:04:42.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:42.387" endtime="20200527 19:04:42.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:42.391" level="INFO">Running command 'ozone sh volume update o3:///15861-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:44.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:44.547" level="INFO">${output} = {
  "metadata" : { },
  "name" : "15861-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T19:04:38.125Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200527 19:04:42.388" endtime="20200527 19:04:44.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:44.548" level="INFO">{
  "metadata" : { },
  "name" : "15861-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T19:04:38.125Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 19:04:44.547" endtime="20200527 19:04:44.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:44.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:44.549" endtime="20200527 19:04:44.549"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:42.387" endtime="20200527 19:04:44.549"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:44.553" level="INFO">Running command 'ozone sh volume info o3:///15861-rpcwport | jq -r '. | select(.name=="15861-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:46.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:46.656" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 19:04:44.550" endtime="20200527 19:04:46.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:46.657" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 19:04:46.656" endtime="20200527 19:04:46.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:46.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:46.657" endtime="20200527 19:04:46.658"></status>
</kw>
<msg timestamp="20200527 19:04:46.658" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 19:04:44.550" endtime="20200527 19:04:46.658"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:46.658" endtime="20200527 19:04:46.659"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:46.662" level="INFO">Running command 'ozone sh bucket create o3:///15861-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:48.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:48.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:04:46.659" endtime="20200527 19:04:48.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:48.641" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:04:48.641" endtime="20200527 19:04:48.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:48.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:48.642" endtime="20200527 19:04:48.642"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:46.659" endtime="20200527 19:04:48.643"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:48.647" level="INFO">Running command 'ozone sh bucket info o3:///15861-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:50.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:50.765" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 19:04:48.643" endtime="20200527 19:04:50.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:50.766" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 19:04:50.765" endtime="20200527 19:04:50.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:50.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:50.767" endtime="20200527 19:04:50.768"></status>
</kw>
<msg timestamp="20200527 19:04:50.768" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 19:04:48.643" endtime="20200527 19:04:50.768"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:50.768" endtime="20200527 19:04:50.769"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:50.772" level="INFO">Running command 'ozone sh bucket list o3:///15861-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:52.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:52.887" level="INFO">${output} = 15861-rpcwport</msg>
<status status="PASS" starttime="20200527 19:04:50.770" endtime="20200527 19:04:52.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:52.889" level="INFO">15861-rpcwport</msg>
<status status="PASS" starttime="20200527 19:04:52.888" endtime="20200527 19:04:52.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:52.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:52.889" endtime="20200527 19:04:52.890"></status>
</kw>
<msg timestamp="20200527 19:04:52.890" level="INFO">${result} = 15861-rpcwport</msg>
<status status="PASS" starttime="20200527 19:04:50.769" endtime="20200527 19:04:52.890"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 19:04:52.890" endtime="20200527 19:04:52.890"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:52.894" level="INFO">Running command 'ozone sh key put o3:///15861-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:56.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:56.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:04:52.892" endtime="20200527 19:04:56.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:56.708" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:04:56.707" endtime="20200527 19:04:56.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:56.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:56.708" endtime="20200527 19:04:56.709"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:52.892" endtime="20200527 19:04:56.709"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:56.712" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:04:56.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:04:56.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:04:56.710" endtime="20200527 19:04:56.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:04:56.716" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:04:56.715" endtime="20200527 19:04:56.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:04:56.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:04:56.716" endtime="20200527 19:04:56.717"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:56.709" endtime="20200527 19:04:56.717"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:04:56.720" level="INFO">Running command 'ozone sh key get o3:///15861-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:00.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:00.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:04:56.718" endtime="20200527 19:05:00.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:00.230" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:00.229" endtime="20200527 19:05:00.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:00.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:00.230" endtime="20200527 19:05:00.231"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:56.717" endtime="20200527 19:05:00.231"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:00.234" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:00.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:00.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:00.232" endtime="20200527 19:05:00.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:00.237" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:00.237" endtime="20200527 19:05:00.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:00.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:00.238" endtime="20200527 19:05:00.238"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:00.231" endtime="20200527 19:05:00.239"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:00.241" level="INFO">Running command 'ozone sh key cp o3:///15861-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:04.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:04.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:00.239" endtime="20200527 19:05:04.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:04.118" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:04.117" endtime="20200527 19:05:04.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:04.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:04.118" endtime="20200527 19:05:04.119"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:00.239" endtime="20200527 19:05:04.119"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:04.122" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:04.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:04.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:04.120" endtime="20200527 19:05:04.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:04.126" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:04.126" endtime="20200527 19:05:04.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:04.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:04.127" endtime="20200527 19:05:04.127"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:04.119" endtime="20200527 19:05:04.127"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:04.130" level="INFO">Running command 'ozone sh key get o3:///15861-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:07.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:07.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:04.128" endtime="20200527 19:05:07.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:07.976" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:07.976" endtime="20200527 19:05:07.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:07.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:07.977" endtime="20200527 19:05:07.977"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:04.128" endtime="20200527 19:05:07.978"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:07.980" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:07.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:07.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:07.978" endtime="20200527 19:05:07.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:07.984" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:07.984" endtime="20200527 19:05:07.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:07.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:07.985" endtime="20200527 19:05:07.985"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:07.978" endtime="20200527 19:05:07.986"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:07.988" level="INFO">Running command 'ozone sh key delete o3:///15861-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:09.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:09.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:07.986" endtime="20200527 19:05:09.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:09.847" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:09.846" endtime="20200527 19:05:09.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:09.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:09.847" endtime="20200527 19:05:09.848"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:07.986" endtime="20200527 19:05:09.848"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:09.850" level="INFO">Running command 'ozone sh key get o3:///15861-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:11.692" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 19:05:11.692" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 19:05:09.849" endtime="20200527 19:05:11.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:11.694" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 19:05:11.693" endtime="20200527 19:05:11.694"></status>
</kw>
<msg timestamp="20200527 19:05:11.694" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 19:05:09.848" endtime="20200527 19:05:11.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:11.695" endtime="20200527 19:05:11.695"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:11.699" level="INFO">Running command 'ozone sh key get --force o3:///15861-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:15.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:15.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:11.696" endtime="20200527 19:05:15.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:15.218" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:15.217" endtime="20200527 19:05:15.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:15.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:15.218" endtime="20200527 19:05:15.218"></status>
</kw>
<msg timestamp="20200527 19:05:15.219" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 19:05:11.695" endtime="20200527 19:05:15.219"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:15.219" endtime="20200527 19:05:15.219"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:15.222" level="INFO">Running command 'ozone sh key info o3:///15861-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:17.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:17.303" level="INFO">${output} = {
  "volumeName": "15861-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T19:04:54.831Z",
  "modificationTime": "2020-05-27T19:04:56.339Z",
  "rep...</msg>
<status status="PASS" starttime="20200527 19:05:15.220" endtime="20200527 19:05:17.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:17.305" level="INFO">{
  "volumeName": "15861-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T19:04:54.831Z",
  "modificationTime": "2020-05-27T19:04:56.339Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104241974138044540,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 19:05:17.304" endtime="20200527 19:05:17.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:17.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:17.305" endtime="20200527 19:05:17.306"></status>
</kw>
<msg timestamp="20200527 19:05:17.306" level="INFO">${result} = {
  "volumeName": "15861-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T19:04:54.831Z",
  "modificationTime": "2020-05-27T19:04:56.339Z",
  "rep...</msg>
<status status="PASS" starttime="20200527 19:05:15.219" endtime="20200527 19:05:17.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:17.306" endtime="20200527 19:05:17.307"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:17.310" level="INFO">Running command 'ozone sh key list o3:///15861-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:19.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:19.467" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 19:05:17.308" endtime="20200527 19:05:19.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:19.468" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 19:05:19.467" endtime="20200527 19:05:19.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:19.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:19.468" endtime="20200527 19:05:19.469"></status>
</kw>
<msg timestamp="20200527 19:05:19.469" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 19:05:17.307" endtime="20200527 19:05:19.469"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:19.469" endtime="20200527 19:05:19.470"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:19.473" level="INFO">Running command 'ozone sh key rename o3:///15861-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:21.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:21.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:19.471" endtime="20200527 19:05:21.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:21.329" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:21.329" endtime="20200527 19:05:21.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:21.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:21.330" endtime="20200527 19:05:21.330"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:19.470" endtime="20200527 19:05:21.331"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:21.335" level="INFO">Running command 'ozone sh key list o3:///15861-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:23.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:23.272" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 19:05:21.331" endtime="20200527 19:05:23.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:23.273" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 19:05:23.272" endtime="20200527 19:05:23.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:23.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:23.273" endtime="20200527 19:05:23.274"></status>
</kw>
<msg timestamp="20200527 19:05:23.274" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 19:05:21.331" endtime="20200527 19:05:23.274"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:23.274" endtime="20200527 19:05:23.275"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:23.278" level="INFO">Running command 'ozone sh key delete o3:///15861-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:25.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:25.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:23.275" endtime="20200527 19:05:25.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:25.222" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:25.221" endtime="20200527 19:05:25.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:25.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:25.222" endtime="20200527 19:05:25.223"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:23.275" endtime="20200527 19:05:25.223"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:52.891" endtime="20200527 19:05:25.223"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:52.891" endtime="20200527 19:05:25.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:25.226" level="INFO">Running command 'ozone sh bucket delete o3:///15861-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:26.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:26.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:25.224" endtime="20200527 19:05:26.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:26.976" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:26.976" endtime="20200527 19:05:26.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:26.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:26.977" endtime="20200527 19:05:26.977"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:25.224" endtime="20200527 19:05:26.977"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:26.981" level="INFO">Running command 'ozone sh volume delete o3:///15861-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:28.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:28.903" level="INFO">${output} = Volume 15861-rpcwport is deleted</msg>
<status status="PASS" starttime="20200527 19:05:26.978" endtime="20200527 19:05:28.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:28.905" level="INFO">Volume 15861-rpcwport is deleted</msg>
<status status="PASS" starttime="20200527 19:05:28.904" endtime="20200527 19:05:28.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:28.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:28.905" endtime="20200527 19:05:28.906"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:26.978" endtime="20200527 19:05:28.906"></status>
</kw>
<status status="PASS" starttime="20200527 19:04:34.421" endtime="20200527 19:05:28.906"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 19:04:34.420" endtime="20200527 19:05:28.906" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:28.908" endtime="20200527 19:05:28.908"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:28.912" level="INFO">Running command 'ozone sh volume info /15861-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:30.539" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 19:05:30.539" level="INFO">${output} = VOLUME_NOT_FOUND Volume 15861-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 19:05:28.909" endtime="20200527 19:05:30.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:30.540" level="INFO">VOLUME_NOT_FOUND Volume 15861-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 19:05:30.540" endtime="20200527 19:05:30.541"></status>
</kw>
<msg timestamp="20200527 19:05:30.541" level="INFO">${result} = VOLUME_NOT_FOUND Volume 15861-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200527 19:05:28.909" endtime="20200527 19:05:30.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:30.541" endtime="20200527 19:05:30.541"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:30.544" level="INFO">Running command 'ozone sh volume create /15861-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:32.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:32.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:30.542" endtime="20200527 19:05:32.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:32.486" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:32.485" endtime="20200527 19:05:32.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:32.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:32.487" endtime="20200527 19:05:32.487"></status>
</kw>
<msg timestamp="20200527 19:05:32.488" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 19:05:30.542" endtime="20200527 19:05:32.488"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:32.488" endtime="20200527 19:05:32.488"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:32.493" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="15861-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:34.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:34.451" level="INFO">${output} = {
  "metadata": {},
  "name": "15861-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:05:32.368Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 19:05:32.489" endtime="20200527 19:05:34.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:34.452" level="INFO">{
  "metadata": {},
  "name": "15861-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:05:32.368Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 19:05:34.452" endtime="20200527 19:05:34.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:34.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:34.453" endtime="20200527 19:05:34.453"></status>
</kw>
<msg timestamp="20200527 19:05:34.454" level="INFO">${result} = {
  "metadata": {},
  "name": "15861-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:05:32.368Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 19:05:32.488" endtime="20200527 19:05:34.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:34.454" endtime="20200527 19:05:34.454"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:34.457" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="15861-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:36.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:36.444" level="INFO">${output} = {
  "metadata": {},
  "name": "15861-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:05:32.368Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 19:05:34.455" endtime="20200527 19:05:36.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:36.446" level="INFO">{
  "metadata": {},
  "name": "15861-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:05:32.368Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200527 19:05:36.445" endtime="20200527 19:05:36.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:36.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:36.446" endtime="20200527 19:05:36.446"></status>
</kw>
<msg timestamp="20200527 19:05:36.447" level="INFO">${result} = {
  "metadata": {},
  "name": "15861-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-27T19:05:32.368Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200527 19:05:34.454" endtime="20200527 19:05:36.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:36.447" endtime="20200527 19:05:36.447"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:36.452" level="INFO">Running command 'ozone sh volume update /15861-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:38.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:38.508" level="INFO">${output} = {
  "metadata" : { },
  "name" : "15861-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T19:05:32.368Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200527 19:05:36.448" endtime="20200527 19:05:38.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:38.510" level="INFO">{
  "metadata" : { },
  "name" : "15861-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-27T19:05:32.368Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200527 19:05:38.509" endtime="20200527 19:05:38.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:38.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:38.510" endtime="20200527 19:05:38.511"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:36.447" endtime="20200527 19:05:38.511"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:38.514" level="INFO">Running command 'ozone sh volume info /15861-rpcwoscheme | jq -r '. | select(.name=="15861-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:40.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:40.724" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200527 19:05:38.512" endtime="20200527 19:05:40.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:40.725" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200527 19:05:40.724" endtime="20200527 19:05:40.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:40.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:40.725" endtime="20200527 19:05:40.726"></status>
</kw>
<msg timestamp="20200527 19:05:40.726" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200527 19:05:38.511" endtime="20200527 19:05:40.726"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:40.726" endtime="20200527 19:05:40.727"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:40.730" level="INFO">Running command 'ozone sh bucket create /15861-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:42.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:42.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:40.728" endtime="20200527 19:05:42.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:42.536" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:42.535" endtime="20200527 19:05:42.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:42.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:42.536" endtime="20200527 19:05:42.537"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:40.727" endtime="20200527 19:05:42.537"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:42.540" level="INFO">Running command 'ozone sh bucket info /15861-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:44.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:44.433" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200527 19:05:42.538" endtime="20200527 19:05:44.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:44.434" level="INFO">DISK</msg>
<status status="PASS" starttime="20200527 19:05:44.433" endtime="20200527 19:05:44.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:44.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:44.434" endtime="20200527 19:05:44.435"></status>
</kw>
<msg timestamp="20200527 19:05:44.435" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200527 19:05:42.537" endtime="20200527 19:05:44.435"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:44.435" endtime="20200527 19:05:44.436"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:44.440" level="INFO">Running command 'ozone sh bucket list /15861-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:46.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:46.470" level="INFO">${output} = 15861-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 19:05:44.437" endtime="20200527 19:05:46.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:46.471" level="INFO">15861-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 19:05:46.470" endtime="20200527 19:05:46.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:46.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:46.472" endtime="20200527 19:05:46.472"></status>
</kw>
<msg timestamp="20200527 19:05:46.473" level="INFO">${result} = 15861-rpcwoscheme</msg>
<status status="PASS" starttime="20200527 19:05:44.436" endtime="20200527 19:05:46.473"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200527 19:05:46.473" endtime="20200527 19:05:46.473"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:46.478" level="INFO">Running command 'ozone sh key put /15861-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:50.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:50.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:46.476" endtime="20200527 19:05:50.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:50.272" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:50.271" endtime="20200527 19:05:50.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:50.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:50.272" endtime="20200527 19:05:50.273"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:46.475" endtime="20200527 19:05:50.273"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:50.276" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:50.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:50.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:50.274" endtime="20200527 19:05:50.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:50.279" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:50.279" endtime="20200527 19:05:50.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:50.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:50.280" endtime="20200527 19:05:50.280"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:50.273" endtime="20200527 19:05:50.281"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:50.283" level="INFO">Running command 'ozone sh key get /15861-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:53.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:53.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:50.281" endtime="20200527 19:05:53.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:53.856" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:53.856" endtime="20200527 19:05:53.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:53.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:53.857" endtime="20200527 19:05:53.857"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:50.281" endtime="20200527 19:05:53.858"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:53.863" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:53.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:53.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:53.859" endtime="20200527 19:05:53.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:53.865" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:53.864" endtime="20200527 19:05:53.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:53.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:53.865" endtime="20200527 19:05:53.866"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:53.858" endtime="20200527 19:05:53.866"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:53.868" level="INFO">Running command 'ozone sh key cp /15861-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:57.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:57.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:53.866" endtime="20200527 19:05:57.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:57.954" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:57.954" endtime="20200527 19:05:57.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:57.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:57.955" endtime="20200527 19:05:57.955"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:53.866" endtime="20200527 19:05:57.956"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:57.959" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:05:57.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:05:57.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:57.957" endtime="20200527 19:05:57.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:05:57.962" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:05:57.961" endtime="20200527 19:05:57.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:05:57.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:05:57.962" endtime="20200527 19:05:57.963"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:57.956" endtime="20200527 19:05:57.963"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:05:57.965" level="INFO">Running command 'ozone sh key get /15861-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:01.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:06:01.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:05:57.964" endtime="20200527 19:06:01.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:01.483" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:06:01.482" endtime="20200527 19:06:01.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:06:01.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:06:01.484" endtime="20200527 19:06:01.484"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:57.963" endtime="20200527 19:06:01.484"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:06:01.487" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:01.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:06:01.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:06:01.485" endtime="20200527 19:06:01.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:01.491" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:06:01.490" endtime="20200527 19:06:01.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:06:01.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:06:01.491" endtime="20200527 19:06:01.491"></status>
</kw>
<status status="PASS" starttime="20200527 19:06:01.484" endtime="20200527 19:06:01.492"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:06:01.495" level="INFO">Running command 'ozone sh key delete /15861-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:03.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:06:03.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:06:01.493" endtime="20200527 19:06:03.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:03.413" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:06:03.412" endtime="20200527 19:06:03.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:06:03.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:06:03.413" endtime="20200527 19:06:03.414"></status>
</kw>
<status status="PASS" starttime="20200527 19:06:01.492" endtime="20200527 19:06:03.414"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:06:03.417" level="INFO">Running command 'ozone sh key get /15861-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:05.326" level="INFO">${rc} = 255</msg>
<msg timestamp="20200527 19:06:05.326" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 19:06:03.415" endtime="20200527 19:06:05.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:05.327" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 19:06:05.327" endtime="20200527 19:06:05.328"></status>
</kw>
<msg timestamp="20200527 19:06:05.328" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200527 19:06:03.414" endtime="20200527 19:06:05.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 19:06:05.328" endtime="20200527 19:06:05.328"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:06:05.332" level="INFO">Running command 'ozone sh key get --force /15861-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:08.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:06:08.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:06:05.329" endtime="20200527 19:06:08.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:08.929" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:06:08.928" endtime="20200527 19:06:08.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:06:08.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:06:08.929" endtime="20200527 19:06:08.930"></status>
</kw>
<msg timestamp="20200527 19:06:08.930" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200527 19:06:05.329" endtime="20200527 19:06:08.930"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200527 19:06:08.930" endtime="20200527 19:06:08.931"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:06:08.934" level="INFO">Running command 'ozone sh key info /15861-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:11.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:06:11.117" level="INFO">${output} = {
  "volumeName": "15861-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T19:05:48.292Z",
  "modificationTime": "2020-05-27T19:05:49.804Z",
  "...</msg>
<status status="PASS" starttime="20200527 19:06:08.932" endtime="20200527 19:06:11.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:11.118" level="INFO">{
  "volumeName": "15861-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T19:05:48.292Z",
  "modificationTime": "2020-05-27T19:05:49.804Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104241977641599100,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200527 19:06:11.117" endtime="20200527 19:06:11.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:06:11.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:06:11.118" endtime="20200527 19:06:11.119"></status>
</kw>
<msg timestamp="20200527 19:06:11.119" level="INFO">${result} = {
  "volumeName": "15861-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-27T19:05:48.292Z",
  "modificationTime": "2020-05-27T19:05:49.804Z",
  "...</msg>
<status status="PASS" starttime="20200527 19:06:08.931" endtime="20200527 19:06:11.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200527 19:06:11.119" endtime="20200527 19:06:11.120"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:06:11.124" level="INFO">Running command 'ozone sh key list /15861-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:13.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:06:13.093" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200527 19:06:11.121" endtime="20200527 19:06:13.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:13.094" level="INFO">key1</msg>
<status status="PASS" starttime="20200527 19:06:13.093" endtime="20200527 19:06:13.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:06:13.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:06:13.094" endtime="20200527 19:06:13.095"></status>
</kw>
<msg timestamp="20200527 19:06:13.095" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200527 19:06:11.120" endtime="20200527 19:06:13.095"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200527 19:06:13.095" endtime="20200527 19:06:13.096"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:06:13.099" level="INFO">Running command 'ozone sh key rename /15861-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:15.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:06:15.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:06:13.096" endtime="20200527 19:06:15.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:15.007" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:06:15.006" endtime="20200527 19:06:15.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:06:15.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:06:15.007" endtime="20200527 19:06:15.008"></status>
</kw>
<status status="PASS" starttime="20200527 19:06:13.096" endtime="20200527 19:06:15.008"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:06:15.012" level="INFO">Running command 'ozone sh key list /15861-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:16.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:06:16.926" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200527 19:06:15.009" endtime="20200527 19:06:16.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:16.927" level="INFO">key2</msg>
<status status="PASS" starttime="20200527 19:06:16.926" endtime="20200527 19:06:16.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:06:16.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:06:16.927" endtime="20200527 19:06:16.928"></status>
</kw>
<msg timestamp="20200527 19:06:16.928" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200527 19:06:15.008" endtime="20200527 19:06:16.928"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200527 19:06:16.928" endtime="20200527 19:06:16.929"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:06:16.932" level="INFO">Running command 'ozone sh key delete /15861-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:18.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:06:18.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:06:16.929" endtime="20200527 19:06:18.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:18.759" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:06:18.758" endtime="20200527 19:06:18.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:06:18.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:06:18.759" endtime="20200527 19:06:18.760"></status>
</kw>
<status status="PASS" starttime="20200527 19:06:16.929" endtime="20200527 19:06:18.760"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:46.474" endtime="20200527 19:06:18.760"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:46.474" endtime="20200527 19:06:18.760"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:06:18.765" level="INFO">Running command 'ozone sh bucket delete /15861-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:20.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:06:20.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200527 19:06:18.761" endtime="20200527 19:06:20.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:20.680" level="INFO"></msg>
<status status="PASS" starttime="20200527 19:06:20.679" endtime="20200527 19:06:20.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:06:20.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:06:20.680" endtime="20200527 19:06:20.680"></status>
</kw>
<status status="PASS" starttime="20200527 19:06:18.760" endtime="20200527 19:06:20.681"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200527 19:06:20.684" level="INFO">Running command 'ozone sh volume delete /15861-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200527 19:06:22.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200527 19:06:22.589" level="INFO">${output} = Volume 15861-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200527 19:06:20.681" endtime="20200527 19:06:22.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200527 19:06:22.591" level="INFO">Volume 15861-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200527 19:06:22.590" endtime="20200527 19:06:22.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200527 19:06:22.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200527 19:06:22.591" endtime="20200527 19:06:22.592"></status>
</kw>
<status status="PASS" starttime="20200527 19:06:20.681" endtime="20200527 19:06:22.592"></status>
</kw>
<status status="PASS" starttime="20200527 19:05:28.908" endtime="20200527 19:06:22.592"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200527 19:05:28.907" endtime="20200527 19:06:22.593" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200527 19:02:50.665" endtime="20200527 19:06:22.594"></status>
</suite>
<status status="PASS" starttime="20200527 19:01:45.098" endtime="20200527 19:06:22.599"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
