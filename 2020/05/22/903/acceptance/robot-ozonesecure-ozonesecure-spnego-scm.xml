<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200522 12:45:06.222" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:06.284" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:06.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:06.287" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200522 12:45:06.279" endtime="20200522 12:45:06.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:06.288" level="INFO">scm</msg>
<status status="PASS" starttime="20200522 12:45:06.287" endtime="20200522 12:45:06.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:06.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:06.288" endtime="20200522 12:45:06.288"></status>
</kw>
<msg timestamp="20200522 12:45:06.289" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200522 12:45:06.279" endtime="20200522 12:45:06.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200522 12:45:06.290" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200522 12:45:06.289" endtime="20200522 12:45:06.290"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:06.294" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:06.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:06.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:45:06.291" endtime="20200522 12:45:06.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:06.308" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:45:06.307" endtime="20200522 12:45:06.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:06.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:06.308" endtime="20200522 12:45:06.308"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:06.290" endtime="20200522 12:45:06.309"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:06.290" endtime="20200522 12:45:06.309"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:06.278" endtime="20200522 12:45:06.309"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:06.278" endtime="20200522 12:45:06.309"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:06.312" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:13.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:13.956" level="INFO">${output} = 2020-05-22 12:45:07,254 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:45:07,403 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:45:06.309" endtime="20200522 12:45:13.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:13.957" level="INFO">2020-05-22 12:45:07,254 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:45:07,403 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-22 12:45:07,403 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-05-22 12:45:08,552 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-05-22 12:45:08,553 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-22 12:45:08,554 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-22 12:45:08,554 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-05-22 12:45:08,554 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-05-22 12:45:08,554 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-22 12:45:08,554 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-22 12:45:08,576 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-22 12:45:08,596 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-05-22 12:45:08,644 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-74353, with testuser/scm@EXAMPLE.COM as owner.
2020-05-22 12:45:08,674 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-74353/bucket-0-10936, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:45:09,037 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-22 12:45:09,603 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,007
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,013
Average Time spent in key write: 00:00:00,084
Total bytes written: 2050
Total Execution time: 00:00:06,066
***************************************************</msg>
<status status="PASS" starttime="20200522 12:45:13.956" endtime="20200522 12:45:13.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:13.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:13.957" endtime="20200522 12:45:13.958"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:06.309" endtime="20200522 12:45:13.958"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:45:06.277" endtime="20200522 12:45:13.958" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:13.962" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:13.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:13.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:45:13.960" endtime="20200522 12:45:13.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:13.967" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:45:13.966" endtime="20200522 12:45:13.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:13.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:13.967" endtime="20200522 12:45:13.967"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:13.960" endtime="20200522 12:45:13.967"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:13.960" endtime="20200522 12:45:13.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:13.970" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:13.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:13.989" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200522 12:45:13.968" endtime="20200522 12:45:13.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:13.990" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200522 12:45:13.989" endtime="20200522 12:45:13.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:13.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:13.990" endtime="20200522 12:45:13.991"></status>
</kw>
<msg timestamp="20200522 12:45:13.991" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200522 12:45:13.968" endtime="20200522 12:45:13.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200522 12:45:13.991" endtime="20200522 12:45:13.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:13.995" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:13.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:13.997" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200522 12:45:13.993" endtime="20200522 12:45:13.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:13.998" level="INFO">scm</msg>
<status status="PASS" starttime="20200522 12:45:13.997" endtime="20200522 12:45:13.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:13.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:13.998" endtime="20200522 12:45:13.999"></status>
</kw>
<msg timestamp="20200522 12:45:13.999" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200522 12:45:13.993" endtime="20200522 12:45:13.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200522 12:45:13.999" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200522 12:45:13.999" endtime="20200522 12:45:14.000"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.002" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:45:14.001" endtime="20200522 12:45:14.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.016" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:45:14.015" endtime="20200522 12:45:14.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.016" endtime="20200522 12:45:14.016"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.000" endtime="20200522 12:45:14.017"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.000" endtime="20200522 12:45:14.017"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:13.992" endtime="20200522 12:45:14.017"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:13.992" endtime="20200522 12:45:14.017"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.021" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.051" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200522 12:45:14.018" endtime="20200522 12:45:14.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.052" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x11bbf20
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICVwYJKoZIhvcSAQICAQBuggJGMIICQqADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYRGJuEbSW+oNVoPIdI95zOHGeto1rghkZYCg9Z0Une8jiLBYnXh/PHNLMoBxpr65zhuza7o8BqQ1y96xgP+vfsS74a/qLeV+vPnTR0MXD3vtbQNo1pG3gtYvjpc5SXwPE4716oxCtKFiUvuiSAahoRPwMbp8QlIeWUCa7iD6o8xEr847ItdWH5pWkEfN3YxLRMqEQmnyBLQyhmmmQ7L4pbtqDwXyssCHVrNB4W9NjXWIfrJAhpQ8rE2cSuwDkaSqn9iJHLjezDYArUis1DZ1oNT5zClF0aWcf3yD0szZ45MdGHU6rM1u7ULyDxbPlezUdiwnQRsmB/EOG7dWho+14D+YWD73VQpIHVMIHSoAMCARKigcoEgcc14AZlMLkHGovGwd7Rp7OTI7/pqMUrI5tjHroZva3lQBrh7ckShEV7tjeSFc5Hk9ZZNIpc2W4W/mDIZt7XQ5/hQRc/ad4Z6OW8DDH2Y6PlXZenjyS/BqozWlSuoOm8GKRCHnoJUmE4O6fDvSgKFgAz/cXt5rwiN+KUQCpe6pOMvL4PtXgi1+3zFJSavwozaEfVjRVceChywWfq2kcGLXmChQTNOPU7DnUN0yQYcnlg/t1BM8DyHcKmcsRNmuXdcEeGJLJTghxc
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 22 May 2020 12:45:14 GMT
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 22 May 2020 12:45:14 GMT
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBlmrPqpi6+ZZruvuvx1mvTPoRj9hUt1TYupyZcaM+tPzDi7XAevsIfGHFE0aAlFT9KLuQgxr+cSKA+O4jK3lngzA=
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590187514045&amp;s=d/hGqJdZQQV3bRDSHkGl74mMIfLlYXILiXLx1TtiJro="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 22 May 2020 11:43:40 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Fri, 22 May 2020 12:45:14 GMT
Cache-Control: no-cache
Expires: Fri, 22 May 2020 12:45:14 GMT
Date: Fri, 22 May 2020 12:45:14 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Fri, 22 May 2020 12:45:14 GMT
Date: Fri, 22 May 2020 12:45:14 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBlmrPqpi6+ZZruvuvx1mvTPoRj9hUt1TYupyZcaM+tPzDi7XAevsIfGHFE0aAlFT9KLuQgxr+cSKA+O4jK3lngzA=
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590187514045&amp;s=d/hGqJdZQQV3bRDSHkGl74mMIfLlYXILiXLx1TtiJro="; Path=/; HttpOnly
Last-Modified: Fri, 22 May 2020 11:43:40 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200522 12:45:14.051" endtime="20200522 12:45:14.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.052" endtime="20200522 12:45:14.053"></status>
</kw>
<msg timestamp="20200522 12:45:14.053" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200522 12:45:14.017" endtime="20200522 12:45:14.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200522 12:45:14.053" endtime="20200522 12:45:14.054"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:13.959" endtime="20200522 12:45:14.054"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:45:13.959" endtime="20200522 12:45:14.054" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.060" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:45:14.056" endtime="20200522 12:45:14.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.063" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:45:14.063" endtime="20200522 12:45:14.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.063" endtime="20200522 12:45:14.064"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.056" endtime="20200522 12:45:14.064"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.056" endtime="20200522 12:45:14.064"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.069" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.083" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200522 12:45:14.065" endtime="20200522 12:45:14.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.084" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200522 12:45:14.083" endtime="20200522 12:45:14.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.084" endtime="20200522 12:45:14.084"></status>
</kw>
<msg timestamp="20200522 12:45:14.084" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200522 12:45:14.064" endtime="20200522 12:45:14.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200522 12:45:14.085" endtime="20200522 12:45:14.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.097" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.099" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200522 12:45:14.086" endtime="20200522 12:45:14.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.100" level="INFO">scm</msg>
<status status="PASS" starttime="20200522 12:45:14.100" endtime="20200522 12:45:14.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.101" endtime="20200522 12:45:14.101"></status>
</kw>
<msg timestamp="20200522 12:45:14.101" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200522 12:45:14.086" endtime="20200522 12:45:14.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200522 12:45:14.102" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200522 12:45:14.101" endtime="20200522 12:45:14.102"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.105" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:45:14.103" endtime="20200522 12:45:14.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.123" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:45:14.123" endtime="20200522 12:45:14.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.124" endtime="20200522 12:45:14.124"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.102" endtime="20200522 12:45:14.124"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.102" endtime="20200522 12:45:14.124"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.085" endtime="20200522 12:45:14.124"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.085" endtime="20200522 12:45:14.125"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.127" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.195" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200522 12:45:14.125" endtime="20200522 12:45:14.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.196" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0xb1af50
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbqmi/0/lBCG9rPSjc7H38cDeNxCkTOcEMmK+AApJjX0wsblWywU277kzuZJUc1lsSPMV95/mQ7UczdsGNUYVshUy6aOH2AMYOGrQb2uPpMrrS2EX6/38RSMm9xnktJFxkgP1iaRrnlke87ZWRoaMKhWIrt+N0XU0JmpSD8vS18NKkMRU2l1V/bwmm3Y3OPEP2vDB4rYuTknwbujEPi21Mu4oppp4DBWY2wmIPPa8p+9BAK4logKF6UPeP5JQpffP+XY2JNtKuCFfmkCiD+kenHHm/9GCQYqv1B+boMmp8ZCCTYvQNaFq7+aat7dWeUM6rmNu4T1NHRvWPGub64sVoH8yyLX+5OpIHWMIHToAMCARKigcsEgcjWG/uylhV7/BK3YR8uX4/PtzNMX/r04NsZvvhd/fD6c8x4gGY3Z2q8n7XLvsOXEQHks5hBdpKZHBvBWE/BrDqGIB2FTgBJA/+ziAiv/tPNDB1MClg2e0lbq9n8iVihysBtOeSQ2uVSdNFbPVFLpoaVQSrV7fA7VbmT97uLXhxJgPj34ijiwDhC7OlRO0Iv9rtBcFZmlJYv26NiRFNZy3Jt33e1vD27Iryw9V27jQH/cUTKnlrGAbxwsrtpA9c2njE4KGUuaR3qHg==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 22 May 2020 12:45:14 GMT
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCHaM36sU5LYBXsv2RLqN02ccKiZRM4kSPmdEN9xKEDqJ3HRm1ZNYRtRoB/6VUTFIpTb4BUFa/7lHNSphjxTKm77bH
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590187514162&amp;s=x5gRPFcOS0Ch0Dq2nRUFYfPrDWfSPrkMHbUNnl8AlOk="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1590151514162.tgz"
&lt; Content-Length: 72320
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Fri, 22 May 2020 12:45:14 GMT
Cache-Control: no-cache
Expires: Fri, 22 May 2020 12:45:14 GMT
Date: Fri, 22 May 2020 12:45:14 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCHaM36sU5LYBXsv2RLqN02ccKiZRM4kSPmdEN9xKEDqJ3HRm1ZNYRtRoB/6VUTFIpTb4BUFa/7lHNSphjxTKm77bH
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590187514162&amp;s=x5gRPFcOS0Ch0Dq2nRUFYfPrDWfSPrkMHbUNnl8AlOk="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1590151514162.tgz"
Content-Length: 72320
</msg>
<status status="PASS" starttime="20200522 12:45:14.196" endtime="20200522 12:45:14.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.197" endtime="20200522 12:45:14.197"></status>
</kw>
<msg timestamp="20200522 12:45:14.197" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200522 12:45:14.125" endtime="20200522 12:45:14.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200522 12:45:14.197" endtime="20200522 12:45:14.198"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.055" endtime="20200522 12:45:14.198"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:45:14.054" endtime="20200522 12:45:14.198" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.205" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:45:14.201" endtime="20200522 12:45:14.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.208" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:45:14.207" endtime="20200522 12:45:14.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.208" endtime="20200522 12:45:14.208"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.200" endtime="20200522 12:45:14.208"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.200" endtime="20200522 12:45:14.208"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.212" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.227" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200522 12:45:14.209" endtime="20200522 12:45:14.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.228" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200522 12:45:14.228" endtime="20200522 12:45:14.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.228" endtime="20200522 12:45:14.229"></status>
</kw>
<msg timestamp="20200522 12:45:14.229" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200522 12:45:14.209" endtime="20200522 12:45:14.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200522 12:45:14.229" endtime="20200522 12:45:14.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.234" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.237" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200522 12:45:14.231" endtime="20200522 12:45:14.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.238" level="INFO">scm</msg>
<status status="PASS" starttime="20200522 12:45:14.238" endtime="20200522 12:45:14.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.238" endtime="20200522 12:45:14.239"></status>
</kw>
<msg timestamp="20200522 12:45:14.239" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200522 12:45:14.231" endtime="20200522 12:45:14.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200522 12:45:14.240" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200522 12:45:14.239" endtime="20200522 12:45:14.240"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.243" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:45:14.241" endtime="20200522 12:45:14.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.254" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:45:14.253" endtime="20200522 12:45:14.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.254" endtime="20200522 12:45:14.254"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.240" endtime="20200522 12:45:14.255"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.240" endtime="20200522 12:45:14.255"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.230" endtime="20200522 12:45:14.255"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.230" endtime="20200522 12:45:14.255"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.258" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.295" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200522 12:45:14.256" endtime="20200522 12:45:14.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.296" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x1ed7f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.25.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQb3Y8n/afvyavGF6gm/1KdoS1cEpOhTFlQAUBTE4iE2T387BnuLCcg1Es1IS2qxdLFWMRY8SYSsKTTIzQ/LDnmPm47H6KMgYWeW3W0VGTLO4bzfTBS05y3v7Df6pVX/FlIj6U3pBRp+Vtkd7ALhrynTYxJz2oU3c2zL1xFPPbVYmCkSXhcizoyr896Z3zgv8CySElVnxOdYsIB/x09DyIVKh7rWHn8oTcmBTODSGRXdurc04rM+i8stplAow0XO8DhcC+B/z4HSIN2E/E0m/B1xcqPiH92eCVEDbneX1PndYIhqcwUaw/kWhM1HifY32onVrWyxDkuC3cwgxFcWMC010MzrU4ZRpIHWMIHToAMCARKigcsEgcgS2OwCAwUmqKhz+CbNFqx6t1sZPOmVCzkGvXDfSMM0tOGKSu31a0xC7fZA/oqjdCIJdgWtmdtRtx/Y1b9IT7QHtMKpyLzU02a3u+1TWoxYDz8ffFd01RQc+q+xPdvG9qK8LQU9vJo6ejXmQNQOrCr3G4CvP60tgq3EymRLJ2u2vA8n8e6psD9FVNyDXyt2UU1gOkfAvP8s2nmxcq3rgyPQWiUeftuL5Sj4C3FKur0itLl8glc116vAEUXgfJ28uw9mt6gaVE7aIg==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 22 May 2020 12:45:14 GMT
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLcUzF/uJ17PJ5tt0d0hByMMqPgHbkoi4r6p1A58OlUJ5KGA70Y7zXp/x+STBtaWQ0qvalCiInLUnC+FELXkRuhDU
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590187514278&amp;s=vktoPLaXdS+wjlxTMvCNUOtFjMZ2y62+/mo9HghCIdc="; Path=/; HttpOnly
&lt; Content-Length: 534
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Fri, 22 May 2020 12:45:14 GMT
Cache-Control: no-cache
Expires: Fri, 22 May 2020 12:45:14 GMT
Date: Fri, 22 May 2020 12:45:14 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLcUzF/uJ17PJ5tt0d0hByMMqPgHbkoi4r6p1A58OlUJ5KGA70Y7zXp/x+STBtaWQ0qvalCiInLUnC+FELXkRuhDU
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590187514278&amp;s=vktoPLaXdS+wjlxTMvCNUOtFjMZ2y62+/mo9HghCIdc="; Path=/; HttpOnly
Content-Length: 534
</msg>
<status status="PASS" starttime="20200522 12:45:14.295" endtime="20200522 12:45:14.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.296" endtime="20200522 12:45:14.297"></status>
</kw>
<msg timestamp="20200522 12:45:14.297" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.25.0.3...
* Connected to om (172.25.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200522 12:45:14.255" endtime="20200522 12:45:14.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200522 12:45:14.297" endtime="20200522 12:45:14.297"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.199" endtime="20200522 12:45:14.297"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:45:14.199" endtime="20200522 12:45:14.298" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.307" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:45:14.304" endtime="20200522 12:45:14.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.310" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:45:14.310" endtime="20200522 12:45:14.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.311" endtime="20200522 12:45:14.311"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.303" endtime="20200522 12:45:14.311"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.303" endtime="20200522 12:45:14.311"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.314" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.332" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200522 12:45:14.312" endtime="20200522 12:45:14.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.333" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 441
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 441
</msg>
<status status="PASS" starttime="20200522 12:45:14.333" endtime="20200522 12:45:14.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.334" endtime="20200522 12:45:14.334"></status>
</kw>
<msg timestamp="20200522 12:45:14.335" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200522 12:45:14.311" endtime="20200522 12:45:14.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200522 12:45:14.335" endtime="20200522 12:45:14.335"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.341" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.342" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200522 12:45:14.337" endtime="20200522 12:45:14.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.344" level="INFO">scm</msg>
<status status="PASS" starttime="20200522 12:45:14.343" endtime="20200522 12:45:14.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.344" endtime="20200522 12:45:14.344"></status>
</kw>
<msg timestamp="20200522 12:45:14.344" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200522 12:45:14.337" endtime="20200522 12:45:14.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200522 12:45:14.345" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200522 12:45:14.345" endtime="20200522 12:45:14.345"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.349" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:45:14.346" endtime="20200522 12:45:14.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.359" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:45:14.358" endtime="20200522 12:45:14.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.359" endtime="20200522 12:45:14.359"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.346" endtime="20200522 12:45:14.360"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.345" endtime="20200522 12:45:14.360"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.336" endtime="20200522 12:45:14.360"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.336" endtime="20200522 12:45:14.360"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.364" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.403" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200522 12:45:14.360" endtime="20200522 12:45:14.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.404" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 441
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0xc3df20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.25.0.6) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGOu5y4cUzoQPE5G/bUPAEWQPq1vJLPPxZTkg92e6E50Jqqu8K+/ToFtkAcGk+BmFKCn6X4d3I6h/B1sUEnL8D77PBI5cQVj2r09r9wZrRO4pOo18ppWXXkhu3TAvVjjfn4wvkTXq1FHLdZC8UrscinO+wR1j0Oi13YvTC/g/RQE5GwIk1qYsXmc3EeH+L2Ujm93Lnimc73p88Wxno35poG8PtdsI8qVScRjWczxM3z/pdd8NTtdGitNZWQi+y4wyl5yeFBvEeOA+zaDAWJsw1h8O7x9C1bI3pKjMYcGzuW+uFrrnJsh4OTuHacKCXwxt1Jn4T/LdEITPrztVlIdA1WYZJHX//saSB1jCB06ADAgESooHLBIHIj5hH5wPGwsDYHL9AvBh54E9MfStxY8+ft3nDof9LkYJvqtXJpvzg8yu9sQ0S6Xy6r41W96Gkz3cDK65N2yPUS2hTvgeNe9gORj7KB2G65NhhPisVYixDw+PES2wxeto6ERn8d2UMKQta9mEg8SrozjWOz/6z6Lfj+H1nRnQX+r6mPJbWfz/M9LigchnmfjOD+7g/tR1Iw06b63oob03G8V16sGxwxzew6N6uHQlx7AG9kFYCgm73QAlP9VzSM+OaCQ3oebt/qGE=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 22 May 2020 12:45:14 GMT
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 22 May 2020 12:45:14 GMT
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCmTIaR61gzBqyyHVBn9zvRbkD4/LXtuduNft2xg0u5rWpHXz6LRE52Hldag8gh4Qp/Qe+NBz+jWsC3pSzMsMeH+gx
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590187514398&amp;s=UTYUBl3lAmmoZC3n8plJnHfVDOIZ932AOAY5zavwIqI="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 22 May 2020 11:43:16 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 441

HTTP/1.1 200 OK
Date: Fri, 22 May 2020 12:45:14 GMT
Cache-Control: no-cache
Expires: Fri, 22 May 2020 12:45:14 GMT
Date: Fri, 22 May 2020 12:45:14 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Fri, 22 May 2020 12:45:14 GMT
Date: Fri, 22 May 2020 12:45:14 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCmTIaR61gzBqyyHVBn9zvRbkD4/LXtuduNft2xg0u5rWpHXz6LRE52Hldag8gh4Qp/Qe+NBz+jWsC3pSzMsMeH+gx
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590187514398&amp;s=UTYUBl3lAmmoZC3n8plJnHfVDOIZ932AOAY5zavwIqI="; Path=/; HttpOnly
Last-Modified: Fri, 22 May 2020 11:43:16 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200522 12:45:14.404" endtime="20200522 12:45:14.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.405" endtime="20200522 12:45:14.405"></status>
</kw>
<msg timestamp="20200522 12:45:14.406" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.25.0.6...
* Connected to scm (172.25.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200522 12:45:14.360" endtime="20200522 12:45:14.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200522 12:45:14.406" endtime="20200522 12:45:14.406"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.303" endtime="20200522 12:45:14.406"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:45:14.302" endtime="20200522 12:45:14.407" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.414" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:45:14.411" endtime="20200522 12:45:14.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.418" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:45:14.418" endtime="20200522 12:45:14.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.419" endtime="20200522 12:45:14.419"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.410" endtime="20200522 12:45:14.419"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.409" endtime="20200522 12:45:14.420"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.422" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.438" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.4...
* Connected to recon (172.25.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200522 12:45:14.420" endtime="20200522 12:45:14.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.439" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.4...
* Connected to recon (172.25.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200522 12:45:14.439" endtime="20200522 12:45:14.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.440" endtime="20200522 12:45:14.440"></status>
</kw>
<msg timestamp="20200522 12:45:14.440" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.4...
* Connected to recon (172.25.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200522 12:45:14.420" endtime="20200522 12:45:14.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200522 12:45:14.441" endtime="20200522 12:45:14.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.445" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.452" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200522 12:45:14.442" endtime="20200522 12:45:14.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.453" level="INFO">scm</msg>
<status status="PASS" starttime="20200522 12:45:14.453" endtime="20200522 12:45:14.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.454" endtime="20200522 12:45:14.454"></status>
</kw>
<msg timestamp="20200522 12:45:14.454" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200522 12:45:14.442" endtime="20200522 12:45:14.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200522 12:45:14.455" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200522 12:45:14.454" endtime="20200522 12:45:14.455"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.459" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:45:14.456" endtime="20200522 12:45:14.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.469" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:45:14.468" endtime="20200522 12:45:14.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.470" endtime="20200522 12:45:14.471"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.455" endtime="20200522 12:45:14.471"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.455" endtime="20200522 12:45:14.472"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.442" endtime="20200522 12:45:14.472"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.441" endtime="20200522 12:45:14.472"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:45:14.475" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:45:14.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:45:14.514" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.4...
* Connected to recon (172.25.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200522 12:45:14.472" endtime="20200522 12:45:14.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:45:14.516" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.4...
* Connected to recon (172.25.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0xfbff20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.25.0.4) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbqsNPzwbBzuHQeIjn8LFU6KW2g9J/HHbWmxVtiITmPIRe/48f6FkAqund7peY7augM5sxaiHq+Sdn8DxX0ShMUteONaxc4341gigLAsLvTeNtDO0A+16GujHyFAIGvnS22L95R1CW3pc24PjWzGjzBYA5Anm8/kizcfb5LM/hIqyf5Wm/5Pm68KgE05MN05Rx52CK0+LGrpvY/DzDWys3ASOAHXsZG4a3BIlb1w5SQDy/bfQQk7pleC5mbWHnt4xiJe+Uuq+QIzecINPrmIXVYin+b2/R7miHHKfIjpkwOQ+F8XAdxZpfddbb1FPpzcUzFVMQkHYlcUAJpILOjgSdByKgMS3FlpIHWMIHToAMCARKigcsEgcjO/774drQmU1aencsXFTfzEI83ceoIuEHF/3coUSDryZymrLM7j/E11dkueZRbFmqbhRvz3dbVfQ+wjLd6939T90usqlH1SWBSyOzN0VXuKM4kA+z/QCzDr82wiJx0LB47WyWhxibzi+2JWqCLmvDNQiOgr+fbf9ZqraNy+VZfA1ukX+bIuE29cuaFGJYHlhCjMviU2YOGfZr628eH7FLXJrpFt0cnmMaS7o9YeoWd4UE58zF1VFh9aw0t35O6XTn0FDTyzP5pgw==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 22 May 2020 12:45:14 GMT
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 22 May 2020 12:45:14 GMT
&lt; Date: Fri, 22 May 2020 12:45:14 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCrw9DzAdJEKkdfX7DCU0dH0F/uuMKsUJ4kChosamOzjLtUiYwU4Bz3ICD+fXnJ95SmVu/QWPWmc8yxZJfore34if7
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590187514509&amp;s=EQTxTOHqQTmkXiZbfzl8Avw18KwC+nX5hqmJCbH16Hk="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 22 May 2020 11:49:06 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Fri, 22 May 2020 12:45:14 GMT
Cache-Control: no-cache
Expires: Fri, 22 May 2020 12:45:14 GMT
Date: Fri, 22 May 2020 12:45:14 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Fri, 22 May 2020 12:45:14 GMT
Date: Fri, 22 May 2020 12:45:14 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCrw9DzAdJEKkdfX7DCU0dH0F/uuMKsUJ4kChosamOzjLtUiYwU4Bz3ICD+fXnJ95SmVu/QWPWmc8yxZJfore34if7
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1590187514509&amp;s=EQTxTOHqQTmkXiZbfzl8Avw18KwC+nX5hqmJCbH16Hk="; Path=/; HttpOnly
Last-Modified: Fri, 22 May 2020 11:49:06 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200522 12:45:14.515" endtime="20200522 12:45:14.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:45:14.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:45:14.517" endtime="20200522 12:45:14.518"></status>
</kw>
<msg timestamp="20200522 12:45:14.518" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.4...
* Connected to recon (172.25.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200522 12:45:14.472" endtime="20200522 12:45:14.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200522 12:45:14.518" endtime="20200522 12:45:14.519"></status>
</kw>
<status status="PASS" starttime="20200522 12:45:14.408" endtime="20200522 12:45:14.519"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:45:14.408" endtime="20200522 12:45:14.519" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200522 12:45:06.252" endtime="20200522 12:45:14.520"></status>
</suite>
<status status="PASS" starttime="20200522 12:45:06.223" endtime="20200522 12:45:14.522"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
