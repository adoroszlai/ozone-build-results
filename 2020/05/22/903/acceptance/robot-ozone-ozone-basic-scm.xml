<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200522 12:11:59.505" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200522 12:11:59.554" endtime="20200522 12:11:59.555"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:11:59.560" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:11:59.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:11:59.707" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 22 May 2020 12:11:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 22 May 2020 11:43:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200522 12:11:59.555" endtime="20200522 12:11:59.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:11:59.708" level="INFO">HTTP/1.1 200 OK
Date: Fri, 22 May 2020 12:11:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 22 May 2020 11:43:04 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200522 12:11:59.707" endtime="20200522 12:11:59.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:11:59.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:11:59.708" endtime="20200522 12:11:59.708"></status>
</kw>
<msg timestamp="20200522 12:11:59.709" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 22 May 2020 12:11:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 22 May 2020 11:43:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200522 12:11:59.555" endtime="20200522 12:11:59.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200522 12:11:59.709" endtime="20200522 12:11:59.709"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:11:59.554" endtime="20200522 12:11:59.709" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200522 12:11:59.711" endtime="20200522 12:11:59.712"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:11:59.718" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:03.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:03.445" level="INFO">${output} = 2020-05-22 12:12:00,832 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:12:01,087 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:11:59.712" endtime="20200522 12:13:03.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:03.446" level="INFO">2020-05-22 12:12:00,832 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:12:01,087 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-22 12:12:01,088 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-22 12:12:02,238 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-22 12:12:02,239 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-05-22 12:12:02,240 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-05-22 12:12:02,240 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-05-22 12:12:02,240 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-22 12:12:02,240 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-22 12:12:02,240 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-05-22 12:12:02,256 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-05-22 12:12:02,259 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-22 12:12:02,268 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-05-22 12:12:02,302 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-77714, with hadoop as owner.
2020-05-22 12:12:02,422 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-55760, with hadoop as owner.
2020-05-22 12:12:02,438 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-71770, with hadoop as owner.
2020-05-22 12:12:02,458 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-08490, with hadoop as owner.
2020-05-22 12:12:02,471 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-26420, with hadoop as owner.
2020-05-22 12:12:02,488 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77714/bucket-0-60895, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,543 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-55760/bucket-0-08143, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,553 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-71770/bucket-0-74634, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,562 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-08490/bucket-0-07104, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,578 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-26420/bucket-0-52900, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,587 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77714/bucket-1-49660, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,593 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-55760/bucket-1-23816, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,603 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-71770/bucket-1-15861, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,610 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-08490/bucket-1-42218, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,617 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-26420/bucket-1-06932, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,624 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77714/bucket-2-08320, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,633 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-55760/bucket-2-29019, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,641 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-71770/bucket-2-00143, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,648 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-08490/bucket-2-02314, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,654 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-26420/bucket-2-11504, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,660 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77714/bucket-3-64290, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,667 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-55760/bucket-3-88031, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,671 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-71770/bucket-3-72751, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,679 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-08490/bucket-3-10865, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,683 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-26420/bucket-3-90543, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,694 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77714/bucket-4-01592, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,713 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-55760/bucket-4-38240, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,722 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-71770/bucket-4-23320, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,730 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-08490/bucket-4-28732, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:02,736 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-26420/bucket-4-31827, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:12:03,272 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-05-22 12:12:03,399 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-22 12:12:04,273 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-05-22 12:12:05,273 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-05-22 12:12:06,273 [Thread-5] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-05-22 12:12:07,274 [Thread-5] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-05-22 12:12:08,274 [Thread-5] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-05-22 12:12:09,275 [Thread-5] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-05-22 12:12:10,275 [Thread-5] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-05-22 12:12:11,276 [Thread-5] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-05-22 12:12:12,276 [Thread-5] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-05-22 12:12:13,277 [Thread-5] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-05-22 12:12:14,277 [Thread-5] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-05-22 12:12:15,278 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-05-22 12:12:16,278 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-05-22 12:12:17,279 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-05-22 12:12:18,280 [Thread-5] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-05-22 12:12:19,284 [Thread-5] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-05-22 12:12:20,285 [Thread-5] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-05-22 12:12:21,286 [Thread-5] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-05-22 12:12:22,288 [Thread-5] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-05-22 12:12:23,289 [Thread-5] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-05-22 12:12:24,289 [Thread-5] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-05-22 12:12:25,290 [Thread-5] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-05-22 12:12:26,291 [Thread-5] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-05-22 12:12:27,291 [Thread-5] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-05-22 12:12:28,292 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-05-22 12:12:29,292 [Thread-5] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-05-22 12:12:30,292 [Thread-5] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-05-22 12:12:31,293 [Thread-5] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-05-22 12:12:32,294 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-05-22 12:12:33,294 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-05-22 12:12:34,295 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-05-22 12:12:35,295 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-05-22 12:12:36,295 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-05-22 12:12:37,296 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-05-22 12:12:38,296 [Thread-5] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-05-22 12:12:39,297 [Thread-5] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-05-22 12:12:40,297 [Thread-5] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-05-22 12:12:41,298 [Thread-5] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-05-22 12:12:42,298 [Thread-5] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-05-22 12:12:43,299 [Thread-5] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-05-22 12:12:44,299 [Thread-5] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-05-22 12:12:45,299 [Thread-5] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-05-22 12:12:46,300 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-05-22 12:12:47,300 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-05-22 12:12:48,301 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-05-22 12:12:49,301 [Thread-5] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-05-22 12:12:50,301 [Thread-5] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-05-22 12:12:51,302 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-05-22 12:12:52,302 [Thread-5] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-05-22 12:12:53,303 [Thread-5] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-05-22 12:12:54,303 [Thread-5] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-05-22 12:12:55,311 [Thread-5] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-05-22 12:12:56,311 [Thread-5] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-05-22 12:12:57,312 [Thread-5] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-05-22 12:12:58,312 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,180
Average Time spent in bucket creation: 00:00:00,182
Average Time spent in key creation: 00:00:01,917
Average Time spent in key write: 00:00:00,896
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:01,820
***************************************************</msg>
<status status="PASS" starttime="20200522 12:13:03.446" endtime="20200522 12:13:03.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:03.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:03.447" endtime="20200522 12:13:03.447"></status>
</kw>
<msg timestamp="20200522 12:13:03.448" level="INFO">${result} = 2020-05-22 12:12:00,832 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:12:01,087 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:11:59.712" endtime="20200522 12:13:03.448"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:03.448" endtime="20200522 12:13:03.449"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:03.448" endtime="20200522 12:13:03.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:03.449" endtime="20200522 12:13:03.449"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:11:59.710" endtime="20200522 12:13:03.449" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200522 12:11:59.531" endtime="20200522 12:13:03.450"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200522 12:13:03.458" level="INFO">${random} = 99325</msg>
<status status="PASS" starttime="20200522 12:13:03.457" endtime="20200522 12:13:03.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200522 12:13:03.458" level="INFO">${prefix} = 99325</msg>
<status status="PASS" starttime="20200522 12:13:03.458" endtime="20200522 12:13:03.458"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:03.457" endtime="20200522 12:13:03.458"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:03.459" endtime="20200522 12:13:03.459"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:03.462" level="INFO">Running command 'ozone sh volume info o3://om:9862/99325-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:05.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20200522 12:13:05.301" level="INFO">${output} = VOLUME_NOT_FOUND Volume 99325-rpcwoport is not found</msg>
<status status="PASS" starttime="20200522 12:13:03.460" endtime="20200522 12:13:05.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:05.302" level="INFO">VOLUME_NOT_FOUND Volume 99325-rpcwoport is not found</msg>
<status status="PASS" starttime="20200522 12:13:05.301" endtime="20200522 12:13:05.302"></status>
</kw>
<msg timestamp="20200522 12:13:05.302" level="INFO">${result} = VOLUME_NOT_FOUND Volume 99325-rpcwoport is not found</msg>
<status status="PASS" starttime="20200522 12:13:03.460" endtime="20200522 12:13:05.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:05.303" endtime="20200522 12:13:05.303"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:05.306" level="INFO">Running command 'ozone sh volume create o3://om:9862/99325-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:07.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:07.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:13:05.304" endtime="20200522 12:13:07.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:07.066" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:13:07.065" endtime="20200522 12:13:07.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:07.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:07.066" endtime="20200522 12:13:07.067"></status>
</kw>
<msg timestamp="20200522 12:13:07.067" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200522 12:13:05.303" endtime="20200522 12:13:07.067"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:07.067" endtime="20200522 12:13:07.068"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:07.071" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="99325-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:09.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:09.165" level="INFO">${output} = {
  "metadata": {},
  "name": "99325-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:13:07.052Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200522 12:13:07.069" endtime="20200522 12:13:09.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:09.167" level="INFO">{
  "metadata": {},
  "name": "99325-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:13:07.052Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200522 12:13:09.166" endtime="20200522 12:13:09.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:09.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:09.167" endtime="20200522 12:13:09.168"></status>
</kw>
<msg timestamp="20200522 12:13:09.168" level="INFO">${result} = {
  "metadata": {},
  "name": "99325-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:13:07.052Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200522 12:13:07.068" endtime="20200522 12:13:09.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:09.168" endtime="20200522 12:13:09.169"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:09.174" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="99325-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:11.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:11.255" level="INFO">${output} = {
  "metadata": {},
  "name": "99325-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:13:07.052Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200522 12:13:09.170" endtime="20200522 12:13:11.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:11.256" level="INFO">{
  "metadata": {},
  "name": "99325-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:13:07.052Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200522 12:13:11.256" endtime="20200522 12:13:11.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:11.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:11.257" endtime="20200522 12:13:11.257"></status>
</kw>
<msg timestamp="20200522 12:13:11.257" level="INFO">${result} = {
  "metadata": {},
  "name": "99325-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:13:07.052Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200522 12:13:09.169" endtime="20200522 12:13:11.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:11.258" endtime="20200522 12:13:11.258"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:11.262" level="INFO">Running command 'ozone sh volume update o3://om:9862/99325-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:13.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:13.360" level="INFO">${output} = {
  "metadata" : { },
  "name" : "99325-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-22T12:13:07.052Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200522 12:13:11.259" endtime="20200522 12:13:13.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:13.361" level="INFO">{
  "metadata" : { },
  "name" : "99325-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-22T12:13:07.052Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200522 12:13:13.361" endtime="20200522 12:13:13.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:13.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:13.361" endtime="20200522 12:13:13.362"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:11.258" endtime="20200522 12:13:13.362"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:13.365" level="INFO">Running command 'ozone sh volume info o3://om:9862/99325-rpcwoport | jq -r '. | select(.name=="99325-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:15.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:15.410" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200522 12:13:13.363" endtime="20200522 12:13:15.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:15.413" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200522 12:13:15.412" endtime="20200522 12:13:15.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:15.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:15.413" endtime="20200522 12:13:15.414"></status>
</kw>
<msg timestamp="20200522 12:13:15.414" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200522 12:13:13.362" endtime="20200522 12:13:15.414"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:15.414" endtime="20200522 12:13:15.414"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:15.418" level="INFO">Running command 'ozone sh bucket create o3://om:9862/99325-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:17.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:17.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:13:15.415" endtime="20200522 12:13:17.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:17.188" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:13:17.187" endtime="20200522 12:13:17.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:17.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:17.188" endtime="20200522 12:13:17.189"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:15.415" endtime="20200522 12:13:17.189"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:17.192" level="INFO">Running command 'ozone sh bucket info o3://om:9862/99325-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:19.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:19.221" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200522 12:13:17.190" endtime="20200522 12:13:19.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:19.222" level="INFO">DISK</msg>
<status status="PASS" starttime="20200522 12:13:19.221" endtime="20200522 12:13:19.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:19.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:19.222" endtime="20200522 12:13:19.223"></status>
</kw>
<msg timestamp="20200522 12:13:19.223" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200522 12:13:17.189" endtime="20200522 12:13:19.223"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:19.223" endtime="20200522 12:13:19.224"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:19.228" level="INFO">Running command 'ozone sh bucket list o3://om:9862/99325-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:21.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:21.274" level="INFO">${output} = 99325-rpcwoport</msg>
<status status="PASS" starttime="20200522 12:13:19.224" endtime="20200522 12:13:21.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:21.275" level="INFO">99325-rpcwoport</msg>
<status status="PASS" starttime="20200522 12:13:21.274" endtime="20200522 12:13:21.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:21.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:21.275" endtime="20200522 12:13:21.276"></status>
</kw>
<msg timestamp="20200522 12:13:21.276" level="INFO">${result} = 99325-rpcwoport</msg>
<status status="PASS" starttime="20200522 12:13:19.224" endtime="20200522 12:13:21.276"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:21.276" endtime="20200522 12:13:21.277"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:21.283" level="INFO">Running command 'ozone sh key put o3://om:9862/99325-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:25.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:25.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:13:21.279" endtime="20200522 12:13:25.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:25.003" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:13:25.003" endtime="20200522 12:13:25.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:25.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:25.004" endtime="20200522 12:13:25.004"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:21.278" endtime="20200522 12:13:25.004"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:25.007" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:25.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:25.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:13:25.005" endtime="20200522 12:13:25.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:25.010" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:13:25.009" endtime="20200522 12:13:25.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:25.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:25.010" endtime="20200522 12:13:25.011"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:25.004" endtime="20200522 12:13:25.011"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:25.013" level="INFO">Running command 'ozone sh key get o3://om:9862/99325-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:28.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:28.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:13:25.011" endtime="20200522 12:13:28.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:28.440" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:13:28.440" endtime="20200522 12:13:28.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:28.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:28.441" endtime="20200522 12:13:28.441"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:25.011" endtime="20200522 12:13:28.441"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:28.446" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:28.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:28.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:13:28.442" endtime="20200522 12:13:28.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:28.452" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:13:28.451" endtime="20200522 12:13:28.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:28.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:28.452" endtime="20200522 12:13:28.453"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:28.442" endtime="20200522 12:13:28.453"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:28.457" level="INFO">Running command 'ozone sh key get o3://om:9862/99325-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:30.247" level="INFO">${rc} = 255</msg>
<msg timestamp="20200522 12:13:30.247" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200522 12:13:28.455" endtime="20200522 12:13:30.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:30.248" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200522 12:13:30.247" endtime="20200522 12:13:30.248"></status>
</kw>
<msg timestamp="20200522 12:13:30.249" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200522 12:13:28.454" endtime="20200522 12:13:30.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:30.249" endtime="20200522 12:13:30.249"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:30.252" level="INFO">Running command 'ozone sh key get --force o3://om:9862/99325-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:33.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:33.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:13:30.250" endtime="20200522 12:13:33.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:33.822" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:13:33.821" endtime="20200522 12:13:33.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:33.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:33.822" endtime="20200522 12:13:33.822"></status>
</kw>
<msg timestamp="20200522 12:13:33.823" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200522 12:13:30.249" endtime="20200522 12:13:33.823"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:33.823" endtime="20200522 12:13:33.823"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:33.826" level="INFO">Running command 'ozone sh key info o3://om:9862/99325-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:36.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:36.021" level="INFO">${output} = {
  "volumeName": "99325-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-22T12:13:23.195Z",
  "modificationTime": "2020-05-22T12:13:24.658Z",
  "re...</msg>
<status status="PASS" starttime="20200522 12:13:33.824" endtime="20200522 12:13:36.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:36.023" level="INFO">{
  "volumeName": "99325-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-22T12:13:23.195Z",
  "modificationTime": "2020-05-22T12:13:24.658Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104212044394922110,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200522 12:13:36.022" endtime="20200522 12:13:36.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:36.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:36.023" endtime="20200522 12:13:36.023"></status>
</kw>
<msg timestamp="20200522 12:13:36.024" level="INFO">${result} = {
  "volumeName": "99325-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-22T12:13:23.195Z",
  "modificationTime": "2020-05-22T12:13:24.658Z",
  "re...</msg>
<status status="PASS" starttime="20200522 12:13:33.823" endtime="20200522 12:13:36.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:36.024" endtime="20200522 12:13:36.024"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:36.027" level="INFO">Running command 'ozone sh key list o3://om:9862/99325-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:38.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:38.046" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200522 12:13:36.025" endtime="20200522 12:13:38.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:38.047" level="INFO">key1</msg>
<status status="PASS" starttime="20200522 12:13:38.046" endtime="20200522 12:13:38.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:38.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:38.047" endtime="20200522 12:13:38.047"></status>
</kw>
<msg timestamp="20200522 12:13:38.048" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200522 12:13:36.024" endtime="20200522 12:13:38.048"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:38.048" endtime="20200522 12:13:38.048"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:38.052" level="INFO">Running command 'ozone sh key rename o3://om:9862/99325-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:39.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:39.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:13:38.049" endtime="20200522 12:13:39.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:39.774" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:13:39.773" endtime="20200522 12:13:39.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:39.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:39.774" endtime="20200522 12:13:39.775"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:38.048" endtime="20200522 12:13:39.775"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:39.779" level="INFO">Running command 'ozone sh key list o3://om:9862/99325-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:41.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:41.809" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200522 12:13:39.776" endtime="20200522 12:13:41.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:41.810" level="INFO">key2</msg>
<status status="PASS" starttime="20200522 12:13:41.810" endtime="20200522 12:13:41.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:41.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:41.811" endtime="20200522 12:13:41.811"></status>
</kw>
<msg timestamp="20200522 12:13:41.812" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200522 12:13:39.775" endtime="20200522 12:13:41.812"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:41.812" endtime="20200522 12:13:41.812"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:41.815" level="INFO">Running command 'ozone sh key delete o3://om:9862/99325-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:43.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:43.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:13:41.813" endtime="20200522 12:13:43.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:43.625" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:13:43.625" endtime="20200522 12:13:43.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:43.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:43.626" endtime="20200522 12:13:43.626"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:41.812" endtime="20200522 12:13:43.626"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:21.277" endtime="20200522 12:13:43.626"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:21.277" endtime="20200522 12:13:43.626"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:43.629" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/99325-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:45.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:45.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:13:43.627" endtime="20200522 12:13:45.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:45.445" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:13:45.444" endtime="20200522 12:13:45.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:45.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:45.445" endtime="20200522 12:13:45.446"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:43.626" endtime="20200522 12:13:45.446"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:45.449" level="INFO">Running command 'ozone sh volume delete o3://om:9862/99325-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:47.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:47.484" level="INFO">${output} = Volume 99325-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200522 12:13:45.447" endtime="20200522 12:13:47.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:47.486" level="INFO">Volume 99325-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200522 12:13:47.485" endtime="20200522 12:13:47.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:47.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:47.486" endtime="20200522 12:13:47.487"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:45.446" endtime="20200522 12:13:47.487"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:03.459" endtime="20200522 12:13:47.487"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200522 12:13:03.458" endtime="20200522 12:13:47.487" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:47.488" endtime="20200522 12:13:47.488"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:47.492" level="INFO">Running command 'ozone sh volume create o3://om:9862/99325-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:49.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:49.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:13:47.490" endtime="20200522 12:13:49.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:49.334" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:13:49.333" endtime="20200522 12:13:49.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:49.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:49.334" endtime="20200522 12:13:49.335"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:47.489" endtime="20200522 12:13:49.335"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:49.340" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/99325-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:51.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:51.265" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:13:49.335" endtime="20200522 12:13:51.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:51.266" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:13:51.265" endtime="20200522 12:13:51.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:51.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:51.266" endtime="20200522 12:13:51.267"></status>
</kw>
<msg timestamp="20200522 12:13:51.267" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:13:49.335" endtime="20200522 12:13:51.267"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:51.267" endtime="20200522 12:13:51.268"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:51.272" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/99325-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:53.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:53.172" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200522 12:13:51.269" endtime="20200522 12:13:53.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:53.174" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200522 12:13:53.173" endtime="20200522 12:13:53.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:53.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:53.174" endtime="20200522 12:13:53.175"></status>
</kw>
<msg timestamp="20200522 12:13:53.175" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200522 12:13:51.269" endtime="20200522 12:13:53.175"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:53.178" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/99325-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:55.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:55.102" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:13:53.175" endtime="20200522 12:13:55.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:55.103" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:13:55.103" endtime="20200522 12:13:55.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:55.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:55.103" endtime="20200522 12:13:55.104"></status>
</kw>
<msg timestamp="20200522 12:13:55.104" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:13:53.175" endtime="20200522 12:13:55.104"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:55.104" endtime="20200522 12:13:55.105"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:55.108" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/99325-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:56.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:56.713" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200522 12:13:55.106" endtime="20200522 12:13:56.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:56.714" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200522 12:13:56.713" endtime="20200522 12:13:56.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:56.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:56.714" endtime="20200522 12:13:56.715"></status>
</kw>
<msg timestamp="20200522 12:13:56.715" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200522 12:13:55.105" endtime="20200522 12:13:56.715"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:56.720" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/99325-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:13:58.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:13:58.724" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:13:56.716" endtime="20200522 12:13:58.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:13:58.725" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:13:58.724" endtime="20200522 12:13:58.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:13:58.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:13:58.725" endtime="20200522 12:13:58.726"></status>
</kw>
<msg timestamp="20200522 12:13:58.726" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:13:56.715" endtime="20200522 12:13:58.726"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200522 12:13:58.726" endtime="20200522 12:13:58.727"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:13:58.731" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/99325-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:00.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:00.456" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200522 12:13:58.728" endtime="20200522 12:14:00.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:00.458" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200522 12:14:00.457" endtime="20200522 12:14:00.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:00.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:00.458" endtime="20200522 12:14:00.459"></status>
</kw>
<msg timestamp="20200522 12:14:00.459" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200522 12:13:58.728" endtime="20200522 12:14:00.459"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:00.462" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/99325-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:02.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:02.404" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200522 12:14:00.460" endtime="20200522 12:14:02.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:02.405" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:14:02.404" endtime="20200522 12:14:02.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:02.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:02.405" endtime="20200522 12:14:02.406"></status>
</kw>
<msg timestamp="20200522 12:14:02.407" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200522 12:14:00.459" endtime="20200522 12:14:02.407"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:02.407" endtime="20200522 12:14:02.407"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:02.407" endtime="20200522 12:14:02.408"></status>
</kw>
<status status="PASS" starttime="20200522 12:13:47.489" endtime="20200522 12:14:02.408"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200522 12:13:47.487" endtime="20200522 12:14:02.409" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:02.411" endtime="20200522 12:14:02.412"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:02.416" level="INFO">Running command 'ozone sh bucket create o3://om:9862/99325-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:04.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:04.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:14:02.414" endtime="20200522 12:14:04.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:04.231" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:14:04.230" endtime="20200522 12:14:04.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:04.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:04.231" endtime="20200522 12:14:04.232"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:02.413" endtime="20200522 12:14:04.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:04.236" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/99325-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:06.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:06.320" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:04.233" endtime="20200522 12:14:06.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:06.322" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:14:06.321" endtime="20200522 12:14:06.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:06.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:06.322" endtime="20200522 12:14:06.323"></status>
</kw>
<msg timestamp="20200522 12:14:06.323" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:04.232" endtime="20200522 12:14:06.323"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:06.323" endtime="20200522 12:14:06.324"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:06.328" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/99325-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:08.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:08.009" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200522 12:14:06.325" endtime="20200522 12:14:08.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:08.010" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200522 12:14:08.009" endtime="20200522 12:14:08.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:08.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:08.011" endtime="20200522 12:14:08.011"></status>
</kw>
<msg timestamp="20200522 12:14:08.011" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200522 12:14:06.324" endtime="20200522 12:14:08.011"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:08.020" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/99325-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:09.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:09.945" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:08.012" endtime="20200522 12:14:09.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:09.946" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:14:09.946" endtime="20200522 12:14:09.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:09.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:09.947" endtime="20200522 12:14:09.947"></status>
</kw>
<msg timestamp="20200522 12:14:09.947" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:08.012" endtime="20200522 12:14:09.947"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:09.948" endtime="20200522 12:14:09.948"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:09.952" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/99325-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:11.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:11.897" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200522 12:14:09.949" endtime="20200522 12:14:11.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:11.898" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200522 12:14:11.897" endtime="20200522 12:14:11.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:11.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:11.898" endtime="20200522 12:14:11.899"></status>
</kw>
<msg timestamp="20200522 12:14:11.899" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200522 12:14:09.949" endtime="20200522 12:14:11.899"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:11.903" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/99325-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:13.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:13.799" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:11.900" endtime="20200522 12:14:13.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:13.800" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:14:13.799" endtime="20200522 12:14:13.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:13.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:13.800" endtime="20200522 12:14:13.800"></status>
</kw>
<msg timestamp="20200522 12:14:13.801" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:11.899" endtime="20200522 12:14:13.801"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:13.801" endtime="20200522 12:14:13.802"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:13.810" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/99325-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:15.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:15.465" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200522 12:14:13.805" endtime="20200522 12:14:15.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:15.466" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200522 12:14:15.465" endtime="20200522 12:14:15.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:15.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:15.466" endtime="20200522 12:14:15.467"></status>
</kw>
<msg timestamp="20200522 12:14:15.467" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200522 12:14:13.802" endtime="20200522 12:14:15.467"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:15.470" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/99325-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:17.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:17.400" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200522 12:14:15.468" endtime="20200522 12:14:17.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:17.402" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:14:17.401" endtime="20200522 12:14:17.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:17.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:17.402" endtime="20200522 12:14:17.403"></status>
</kw>
<msg timestamp="20200522 12:14:17.403" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200522 12:14:15.467" endtime="20200522 12:14:17.403"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:17.403" endtime="20200522 12:14:17.404"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:17.404" endtime="20200522 12:14:17.404"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:02.412" endtime="20200522 12:14:17.404"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200522 12:14:02.410" endtime="20200522 12:14:17.405" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:17.406" endtime="20200522 12:14:17.406"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:17.411" level="INFO">Running command 'ozone sh key put o3://om:9862/99325-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:20.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:20.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:14:17.407" endtime="20200522 12:14:20.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:20.994" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:14:20.993" endtime="20200522 12:14:20.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:20.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:20.994" endtime="20200522 12:14:20.994"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:17.407" endtime="20200522 12:14:20.995"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:20.998" level="INFO">Running command 'ozone sh key getacl o3://om:9862/99325-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:23.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:23.104" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:20.995" endtime="20200522 12:14:23.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:23.105" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:14:23.104" endtime="20200522 12:14:23.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:23.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:23.105" endtime="20200522 12:14:23.107"></status>
</kw>
<msg timestamp="20200522 12:14:23.108" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:20.995" endtime="20200522 12:14:23.108"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:23.108" endtime="20200522 12:14:23.108"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:23.111" level="INFO">Running command 'ozone sh key addacl o3://om:9862/99325-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:24.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:24.837" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200522 12:14:23.109" endtime="20200522 12:14:24.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:24.838" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200522 12:14:24.837" endtime="20200522 12:14:24.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:24.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:24.838" endtime="20200522 12:14:24.838"></status>
</kw>
<msg timestamp="20200522 12:14:24.839" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200522 12:14:23.109" endtime="20200522 12:14:24.839"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:24.842" level="INFO">Running command 'ozone sh key getacl o3://om:9862/99325-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:26.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:26.651" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:24.839" endtime="20200522 12:14:26.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:26.653" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:14:26.652" endtime="20200522 12:14:26.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:26.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:26.653" endtime="20200522 12:14:26.654"></status>
</kw>
<msg timestamp="20200522 12:14:26.654" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:24.839" endtime="20200522 12:14:26.654"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:26.654" endtime="20200522 12:14:26.656"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:26.659" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/99325-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:28.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:28.270" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200522 12:14:26.657" endtime="20200522 12:14:28.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:28.271" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200522 12:14:28.270" endtime="20200522 12:14:28.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:28.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:28.271" endtime="20200522 12:14:28.272"></status>
</kw>
<msg timestamp="20200522 12:14:28.272" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200522 12:14:26.656" endtime="20200522 12:14:28.272"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:28.275" level="INFO">Running command 'ozone sh key getacl o3://om:9862/99325-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:30.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:30.142" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:28.273" endtime="20200522 12:14:30.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:30.143" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:14:30.143" endtime="20200522 12:14:30.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:30.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:30.144" endtime="20200522 12:14:30.144"></status>
</kw>
<msg timestamp="20200522 12:14:30.144" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200522 12:14:28.272" endtime="20200522 12:14:30.144"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:30.145" endtime="20200522 12:14:30.145"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:30.148" level="INFO">Running command 'ozone sh key setacl o3://om:9862/99325-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:31.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:31.931" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200522 12:14:30.146" endtime="20200522 12:14:31.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:31.932" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200522 12:14:31.931" endtime="20200522 12:14:31.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:31.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:31.932" endtime="20200522 12:14:31.933"></status>
</kw>
<msg timestamp="20200522 12:14:31.933" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200522 12:14:30.145" endtime="20200522 12:14:31.933"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:31.936" level="INFO">Running command 'ozone sh key getacl o3://om:9862/99325-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:34.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:34.171" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200522 12:14:31.934" endtime="20200522 12:14:34.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:34.172" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200522 12:14:34.171" endtime="20200522 12:14:34.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:34.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:34.173" endtime="20200522 12:14:34.173"></status>
</kw>
<msg timestamp="20200522 12:14:34.173" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200522 12:14:31.933" endtime="20200522 12:14:34.173"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:34.174" endtime="20200522 12:14:34.174"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:34.174" endtime="20200522 12:14:34.175"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:17.407" endtime="20200522 12:14:34.175"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200522 12:14:17.405" endtime="20200522 12:14:34.175" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:34.177" endtime="20200522 12:14:34.178"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:34.181" level="INFO">Running command 'ozone sh volume info o3:///99325-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:35.802" level="INFO">${rc} = 255</msg>
<msg timestamp="20200522 12:14:35.802" level="INFO">${output} = VOLUME_NOT_FOUND Volume 99325-rpcwport is not found</msg>
<status status="PASS" starttime="20200522 12:14:34.179" endtime="20200522 12:14:35.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:35.804" level="INFO">VOLUME_NOT_FOUND Volume 99325-rpcwport is not found</msg>
<status status="PASS" starttime="20200522 12:14:35.803" endtime="20200522 12:14:35.804"></status>
</kw>
<msg timestamp="20200522 12:14:35.804" level="INFO">${result} = VOLUME_NOT_FOUND Volume 99325-rpcwport is not found</msg>
<status status="PASS" starttime="20200522 12:14:34.178" endtime="20200522 12:14:35.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:35.804" endtime="20200522 12:14:35.804"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:35.807" level="INFO">Running command 'ozone sh volume create o3:///99325-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:37.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:37.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:14:35.805" endtime="20200522 12:14:37.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:37.511" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:14:37.511" endtime="20200522 12:14:37.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:37.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:37.512" endtime="20200522 12:14:37.512"></status>
</kw>
<msg timestamp="20200522 12:14:37.512" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200522 12:14:35.805" endtime="20200522 12:14:37.512"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:37.513" endtime="20200522 12:14:37.513"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:37.517" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="99325-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:39.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:39.443" level="INFO">${output} = {
  "metadata": {},
  "name": "99325-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:14:37.499Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200522 12:14:37.514" endtime="20200522 12:14:39.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:39.444" level="INFO">{
  "metadata": {},
  "name": "99325-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:14:37.499Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200522 12:14:39.443" endtime="20200522 12:14:39.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:39.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:39.444" endtime="20200522 12:14:39.445"></status>
</kw>
<msg timestamp="20200522 12:14:39.445" level="INFO">${result} = {
  "metadata": {},
  "name": "99325-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:14:37.499Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200522 12:14:37.513" endtime="20200522 12:14:39.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:39.445" endtime="20200522 12:14:39.446"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:39.449" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="99325-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:41.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:41.384" level="INFO">${output} = {
  "metadata": {},
  "name": "99325-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:14:37.499Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200522 12:14:39.446" endtime="20200522 12:14:41.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:41.385" level="INFO">{
  "metadata": {},
  "name": "99325-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:14:37.499Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200522 12:14:41.384" endtime="20200522 12:14:41.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:41.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:41.385" endtime="20200522 12:14:41.386"></status>
</kw>
<msg timestamp="20200522 12:14:41.386" level="INFO">${result} = {
  "metadata": {},
  "name": "99325-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:14:37.499Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200522 12:14:39.446" endtime="20200522 12:14:41.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:41.386" endtime="20200522 12:14:41.386"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:41.389" level="INFO">Running command 'ozone sh volume update o3:///99325-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:43.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:43.549" level="INFO">${output} = {
  "metadata" : { },
  "name" : "99325-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-22T12:14:37.499Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200522 12:14:41.387" endtime="20200522 12:14:43.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:43.550" level="INFO">{
  "metadata" : { },
  "name" : "99325-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-22T12:14:37.499Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200522 12:14:43.549" endtime="20200522 12:14:43.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:43.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:43.551" endtime="20200522 12:14:43.551"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:41.386" endtime="20200522 12:14:43.551"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:43.555" level="INFO">Running command 'ozone sh volume info o3:///99325-rpcwport | jq -r '. | select(.name=="99325-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:45.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:45.476" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200522 12:14:43.552" endtime="20200522 12:14:45.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:45.477" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200522 12:14:45.476" endtime="20200522 12:14:45.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:45.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:45.477" endtime="20200522 12:14:45.477"></status>
</kw>
<msg timestamp="20200522 12:14:45.477" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200522 12:14:43.551" endtime="20200522 12:14:45.478"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:45.478" endtime="20200522 12:14:45.478"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:45.481" level="INFO">Running command 'ozone sh bucket create o3:///99325-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:47.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:47.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:14:45.479" endtime="20200522 12:14:47.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:47.436" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:14:47.436" endtime="20200522 12:14:47.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:47.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:47.437" endtime="20200522 12:14:47.437"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:45.478" endtime="20200522 12:14:47.437"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:47.441" level="INFO">Running command 'ozone sh bucket info o3:///99325-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:49.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:49.527" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200522 12:14:47.438" endtime="20200522 12:14:49.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:49.528" level="INFO">DISK</msg>
<status status="PASS" starttime="20200522 12:14:49.528" endtime="20200522 12:14:49.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:49.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:49.529" endtime="20200522 12:14:49.529"></status>
</kw>
<msg timestamp="20200522 12:14:49.530" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200522 12:14:47.437" endtime="20200522 12:14:49.530"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:49.530" endtime="20200522 12:14:49.530"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:49.534" level="INFO">Running command 'ozone sh bucket list o3:///99325-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:51.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:51.554" level="INFO">${output} = 99325-rpcwport</msg>
<status status="PASS" starttime="20200522 12:14:49.531" endtime="20200522 12:14:51.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:51.555" level="INFO">99325-rpcwport</msg>
<status status="PASS" starttime="20200522 12:14:51.554" endtime="20200522 12:14:51.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:51.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:51.555" endtime="20200522 12:14:51.556"></status>
</kw>
<msg timestamp="20200522 12:14:51.556" level="INFO">${result} = 99325-rpcwport</msg>
<status status="PASS" starttime="20200522 12:14:49.530" endtime="20200522 12:14:51.556"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200522 12:14:51.556" endtime="20200522 12:14:51.557"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:51.561" level="INFO">Running command 'ozone sh key put o3:///99325-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:55.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:55.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:14:51.558" endtime="20200522 12:14:55.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:55.237" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:14:55.236" endtime="20200522 12:14:55.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:55.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:55.238" endtime="20200522 12:14:55.238"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:51.557" endtime="20200522 12:14:55.238"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:55.241" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:55.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:55.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:14:55.239" endtime="20200522 12:14:55.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:55.245" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:14:55.244" endtime="20200522 12:14:55.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:55.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:55.245" endtime="20200522 12:14:55.246"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:55.239" endtime="20200522 12:14:55.246"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:55.250" level="INFO">Running command 'ozone sh key get o3:///99325-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:58.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:58.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:14:55.247" endtime="20200522 12:14:58.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:58.687" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:14:58.686" endtime="20200522 12:14:58.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:58.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:58.687" endtime="20200522 12:14:58.687"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:55.246" endtime="20200522 12:14:58.688"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:58.691" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:14:58.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:14:58.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:14:58.688" endtime="20200522 12:14:58.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:14:58.693" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:14:58.693" endtime="20200522 12:14:58.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:14:58.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:14:58.694" endtime="20200522 12:14:58.694"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:58.688" endtime="20200522 12:14:58.694"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:14:58.697" level="INFO">Running command 'ozone sh key get o3:///99325-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:00.516" level="INFO">${rc} = 255</msg>
<msg timestamp="20200522 12:15:00.516" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200522 12:14:58.695" endtime="20200522 12:15:00.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:00.517" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200522 12:15:00.517" endtime="20200522 12:15:00.517"></status>
</kw>
<msg timestamp="20200522 12:15:00.518" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200522 12:14:58.694" endtime="20200522 12:15:00.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:00.518" endtime="20200522 12:15:00.518"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:00.521" level="INFO">Running command 'ozone sh key get --force o3:///99325-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:04.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:04.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:00.519" endtime="20200522 12:15:04.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:04.123" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:04.123" endtime="20200522 12:15:04.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:04.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:04.124" endtime="20200522 12:15:04.124"></status>
</kw>
<msg timestamp="20200522 12:15:04.124" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200522 12:15:00.518" endtime="20200522 12:15:04.124"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:04.124" endtime="20200522 12:15:04.125"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:04.129" level="INFO">Running command 'ozone sh key info o3:///99325-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:06.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:06.158" level="INFO">${output} = {
  "volumeName": "99325-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-22T12:14:53.311Z",
  "modificationTime": "2020-05-22T12:14:54.890Z",
  "rep...</msg>
<status status="PASS" starttime="20200522 12:15:04.125" endtime="20200522 12:15:06.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:06.160" level="INFO">{
  "volumeName": "99325-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-22T12:14:53.311Z",
  "modificationTime": "2020-05-22T12:14:54.890Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104212050300698750,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200522 12:15:06.159" endtime="20200522 12:15:06.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:06.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:06.160" endtime="20200522 12:15:06.161"></status>
</kw>
<msg timestamp="20200522 12:15:06.161" level="INFO">${result} = {
  "volumeName": "99325-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-22T12:14:53.311Z",
  "modificationTime": "2020-05-22T12:14:54.890Z",
  "rep...</msg>
<status status="PASS" starttime="20200522 12:15:04.125" endtime="20200522 12:15:06.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:06.161" endtime="20200522 12:15:06.162"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:06.166" level="INFO">Running command 'ozone sh key list o3:///99325-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:08.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:08.031" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200522 12:15:06.162" endtime="20200522 12:15:08.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:08.032" level="INFO">key1</msg>
<status status="PASS" starttime="20200522 12:15:08.032" endtime="20200522 12:15:08.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:08.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:08.033" endtime="20200522 12:15:08.034"></status>
</kw>
<msg timestamp="20200522 12:15:08.034" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200522 12:15:06.162" endtime="20200522 12:15:08.034"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:08.034" endtime="20200522 12:15:08.035"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:08.039" level="INFO">Running command 'ozone sh key rename o3:///99325-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:09.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:09.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:08.036" endtime="20200522 12:15:09.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:09.690" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:09.689" endtime="20200522 12:15:09.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:09.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:09.690" endtime="20200522 12:15:09.691"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:08.035" endtime="20200522 12:15:09.691"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:09.695" level="INFO">Running command 'ozone sh key list o3:///99325-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:11.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:11.760" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200522 12:15:09.692" endtime="20200522 12:15:11.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:11.761" level="INFO">key2</msg>
<status status="PASS" starttime="20200522 12:15:11.760" endtime="20200522 12:15:11.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:11.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:11.761" endtime="20200522 12:15:11.761"></status>
</kw>
<msg timestamp="20200522 12:15:11.762" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200522 12:15:09.691" endtime="20200522 12:15:11.762"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:11.762" endtime="20200522 12:15:11.762"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:11.766" level="INFO">Running command 'ozone sh key delete o3:///99325-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:13.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:13.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:11.763" endtime="20200522 12:15:13.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:13.558" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:13.557" endtime="20200522 12:15:13.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:13.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:13.558" endtime="20200522 12:15:13.559"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:11.762" endtime="20200522 12:15:13.559"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:51.557" endtime="20200522 12:15:13.559"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:51.557" endtime="20200522 12:15:13.559"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:13.563" level="INFO">Running command 'ozone sh bucket delete o3:///99325-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:15.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:15.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:13.560" endtime="20200522 12:15:15.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:15.273" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:15.272" endtime="20200522 12:15:15.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:15.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:15.273" endtime="20200522 12:15:15.274"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:13.560" endtime="20200522 12:15:15.274"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:15.278" level="INFO">Running command 'ozone sh volume delete o3:///99325-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:16.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:16.999" level="INFO">${output} = Volume 99325-rpcwport is deleted</msg>
<status status="PASS" starttime="20200522 12:15:15.274" endtime="20200522 12:15:17.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:17.001" level="INFO">Volume 99325-rpcwport is deleted</msg>
<status status="PASS" starttime="20200522 12:15:17.000" endtime="20200522 12:15:17.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:17.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:17.001" endtime="20200522 12:15:17.001"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:15.274" endtime="20200522 12:15:17.002"></status>
</kw>
<status status="PASS" starttime="20200522 12:14:34.178" endtime="20200522 12:15:17.002"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200522 12:14:34.177" endtime="20200522 12:15:17.002" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:17.003" endtime="20200522 12:15:17.003"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:17.007" level="INFO">Running command 'ozone sh volume info /99325-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:18.687" level="INFO">${rc} = 255</msg>
<msg timestamp="20200522 12:15:18.687" level="INFO">${output} = VOLUME_NOT_FOUND Volume 99325-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200522 12:15:17.005" endtime="20200522 12:15:18.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:18.688" level="INFO">VOLUME_NOT_FOUND Volume 99325-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200522 12:15:18.687" endtime="20200522 12:15:18.688"></status>
</kw>
<msg timestamp="20200522 12:15:18.688" level="INFO">${result} = VOLUME_NOT_FOUND Volume 99325-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200522 12:15:17.004" endtime="20200522 12:15:18.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:18.688" endtime="20200522 12:15:18.689"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:18.693" level="INFO">Running command 'ozone sh volume create /99325-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:20.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:20.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:18.690" endtime="20200522 12:15:20.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:20.542" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:20.542" endtime="20200522 12:15:20.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:20.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:20.543" endtime="20200522 12:15:20.543"></status>
</kw>
<msg timestamp="20200522 12:15:20.543" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200522 12:15:18.689" endtime="20200522 12:15:20.543"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:20.543" endtime="20200522 12:15:20.544"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:20.548" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="99325-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:22.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:22.554" level="INFO">${output} = {
  "metadata": {},
  "name": "99325-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:15:20.525Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200522 12:15:20.544" endtime="20200522 12:15:22.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:22.555" level="INFO">{
  "metadata": {},
  "name": "99325-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:15:20.525Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200522 12:15:22.554" endtime="20200522 12:15:22.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:22.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:22.555" endtime="20200522 12:15:22.555"></status>
</kw>
<msg timestamp="20200522 12:15:22.556" level="INFO">${result} = {
  "metadata": {},
  "name": "99325-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:15:20.525Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200522 12:15:20.544" endtime="20200522 12:15:22.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:22.556" endtime="20200522 12:15:22.556"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:22.559" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="99325-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:24.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:24.350" level="INFO">${output} = {
  "metadata": {},
  "name": "99325-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:15:20.525Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200522 12:15:22.557" endtime="20200522 12:15:24.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:24.351" level="INFO">{
  "metadata": {},
  "name": "99325-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:15:20.525Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200522 12:15:24.350" endtime="20200522 12:15:24.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:24.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:24.351" endtime="20200522 12:15:24.352"></status>
</kw>
<msg timestamp="20200522 12:15:24.352" level="INFO">${result} = {
  "metadata": {},
  "name": "99325-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-22T12:15:20.525Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200522 12:15:22.556" endtime="20200522 12:15:24.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:24.352" endtime="20200522 12:15:24.352"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:24.356" level="INFO">Running command 'ozone sh volume update /99325-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:26.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:26.262" level="INFO">${output} = {
  "metadata" : { },
  "name" : "99325-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-22T12:15:20.525Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200522 12:15:24.353" endtime="20200522 12:15:26.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:26.263" level="INFO">{
  "metadata" : { },
  "name" : "99325-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-22T12:15:20.525Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200522 12:15:26.262" endtime="20200522 12:15:26.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:26.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:26.263" endtime="20200522 12:15:26.264"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:24.352" endtime="20200522 12:15:26.264"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:26.268" level="INFO">Running command 'ozone sh volume info /99325-rpcwoscheme | jq -r '. | select(.name=="99325-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:28.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:28.365" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200522 12:15:26.265" endtime="20200522 12:15:28.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:28.366" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200522 12:15:28.365" endtime="20200522 12:15:28.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:28.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:28.366" endtime="20200522 12:15:28.367"></status>
</kw>
<msg timestamp="20200522 12:15:28.367" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200522 12:15:26.264" endtime="20200522 12:15:28.367"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:28.367" endtime="20200522 12:15:28.367"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:28.371" level="INFO">Running command 'ozone sh bucket create /99325-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:30.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:30.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:28.368" endtime="20200522 12:15:30.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:30.180" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:30.179" endtime="20200522 12:15:30.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:30.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:30.180" endtime="20200522 12:15:30.180"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:28.367" endtime="20200522 12:15:30.181"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:30.185" level="INFO">Running command 'ozone sh bucket info /99325-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:32.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:32.152" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200522 12:15:30.181" endtime="20200522 12:15:32.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:32.153" level="INFO">DISK</msg>
<status status="PASS" starttime="20200522 12:15:32.153" endtime="20200522 12:15:32.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:32.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:32.153" endtime="20200522 12:15:32.154"></status>
</kw>
<msg timestamp="20200522 12:15:32.154" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200522 12:15:30.181" endtime="20200522 12:15:32.154"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:32.154" endtime="20200522 12:15:32.155"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:32.158" level="INFO">Running command 'ozone sh bucket list /99325-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:34.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:34.323" level="INFO">${output} = 99325-rpcwoscheme</msg>
<status status="PASS" starttime="20200522 12:15:32.155" endtime="20200522 12:15:34.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:34.324" level="INFO">99325-rpcwoscheme</msg>
<status status="PASS" starttime="20200522 12:15:34.324" endtime="20200522 12:15:34.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:34.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:34.325" endtime="20200522 12:15:34.325"></status>
</kw>
<msg timestamp="20200522 12:15:34.325" level="INFO">${result} = 99325-rpcwoscheme</msg>
<status status="PASS" starttime="20200522 12:15:32.155" endtime="20200522 12:15:34.325"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:34.326" endtime="20200522 12:15:34.326"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:34.330" level="INFO">Running command 'ozone sh key put /99325-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:37.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:37.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:34.327" endtime="20200522 12:15:37.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:37.958" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:37.957" endtime="20200522 12:15:37.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:37.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:37.958" endtime="20200522 12:15:37.959"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:34.327" endtime="20200522 12:15:37.959"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:37.964" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:37.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:37.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:37.960" endtime="20200522 12:15:37.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:37.967" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:37.966" endtime="20200522 12:15:37.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:37.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:37.968" endtime="20200522 12:15:37.968"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:37.959" endtime="20200522 12:15:37.968"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:37.972" level="INFO">Running command 'ozone sh key get /99325-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:41.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:41.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:37.969" endtime="20200522 12:15:41.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:41.191" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:41.190" endtime="20200522 12:15:41.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:41.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:41.191" endtime="20200522 12:15:41.192"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:37.968" endtime="20200522 12:15:41.192"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:41.196" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:41.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:41.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:41.193" endtime="20200522 12:15:41.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:41.198" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:41.197" endtime="20200522 12:15:41.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:41.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:41.198" endtime="20200522 12:15:41.198"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:41.192" endtime="20200522 12:15:41.199"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:41.202" level="INFO">Running command 'ozone sh key get /99325-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:42.957" level="INFO">${rc} = 255</msg>
<msg timestamp="20200522 12:15:42.957" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200522 12:15:41.199" endtime="20200522 12:15:42.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:42.958" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200522 12:15:42.957" endtime="20200522 12:15:42.958"></status>
</kw>
<msg timestamp="20200522 12:15:42.959" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200522 12:15:41.199" endtime="20200522 12:15:42.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:42.959" endtime="20200522 12:15:42.960"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:42.965" level="INFO">Running command 'ozone sh key get --force /99325-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:46.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:46.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:42.961" endtime="20200522 12:15:46.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:46.371" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:46.370" endtime="20200522 12:15:46.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:46.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:46.371" endtime="20200522 12:15:46.372"></status>
</kw>
<msg timestamp="20200522 12:15:46.372" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200522 12:15:42.960" endtime="20200522 12:15:46.372"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:46.372" endtime="20200522 12:15:46.373"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:46.380" level="INFO">Running command 'ozone sh key info /99325-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:48.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:48.433" level="INFO">${output} = {
  "volumeName": "99325-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-22T12:15:36.103Z",
  "modificationTime": "2020-05-22T12:15:37.605Z",
  "...</msg>
<status status="PASS" starttime="20200522 12:15:46.374" endtime="20200522 12:15:48.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:48.434" level="INFO">{
  "volumeName": "99325-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-22T12:15:36.103Z",
  "modificationTime": "2020-05-22T12:15:37.605Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104212053105246340,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200522 12:15:48.433" endtime="20200522 12:15:48.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:48.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:48.434" endtime="20200522 12:15:48.435"></status>
</kw>
<msg timestamp="20200522 12:15:48.435" level="INFO">${result} = {
  "volumeName": "99325-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-22T12:15:36.103Z",
  "modificationTime": "2020-05-22T12:15:37.605Z",
  "...</msg>
<status status="PASS" starttime="20200522 12:15:46.373" endtime="20200522 12:15:48.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:48.435" endtime="20200522 12:15:48.435"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:48.438" level="INFO">Running command 'ozone sh key list /99325-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:50.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:50.491" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200522 12:15:48.436" endtime="20200522 12:15:50.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:50.492" level="INFO">key1</msg>
<status status="PASS" starttime="20200522 12:15:50.491" endtime="20200522 12:15:50.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:50.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:50.492" endtime="20200522 12:15:50.493"></status>
</kw>
<msg timestamp="20200522 12:15:50.493" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200522 12:15:48.436" endtime="20200522 12:15:50.493"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:50.493" endtime="20200522 12:15:50.493"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:50.497" level="INFO">Running command 'ozone sh key rename /99325-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:52.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:52.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:50.494" endtime="20200522 12:15:52.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:52.249" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:52.248" endtime="20200522 12:15:52.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:52.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:52.249" endtime="20200522 12:15:52.250"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:50.494" endtime="20200522 12:15:52.250"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:52.253" level="INFO">Running command 'ozone sh key list /99325-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:54.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:54.307" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200522 12:15:52.250" endtime="20200522 12:15:54.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:54.308" level="INFO">key2</msg>
<status status="PASS" starttime="20200522 12:15:54.307" endtime="20200522 12:15:54.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:54.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:54.308" endtime="20200522 12:15:54.309"></status>
</kw>
<msg timestamp="20200522 12:15:54.309" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200522 12:15:52.250" endtime="20200522 12:15:54.309"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200522 12:15:54.309" endtime="20200522 12:15:54.309"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:54.313" level="INFO">Running command 'ozone sh key delete /99325-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:55.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:55.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:54.310" endtime="20200522 12:15:55.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:55.966" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:55.965" endtime="20200522 12:15:55.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:55.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:55.966" endtime="20200522 12:15:55.967"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:54.310" endtime="20200522 12:15:55.967"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:34.327" endtime="20200522 12:15:55.967"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:34.326" endtime="20200522 12:15:55.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:55.971" level="INFO">Running command 'ozone sh bucket delete /99325-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:57.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:57.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200522 12:15:55.968" endtime="20200522 12:15:57.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:57.646" level="INFO"></msg>
<status status="PASS" starttime="20200522 12:15:57.646" endtime="20200522 12:15:57.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:57.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:57.646" endtime="20200522 12:15:57.647"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:55.967" endtime="20200522 12:15:57.647"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:15:57.651" level="INFO">Running command 'ozone sh volume delete /99325-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:15:59.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:15:59.478" level="INFO">${output} = Volume 99325-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200522 12:15:57.648" endtime="20200522 12:15:59.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:15:59.480" level="INFO">Volume 99325-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200522 12:15:59.479" endtime="20200522 12:15:59.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:15:59.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:15:59.480" endtime="20200522 12:15:59.481"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:57.647" endtime="20200522 12:15:59.481"></status>
</kw>
<status status="PASS" starttime="20200522 12:15:17.003" endtime="20200522 12:15:59.481"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200522 12:15:17.002" endtime="20200522 12:15:59.481" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200522 12:13:03.451" endtime="20200522 12:15:59.483"></status>
</suite>
<status status="PASS" starttime="20200522 12:11:59.506" endtime="20200522 12:15:59.496"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
