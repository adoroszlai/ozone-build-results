<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200522 12:04:46.805" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:04:46.858" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:04:54.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:04:54.149" level="INFO">${output} = 2020-05-22 12:04:47,796 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:04:47,985 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:04:46.853" endtime="20200522 12:04:54.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:04:54.150" level="INFO">2020-05-22 12:04:47,796 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:04:47,985 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-22 12:04:47,985 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-22 12:04:48,792 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-22 12:04:48,793 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-22 12:04:48,793 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-22 12:04:48,793 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-05-22 12:04:48,793 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-22 12:04:48,793 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-22 12:04:48,793 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-22 12:04:48,795 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-22 12:04:48,803 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-22 12:04:48,849 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-46015, with hadoop as owner.
2020-05-22 12:04:48,882 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-46015/bucket-0-10863, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:04:49,481 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-22 12:04:49,806 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,065
Average Time spent in bucket creation: 00:00:00,016
Average Time spent in key creation: 00:00:00,051
Average Time spent in key write: 00:00:00,685
Total bytes written: 10240
Total Execution time: 00:00:05,631
***************************************************</msg>
<status status="PASS" starttime="20200522 12:04:54.150" endtime="20200522 12:04:54.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:04:54.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:04:54.151" endtime="20200522 12:04:54.151"></status>
</kw>
<msg timestamp="20200522 12:04:54.152" level="INFO">${result} = 2020-05-22 12:04:47,796 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:04:47,985 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:04:46.853" endtime="20200522 12:04:54.152"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200522 12:04:54.152" endtime="20200522 12:04:54.153"></status>
</kw>
<status status="PASS" starttime="20200522 12:04:54.152" endtime="20200522 12:04:54.153"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:04:46.852" endtime="20200522 12:04:54.153" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:04:54.157" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:04:58.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:04:58.558" level="INFO">${output} = 2020-05-22 12:04:55,157 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:04:55,334 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:04:54.155" endtime="20200522 12:04:58.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:04:58.559" level="INFO">2020-05-22 12:04:55,157 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:04:55,334 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-22 12:04:55,334 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-22 12:04:55,518 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 4njgbb3owt
2020-05-22 12:04:55,537 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-22 12:04:56,140 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-05-22 12:04:56,171 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:04:56,543 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-22 12:04:56,745 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-22 12:04:57,543 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-22 12:04:58,234 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1283.085567, max=1283.085567, mean=1283.085567, stddev=0.0, median=1283.085567, p75=1283.085567, p95=1283.085567, p98=1283.085567, p99=1283.085567, p999=1283.085567, mean_rate=0.4929080707175406, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-22 12:04:58,235 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-05-22 12:04:58,235 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-22 12:04:58,235 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200522 12:04:58.559" endtime="20200522 12:04:58.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:04:58.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:04:58.560" endtime="20200522 12:04:58.560"></status>
</kw>
<msg timestamp="20200522 12:04:58.560" level="INFO">${result} = 2020-05-22 12:04:55,157 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:04:55,334 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:04:54.155" endtime="20200522 12:04:58.560"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200522 12:04:58.561" endtime="20200522 12:04:58.561"></status>
</kw>
<status status="PASS" starttime="20200522 12:04:58.561" endtime="20200522 12:04:58.562"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:04:54.154" endtime="20200522 12:04:58.562" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:04:58.565" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:05:01.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:05:01.488" level="INFO">${output} = 2020-05-22 12:04:59,474 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:04:59,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:04:58.563" endtime="20200522 12:05:01.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:05:01.490" level="INFO">2020-05-22 12:04:59,474 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:04:59,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-22 12:04:59,641 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-22 12:04:59,784 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gkocyzkx5j
2020-05-22 12:04:59,796 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-22 12:05:00,803 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-22 12:05:01,478 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=65.570485, max=65.570485, mean=65.570485, stddev=0.0, median=65.570485, p75=65.570485, p95=65.570485, p98=65.570485, p99=65.570485, p999=65.570485, mean_rate=0.9888262143366847, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-22 12:05:01,480 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-22 12:05:01,480 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-22 12:05:01,480 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200522 12:05:01.489" endtime="20200522 12:05:01.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:05:01.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:05:01.490" endtime="20200522 12:05:01.490"></status>
</kw>
<msg timestamp="20200522 12:05:01.490" level="INFO">${result} = 2020-05-22 12:04:59,474 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:04:59,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:04:58.563" endtime="20200522 12:05:01.491"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200522 12:05:01.491" endtime="20200522 12:05:01.492"></status>
</kw>
<status status="PASS" starttime="20200522 12:05:01.491" endtime="20200522 12:05:01.492"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:04:58.562" endtime="20200522 12:05:01.492" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:05:01.496" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:05:04.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:05:04.464" level="INFO">${output} = 2020-05-22 12:05:02,450 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:05:02,635 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:05:01.494" endtime="20200522 12:05:04.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:05:04.465" level="INFO">2020-05-22 12:05:02,450 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:05:02,635 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-22 12:05:02,635 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-22 12:05:02,783 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omi1plskwo
2020-05-22 12:05:02,808 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-22 12:05:03,820 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-22 12:05:04,442 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=21.558867, max=21.558867, mean=21.558867, stddev=0.0, median=21.558867, p75=21.558867, p95=21.558867, p98=21.558867, p99=21.558867, p999=21.558867, mean_rate=0.9865310504003827, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-22 12:05:04,443 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-22 12:05:04,443 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-22 12:05:04,443 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200522 12:05:04.464" endtime="20200522 12:05:04.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:05:04.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:05:04.465" endtime="20200522 12:05:04.466"></status>
</kw>
<msg timestamp="20200522 12:05:04.466" level="INFO">${result} = 2020-05-22 12:05:02,450 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:05:02,635 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:05:01.493" endtime="20200522 12:05:04.466"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200522 12:05:04.467" endtime="20200522 12:05:04.467"></status>
</kw>
<status status="PASS" starttime="20200522 12:05:04.466" endtime="20200522 12:05:04.467"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:05:01.493" endtime="20200522 12:05:04.467" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200522 12:04:46.831" endtime="20200522 12:05:04.468"></status>
</suite>
<status status="PASS" starttime="20200522 12:04:46.806" endtime="20200522 12:05:04.472"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
