<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200522 12:22:08.942" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:22:08.999" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:22:16.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:22:16.318" level="INFO">${output} = 2020-05-22 12:22:09,953 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:10,111 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:22:08.994" endtime="20200522 12:22:16.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:22:16.319" level="INFO">2020-05-22 12:22:09,953 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:10,111 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-22 12:22:10,111 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-22 12:22:10,965 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-22 12:22:10,966 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-22 12:22:10,966 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-22 12:22:10,966 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-05-22 12:22:10,966 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-22 12:22:10,966 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-22 12:22:10,966 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-22 12:22:10,969 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-22 12:22:10,979 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-22 12:22:11,003 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-72473, with hadoop as owner.
2020-05-22 12:22:11,025 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-72473/bucket-0-86277, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:22:11,637 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-22 12:22:11,988 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,044
Average Time spent in bucket creation: 00:00:00,008
Average Time spent in key creation: 00:00:00,052
Average Time spent in key write: 00:00:00,723
Total bytes written: 10240
Total Execution time: 00:00:05,653
***************************************************</msg>
<status status="PASS" starttime="20200522 12:22:16.318" endtime="20200522 12:22:16.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:22:16.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:22:16.320" endtime="20200522 12:22:16.321"></status>
</kw>
<msg timestamp="20200522 12:22:16.321" level="INFO">${result} = 2020-05-22 12:22:09,953 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:10,111 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:22:08.993" endtime="20200522 12:22:16.321"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200522 12:22:16.322" endtime="20200522 12:22:16.322"></status>
</kw>
<status status="PASS" starttime="20200522 12:22:16.321" endtime="20200522 12:22:16.322"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:22:08.993" endtime="20200522 12:22:16.322" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:22:16.327" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:22:21.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:22:21.007" level="INFO">${output} = 2020-05-22 12:22:17,270 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:17,461 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:22:16.325" endtime="20200522 12:22:21.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:22:21.008" level="INFO">2020-05-22 12:22:17,270 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:17,461 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-22 12:22:17,461 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-22 12:22:17,621 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nregxq5qmm
2020-05-22 12:22:17,638 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-22 12:22:18,277 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-05-22 12:22:18,293 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-22 12:22:18,651 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-22 12:22:18,849 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-22 12:22:19,653 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-22 12:22:20,654 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-22 12:22:20,680 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1409.223045, max=1409.223045, mean=1409.223045, stddev=0.0, median=1409.223045, p75=1409.223045, p95=1409.223045, p98=1409.223045, p99=1409.223045, p999=1409.223045, mean_rate=0.42163925161225363, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-22 12:22:20,681 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-05-22 12:22:20,681 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-22 12:22:20,681 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200522 12:22:21.007" endtime="20200522 12:22:21.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:22:21.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:22:21.009" endtime="20200522 12:22:21.009"></status>
</kw>
<msg timestamp="20200522 12:22:21.009" level="INFO">${result} = 2020-05-22 12:22:17,270 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:17,461 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:22:16.324" endtime="20200522 12:22:21.009"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200522 12:22:21.010" endtime="20200522 12:22:21.010"></status>
</kw>
<status status="PASS" starttime="20200522 12:22:21.009" endtime="20200522 12:22:21.010"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:22:16.323" endtime="20200522 12:22:21.010" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:22:21.014" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:22:23.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:22:23.979" level="INFO">${output} = 2020-05-22 12:22:21,969 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:22,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:22:21.012" endtime="20200522 12:22:23.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:22:23.980" level="INFO">2020-05-22 12:22:21,969 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:22,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-22 12:22:22,135 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-22 12:22:22,329 [main] INFO freon.BaseFreonGenerator: Executing test with prefix jb2b0cj56e
2020-05-22 12:22:22,347 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-22 12:22:23,355 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-22 12:22:23,969 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=37.483861, max=37.483861, mean=37.483861, stddev=0.0, median=37.483861, p75=37.483861, p95=37.483861, p98=37.483861, p99=37.483861, p999=37.483861, mean_rate=0.9906345616574166, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-22 12:22:23,970 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-22 12:22:23,970 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-22 12:22:23,970 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200522 12:22:23.979" endtime="20200522 12:22:23.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:22:23.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:22:23.980" endtime="20200522 12:22:23.981"></status>
</kw>
<msg timestamp="20200522 12:22:23.981" level="INFO">${result} = 2020-05-22 12:22:21,969 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:22,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:22:21.012" endtime="20200522 12:22:23.981"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200522 12:22:23.981" endtime="20200522 12:22:23.982"></status>
</kw>
<status status="PASS" starttime="20200522 12:22:23.981" endtime="20200522 12:22:23.982"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:22:21.011" endtime="20200522 12:22:23.982" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200522 12:22:23.986" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200522 12:22:26.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20200522 12:22:26.942" level="INFO">${output} = 2020-05-22 12:22:24,997 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:25,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:22:23.984" endtime="20200522 12:22:26.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200522 12:22:26.943" level="INFO">2020-05-22 12:22:24,997 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:25,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-22 12:22:25,170 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-22 12:22:25,338 [main] INFO freon.BaseFreonGenerator: Executing test with prefix by5lzgvpbz
2020-05-22 12:22:25,374 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-22 12:22:26,380 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-22 12:22:26,930 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=7.821808, max=7.821808, mean=7.821808, stddev=0.0, median=7.821808, p75=7.821808, p95=7.821808, p98=7.821808, p99=7.821808, p999=7.821808, mean_rate=0.9822800577238447, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-22 12:22:26,933 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-22 12:22:26,933 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-22 12:22:26,933 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200522 12:22:26.942" endtime="20200522 12:22:26.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200522 12:22:26.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200522 12:22:26.943" endtime="20200522 12:22:26.943"></status>
</kw>
<msg timestamp="20200522 12:22:26.944" level="INFO">${result} = 2020-05-22 12:22:24,997 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-22 12:22:25,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200522 12:22:23.983" endtime="20200522 12:22:26.944"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200522 12:22:26.944" endtime="20200522 12:22:26.945"></status>
</kw>
<status status="PASS" starttime="20200522 12:22:26.944" endtime="20200522 12:22:26.945"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200522 12:22:23.982" endtime="20200522 12:22:26.945" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200522 12:22:08.967" endtime="20200522 12:22:26.946"></status>
</suite>
<status status="PASS" starttime="20200522 12:22:08.943" endtime="20200522 12:22:26.949"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
