<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200506 14:24:54.596" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:24:54.665" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:25:02.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:25:02.129" level="INFO">${output} = 2020-05-06 14:24:55,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:24:55,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200506 14:24:54.659" endtime="20200506 14:25:02.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:25:02.130" level="INFO">2020-05-06 14:24:55,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:24:55,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-06 14:24:55,920 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-06 14:24:56,781 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-06 14:24:56,783 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-05-06 14:24:56,783 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-05-06 14:24:56,783 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-05-06 14:24:56,783 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-06 14:24:56,783 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-06 14:24:56,783 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-05-06 14:24:56,785 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-06 14:24:56,797 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-06 14:24:56,833 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-82697, with hadoop as owner.
2020-05-06 14:24:56,854 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-82697/bucket-0-09941, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:24:57,405 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-06 14:24:57,798 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,044
Average Time spent in bucket creation: 00:00:00,010
Average Time spent in key creation: 00:00:00,044
Average Time spent in key write: 00:00:00,688
Total bytes written: 10240
Total Execution time: 00:00:05,684
***************************************************</msg>
<status status="PASS" starttime="20200506 14:25:02.130" endtime="20200506 14:25:02.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:25:02.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:25:02.131" endtime="20200506 14:25:02.131"></status>
</kw>
<msg timestamp="20200506 14:25:02.131" level="INFO">${result} = 2020-05-06 14:24:55,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:24:55,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200506 14:24:54.658" endtime="20200506 14:25:02.131"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200506 14:25:02.132" endtime="20200506 14:25:02.133"></status>
</kw>
<status status="PASS" starttime="20200506 14:25:02.132" endtime="20200506 14:25:02.133"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200506 14:24:54.658" endtime="20200506 14:25:02.133" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:25:02.139" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:25:06.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:25:06.971" level="INFO">${output} = 2020-05-06 14:25:03,185 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:25:03,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200506 14:25:02.135" endtime="20200506 14:25:06.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:25:06.972" level="INFO">2020-05-06 14:25:03,185 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:25:03,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-06 14:25:03,366 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-06 14:25:03,577 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 3ezzqyeueb
2020-05-06 14:25:03,601 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-06 14:25:04,265 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-05-06 14:25:04,281 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:25:04,604 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-06 14:25:04,905 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-06 14:25:05,604 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-06 14:25:06,605 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-06 14:25:06,646 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1465.803861, max=1465.803861, mean=1465.803861, stddev=0.0, median=1465.803861, p75=1465.803861, p95=1465.803861, p98=1465.803861, p99=1465.803861, p999=1465.803861, mean_rate=0.4259953071504974, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-06 14:25:06,646 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-05-06 14:25:06,647 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-06 14:25:06,647 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200506 14:25:06.972" endtime="20200506 14:25:06.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:25:06.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:25:06.973" endtime="20200506 14:25:06.973"></status>
</kw>
<msg timestamp="20200506 14:25:06.974" level="INFO">${result} = 2020-05-06 14:25:03,185 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:25:03,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200506 14:25:02.134" endtime="20200506 14:25:06.974"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200506 14:25:06.974" endtime="20200506 14:25:06.975"></status>
</kw>
<status status="PASS" starttime="20200506 14:25:06.974" endtime="20200506 14:25:06.975"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200506 14:25:02.134" endtime="20200506 14:25:06.975" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:25:06.979" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:25:10.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:25:10.008" level="INFO">${output} = 2020-05-06 14:25:07,984 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:25:08,176 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200506 14:25:06.977" endtime="20200506 14:25:10.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:25:10.010" level="INFO">2020-05-06 14:25:07,984 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:25:08,176 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-06 14:25:08,176 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-06 14:25:08,377 [main] INFO freon.BaseFreonGenerator: Executing test with prefix cd6b7wqc1y
2020-05-06 14:25:08,394 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-06 14:25:09,399 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-06 14:25:09,998 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=35.678062, max=35.678062, mean=35.678062, stddev=0.0, median=35.678062, p75=35.678062, p95=35.678062, p98=35.678062, p99=35.678062, p999=35.678062, mean_rate=0.9909682578220509, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-06 14:25:09,999 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-06 14:25:10,000 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-06 14:25:10,000 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200506 14:25:10.009" endtime="20200506 14:25:10.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:25:10.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:25:10.010" endtime="20200506 14:25:10.011"></status>
</kw>
<msg timestamp="20200506 14:25:10.011" level="INFO">${result} = 2020-05-06 14:25:07,984 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:25:08,176 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200506 14:25:06.976" endtime="20200506 14:25:10.011"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200506 14:25:10.013" endtime="20200506 14:25:10.013"></status>
</kw>
<status status="PASS" starttime="20200506 14:25:10.012" endtime="20200506 14:25:10.014"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200506 14:25:06.975" endtime="20200506 14:25:10.014" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:25:10.020" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:25:13.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:25:13.050" level="INFO">${output} = 2020-05-06 14:25:11,022 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:25:11,194 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200506 14:25:10.017" endtime="20200506 14:25:13.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:25:13.051" level="INFO">2020-05-06 14:25:11,022 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:25:11,194 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-06 14:25:11,194 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-06 14:25:11,373 [main] INFO freon.BaseFreonGenerator: Executing test with prefix exrinw9nen
2020-05-06 14:25:11,399 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-05-06 14:25:12,401 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-05-06 14:25:13,027 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.494314, max=8.494314, mean=8.494314, stddev=0.0, median=8.494314, p75=8.494314, p95=8.494314, p98=8.494314, p99=8.494314, p999=8.494314, mean_rate=0.9809752870429825, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-05-06 14:25:13,033 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-05-06 14:25:13,038 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-05-06 14:25:13,038 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200506 14:25:13.051" endtime="20200506 14:25:13.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:25:13.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:25:13.052" endtime="20200506 14:25:13.052"></status>
</kw>
<msg timestamp="20200506 14:25:13.053" level="INFO">${result} = 2020-05-06 14:25:11,022 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:25:11,194 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200506 14:25:10.016" endtime="20200506 14:25:13.053"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200506 14:25:13.053" endtime="20200506 14:25:13.054"></status>
</kw>
<status status="PASS" starttime="20200506 14:25:13.053" endtime="20200506 14:25:13.055"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200506 14:25:10.015" endtime="20200506 14:25:13.055" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200506 14:24:54.631" endtime="20200506 14:25:13.056"></status>
</suite>
<status status="PASS" starttime="20200506 14:24:54.597" endtime="20200506 14:25:13.060"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
