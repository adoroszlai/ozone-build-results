<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200506 14:13:49.737" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200506 14:13:49.795" endtime="20200506 14:13:49.795"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:13:49.799" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:13:49.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:13:49.880" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 06 May 2020 14:13:49 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 06 May 2020 13:44:44 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200506 14:13:49.796" endtime="20200506 14:13:49.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:13:49.881" level="INFO">HTTP/1.1 200 OK
Date: Wed, 06 May 2020 14:13:49 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 06 May 2020 13:44:44 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200506 14:13:49.880" endtime="20200506 14:13:49.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:13:49.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:13:49.881" endtime="20200506 14:13:49.882"></status>
</kw>
<msg timestamp="20200506 14:13:49.882" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 06 May 2020 14:13:49 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 06 May 2020 13:44:44 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200506 14:13:49.795" endtime="20200506 14:13:49.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200506 14:13:49.882" endtime="20200506 14:13:49.883"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200506 14:13:49.794" endtime="20200506 14:13:49.883" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200506 14:13:49.884" endtime="20200506 14:13:49.884"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:13:49.890" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:03.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:03.467" level="INFO">${output} = 2020-05-06 14:13:50,920 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:13:51,124 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200506 14:13:49.885" endtime="20200506 14:15:03.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:03.468" level="INFO">2020-05-06 14:13:50,920 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:13:51,124 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-05-06 14:13:51,124 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-05-06 14:13:52,206 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-05-06 14:13:52,207 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-05-06 14:13:52,207 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-05-06 14:13:52,207 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-05-06 14:13:52,207 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-05-06 14:13:52,207 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-05-06 14:13:52,207 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-05-06 14:13:52,212 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-05-06 14:13:52,217 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-05-06 14:13:52,229 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-05-06 14:13:52,258 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-65836, with hadoop as owner.
2020-05-06 14:13:52,387 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-29042, with hadoop as owner.
2020-05-06 14:13:52,394 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-59612, with hadoop as owner.
2020-05-06 14:13:52,400 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-43304, with hadoop as owner.
2020-05-06 14:13:52,408 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-60985, with hadoop as owner.
2020-05-06 14:13:52,419 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-65836/bucket-0-46191, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,453 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-29042/bucket-0-21577, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,461 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-59612/bucket-0-14882, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,467 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-43304/bucket-0-74255, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,473 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60985/bucket-0-35869, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,479 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-65836/bucket-1-15836, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,483 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-29042/bucket-1-92533, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,491 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-59612/bucket-1-20778, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,496 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-43304/bucket-1-42471, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,500 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60985/bucket-1-09401, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,504 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-65836/bucket-2-79888, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,511 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-29042/bucket-2-75100, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,520 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-59612/bucket-2-03817, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,525 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-43304/bucket-2-94969, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,531 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60985/bucket-2-24821, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,538 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-65836/bucket-3-34471, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,545 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-29042/bucket-3-74655, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,549 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-59612/bucket-3-57237, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,556 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-43304/bucket-3-83641, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,562 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60985/bucket-3-00036, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,567 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-65836/bucket-4-95521, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,574 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-29042/bucket-4-23881, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,579 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-59612/bucket-4-37489, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,584 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-43304/bucket-4-39960, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:52,589 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60985/bucket-4-23660, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-05-06 14:13:53,186 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-05-06 14:13:53,231 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-05-06 14:13:54,236 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-05-06 14:13:55,237 [Thread-5] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-05-06 14:13:56,237 [Thread-5] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-05-06 14:13:57,238 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-05-06 14:13:58,238 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-05-06 14:13:59,239 [Thread-5] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-05-06 14:14:00,239 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-05-06 14:14:01,240 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-05-06 14:14:02,240 [Thread-5] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-05-06 14:14:03,241 [Thread-5] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-05-06 14:14:04,241 [Thread-5] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-05-06 14:14:05,242 [Thread-5] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-05-06 14:14:06,242 [Thread-5] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-05-06 14:14:07,243 [Thread-5] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-05-06 14:14:08,243 [Thread-5] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-05-06 14:14:09,244 [Thread-5] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-05-06 14:14:10,248 [Thread-5] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-05-06 14:14:11,249 [Thread-5] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-05-06 14:14:12,249 [Thread-5] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-05-06 14:14:13,251 [Thread-5] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-05-06 14:14:14,251 [Thread-5] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-05-06 14:14:15,252 [Thread-5] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-05-06 14:14:16,256 [Thread-5] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-05-06 14:14:17,256 [Thread-5] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-05-06 14:14:18,256 [Thread-5] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-05-06 14:14:19,257 [Thread-5] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-05-06 14:14:20,257 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-05-06 14:14:21,258 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-05-06 14:14:22,258 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-05-06 14:14:23,259 [Thread-5] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-05-06 14:14:24,259 [Thread-5] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-05-06 14:14:25,260 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-05-06 14:14:26,260 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-05-06 14:14:27,261 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-05-06 14:14:28,261 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-05-06 14:14:29,262 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-05-06 14:14:30,262 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-05-06 14:14:31,263 [Thread-5] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-05-06 14:14:32,263 [Thread-5] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-05-06 14:14:33,264 [Thread-5] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-05-06 14:14:34,264 [Thread-5] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-05-06 14:14:35,265 [Thread-5] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-05-06 14:14:36,265 [Thread-5] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-05-06 14:14:37,265 [Thread-5] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-05-06 14:14:38,266 [Thread-5] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-05-06 14:14:39,266 [Thread-5] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-05-06 14:14:40,267 [Thread-5] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-05-06 14:14:41,267 [Thread-5] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-05-06 14:14:42,268 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-05-06 14:14:43,268 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-05-06 14:14:44,268 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-05-06 14:14:45,269 [Thread-5] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-05-06 14:14:46,269 [Thread-5] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-05-06 14:14:47,270 [Thread-5] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-05-06 14:14:48,270 [Thread-5] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-05-06 14:14:49,271 [Thread-5] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-05-06 14:14:50,271 [Thread-5] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-05-06 14:14:51,272 [Thread-5] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-05-06 14:14:52,272 [Thread-5] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-05-06 14:14:53,272 [Thread-5] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-05-06 14:14:54,273 [Thread-5] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-05-06 14:14:55,273 [Thread-5] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-05-06 14:14:56,274 [Thread-5] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-05-06 14:14:57,274 [Thread-5] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-05-06 14:14:58,275 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,165
Average Time spent in bucket creation: 00:00:00,120
Average Time spent in key creation: 00:00:01,533
Average Time spent in key write: 00:00:00,768
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:11,846
***************************************************</msg>
<status status="PASS" starttime="20200506 14:15:03.468" endtime="20200506 14:15:03.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:03.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:03.469" endtime="20200506 14:15:03.469"></status>
</kw>
<msg timestamp="20200506 14:15:03.469" level="INFO">${result} = 2020-05-06 14:13:50,920 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-05-06 14:13:51,124 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200506 14:13:49.885" endtime="20200506 14:15:03.469"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:03.470" endtime="20200506 14:15:03.471"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:03.470" endtime="20200506 14:15:03.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:03.471" endtime="20200506 14:15:03.471"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200506 14:13:49.883" endtime="20200506 14:15:03.472" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200506 14:13:49.768" endtime="20200506 14:15:03.473"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200506 14:15:03.481" level="INFO">${random} = 80225</msg>
<status status="PASS" starttime="20200506 14:15:03.480" endtime="20200506 14:15:03.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200506 14:15:03.481" level="INFO">${prefix} = 80225</msg>
<status status="PASS" starttime="20200506 14:15:03.481" endtime="20200506 14:15:03.481"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:03.480" endtime="20200506 14:15:03.482"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:03.482" endtime="20200506 14:15:03.483"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:03.486" level="INFO">Running command 'ozone sh volume info o3://om:9862/80225-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:05.238" level="INFO">${rc} = 255</msg>
<msg timestamp="20200506 14:15:05.238" level="INFO">${output} = VOLUME_NOT_FOUND Volume 80225-rpcwoport is not found</msg>
<status status="PASS" starttime="20200506 14:15:03.484" endtime="20200506 14:15:05.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:05.239" level="INFO">VOLUME_NOT_FOUND Volume 80225-rpcwoport is not found</msg>
<status status="PASS" starttime="20200506 14:15:05.238" endtime="20200506 14:15:05.239"></status>
</kw>
<msg timestamp="20200506 14:15:05.239" level="INFO">${result} = VOLUME_NOT_FOUND Volume 80225-rpcwoport is not found</msg>
<status status="PASS" starttime="20200506 14:15:03.483" endtime="20200506 14:15:05.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:05.239" endtime="20200506 14:15:05.240"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:05.243" level="INFO">Running command 'ozone sh volume create o3://om:9862/80225-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:06.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:06.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:15:05.240" endtime="20200506 14:15:06.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:06.988" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:15:06.987" endtime="20200506 14:15:06.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:06.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:06.988" endtime="20200506 14:15:06.989"></status>
</kw>
<msg timestamp="20200506 14:15:06.989" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200506 14:15:05.240" endtime="20200506 14:15:06.989"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:06.989" endtime="20200506 14:15:06.990"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:06.993" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="80225-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:08.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:08.945" level="INFO">${output} = {
  "metadata": {},
  "name": "80225-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:15:06.974Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200506 14:15:06.990" endtime="20200506 14:15:08.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:08.946" level="INFO">{
  "metadata": {},
  "name": "80225-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:15:06.974Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200506 14:15:08.946" endtime="20200506 14:15:08.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:08.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:08.947" endtime="20200506 14:15:08.947"></status>
</kw>
<msg timestamp="20200506 14:15:08.947" level="INFO">${result} = {
  "metadata": {},
  "name": "80225-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:15:06.974Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200506 14:15:06.990" endtime="20200506 14:15:08.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:08.948" endtime="20200506 14:15:08.948"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:08.952" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="80225-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:10.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:10.960" level="INFO">${output} = {
  "metadata": {},
  "name": "80225-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:15:06.974Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200506 14:15:08.949" endtime="20200506 14:15:10.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:10.962" level="INFO">{
  "metadata": {},
  "name": "80225-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:15:06.974Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200506 14:15:10.961" endtime="20200506 14:15:10.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:10.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:10.962" endtime="20200506 14:15:10.962"></status>
</kw>
<msg timestamp="20200506 14:15:10.963" level="INFO">${result} = {
  "metadata": {},
  "name": "80225-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:15:06.974Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200506 14:15:08.948" endtime="20200506 14:15:10.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:10.963" endtime="20200506 14:15:10.963"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:10.966" level="INFO">Running command 'ozone sh volume update o3://om:9862/80225-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:12.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:12.943" level="INFO">${output} = {
  "metadata" : { },
  "name" : "80225-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-06T14:15:06.974Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200506 14:15:10.964" endtime="20200506 14:15:12.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:12.944" level="INFO">{
  "metadata" : { },
  "name" : "80225-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-06T14:15:06.974Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200506 14:15:12.944" endtime="20200506 14:15:12.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:12.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:12.945" endtime="20200506 14:15:12.945"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:10.963" endtime="20200506 14:15:12.946"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:12.950" level="INFO">Running command 'ozone sh volume info o3://om:9862/80225-rpcwoport | jq -r '. | select(.name=="80225-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:14.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:14.812" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200506 14:15:12.947" endtime="20200506 14:15:14.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:14.813" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200506 14:15:14.812" endtime="20200506 14:15:14.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:14.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:14.813" endtime="20200506 14:15:14.814"></status>
</kw>
<msg timestamp="20200506 14:15:14.814" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200506 14:15:12.946" endtime="20200506 14:15:14.814"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:14.814" endtime="20200506 14:15:14.814"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:14.817" level="INFO">Running command 'ozone sh bucket create o3://om:9862/80225-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:16.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:16.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:15:14.815" endtime="20200506 14:15:16.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:16.821" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:15:16.820" endtime="20200506 14:15:16.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:16.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:16.821" endtime="20200506 14:15:16.822"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:14.814" endtime="20200506 14:15:16.822"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:16.825" level="INFO">Running command 'ozone sh bucket info o3://om:9862/80225-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:19.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:19.063" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200506 14:15:16.823" endtime="20200506 14:15:19.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:19.064" level="INFO">DISK</msg>
<status status="PASS" starttime="20200506 14:15:19.064" endtime="20200506 14:15:19.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:19.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:19.065" endtime="20200506 14:15:19.065"></status>
</kw>
<msg timestamp="20200506 14:15:19.066" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200506 14:15:16.822" endtime="20200506 14:15:19.066"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:19.066" endtime="20200506 14:15:19.066"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:19.069" level="INFO">Running command 'ozone sh bucket list o3://om:9862/80225-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:21.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:21.287" level="INFO">${output} = 80225-rpcwoport</msg>
<status status="PASS" starttime="20200506 14:15:19.067" endtime="20200506 14:15:21.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:21.288" level="INFO">80225-rpcwoport</msg>
<status status="PASS" starttime="20200506 14:15:21.288" endtime="20200506 14:15:21.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:21.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:21.289" endtime="20200506 14:15:21.289"></status>
</kw>
<msg timestamp="20200506 14:15:21.290" level="INFO">${result} = 80225-rpcwoport</msg>
<status status="PASS" starttime="20200506 14:15:19.066" endtime="20200506 14:15:21.290"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:21.290" endtime="20200506 14:15:21.290"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:21.294" level="INFO">Running command 'ozone sh key put o3://om:9862/80225-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:24.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:24.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:15:21.292" endtime="20200506 14:15:24.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:24.923" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:15:24.922" endtime="20200506 14:15:24.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:24.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:24.923" endtime="20200506 14:15:24.924"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:21.292" endtime="20200506 14:15:24.924"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:24.927" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:24.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:24.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:15:24.925" endtime="20200506 14:15:24.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:24.930" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:15:24.929" endtime="20200506 14:15:24.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:24.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:24.930" endtime="20200506 14:15:24.931"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:24.924" endtime="20200506 14:15:24.931"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:24.934" level="INFO">Running command 'ozone sh key get o3://om:9862/80225-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:28.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:28.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:15:24.932" endtime="20200506 14:15:28.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:28.326" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:15:28.325" endtime="20200506 14:15:28.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:28.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:28.326" endtime="20200506 14:15:28.327"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:24.931" endtime="20200506 14:15:28.327"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:28.330" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:28.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:28.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:15:28.328" endtime="20200506 14:15:28.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:28.345" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:15:28.345" endtime="20200506 14:15:28.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:28.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:28.346" endtime="20200506 14:15:28.346"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:28.327" endtime="20200506 14:15:28.346"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:28.349" level="INFO">Running command 'ozone sh key get o3://om:9862/80225-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:29.991" level="INFO">${rc} = 255</msg>
<msg timestamp="20200506 14:15:29.991" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200506 14:15:28.347" endtime="20200506 14:15:29.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:29.993" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200506 14:15:29.992" endtime="20200506 14:15:29.993"></status>
</kw>
<msg timestamp="20200506 14:15:29.993" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200506 14:15:28.346" endtime="20200506 14:15:29.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:29.993" endtime="20200506 14:15:29.994"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:29.996" level="INFO">Running command 'ozone sh key get --force o3://om:9862/80225-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:33.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:33.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:15:29.994" endtime="20200506 14:15:33.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:33.429" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:15:33.428" endtime="20200506 14:15:33.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:33.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:33.429" endtime="20200506 14:15:33.430"></status>
</kw>
<msg timestamp="20200506 14:15:33.430" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200506 14:15:29.994" endtime="20200506 14:15:33.430"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:33.430" endtime="20200506 14:15:33.431"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:33.435" level="INFO">Running command 'ozone sh key info o3://om:9862/80225-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:35.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:35.706" level="INFO">${output} = {
  "volumeName": "80225-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-06T14:15:22.995Z",
  "modificationTime": "2020-05-06T14:15:24.548Z",
  "re...</msg>
<status status="PASS" starttime="20200506 14:15:33.431" endtime="20200506 14:15:35.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:35.707" level="INFO">{
  "volumeName": "80225-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-06T14:15:22.995Z",
  "modificationTime": "2020-05-06T14:15:24.548Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104121927138869380,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200506 14:15:35.706" endtime="20200506 14:15:35.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:35.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:35.707" endtime="20200506 14:15:35.707"></status>
</kw>
<msg timestamp="20200506 14:15:35.708" level="INFO">${result} = {
  "volumeName": "80225-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-06T14:15:22.995Z",
  "modificationTime": "2020-05-06T14:15:24.548Z",
  "re...</msg>
<status status="PASS" starttime="20200506 14:15:33.431" endtime="20200506 14:15:35.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:35.708" endtime="20200506 14:15:35.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:35.711" level="INFO">Running command 'ozone debug chunkinfo o3://om:9862/80225-rpcwoport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:39.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:39.296" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/00ddda00-37aa-414e-8326-a2ea0e3a89e4/current/containerDir0/1/chunks/104121927138869373_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200506 14:15:35.709" endtime="20200506 14:15:39.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:39.298" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/00ddda00-37aa-414e-8326-a2ea0e3a89e4/current/containerDir0/1/chunks/104121927138869373_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.2",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.4",
      "hostName": "ozone_datanode_3.ozone_default"
    }
  ],
  "pipelineID": "652f5b19-ea34-48ac-9a14-b1043a31b0ef"
}</msg>
<status status="PASS" starttime="20200506 14:15:39.297" endtime="20200506 14:15:39.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:39.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:39.298" endtime="20200506 14:15:39.298"></status>
</kw>
<msg timestamp="20200506 14:15:39.299" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/00ddda00-37aa-414e-8326-a2ea0e3a89e4/current/containerDir0/1/chunks/104121927138869373_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200506 14:15:35.708" endtime="20200506 14:15:39.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:39.299" endtime="20200506 14:15:39.299"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:39.302" level="INFO">Running command 'ozone sh key list o3://om:9862/80225-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:41.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:41.227" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200506 14:15:39.300" endtime="20200506 14:15:41.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:41.228" level="INFO">key1</msg>
<status status="PASS" starttime="20200506 14:15:41.227" endtime="20200506 14:15:41.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:41.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:41.228" endtime="20200506 14:15:41.229"></status>
</kw>
<msg timestamp="20200506 14:15:41.229" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200506 14:15:39.299" endtime="20200506 14:15:41.229"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:41.229" endtime="20200506 14:15:41.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:41.233" level="INFO">Running command 'ozone sh key rename o3://om:9862/80225-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:42.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:42.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:15:41.231" endtime="20200506 14:15:42.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:42.955" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:15:42.954" endtime="20200506 14:15:42.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:42.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:42.955" endtime="20200506 14:15:42.956"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:41.230" endtime="20200506 14:15:42.956"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:42.960" level="INFO">Running command 'ozone sh key list o3://om:9862/80225-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:44.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:44.959" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200506 14:15:42.957" endtime="20200506 14:15:44.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:44.960" level="INFO">key2</msg>
<status status="PASS" starttime="20200506 14:15:44.960" endtime="20200506 14:15:44.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:44.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:44.960" endtime="20200506 14:15:44.961"></status>
</kw>
<msg timestamp="20200506 14:15:44.961" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200506 14:15:42.956" endtime="20200506 14:15:44.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:44.961" endtime="20200506 14:15:44.962"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:44.964" level="INFO">Running command 'ozone sh key delete o3://om:9862/80225-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:46.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:46.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:15:44.962" endtime="20200506 14:15:46.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:46.701" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:15:46.700" endtime="20200506 14:15:46.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:46.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:46.701" endtime="20200506 14:15:46.702"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:44.962" endtime="20200506 14:15:46.702"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:21.291" endtime="20200506 14:15:46.702"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:21.291" endtime="20200506 14:15:46.702"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:46.705" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/80225-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:48.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:48.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:15:46.703" endtime="20200506 14:15:48.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:48.432" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:15:48.431" endtime="20200506 14:15:48.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:48.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:48.432" endtime="20200506 14:15:48.433"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:46.702" endtime="20200506 14:15:48.433"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:48.437" level="INFO">Running command 'ozone sh volume delete o3://om:9862/80225-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:50.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:50.200" level="INFO">${output} = Volume 80225-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200506 14:15:48.434" endtime="20200506 14:15:50.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:50.201" level="INFO">Volume 80225-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200506 14:15:50.200" endtime="20200506 14:15:50.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:50.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:50.201" endtime="20200506 14:15:50.202"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:48.433" endtime="20200506 14:15:50.202"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:03.483" endtime="20200506 14:15:50.202"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200506 14:15:03.482" endtime="20200506 14:15:50.202" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:50.206" endtime="20200506 14:15:50.206"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:50.210" level="INFO">Running command 'ozone sh volume create o3://om:9862/80225-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:51.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:51.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:15:50.207" endtime="20200506 14:15:51.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:51.920" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:15:51.919" endtime="20200506 14:15:51.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:51.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:51.920" endtime="20200506 14:15:51.921"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:50.207" endtime="20200506 14:15:51.921"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:51.925" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80225-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:53.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:53.795" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:15:51.922" endtime="20200506 14:15:53.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:53.796" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:15:53.795" endtime="20200506 14:15:53.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:53.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:53.796" endtime="20200506 14:15:53.797"></status>
</kw>
<msg timestamp="20200506 14:15:53.797" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:15:51.921" endtime="20200506 14:15:53.797"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:53.797" endtime="20200506 14:15:53.798"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:53.802" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/80225-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:55.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:55.561" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200506 14:15:53.799" endtime="20200506 14:15:55.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:55.562" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200506 14:15:55.561" endtime="20200506 14:15:55.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:55.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:55.562" endtime="20200506 14:15:55.563"></status>
</kw>
<msg timestamp="20200506 14:15:55.563" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200506 14:15:53.798" endtime="20200506 14:15:55.563"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:55.566" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80225-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:57.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:57.519" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:15:55.564" endtime="20200506 14:15:57.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:57.521" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:15:57.520" endtime="20200506 14:15:57.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:57.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:57.521" endtime="20200506 14:15:57.521"></status>
</kw>
<msg timestamp="20200506 14:15:57.522" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:15:55.563" endtime="20200506 14:15:57.522"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200506 14:15:57.522" endtime="20200506 14:15:57.523"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:57.525" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/80225-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:15:59.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:15:59.263" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200506 14:15:57.524" endtime="20200506 14:15:59.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:15:59.264" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200506 14:15:59.264" endtime="20200506 14:15:59.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:15:59.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:15:59.265" endtime="20200506 14:15:59.265"></status>
</kw>
<msg timestamp="20200506 14:15:59.265" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200506 14:15:57.523" endtime="20200506 14:15:59.265"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:15:59.269" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80225-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:01.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:01.225" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:15:59.266" endtime="20200506 14:16:01.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:01.226" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:16:01.226" endtime="20200506 14:16:01.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:01.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:01.227" endtime="20200506 14:16:01.227"></status>
</kw>
<msg timestamp="20200506 14:16:01.228" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:15:59.266" endtime="20200506 14:16:01.228"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:01.228" endtime="20200506 14:16:01.229"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:01.233" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/80225-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:03.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:03.040" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200506 14:16:01.230" endtime="20200506 14:16:03.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:03.041" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200506 14:16:03.040" endtime="20200506 14:16:03.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:03.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:03.041" endtime="20200506 14:16:03.042"></status>
</kw>
<msg timestamp="20200506 14:16:03.042" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200506 14:16:01.229" endtime="20200506 14:16:03.042"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:03.046" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80225-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:04.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:04.985" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200506 14:16:03.043" endtime="20200506 14:16:04.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:04.986" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:16:04.986" endtime="20200506 14:16:04.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:04.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:04.987" endtime="20200506 14:16:04.987"></status>
</kw>
<msg timestamp="20200506 14:16:04.987" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200506 14:16:03.042" endtime="20200506 14:16:04.987"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:04.988" endtime="20200506 14:16:04.988"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:04.988" endtime="20200506 14:16:04.989"></status>
</kw>
<status status="PASS" starttime="20200506 14:15:50.206" endtime="20200506 14:16:04.989"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200506 14:15:50.205" endtime="20200506 14:16:04.989" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:04.990" endtime="20200506 14:16:04.991"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:04.996" level="INFO">Running command 'ozone sh bucket create o3://om:9862/80225-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:06.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:06.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:16:04.992" endtime="20200506 14:16:06.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:06.644" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:16:06.643" endtime="20200506 14:16:06.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:06.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:06.644" endtime="20200506 14:16:06.644"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:04.992" endtime="20200506 14:16:06.644"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:06.648" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80225-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:08.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:08.494" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:06.645" endtime="20200506 14:16:08.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:08.495" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:16:08.494" endtime="20200506 14:16:08.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:08.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:08.495" endtime="20200506 14:16:08.496"></status>
</kw>
<msg timestamp="20200506 14:16:08.496" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:06.645" endtime="20200506 14:16:08.496"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:08.496" endtime="20200506 14:16:08.497"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:08.501" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/80225-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:10.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:10.318" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200506 14:16:08.497" endtime="20200506 14:16:10.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:10.319" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200506 14:16:10.318" endtime="20200506 14:16:10.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:10.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:10.319" endtime="20200506 14:16:10.320"></status>
</kw>
<msg timestamp="20200506 14:16:10.320" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200506 14:16:08.497" endtime="20200506 14:16:10.320"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:10.324" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80225-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:12.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:12.210" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:10.321" endtime="20200506 14:16:12.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:12.212" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:16:12.211" endtime="20200506 14:16:12.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:12.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:12.212" endtime="20200506 14:16:12.213"></status>
</kw>
<msg timestamp="20200506 14:16:12.213" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:10.320" endtime="20200506 14:16:12.213"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:12.213" endtime="20200506 14:16:12.215"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:12.218" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/80225-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:13.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:13.950" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200506 14:16:12.215" endtime="20200506 14:16:13.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:13.952" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200506 14:16:13.951" endtime="20200506 14:16:13.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:13.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:13.952" endtime="20200506 14:16:13.953"></status>
</kw>
<msg timestamp="20200506 14:16:13.953" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200506 14:16:12.215" endtime="20200506 14:16:13.953"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:13.956" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80225-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:15.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:15.846" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:13.954" endtime="20200506 14:16:15.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:15.847" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:16:15.846" endtime="20200506 14:16:15.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:15.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:15.847" endtime="20200506 14:16:15.848"></status>
</kw>
<msg timestamp="20200506 14:16:15.848" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:13.953" endtime="20200506 14:16:15.848"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:15.848" endtime="20200506 14:16:15.849"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:15.852" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/80225-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:17.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:17.522" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200506 14:16:15.850" endtime="20200506 14:16:17.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:17.523" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200506 14:16:17.523" endtime="20200506 14:16:17.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:17.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:17.524" endtime="20200506 14:16:17.524"></status>
</kw>
<msg timestamp="20200506 14:16:17.524" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200506 14:16:15.850" endtime="20200506 14:16:17.524"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:17.528" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80225-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:19.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:19.431" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200506 14:16:17.525" endtime="20200506 14:16:19.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:19.432" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:16:19.431" endtime="20200506 14:16:19.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:19.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:19.432" endtime="20200506 14:16:19.433"></status>
</kw>
<msg timestamp="20200506 14:16:19.434" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200506 14:16:17.525" endtime="20200506 14:16:19.434"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:19.434" endtime="20200506 14:16:19.435"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:19.435" endtime="20200506 14:16:19.435"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:04.991" endtime="20200506 14:16:19.435"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200506 14:16:04.990" endtime="20200506 14:16:19.436" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:19.437" endtime="20200506 14:16:19.437"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:19.440" level="INFO">Running command 'ozone sh key put o3://om:9862/80225-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:23.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:23.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:16:19.438" endtime="20200506 14:16:23.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:23.068" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:16:23.066" endtime="20200506 14:16:23.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:23.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:23.068" endtime="20200506 14:16:23.068"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:19.438" endtime="20200506 14:16:23.069"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:23.072" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80225-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:25.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:25.162" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:23.069" endtime="20200506 14:16:25.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:25.163" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:16:25.163" endtime="20200506 14:16:25.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:25.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:25.164" endtime="20200506 14:16:25.164"></status>
</kw>
<msg timestamp="20200506 14:16:25.165" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:23.069" endtime="20200506 14:16:25.165"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:25.165" endtime="20200506 14:16:25.165"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:25.169" level="INFO">Running command 'ozone sh key addacl o3://om:9862/80225-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:26.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:26.959" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200506 14:16:25.166" endtime="20200506 14:16:26.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:26.960" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200506 14:16:26.960" endtime="20200506 14:16:26.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:26.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:26.961" endtime="20200506 14:16:26.961"></status>
</kw>
<msg timestamp="20200506 14:16:26.962" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200506 14:16:25.166" endtime="20200506 14:16:26.962"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:26.965" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80225-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:29.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:29.010" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:26.962" endtime="20200506 14:16:29.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:29.012" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:16:29.011" endtime="20200506 14:16:29.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:29.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:29.012" endtime="20200506 14:16:29.012"></status>
</kw>
<msg timestamp="20200506 14:16:29.013" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:26.962" endtime="20200506 14:16:29.013"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:29.013" endtime="20200506 14:16:29.014"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:29.017" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/80225-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:30.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:30.703" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200506 14:16:29.014" endtime="20200506 14:16:30.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:30.704" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200506 14:16:30.703" endtime="20200506 14:16:30.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:30.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:30.704" endtime="20200506 14:16:30.705"></status>
</kw>
<msg timestamp="20200506 14:16:30.705" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200506 14:16:29.014" endtime="20200506 14:16:30.705"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:30.709" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80225-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:32.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:32.722" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:30.706" endtime="20200506 14:16:32.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:32.723" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:16:32.722" endtime="20200506 14:16:32.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:32.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:32.723" endtime="20200506 14:16:32.723"></status>
</kw>
<msg timestamp="20200506 14:16:32.724" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200506 14:16:30.705" endtime="20200506 14:16:32.724"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:32.724" endtime="20200506 14:16:32.724"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:32.728" level="INFO">Running command 'ozone sh key setacl o3://om:9862/80225-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:34.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:34.789" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200506 14:16:32.725" endtime="20200506 14:16:34.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:34.790" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200506 14:16:34.789" endtime="20200506 14:16:34.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:34.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:34.790" endtime="20200506 14:16:34.791"></status>
</kw>
<msg timestamp="20200506 14:16:34.791" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200506 14:16:32.724" endtime="20200506 14:16:34.791"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:34.799" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80225-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:36.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:36.952" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200506 14:16:34.797" endtime="20200506 14:16:36.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:36.953" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200506 14:16:36.952" endtime="20200506 14:16:36.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:36.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:36.953" endtime="20200506 14:16:36.954"></status>
</kw>
<msg timestamp="20200506 14:16:36.954" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200506 14:16:34.791" endtime="20200506 14:16:36.954"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:36.954" endtime="20200506 14:16:36.955"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:36.955" endtime="20200506 14:16:36.956"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:19.437" endtime="20200506 14:16:36.956"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200506 14:16:19.436" endtime="20200506 14:16:36.956" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:36.958" endtime="20200506 14:16:36.958"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:36.963" level="INFO">Running command 'ozone sh volume info o3:///80225-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:38.690" level="INFO">${rc} = 255</msg>
<msg timestamp="20200506 14:16:38.690" level="INFO">${output} = VOLUME_NOT_FOUND Volume 80225-rpcwport is not found</msg>
<status status="PASS" starttime="20200506 14:16:36.959" endtime="20200506 14:16:38.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:38.691" level="INFO">VOLUME_NOT_FOUND Volume 80225-rpcwport is not found</msg>
<status status="PASS" starttime="20200506 14:16:38.690" endtime="20200506 14:16:38.691"></status>
</kw>
<msg timestamp="20200506 14:16:38.692" level="INFO">${result} = VOLUME_NOT_FOUND Volume 80225-rpcwport is not found</msg>
<status status="PASS" starttime="20200506 14:16:36.959" endtime="20200506 14:16:38.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:38.692" endtime="20200506 14:16:38.692"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:38.696" level="INFO">Running command 'ozone sh volume create o3:///80225-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:40.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:40.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:16:38.693" endtime="20200506 14:16:40.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:40.424" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:16:40.423" endtime="20200506 14:16:40.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:40.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:40.424" endtime="20200506 14:16:40.425"></status>
</kw>
<msg timestamp="20200506 14:16:40.425" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200506 14:16:38.692" endtime="20200506 14:16:40.425"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:40.425" endtime="20200506 14:16:40.425"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:40.430" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="80225-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:42.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:42.483" level="INFO">${output} = {
  "metadata": {},
  "name": "80225-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:16:40.412Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200506 14:16:40.426" endtime="20200506 14:16:42.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:42.484" level="INFO">{
  "metadata": {},
  "name": "80225-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:16:40.412Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200506 14:16:42.483" endtime="20200506 14:16:42.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:42.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:42.484" endtime="20200506 14:16:42.485"></status>
</kw>
<msg timestamp="20200506 14:16:42.485" level="INFO">${result} = {
  "metadata": {},
  "name": "80225-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:16:40.412Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200506 14:16:40.426" endtime="20200506 14:16:42.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:42.485" endtime="20200506 14:16:42.486"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:42.489" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="80225-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:44.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:44.665" level="INFO">${output} = {
  "metadata": {},
  "name": "80225-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:16:40.412Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200506 14:16:42.486" endtime="20200506 14:16:44.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:44.666" level="INFO">{
  "metadata": {},
  "name": "80225-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:16:40.412Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200506 14:16:44.665" endtime="20200506 14:16:44.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:44.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:44.666" endtime="20200506 14:16:44.667"></status>
</kw>
<msg timestamp="20200506 14:16:44.667" level="INFO">${result} = {
  "metadata": {},
  "name": "80225-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:16:40.412Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200506 14:16:42.486" endtime="20200506 14:16:44.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:44.667" endtime="20200506 14:16:44.668"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:44.672" level="INFO">Running command 'ozone sh volume update o3:///80225-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:46.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:46.681" level="INFO">${output} = {
  "metadata" : { },
  "name" : "80225-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-06T14:16:40.412Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200506 14:16:44.669" endtime="20200506 14:16:46.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:46.682" level="INFO">{
  "metadata" : { },
  "name" : "80225-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-06T14:16:40.412Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200506 14:16:46.681" endtime="20200506 14:16:46.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:46.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:46.682" endtime="20200506 14:16:46.683"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:44.668" endtime="20200506 14:16:46.683"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:46.686" level="INFO">Running command 'ozone sh volume info o3:///80225-rpcwport | jq -r '. | select(.name=="80225-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:48.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:48.616" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200506 14:16:46.684" endtime="20200506 14:16:48.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:48.617" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200506 14:16:48.617" endtime="20200506 14:16:48.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:48.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:48.618" endtime="20200506 14:16:48.618"></status>
</kw>
<msg timestamp="20200506 14:16:48.619" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200506 14:16:46.683" endtime="20200506 14:16:48.619"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:48.619" endtime="20200506 14:16:48.619"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:48.623" level="INFO">Running command 'ozone sh bucket create o3:///80225-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:50.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:50.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:16:48.620" endtime="20200506 14:16:50.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:50.339" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:16:50.338" endtime="20200506 14:16:50.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:50.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:50.339" endtime="20200506 14:16:50.340"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:48.619" endtime="20200506 14:16:50.340"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:50.343" level="INFO">Running command 'ozone sh bucket info o3:///80225-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:52.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:52.289" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200506 14:16:50.341" endtime="20200506 14:16:52.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:52.290" level="INFO">DISK</msg>
<status status="PASS" starttime="20200506 14:16:52.289" endtime="20200506 14:16:52.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:52.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:52.290" endtime="20200506 14:16:52.291"></status>
</kw>
<msg timestamp="20200506 14:16:52.291" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200506 14:16:50.340" endtime="20200506 14:16:52.291"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:52.291" endtime="20200506 14:16:52.292"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:52.295" level="INFO">Running command 'ozone sh bucket list o3:///80225-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:54.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:54.314" level="INFO">${output} = 80225-rpcwport</msg>
<status status="PASS" starttime="20200506 14:16:52.293" endtime="20200506 14:16:54.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:54.315" level="INFO">80225-rpcwport</msg>
<status status="PASS" starttime="20200506 14:16:54.314" endtime="20200506 14:16:54.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:54.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:54.315" endtime="20200506 14:16:54.316"></status>
</kw>
<msg timestamp="20200506 14:16:54.316" level="INFO">${result} = 80225-rpcwport</msg>
<status status="PASS" starttime="20200506 14:16:52.292" endtime="20200506 14:16:54.316"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200506 14:16:54.316" endtime="20200506 14:16:54.317"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:54.320" level="INFO">Running command 'ozone sh key put o3:///80225-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:57.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:57.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:16:54.318" endtime="20200506 14:16:57.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:57.938" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:16:57.937" endtime="20200506 14:16:57.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:57.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:57.938" endtime="20200506 14:16:57.938"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:54.318" endtime="20200506 14:16:57.939"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:57.941" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:16:57.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:16:57.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:16:57.939" endtime="20200506 14:16:57.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:16:57.945" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:16:57.944" endtime="20200506 14:16:57.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:16:57.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:16:57.945" endtime="20200506 14:16:57.945"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:57.939" endtime="20200506 14:16:57.946"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:16:57.948" level="INFO">Running command 'ozone sh key get o3:///80225-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:01.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:01.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:16:57.946" endtime="20200506 14:17:01.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:01.258" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:01.257" endtime="20200506 14:17:01.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:01.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:01.258" endtime="20200506 14:17:01.258"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:57.946" endtime="20200506 14:17:01.259"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:01.261" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:01.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:01.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:01.259" endtime="20200506 14:17:01.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:01.264" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:01.264" endtime="20200506 14:17:01.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:01.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:01.265" endtime="20200506 14:17:01.265"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:01.259" endtime="20200506 14:17:01.265"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:01.267" level="INFO">Running command 'ozone sh key get o3:///80225-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:03.085" level="INFO">${rc} = 255</msg>
<msg timestamp="20200506 14:17:03.085" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200506 14:17:01.266" endtime="20200506 14:17:03.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:03.086" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200506 14:17:03.086" endtime="20200506 14:17:03.086"></status>
</kw>
<msg timestamp="20200506 14:17:03.087" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200506 14:17:01.266" endtime="20200506 14:17:03.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:03.087" endtime="20200506 14:17:03.087"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:03.091" level="INFO">Running command 'ozone sh key get --force o3:///80225-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:06.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:06.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:03.089" endtime="20200506 14:17:06.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:06.436" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:06.436" endtime="20200506 14:17:06.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:06.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:06.437" endtime="20200506 14:17:06.437"></status>
</kw>
<msg timestamp="20200506 14:17:06.438" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200506 14:17:03.087" endtime="20200506 14:17:06.438"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:06.438" endtime="20200506 14:17:06.438"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:06.444" level="INFO">Running command 'ozone sh key info o3:///80225-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:08.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:08.354" level="INFO">${output} = {
  "volumeName": "80225-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-06T14:16:56.016Z",
  "modificationTime": "2020-05-06T14:16:57.592Z",
  "rep...</msg>
<status status="PASS" starttime="20200506 14:17:06.440" endtime="20200506 14:17:08.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:08.355" level="INFO">{
  "volumeName": "80225-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-06T14:16:56.016Z",
  "modificationTime": "2020-05-06T14:16:57.592Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104121933235159170,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200506 14:17:08.354" endtime="20200506 14:17:08.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:08.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:08.355" endtime="20200506 14:17:08.356"></status>
</kw>
<msg timestamp="20200506 14:17:08.356" level="INFO">${result} = {
  "volumeName": "80225-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-06T14:16:56.016Z",
  "modificationTime": "2020-05-06T14:16:57.592Z",
  "rep...</msg>
<status status="PASS" starttime="20200506 14:17:06.438" endtime="20200506 14:17:08.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:08.356" endtime="20200506 14:17:08.356"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:08.360" level="INFO">Running command 'ozone debug chunkinfo o3:///80225-rpcwport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:11.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:11.782" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/00ddda00-37aa-414e-8326-a2ea0e3a89e4/current/containerDir0/1/chunks/104121933235159167_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200506 14:17:08.357" endtime="20200506 14:17:11.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:11.784" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/00ddda00-37aa-414e-8326-a2ea0e3a89e4/current/containerDir0/1/chunks/104121933235159167_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.2",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.4",
      "hostName": "ozone_datanode_3.ozone_default"
    }
  ],
  "pipelineID": "652f5b19-ea34-48ac-9a14-b1043a31b0ef"
}</msg>
<status status="PASS" starttime="20200506 14:17:11.783" endtime="20200506 14:17:11.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:11.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:11.784" endtime="20200506 14:17:11.784"></status>
</kw>
<msg timestamp="20200506 14:17:11.785" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/00ddda00-37aa-414e-8326-a2ea0e3a89e4/current/containerDir0/1/chunks/104121933235159167_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200506 14:17:08.357" endtime="20200506 14:17:11.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:11.785" endtime="20200506 14:17:11.785"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:11.789" level="INFO">Running command 'ozone sh key list o3:///80225-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:13.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:13.722" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200506 14:17:11.786" endtime="20200506 14:17:13.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:13.723" level="INFO">key1</msg>
<status status="PASS" starttime="20200506 14:17:13.722" endtime="20200506 14:17:13.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:13.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:13.723" endtime="20200506 14:17:13.724"></status>
</kw>
<msg timestamp="20200506 14:17:13.724" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200506 14:17:11.786" endtime="20200506 14:17:13.724"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:13.724" endtime="20200506 14:17:13.725"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:13.727" level="INFO">Running command 'ozone sh key rename o3:///80225-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:15.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:15.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:13.725" endtime="20200506 14:17:15.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:15.479" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:15.478" endtime="20200506 14:17:15.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:15.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:15.479" endtime="20200506 14:17:15.480"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:13.725" endtime="20200506 14:17:15.480"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:15.484" level="INFO">Running command 'ozone sh key list o3:///80225-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:17.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:17.382" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200506 14:17:15.481" endtime="20200506 14:17:17.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:17.383" level="INFO">key2</msg>
<status status="PASS" starttime="20200506 14:17:17.382" endtime="20200506 14:17:17.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:17.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:17.383" endtime="20200506 14:17:17.384"></status>
</kw>
<msg timestamp="20200506 14:17:17.384" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200506 14:17:15.480" endtime="20200506 14:17:17.384"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:17.384" endtime="20200506 14:17:17.385"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:17.388" level="INFO">Running command 'ozone sh key delete o3:///80225-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:19.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:19.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:17.386" endtime="20200506 14:17:19.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:19.095" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:19.094" endtime="20200506 14:17:19.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:19.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:19.095" endtime="20200506 14:17:19.096"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:17.385" endtime="20200506 14:17:19.096"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:54.317" endtime="20200506 14:17:19.096"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:54.317" endtime="20200506 14:17:19.096"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:19.100" level="INFO">Running command 'ozone sh bucket delete o3:///80225-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:20.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:20.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:19.097" endtime="20200506 14:17:20.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:20.728" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:20.728" endtime="20200506 14:17:20.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:20.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:20.729" endtime="20200506 14:17:20.729"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:19.097" endtime="20200506 14:17:20.730"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:20.732" level="INFO">Running command 'ozone sh volume delete o3:///80225-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:22.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:22.456" level="INFO">${output} = Volume 80225-rpcwport is deleted</msg>
<status status="PASS" starttime="20200506 14:17:20.730" endtime="20200506 14:17:22.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:22.457" level="INFO">Volume 80225-rpcwport is deleted</msg>
<status status="PASS" starttime="20200506 14:17:22.457" endtime="20200506 14:17:22.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:22.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:22.458" endtime="20200506 14:17:22.458"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:20.730" endtime="20200506 14:17:22.458"></status>
</kw>
<status status="PASS" starttime="20200506 14:16:36.958" endtime="20200506 14:17:22.458"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200506 14:16:36.957" endtime="20200506 14:17:22.459" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:22.460" endtime="20200506 14:17:22.460"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:22.465" level="INFO">Running command 'ozone sh volume info /80225-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:24.234" level="INFO">${rc} = 255</msg>
<msg timestamp="20200506 14:17:24.234" level="INFO">${output} = VOLUME_NOT_FOUND Volume 80225-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200506 14:17:22.462" endtime="20200506 14:17:24.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:24.236" level="INFO">VOLUME_NOT_FOUND Volume 80225-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200506 14:17:24.235" endtime="20200506 14:17:24.236"></status>
</kw>
<msg timestamp="20200506 14:17:24.236" level="INFO">${result} = VOLUME_NOT_FOUND Volume 80225-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200506 14:17:22.461" endtime="20200506 14:17:24.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:24.236" endtime="20200506 14:17:24.237"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:24.240" level="INFO">Running command 'ozone sh volume create /80225-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:25.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:25.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:24.238" endtime="20200506 14:17:25.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:25.972" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:25.971" endtime="20200506 14:17:25.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:25.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:25.972" endtime="20200506 14:17:25.973"></status>
</kw>
<msg timestamp="20200506 14:17:25.973" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200506 14:17:24.237" endtime="20200506 14:17:25.973"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:25.973" endtime="20200506 14:17:25.974"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:25.977" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="80225-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:27.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:27.942" level="INFO">${output} = {
  "metadata": {},
  "name": "80225-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:17:25.959Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200506 14:17:25.974" endtime="20200506 14:17:27.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:27.944" level="INFO">{
  "metadata": {},
  "name": "80225-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:17:25.959Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200506 14:17:27.943" endtime="20200506 14:17:27.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:27.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:27.944" endtime="20200506 14:17:27.944"></status>
</kw>
<msg timestamp="20200506 14:17:27.945" level="INFO">${result} = {
  "metadata": {},
  "name": "80225-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:17:25.959Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200506 14:17:25.974" endtime="20200506 14:17:27.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:27.945" endtime="20200506 14:17:27.945"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:27.948" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="80225-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:29.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:29.952" level="INFO">${output} = {
  "metadata": {},
  "name": "80225-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:17:25.959Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200506 14:17:27.946" endtime="20200506 14:17:29.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:29.953" level="INFO">{
  "metadata": {},
  "name": "80225-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:17:25.959Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200506 14:17:29.952" endtime="20200506 14:17:29.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:29.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:29.953" endtime="20200506 14:17:29.954"></status>
</kw>
<msg timestamp="20200506 14:17:29.954" level="INFO">${result} = {
  "metadata": {},
  "name": "80225-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-05-06T14:17:25.959Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200506 14:17:27.945" endtime="20200506 14:17:29.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:29.954" endtime="20200506 14:17:29.955"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:29.958" level="INFO">Running command 'ozone sh volume update /80225-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:31.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:31.904" level="INFO">${output} = {
  "metadata" : { },
  "name" : "80225-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-06T14:17:25.959Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200506 14:17:29.956" endtime="20200506 14:17:31.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:31.906" level="INFO">{
  "metadata" : { },
  "name" : "80225-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-05-06T14:17:25.959Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200506 14:17:31.905" endtime="20200506 14:17:31.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:31.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:31.906" endtime="20200506 14:17:31.906"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:29.955" endtime="20200506 14:17:31.906"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:31.909" level="INFO">Running command 'ozone sh volume info /80225-rpcwoscheme | jq -r '. | select(.name=="80225-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:33.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:33.839" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200506 14:17:31.907" endtime="20200506 14:17:33.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:33.840" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200506 14:17:33.839" endtime="20200506 14:17:33.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:33.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:33.840" endtime="20200506 14:17:33.841"></status>
</kw>
<msg timestamp="20200506 14:17:33.841" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200506 14:17:31.907" endtime="20200506 14:17:33.841"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:33.841" endtime="20200506 14:17:33.842"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:33.844" level="INFO">Running command 'ozone sh bucket create /80225-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:35.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:35.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:33.842" endtime="20200506 14:17:35.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:35.612" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:35.611" endtime="20200506 14:17:35.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:35.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:35.612" endtime="20200506 14:17:35.613"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:33.842" endtime="20200506 14:17:35.613"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:35.617" level="INFO">Running command 'ozone sh bucket info /80225-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:37.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:37.706" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200506 14:17:35.614" endtime="20200506 14:17:37.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:37.707" level="INFO">DISK</msg>
<status status="PASS" starttime="20200506 14:17:37.707" endtime="20200506 14:17:37.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:37.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:37.708" endtime="20200506 14:17:37.708"></status>
</kw>
<msg timestamp="20200506 14:17:37.708" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200506 14:17:35.613" endtime="20200506 14:17:37.708"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:37.708" endtime="20200506 14:17:37.709"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:37.713" level="INFO">Running command 'ozone sh bucket list /80225-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:39.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:39.604" level="INFO">${output} = 80225-rpcwoscheme</msg>
<status status="PASS" starttime="20200506 14:17:37.710" endtime="20200506 14:17:39.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:39.605" level="INFO">80225-rpcwoscheme</msg>
<status status="PASS" starttime="20200506 14:17:39.604" endtime="20200506 14:17:39.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:39.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:39.606" endtime="20200506 14:17:39.606"></status>
</kw>
<msg timestamp="20200506 14:17:39.607" level="INFO">${result} = 80225-rpcwoscheme</msg>
<status status="PASS" starttime="20200506 14:17:37.709" endtime="20200506 14:17:39.607"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:39.607" endtime="20200506 14:17:39.607"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:39.612" level="INFO">Running command 'ozone sh key put /80225-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:43.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:43.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:39.609" endtime="20200506 14:17:43.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:43.054" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:43.053" endtime="20200506 14:17:43.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:43.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:43.054" endtime="20200506 14:17:43.055"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:39.609" endtime="20200506 14:17:43.055"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:43.058" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:43.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:43.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:43.056" endtime="20200506 14:17:43.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:43.061" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:43.061" endtime="20200506 14:17:43.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:43.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:43.062" endtime="20200506 14:17:43.062"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:43.055" endtime="20200506 14:17:43.062"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:43.065" level="INFO">Running command 'ozone sh key get /80225-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:46.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:46.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:43.063" endtime="20200506 14:17:46.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:46.444" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:46.443" endtime="20200506 14:17:46.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:46.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:46.444" endtime="20200506 14:17:46.445"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:43.062" endtime="20200506 14:17:46.445"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:46.448" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:46.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:46.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:46.446" endtime="20200506 14:17:46.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:46.451" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:46.451" endtime="20200506 14:17:46.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:46.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:46.451" endtime="20200506 14:17:46.452"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:46.445" endtime="20200506 14:17:46.452"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:46.456" level="INFO">Running command 'ozone sh key get /80225-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:48.170" level="INFO">${rc} = 255</msg>
<msg timestamp="20200506 14:17:48.170" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200506 14:17:46.453" endtime="20200506 14:17:48.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:48.171" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200506 14:17:48.170" endtime="20200506 14:17:48.171"></status>
</kw>
<msg timestamp="20200506 14:17:48.171" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200506 14:17:46.452" endtime="20200506 14:17:48.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:48.172" endtime="20200506 14:17:48.172"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:48.175" level="INFO">Running command 'ozone sh key get --force /80225-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:51.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:51.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:48.173" endtime="20200506 14:17:51.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:51.416" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:17:51.415" endtime="20200506 14:17:51.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:51.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:51.416" endtime="20200506 14:17:51.417"></status>
</kw>
<msg timestamp="20200506 14:17:51.417" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200506 14:17:48.172" endtime="20200506 14:17:51.417"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:51.418" endtime="20200506 14:17:51.418"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:51.422" level="INFO">Running command 'ozone sh key info /80225-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:53.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:53.463" level="INFO">${output} = {
  "volumeName": "80225-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-06T14:17:41.358Z",
  "modificationTime": "2020-05-06T14:17:42.710Z",
  "...</msg>
<status status="PASS" starttime="20200506 14:17:51.419" endtime="20200506 14:17:53.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:53.464" level="INFO">{
  "volumeName": "80225-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-06T14:17:41.358Z",
  "modificationTime": "2020-05-06T14:17:42.710Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104121936206692480,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200506 14:17:53.463" endtime="20200506 14:17:53.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:53.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:53.464" endtime="20200506 14:17:53.465"></status>
</kw>
<msg timestamp="20200506 14:17:53.465" level="INFO">${result} = {
  "volumeName": "80225-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-05-06T14:17:41.358Z",
  "modificationTime": "2020-05-06T14:17:42.710Z",
  "...</msg>
<status status="PASS" starttime="20200506 14:17:51.418" endtime="20200506 14:17:53.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:53.465" endtime="20200506 14:17:53.466"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:53.469" level="INFO">Running command 'ozone debug chunkinfo /80225-rpcwoscheme/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:56.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:56.851" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/00ddda00-37aa-414e-8326-a2ea0e3a89e4/current/containerDir0/1/chunks/104121936206692480_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200506 14:17:53.466" endtime="20200506 14:17:56.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:56.852" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/00ddda00-37aa-414e-8326-a2ea0e3a89e4/current/containerDir0/1/chunks/104121936206692480_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.2",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.4",
      "hostName": "ozone_datanode_3.ozone_default"
    }
  ],
  "pipelineID": "652f5b19-ea34-48ac-9a14-b1043a31b0ef"
}</msg>
<status status="PASS" starttime="20200506 14:17:56.852" endtime="20200506 14:17:56.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:56.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:56.853" endtime="20200506 14:17:56.853"></status>
</kw>
<msg timestamp="20200506 14:17:56.853" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/00ddda00-37aa-414e-8326-a2ea0e3a89e4/current/containerDir0/1/chunks/104121936206692480_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200506 14:17:53.466" endtime="20200506 14:17:56.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:56.854" endtime="20200506 14:17:56.854"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:56.858" level="INFO">Running command 'ozone sh key list /80225-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:17:58.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:17:58.941" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200506 14:17:56.855" endtime="20200506 14:17:58.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:17:58.942" level="INFO">key1</msg>
<status status="PASS" starttime="20200506 14:17:58.941" endtime="20200506 14:17:58.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:17:58.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:17:58.942" endtime="20200506 14:17:58.943"></status>
</kw>
<msg timestamp="20200506 14:17:58.943" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200506 14:17:56.854" endtime="20200506 14:17:58.943"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200506 14:17:58.943" endtime="20200506 14:17:58.944"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:17:58.948" level="INFO">Running command 'ozone sh key rename /80225-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:18:00.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:18:00.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:17:58.944" endtime="20200506 14:18:00.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:18:00.710" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:18:00.710" endtime="20200506 14:18:00.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:18:00.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:18:00.711" endtime="20200506 14:18:00.711"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:58.944" endtime="20200506 14:18:00.711"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:18:00.715" level="INFO">Running command 'ozone sh key list /80225-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:18:02.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:18:02.828" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200506 14:18:00.712" endtime="20200506 14:18:02.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:18:02.831" level="INFO">key2</msg>
<status status="PASS" starttime="20200506 14:18:02.829" endtime="20200506 14:18:02.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:18:02.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:18:02.832" endtime="20200506 14:18:02.832"></status>
</kw>
<msg timestamp="20200506 14:18:02.832" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200506 14:18:00.712" endtime="20200506 14:18:02.832"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200506 14:18:02.833" endtime="20200506 14:18:02.833"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:18:02.837" level="INFO">Running command 'ozone sh key delete /80225-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:18:04.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:18:04.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:18:02.834" endtime="20200506 14:18:04.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:18:04.906" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:18:04.905" endtime="20200506 14:18:04.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:18:04.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:18:04.906" endtime="20200506 14:18:04.907"></status>
</kw>
<status status="PASS" starttime="20200506 14:18:02.833" endtime="20200506 14:18:04.907"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:39.608" endtime="20200506 14:18:04.907"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:39.608" endtime="20200506 14:18:04.907"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:18:04.910" level="INFO">Running command 'ozone sh bucket delete /80225-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:18:06.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:18:06.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200506 14:18:04.908" endtime="20200506 14:18:06.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:18:06.732" level="INFO"></msg>
<status status="PASS" starttime="20200506 14:18:06.731" endtime="20200506 14:18:06.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:18:06.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:18:06.732" endtime="20200506 14:18:06.732"></status>
</kw>
<status status="PASS" starttime="20200506 14:18:04.907" endtime="20200506 14:18:06.733"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200506 14:18:06.735" level="INFO">Running command 'ozone sh volume delete /80225-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200506 14:18:08.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200506 14:18:08.430" level="INFO">${output} = Volume 80225-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200506 14:18:06.733" endtime="20200506 14:18:08.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200506 14:18:08.431" level="INFO">Volume 80225-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200506 14:18:08.430" endtime="20200506 14:18:08.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200506 14:18:08.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200506 14:18:08.431" endtime="20200506 14:18:08.432"></status>
</kw>
<status status="PASS" starttime="20200506 14:18:06.733" endtime="20200506 14:18:08.432"></status>
</kw>
<status status="PASS" starttime="20200506 14:17:22.460" endtime="20200506 14:18:08.432"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200506 14:17:22.459" endtime="20200506 14:18:08.432" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200506 14:15:03.474" endtime="20200506 14:18:08.435"></status>
</suite>
<status status="PASS" starttime="20200506 14:13:49.738" endtime="20200506 14:18:08.440"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
