<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200424 18:14:29.323" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:14:29.379" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:14:36.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:14:36.806" level="INFO">${output} = 2020-04-24 18:14:30,387 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:30,578 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200424 18:14:29.375" endtime="20200424 18:14:36.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:14:36.808" level="INFO">2020-04-24 18:14:30,387 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:30,578 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-24 18:14:30,578 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-24 18:14:31,448 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-24 18:14:31,449 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-24 18:14:31,449 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-24 18:14:31,449 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-24 18:14:31,449 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-24 18:14:31,449 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-24 18:14:31,449 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-24 18:14:31,453 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-24 18:14:31,463 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-24 18:14:31,491 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-55535, with hadoop as owner.
2020-04-24 18:14:31,523 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-55535/bucket-0-74290, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:14:31,994 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-24 18:14:32,465 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,049
Average Time spent in bucket creation: 00:00:00,020
Average Time spent in key creation: 00:00:00,040
Average Time spent in key write: 00:00:00,624
Total bytes written: 10240
Total Execution time: 00:00:05,581
***************************************************</msg>
<status status="PASS" starttime="20200424 18:14:36.807" endtime="20200424 18:14:36.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:14:36.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:14:36.808" endtime="20200424 18:14:36.809"></status>
</kw>
<msg timestamp="20200424 18:14:36.809" level="INFO">${result} = 2020-04-24 18:14:30,387 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:30,578 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200424 18:14:29.374" endtime="20200424 18:14:36.809"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:14:36.810" endtime="20200424 18:14:36.810"></status>
</kw>
<status status="PASS" starttime="20200424 18:14:36.809" endtime="20200424 18:14:36.810"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200424 18:14:29.374" endtime="20200424 18:14:36.811" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:14:36.816" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:14:41.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:14:41.764" level="INFO">${output} = 2020-04-24 18:14:37,882 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:38,094 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200424 18:14:36.813" endtime="20200424 18:14:41.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:14:41.765" level="INFO">2020-04-24 18:14:37,882 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:38,094 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-24 18:14:38,094 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-24 18:14:38,382 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ly5we0trlw
2020-04-24 18:14:38,391 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-24 18:14:39,023 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-24 18:14:39,047 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:14:39,395 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-24 18:14:39,592 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-24 18:14:40,395 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-24 18:14:41,396 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-24 18:14:41,436 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1393.654948, max=1393.654948, mean=1393.654948, stddev=0.0, median=1393.654948, p75=1393.654948, p95=1393.654948, p98=1393.654948, p99=1393.654948, p999=1393.654948, mean_rate=0.4218705271572862, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-24 18:14:41,437 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-24 18:14:41,440 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-24 18:14:41,440 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200424 18:14:41.764" endtime="20200424 18:14:41.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:14:41.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:14:41.765" endtime="20200424 18:14:41.766"></status>
</kw>
<msg timestamp="20200424 18:14:41.766" level="INFO">${result} = 2020-04-24 18:14:37,882 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:38,094 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200424 18:14:36.812" endtime="20200424 18:14:41.766"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:14:41.767" endtime="20200424 18:14:41.767"></status>
</kw>
<status status="PASS" starttime="20200424 18:14:41.766" endtime="20200424 18:14:41.767"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200424 18:14:36.811" endtime="20200424 18:14:41.767" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:14:41.771" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:14:44.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:14:44.943" level="INFO">${output} = 2020-04-24 18:14:42,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:42,909 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200424 18:14:41.769" endtime="20200424 18:14:44.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:14:44.944" level="INFO">2020-04-24 18:14:42,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:42,909 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-24 18:14:42,909 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-24 18:14:43,209 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dm7wmdjsnm
2020-04-24 18:14:43,221 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-24 18:14:44,237 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-24 18:14:44,928 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=29.113676, max=29.113676, mean=29.113676, stddev=0.0, median=29.113676, p75=29.113676, p95=29.113676, p98=29.113676, p99=29.113676, p999=29.113676, mean_rate=0.9650516178172127, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-24 18:14:44,930 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-24 18:14:44,930 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-24 18:14:44,930 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200424 18:14:44.943" endtime="20200424 18:14:44.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:14:44.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:14:44.944" endtime="20200424 18:14:44.945"></status>
</kw>
<msg timestamp="20200424 18:14:44.945" level="INFO">${result} = 2020-04-24 18:14:42,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:42,909 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200424 18:14:41.768" endtime="20200424 18:14:44.945"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:14:44.946" endtime="20200424 18:14:44.946"></status>
</kw>
<status status="PASS" starttime="20200424 18:14:44.945" endtime="20200424 18:14:44.946"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200424 18:14:41.768" endtime="20200424 18:14:44.946" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:14:44.952" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:14:48.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:14:48.281" level="INFO">${output} = 2020-04-24 18:14:46,051 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:46,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200424 18:14:44.949" endtime="20200424 18:14:48.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:14:48.283" level="INFO">2020-04-24 18:14:46,051 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:46,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-24 18:14:46,243 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-24 18:14:46,551 [main] INFO freon.BaseFreonGenerator: Executing test with prefix c0x80ur8qa
2020-04-24 18:14:46,566 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-24 18:14:47,572 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-24 18:14:48,259 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=7.384219, max=7.384219, mean=7.384219, stddev=0.0, median=7.384219, p75=7.384219, p95=7.384219, p98=7.384219, p99=7.384219, p999=7.384219, mean_rate=0.989680376081789, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-24 18:14:48,260 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-24 18:14:48,261 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-24 18:14:48,261 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200424 18:14:48.282" endtime="20200424 18:14:48.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:14:48.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:14:48.283" endtime="20200424 18:14:48.284"></status>
</kw>
<msg timestamp="20200424 18:14:48.284" level="INFO">${result} = 2020-04-24 18:14:46,051 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:14:46,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200424 18:14:44.949" endtime="20200424 18:14:48.284"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:14:48.285" endtime="20200424 18:14:48.286"></status>
</kw>
<status status="PASS" starttime="20200424 18:14:48.285" endtime="20200424 18:14:48.286"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200424 18:14:44.948" endtime="20200424 18:14:48.286" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200424 18:14:29.350" endtime="20200424 18:14:48.288"></status>
</suite>
<status status="PASS" starttime="20200424 18:14:29.323" endtime="20200424 18:14:48.293"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
