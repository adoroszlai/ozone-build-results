<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200424 18:34:56.718" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:34:56.788" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:34:56.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:34:56.789" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200424 18:34:56.783" endtime="20200424 18:34:56.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:34:56.790" level="INFO">scm</msg>
<status status="PASS" starttime="20200424 18:34:56.789" endtime="20200424 18:34:56.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:34:56.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:34:56.790" endtime="20200424 18:34:56.791"></status>
</kw>
<msg timestamp="20200424 18:34:56.791" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200424 18:34:56.782" endtime="20200424 18:34:56.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200424 18:34:56.793" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200424 18:34:56.791" endtime="20200424 18:34:56.793"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:34:56.796" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:34:56.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:34:56.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:34:56.794" endtime="20200424 18:34:56.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:34:56.814" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:34:56.814" endtime="20200424 18:34:56.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:34:56.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:34:56.815" endtime="20200424 18:34:56.816"></status>
</kw>
<status status="PASS" starttime="20200424 18:34:56.793" endtime="20200424 18:34:56.816"></status>
</kw>
<status status="PASS" starttime="20200424 18:34:56.793" endtime="20200424 18:34:56.816"></status>
</kw>
<status status="PASS" starttime="20200424 18:34:56.782" endtime="20200424 18:34:56.816"></status>
</kw>
<status status="PASS" starttime="20200424 18:34:56.781" endtime="20200424 18:34:56.816"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:34:56.820" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:04.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:04.852" level="INFO">${output} = 2020-04-24 18:34:57,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:34:58,015 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200424 18:34:56.817" endtime="20200424 18:35:04.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:04.853" level="INFO">2020-04-24 18:34:57,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:34:58,015 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-24 18:34:58,015 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-04-24 18:34:59,436 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-04-24 18:34:59,439 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-24 18:34:59,439 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-24 18:34:59,439 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-04-24 18:34:59,439 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-04-24 18:34:59,439 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-24 18:34:59,439 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-24 18:34:59,464 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-24 18:34:59,472 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-04-24 18:34:59,506 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-40813, with testuser/scm@EXAMPLE.COM as owner.
2020-04-24 18:34:59,539 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-40813/bucket-0-88286, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:34:59,946 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-24 18:35:00,476 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,008
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,090
Average Time spent in key write: 00:00:00,442
Total bytes written: 10250
Total Execution time: 00:00:06,178
***************************************************</msg>
<status status="PASS" starttime="20200424 18:35:04.852" endtime="20200424 18:35:04.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:04.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:04.854" endtime="20200424 18:35:04.854"></status>
</kw>
<status status="PASS" starttime="20200424 18:34:56.817" endtime="20200424 18:35:04.854"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200424 18:34:56.781" endtime="20200424 18:35:04.855" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:04.861" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:04.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:04.863" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200424 18:35:04.859" endtime="20200424 18:35:04.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:04.865" level="INFO">scm</msg>
<status status="PASS" starttime="20200424 18:35:04.864" endtime="20200424 18:35:04.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:04.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:04.865" endtime="20200424 18:35:04.865"></status>
</kw>
<msg timestamp="20200424 18:35:04.866" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200424 18:35:04.858" endtime="20200424 18:35:04.866"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:04.869" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:04.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:04.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:35:04.867" endtime="20200424 18:35:04.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:04.894" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:35:04.893" endtime="20200424 18:35:04.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:04.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:04.894" endtime="20200424 18:35:04.894"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:04.866" endtime="20200424 18:35:04.895"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:04.866" endtime="20200424 18:35:04.895"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:04.858" endtime="20200424 18:35:04.895"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:04.857" endtime="20200424 18:35:04.895"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:04.898" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:05.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:05.084" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:04.895" endtime="20200424 18:35:05.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:05.085" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:04 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:04 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:04 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    426      0 --:--:-- --:--:-- --:--:--   427
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200424 18:35:05.085" endtime="20200424 18:35:05.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:05.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:05.086" endtime="20200424 18:35:05.086"></status>
</kw>
<msg timestamp="20200424 18:35:05.086" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:04.895" endtime="20200424 18:35:05.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:05.087" endtime="20200424 18:35:05.087"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:05.091" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:05.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:05.122" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:05.088" endtime="20200424 18:35:05.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:05.123" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:05 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1423
&lt; 
{ [data not shown]

100  1423  100  1423    0     0  59355      0 --:--:-- --:--:-- --:--:-- 61869
* Connection #0 to host recon left intact
[{"fileSize":1024,"count":13},{"fileSize":2048,"count":0},{"fileSize":4096,"count":0},{"fileSize":8192,"count":0},{"fileSize":16384,"count":125},{"fileSize":32768,"count":7},{"fileSize":65536,"count":0},{"fileSize":131072,"count":0},{"fileSize":262144,"count":0},{"fileSize":524288,"count":0},{"fileSize":1048576,"count":0},{"fileSize":2097152,"count":0},{"fileSize":4194304,"count":0},{"fileSize":8388608,"count":4},{"fileSize":16777216,"count":2},{"fileSize":33554432,"count":0},{"fileSize":67108864,"count":0},{"fileSize":134217728,"count":0},{"fileSize":268435456,"count":0},{"fileSize":536870912,"count":0},{"fileSize":1073741824,"count":0},{"fileSize":2147483648,"count":0},{"fileSize":4294967296,"count":0},{"fileSize":8589934592,"count":0},{"fileSize":17179869184,"count":0},{"fileSize":34359738368,"count":0},{"fileSize":68719476736,"count":0},{"fileSize":137438953472,"count":0},{"fileSize":274877906944,"count":0},{"fileSize":549755813888,"count":0},{"fileSize":1099511627776,"count":0},{"fileSize":2199023255552,"count":0},{"fileSize":4398046511104,"count":0},{"fileSize":8796093022208,"count":0},{"fileSize":17592186044416,"count":0},{"fileSize":35184372088832,"count":0},{"fileSize":70368744177664,"count":0},{"fileSize":140737488355328,"count":0},{"fileSize":281474976710656,"count":0},{"fileSize":562949953421312,"count":0},{"fileSize":1125899906842624,"count":0},{"fileSize":9223372036854775807,"count":0}]</msg>
<status status="PASS" starttime="20200424 18:35:05.122" endtime="20200424 18:35:05.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:05.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:05.123" endtime="20200424 18:35:05.124"></status>
</kw>
<msg timestamp="20200424 18:35:05.124" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:05.088" endtime="20200424 18:35:05.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200424 18:35:05.125" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:05 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1423
&lt; 
{ [data not shown]

100  1423  100  1423    0     0  59355      0 --:--:-- --:--:-- --:--:-- 61869
* Connection #0 to host recon left intact
[{"fileSize":1024,"count":13},{"fileSize":2048,"count":0},{"fileSize":4096,"count":0},{"fileSize":8192,"count":0},{"fileSize":16384,"count":125},{"fileSize":32768,"count":7},{"fileSize":65536,"count":0},{"fileSize":131072,"count":0},{"fileSize":262144,"count":0},{"fileSize":524288,"count":0},{"fileSize":1048576,"count":0},{"fileSize":2097152,"count":0},{"fileSize":4194304,"count":0},{"fileSize":8388608,"count":4},{"fileSize":16777216,"count":2},{"fileSize":33554432,"count":0},{"fileSize":67108864,"count":0},{"fileSize":134217728,"count":0},{"fileSize":268435456,"count":0},{"fileSize":536870912,"count":0},{"fileSize":1073741824,"count":0},{"fileSize":2147483648,"count":0},{"fileSize":4294967296,"count":0},{"fileSize":8589934592,"count":0},{"fileSize":17179869184,"count":0},{"fileSize":34359738368,"count":0},{"fileSize":68719476736,"count":0},{"fileSize":137438953472,"count":0},{"fileSize":274877906944,"count":0},{"fileSize":549755813888,"count":0},{"fileSize":1099511627776,"count":0},{"fileSize":2199023255552,"count":0},{"fileSize":4398046511104,"count":0},{"fileSize":8796093022208,"count":0},{"fileSize":17592186044416,"count":0},{"fileSize":35184372088832,"count":0},{"fileSize":70368744177664,"count":0},{"fileSize":140737488355328,"count":0},{"fileSize":281474976710656,"count":0},{"fileSize":562949953421312,"count":0},{"fileSize":1125899906842624,"count":0},{"fileSize":9223372036854775807,"count":0}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200424 18:35:05.125" endtime="20200424 18:35:05.125"></status>
</kw>
<status status="FAIL" starttime="20200424 18:35:04.857" endtime="20200424 18:35:05.126"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:15.131" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:15.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:15.134" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200424 18:35:15.129" endtime="20200424 18:35:15.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:15.135" level="INFO">scm</msg>
<status status="PASS" starttime="20200424 18:35:15.134" endtime="20200424 18:35:15.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:15.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:15.135" endtime="20200424 18:35:15.135"></status>
</kw>
<msg timestamp="20200424 18:35:15.136" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200424 18:35:15.128" endtime="20200424 18:35:15.136"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:15.140" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:15.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:15.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:35:15.137" endtime="20200424 18:35:15.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:15.169" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:35:15.169" endtime="20200424 18:35:15.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:15.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:15.170" endtime="20200424 18:35:15.170"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:15.137" endtime="20200424 18:35:15.171"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:15.136" endtime="20200424 18:35:15.171"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:15.128" endtime="20200424 18:35:15.171"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:15.127" endtime="20200424 18:35:15.171"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:15.174" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:15.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:15.190" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:15.172" endtime="20200424 18:35:15.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:15.191" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:15 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:15 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:15 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   9569      0 --:--:-- --:--:-- --:--:-- 11000
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200424 18:35:15.191" endtime="20200424 18:35:15.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:15.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:15.192" endtime="20200424 18:35:15.192"></status>
</kw>
<msg timestamp="20200424 18:35:15.193" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:15.171" endtime="20200424 18:35:15.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:15.193" endtime="20200424 18:35:15.193"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:15.196" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:15.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:15.210" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:15.194" endtime="20200424 18:35:15.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:15.212" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:15 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:15 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:15 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1423
&lt; 
{ [data not shown]

100  1423  100  1423    0     0   218k      0 --:--:-- --:--:-- --:--:--  231k
* Connection #0 to host recon left intact
[{"fileSize":1024,"count":13},{"fileSize":2048,"count":0},{"fileSize":4096,"count":0},{"fileSize":8192,"count":0},{"fileSize":16384,"count":125},{"fileSize":32768,"count":7},{"fileSize":65536,"count":0},{"fileSize":131072,"count":0},{"fileSize":262144,"count":0},{"fileSize":524288,"count":0},{"fileSize":1048576,"count":0},{"fileSize":2097152,"count":0},{"fileSize":4194304,"count":0},{"fileSize":8388608,"count":4},{"fileSize":16777216,"count":2},{"fileSize":33554432,"count":0},{"fileSize":67108864,"count":0},{"fileSize":134217728,"count":0},{"fileSize":268435456,"count":0},{"fileSize":536870912,"count":0},{"fileSize":1073741824,"count":0},{"fileSize":2147483648,"count":0},{"fileSize":4294967296,"count":0},{"fileSize":8589934592,"count":0},{"fileSize":17179869184,"count":0},{"fileSize":34359738368,"count":0},{"fileSize":68719476736,"count":0},{"fileSize":137438953472,"count":0},{"fileSize":274877906944,"count":0},{"fileSize":549755813888,"count":0},{"fileSize":1099511627776,"count":0},{"fileSize":2199023255552,"count":0},{"fileSize":4398046511104,"count":0},{"fileSize":8796093022208,"count":0},{"fileSize":17592186044416,"count":0},{"fileSize":35184372088832,"count":0},{"fileSize":70368744177664,"count":0},{"fileSize":140737488355328,"count":0},{"fileSize":281474976710656,"count":0},{"fileSize":562949953421312,"count":0},{"fileSize":1125899906842624,"count":0},{"fileSize":9223372036854775807,"count":0}]</msg>
<status status="PASS" starttime="20200424 18:35:15.211" endtime="20200424 18:35:15.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:15.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:15.213" endtime="20200424 18:35:15.213"></status>
</kw>
<msg timestamp="20200424 18:35:15.214" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:15.193" endtime="20200424 18:35:15.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200424 18:35:15.215" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:15 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:15 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:15 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1423
&lt; 
{ [data not shown]

100  1423  100  1423    0     0   218k      0 --:--:-- --:--:-- --:--:--  231k
* Connection #0 to host recon left intact
[{"fileSize":1024,"count":13},{"fileSize":2048,"count":0},{"fileSize":4096,"count":0},{"fileSize":8192,"count":0},{"fileSize":16384,"count":125},{"fileSize":32768,"count":7},{"fileSize":65536,"count":0},{"fileSize":131072,"count":0},{"fileSize":262144,"count":0},{"fileSize":524288,"count":0},{"fileSize":1048576,"count":0},{"fileSize":2097152,"count":0},{"fileSize":4194304,"count":0},{"fileSize":8388608,"count":4},{"fileSize":16777216,"count":2},{"fileSize":33554432,"count":0},{"fileSize":67108864,"count":0},{"fileSize":134217728,"count":0},{"fileSize":268435456,"count":0},{"fileSize":536870912,"count":0},{"fileSize":1073741824,"count":0},{"fileSize":2147483648,"count":0},{"fileSize":4294967296,"count":0},{"fileSize":8589934592,"count":0},{"fileSize":17179869184,"count":0},{"fileSize":34359738368,"count":0},{"fileSize":68719476736,"count":0},{"fileSize":137438953472,"count":0},{"fileSize":274877906944,"count":0},{"fileSize":549755813888,"count":0},{"fileSize":1099511627776,"count":0},{"fileSize":2199023255552,"count":0},{"fileSize":4398046511104,"count":0},{"fileSize":8796093022208,"count":0},{"fileSize":17592186044416,"count":0},{"fileSize":35184372088832,"count":0},{"fileSize":70368744177664,"count":0},{"fileSize":140737488355328,"count":0},{"fileSize":281474976710656,"count":0},{"fileSize":562949953421312,"count":0},{"fileSize":1125899906842624,"count":0},{"fileSize":9223372036854775807,"count":0}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200424 18:35:15.214" endtime="20200424 18:35:15.215"></status>
</kw>
<status status="FAIL" starttime="20200424 18:35:15.126" endtime="20200424 18:35:15.215"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:25.220" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:25.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:25.223" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200424 18:35:25.218" endtime="20200424 18:35:25.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:25.224" level="INFO">scm</msg>
<status status="PASS" starttime="20200424 18:35:25.223" endtime="20200424 18:35:25.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:25.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:25.224" endtime="20200424 18:35:25.226"></status>
</kw>
<msg timestamp="20200424 18:35:25.226" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200424 18:35:25.217" endtime="20200424 18:35:25.226"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:25.229" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:25.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:25.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:35:25.227" endtime="20200424 18:35:25.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:25.246" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:35:25.245" endtime="20200424 18:35:25.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:25.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:25.246" endtime="20200424 18:35:25.247"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:25.227" endtime="20200424 18:35:25.247"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:25.226" endtime="20200424 18:35:25.247"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:25.217" endtime="20200424 18:35:25.247"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:25.216" endtime="20200424 18:35:25.247"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:25.250" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:25.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:25.263" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:25.248" endtime="20200424 18:35:25.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:25.264" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:25 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:25 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:25 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0  12587      0 --:--:-- --:--:-- --:--:-- 12833
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200424 18:35:25.263" endtime="20200424 18:35:25.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:25.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:25.264" endtime="20200424 18:35:25.265"></status>
</kw>
<msg timestamp="20200424 18:35:25.265" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:25.247" endtime="20200424 18:35:25.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:25.265" endtime="20200424 18:35:25.266"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:25.270" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:25.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:25.287" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:25.267" endtime="20200424 18:35:25.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:25.288" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:25 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:25 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:25 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1423
&lt; 
{ [data not shown]

100  1423  100  1423    0     0   149k      0 --:--:-- --:--:-- --:--:--  154k
* Connection #0 to host recon left intact
[{"fileSize":1024,"count":13},{"fileSize":2048,"count":0},{"fileSize":4096,"count":0},{"fileSize":8192,"count":0},{"fileSize":16384,"count":125},{"fileSize":32768,"count":7},{"fileSize":65536,"count":0},{"fileSize":131072,"count":0},{"fileSize":262144,"count":0},{"fileSize":524288,"count":0},{"fileSize":1048576,"count":0},{"fileSize":2097152,"count":0},{"fileSize":4194304,"count":0},{"fileSize":8388608,"count":4},{"fileSize":16777216,"count":2},{"fileSize":33554432,"count":0},{"fileSize":67108864,"count":0},{"fileSize":134217728,"count":0},{"fileSize":268435456,"count":0},{"fileSize":536870912,"count":0},{"fileSize":1073741824,"count":0},{"fileSize":2147483648,"count":0},{"fileSize":4294967296,"count":0},{"fileSize":8589934592,"count":0},{"fileSize":17179869184,"count":0},{"fileSize":34359738368,"count":0},{"fileSize":68719476736,"count":0},{"fileSize":137438953472,"count":0},{"fileSize":274877906944,"count":0},{"fileSize":549755813888,"count":0},{"fileSize":1099511627776,"count":0},{"fileSize":2199023255552,"count":0},{"fileSize":4398046511104,"count":0},{"fileSize":8796093022208,"count":0},{"fileSize":17592186044416,"count":0},{"fileSize":35184372088832,"count":0},{"fileSize":70368744177664,"count":0},{"fileSize":140737488355328,"count":0},{"fileSize":281474976710656,"count":0},{"fileSize":562949953421312,"count":0},{"fileSize":1125899906842624,"count":0},{"fileSize":9223372036854775807,"count":0}]</msg>
<status status="PASS" starttime="20200424 18:35:25.287" endtime="20200424 18:35:25.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:25.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:25.288" endtime="20200424 18:35:25.289"></status>
</kw>
<msg timestamp="20200424 18:35:25.289" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:25.266" endtime="20200424 18:35:25.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200424 18:35:25.290" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:25 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:25 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:25 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1423
&lt; 
{ [data not shown]

100  1423  100  1423    0     0   149k      0 --:--:-- --:--:-- --:--:--  154k
* Connection #0 to host recon left intact
[{"fileSize":1024,"count":13},{"fileSize":2048,"count":0},{"fileSize":4096,"count":0},{"fileSize":8192,"count":0},{"fileSize":16384,"count":125},{"fileSize":32768,"count":7},{"fileSize":65536,"count":0},{"fileSize":131072,"count":0},{"fileSize":262144,"count":0},{"fileSize":524288,"count":0},{"fileSize":1048576,"count":0},{"fileSize":2097152,"count":0},{"fileSize":4194304,"count":0},{"fileSize":8388608,"count":4},{"fileSize":16777216,"count":2},{"fileSize":33554432,"count":0},{"fileSize":67108864,"count":0},{"fileSize":134217728,"count":0},{"fileSize":268435456,"count":0},{"fileSize":536870912,"count":0},{"fileSize":1073741824,"count":0},{"fileSize":2147483648,"count":0},{"fileSize":4294967296,"count":0},{"fileSize":8589934592,"count":0},{"fileSize":17179869184,"count":0},{"fileSize":34359738368,"count":0},{"fileSize":68719476736,"count":0},{"fileSize":137438953472,"count":0},{"fileSize":274877906944,"count":0},{"fileSize":549755813888,"count":0},{"fileSize":1099511627776,"count":0},{"fileSize":2199023255552,"count":0},{"fileSize":4398046511104,"count":0},{"fileSize":8796093022208,"count":0},{"fileSize":17592186044416,"count":0},{"fileSize":35184372088832,"count":0},{"fileSize":70368744177664,"count":0},{"fileSize":140737488355328,"count":0},{"fileSize":281474976710656,"count":0},{"fileSize":562949953421312,"count":0},{"fileSize":1125899906842624,"count":0},{"fileSize":9223372036854775807,"count":0}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200424 18:35:25.289" endtime="20200424 18:35:25.290"></status>
</kw>
<status status="FAIL" starttime="20200424 18:35:25.215" endtime="20200424 18:35:25.290"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:35.300" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:35.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:35.301" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200424 18:35:35.293" endtime="20200424 18:35:35.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:35.302" level="INFO">scm</msg>
<status status="PASS" starttime="20200424 18:35:35.301" endtime="20200424 18:35:35.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:35.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.302" endtime="20200424 18:35:35.302"></status>
</kw>
<msg timestamp="20200424 18:35:35.303" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200424 18:35:35.293" endtime="20200424 18:35:35.303"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:35.306" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:35.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:35.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:35:35.304" endtime="20200424 18:35:35.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:35.319" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:35:35.318" endtime="20200424 18:35:35.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:35.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.319" endtime="20200424 18:35:35.320"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:35.303" endtime="20200424 18:35:35.321"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:35.303" endtime="20200424 18:35:35.321"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:35.292" endtime="20200424 18:35:35.321"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:35.292" endtime="20200424 18:35:35.321"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:35.325" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:35.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:35.344" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.322" endtime="20200424 18:35:35.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:35.345" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  19149      0 --:--:-- --:--:-- --:--:-- 20222
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":6},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20200424 18:35:35.344" endtime="20200424 18:35:35.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:35.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.345" endtime="20200424 18:35:35.346"></status>
</kw>
<msg timestamp="20200424 18:35:35.346" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.321" endtime="20200424 18:35:35.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.346" endtime="20200424 18:35:35.347"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:35.350" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:35.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:35.362" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.348" endtime="20200424 18:35:35.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:35.364" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1424
&lt; 
{ [data not shown]

100  1424  100  1424    0     0   251k      0 --:--:-- --:--:-- --:--:--  278k
* Connection #0 to host recon left intact
[{"fileSize":1024,"count":13},{"fileSize":2048,"count":10},{"fileSize":4096,"count":0},{"fileSize":8192,"count":0},{"fileSize":16384,"count":125},{"fileSize":32768,"count":7},{"fileSize":65536,"count":0},{"fileSize":131072,"count":0},{"fileSize":262144,"count":0},{"fileSize":524288,"count":0},{"fileSize":1048576,"count":0},{"fileSize":2097152,"count":0},{"fileSize":4194304,"count":0},{"fileSize":8388608,"count":4},{"fileSize":16777216,"count":2},{"fileSize":33554432,"count":0},{"fileSize":67108864,"count":0},{"fileSize":134217728,"count":0},{"fileSize":268435456,"count":0},{"fileSize":536870912,"count":0},{"fileSize":1073741824,"count":0},{"fileSize":2147483648,"count":0},{"fileSize":4294967296,"count":0},{"fileSize":8589934592,"count":0},{"fileSize":17179869184,"count":0},{"fileSize":34359738368,"count":0},{"fileSize":68719476736,"count":0},{"fileSize":137438953472,"count":0},{"fileSize":274877906944,"count":0},{"fileSize":549755813888,"count":0},{"fileSize":1099511627776,"count":0},{"fileSize":2199023255552,"count":0},{"fileSize":4398046511104,"count":0},{"fileSize":8796093022208,"count":0},{"fileSize":17592186044416,"count":0},{"fileSize":35184372088832,"count":0},{"fileSize":70368744177664,"count":0},{"fileSize":140737488355328,"count":0},{"fileSize":281474976710656,"count":0},{"fileSize":562949953421312,"count":0},{"fileSize":1125899906842624,"count":0},{"fileSize":9223372036854775807,"count":0}]</msg>
<status status="PASS" starttime="20200424 18:35:35.363" endtime="20200424 18:35:35.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:35.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.364" endtime="20200424 18:35:35.365"></status>
</kw>
<msg timestamp="20200424 18:35:35.365" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.347" endtime="20200424 18:35:35.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.365" endtime="20200424 18:35:35.365"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:35.291" endtime="20200424 18:35:35.366"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:04.857" endtime="20200424 18:35:35.366"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200424 18:35:04.855" endtime="20200424 18:35:35.366" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:35.371" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:35.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:35.396" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.368" endtime="20200424 18:35:35.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:35.398" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1275
&lt; 
{ [data not shown]

100  1275  100  1275    0     0  63218      0 --:--:-- --:--:-- --:--:-- 63750
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1587753331012,"storageReport":{"capacity":89311358976,"used":8192,"remaining":7509618688},"pipelines":[{"pipelineID":"c17a31ef-5aee-488b-8b6d-24be0ae9c663","replicationType":"RATIS","replicationFactor":3},{"pipelineID":"4741205a-24cb-49d4-a956-4bf25bf3505f","replicationType":"RATIS","replicationFactor":1}],"containers":2},{"hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1587753331079,"storageReport":{"capacity":89311358976,"used":8192,"remaining":7509618688},"pipelines":[{"pipelineID":"c17a31ef-5aee-488b-8b6d-24be0ae9c663","replicationType":"RATIS","replicationFactor":3},{"pipelineID":"ba10396d-4f2e-4adf-a856-add34168197f","replicationType":"RATIS","replicationFactor":1}],"containers":2},{"hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1587753331037,"storageReport":{"capacity":89311358976,"used":8192,"remaining":7509618688},"pipelines":[{"pipelineID":"c17a31ef-5aee-488b-8b6d-24be0ae9c663","replicationType":"RATIS","replicationFactor":3},{"pipelineID":"48a166e8-d2be-4a24-a56d-6fcd6c9ee1f1","replicationType":"RATIS","replicationFactor":1}],"containers":2}]}</msg>
<status status="PASS" starttime="20200424 18:35:35.397" endtime="20200424 18:35:35.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:35.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.398" endtime="20200424 18:35:35.399"></status>
</kw>
<msg timestamp="20200424 18:35:35.399" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.368" endtime="20200424 18:35:35.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.399" endtime="20200424 18:35:35.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.400" endtime="20200424 18:35:35.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.400" endtime="20200424 18:35:35.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.401" endtime="20200424 18:35:35.401"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:35.404" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:35.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:35.429" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.402" endtime="20200424 18:35:35.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:35.430" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1364
&lt; 
{ [data not shown]

100  1364  100  1364    0     0  79714      0 --:--:-- --:--:-- --:--:-- 85250
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"c17a31ef-5aee-488b-8b6d-24be0ae9c663","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":858070,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"4741205a-24cb-49d4-a956-4bf25bf3505f","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":858294,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"48a166e8-d2be-4a24-a56d-6fcd6c9ee1f1","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":858135,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"ba10396d-4f2e-4adf-a856-add34168197f","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":858098,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200424 18:35:35.429" endtime="20200424 18:35:35.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:35.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.430" endtime="20200424 18:35:35.431"></status>
</kw>
<msg timestamp="20200424 18:35:35.431" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.401" endtime="20200424 18:35:35.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.432" endtime="20200424 18:35:35.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.432" endtime="20200424 18:35:35.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.433" endtime="20200424 18:35:35.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.433" endtime="20200424 18:35:35.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.434" endtime="20200424 18:35:35.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.434" endtime="20200424 18:35:35.435"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:35.438" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:35.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:35.455" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.436" endtime="20200424 18:35:35.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:35.456" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  19535      0 --:--:-- --:--:-- --:--:-- 20666
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":22528856064},"containers":4,"volumes":26,"buckets":51,"keys":168}</msg>
<status status="PASS" starttime="20200424 18:35:35.456" endtime="20200424 18:35:35.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:35.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.457" endtime="20200424 18:35:35.457"></status>
</kw>
<msg timestamp="20200424 18:35:35.458" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.435" endtime="20200424 18:35:35.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.458" endtime="20200424 18:35:35.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.460" endtime="20200424 18:35:35.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.461" endtime="20200424 18:35:35.462"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:35.466" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:35.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:35.486" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.462" endtime="20200424 18:35:35.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:35.487" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  33068      0 --:--:-- --:--:-- --:--:-- 34923
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1587752500084,"lastReportTimestamp":1587753331041},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1587752500375,"lastReportTimestamp":1587753331083},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1587752500025,"lastReportTimestamp":1587753301208}]</msg>
<status status="PASS" starttime="20200424 18:35:35.486" endtime="20200424 18:35:35.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:35.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.487" endtime="20200424 18:35:35.488"></status>
</kw>
<msg timestamp="20200424 18:35:35.488" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.462" endtime="20200424 18:35:35.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.488" endtime="20200424 18:35:35.489"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200424 18:35:35.367" endtime="20200424 18:35:35.489" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:35.494" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:35.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:35.496" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200424 18:35:35.492" endtime="20200424 18:35:35.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:35.497" level="INFO">scm</msg>
<status status="PASS" starttime="20200424 18:35:35.497" endtime="20200424 18:35:35.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:35.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.498" endtime="20200424 18:35:35.498"></status>
</kw>
<msg timestamp="20200424 18:35:35.498" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200424 18:35:35.491" endtime="20200424 18:35:35.498"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:35.502" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:35.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:35.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:35:35.500" endtime="20200424 18:35:35.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:35.514" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:35:35.514" endtime="20200424 18:35:35.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:35.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.515" endtime="20200424 18:35:35.515"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:35.499" endtime="20200424 18:35:35.515"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:35.499" endtime="20200424 18:35:35.516"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:35.491" endtime="20200424 18:35:35.516"></status>
</kw>
<status status="PASS" starttime="20200424 18:35:35.490" endtime="20200424 18:35:35.516"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:35:35.520" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:35:35.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:35:35.538" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.517" endtime="20200424 18:35:35.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:35:35.539" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.25.0.7...
* Connected to recon (172.25.0.7) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Date: Fri, 24 Apr 2020 18:35:35 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Fri, 24 Apr 2020 17:45:00 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2200
&lt; 
{ [data not shown]

100  2200  100  2200    0     0   173k      0 --:--:-- --:--:-- --:--:--  179k
* Connection #0 to host recon left intact
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.4fb42e85.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.fa916a59.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(l){function e(e){for(var r,t,n=e[0],o=e[1],u=e[2],f=0,i=[];f&lt;n.length;f++)t=n[f],p[t]&amp;&amp;i.push(p[t][0]),p[t]=0;for(r in o)Object.prototype.hasOwnProperty.call(o,r)&amp;&amp;(l[r]=o[r]);for(s&amp;&amp;s(e);i.length;)i.shift()();return c.push.apply(c,u||[]),a()}function a(){for(var e,r=0;r&lt;c.length;r++){for(var t=c[r],n=!0,o=1;o&lt;t.length;o++){var u=t[o];0!==p[u]&amp;&amp;(n=!1)}n&amp;&amp;(c.splice(r--,1),e=f(f.s=t[0]))}return e}var t={},p={1:0},c=[];function f(e){if(t[e])return t[e].exports;var r=t[e]={i:e,l:!1,exports:{}};return l[e].call(r.exports,r,r.exports,f),r.l=!0,r.exports}f.m=l,f.c=t,f.d=function(e,r,t){f.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},f.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},f.t=function(r,e){if(1&amp;e&amp;&amp;(r=f(r)),8&amp;e)return r;if(4&amp;e&amp;&amp;"object"==typeof r&amp;&amp;r&amp;&amp;r.__esModule)return r;var t=Object.create(null);if(f.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:r}),2&amp;e&amp;&amp;"string"!=typeof r)for(var n in r)f.d(t,n,function(e){return r[e]}.bind(null,n));return t},f.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return f.d(r,"a",r),r},f.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},f.p="/";var r=window.webpackJsonp=window.webpackJsonp||[],n=r.push.bind(r);r.push=e,r=r.slice();for(var o=0;o&lt;r.length;o++)e(r[o]);var s=n;a()}([])&lt;/script&gt;&lt;script src="/static/js/2.1d0a8e09.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.718c46e1.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.538" endtime="20200424 18:35:35.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:35:35.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:35:35.539" endtime="20200424 18:35:35.540"></status>
</kw>
<msg timestamp="20200424 18:35:35.540" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200424 18:35:35.516" endtime="20200424 18:35:35.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200424 18:35:35.540" endtime="20200424 18:35:35.541"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200424 18:35:35.490" endtime="20200424 18:35:35.541" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200424 18:34:56.753" endtime="20200424 18:35:35.543"></status>
</suite>
<status status="PASS" starttime="20200424 18:34:56.719" endtime="20200424 18:35:35.546"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
