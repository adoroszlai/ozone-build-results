<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200424 18:03:31.160" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200424 18:03:31.223" endtime="20200424 18:03:31.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:03:31.229" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:03:31.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:03:31.319" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 24 Apr 2020 18:03:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 24 Apr 2020 17:40:50 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200424 18:03:31.224" endtime="20200424 18:03:31.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:03:31.321" level="INFO">HTTP/1.1 200 OK
Date: Fri, 24 Apr 2020 18:03:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 24 Apr 2020 17:40:50 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200424 18:03:31.320" endtime="20200424 18:03:31.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:03:31.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:03:31.321" endtime="20200424 18:03:31.322"></status>
</kw>
<msg timestamp="20200424 18:03:31.322" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 24 Apr 2020 18:03:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 24 Apr 2020 17:40:50 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200424 18:03:31.223" endtime="20200424 18:03:31.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200424 18:03:31.322" endtime="20200424 18:03:31.323"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200424 18:03:31.222" endtime="20200424 18:03:31.323" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200424 18:03:31.325" endtime="20200424 18:03:31.326"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:03:31.330" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:33.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:04:33.194" level="INFO">${output} = 2020-04-24 18:03:32,536 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:03:32,727 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200424 18:03:31.326" endtime="20200424 18:04:33.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:33.196" level="INFO">2020-04-24 18:03:32,536 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:03:32,727 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-24 18:03:32,727 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-24 18:03:34,146 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-24 18:03:34,147 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-24 18:03:34,148 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-24 18:03:34,148 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-24 18:03:34,148 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-24 18:03:34,148 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-24 18:03:34,148 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-24 18:03:34,149 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-24 18:03:34,151 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-24 18:03:34,160 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-24 18:03:34,186 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-73239, with hadoop as owner.
2020-04-24 18:03:34,338 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-18404, with hadoop as owner.
2020-04-24 18:03:34,349 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-86260, with hadoop as owner.
2020-04-24 18:03:34,357 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-85923, with hadoop as owner.
2020-04-24 18:03:34,365 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-74316, with hadoop as owner.
2020-04-24 18:03:34,374 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-73239/bucket-0-50229, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,400 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-18404/bucket-0-11338, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,409 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-86260/bucket-0-51854, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,422 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85923/bucket-0-40156, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,428 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74316/bucket-0-99459, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,434 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-73239/bucket-1-42404, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,444 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-18404/bucket-1-43528, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,449 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-86260/bucket-1-85203, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,455 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85923/bucket-1-09868, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,461 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74316/bucket-1-93451, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,466 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-73239/bucket-2-15395, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,472 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-18404/bucket-2-29348, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,477 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-86260/bucket-2-63911, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,482 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85923/bucket-2-69914, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,491 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74316/bucket-2-46847, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,499 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-73239/bucket-3-56434, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,505 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-18404/bucket-3-15531, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,510 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-86260/bucket-3-40126, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,516 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85923/bucket-3-82853, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,521 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74316/bucket-3-43475, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,532 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-73239/bucket-4-68840, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,537 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-18404/bucket-4-62180, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,543 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-86260/bucket-4-00874, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,550 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85923/bucket-4-79162, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:34,558 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74316/bucket-4-17821, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-24 18:03:35,165 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-24 18:03:35,234 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-24 18:03:36,167 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-24 18:03:37,168 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-24 18:03:38,174 [Thread-8] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-04-24 18:03:39,174 [Thread-8] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-04-24 18:03:40,175 [Thread-8] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-04-24 18:03:41,175 [Thread-8] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-04-24 18:03:42,176 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-24 18:03:43,176 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-24 18:03:44,177 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-24 18:03:45,177 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-04-24 18:03:46,178 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-04-24 18:03:47,178 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-04-24 18:03:48,179 [Thread-8] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-04-24 18:03:49,180 [Thread-8] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-04-24 18:03:50,180 [Thread-8] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-04-24 18:03:51,181 [Thread-8] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-04-24 18:03:52,182 [Thread-8] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-04-24 18:03:53,182 [Thread-8] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-04-24 18:03:54,183 [Thread-8] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-04-24 18:03:55,183 [Thread-8] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-04-24 18:03:56,184 [Thread-8] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-04-24 18:03:57,184 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-04-24 18:03:58,185 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-04-24 18:03:59,185 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-04-24 18:04:00,191 [Thread-8] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-04-24 18:04:01,191 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-24 18:04:02,192 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-24 18:04:03,192 [Thread-8] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-04-24 18:04:04,193 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-04-24 18:04:05,193 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-04-24 18:04:06,193 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-04-24 18:04:07,194 [Thread-8] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-04-24 18:04:08,195 [Thread-8] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-04-24 18:04:09,195 [Thread-8] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-04-24 18:04:10,196 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-04-24 18:04:11,197 [Thread-8] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-04-24 18:04:12,197 [Thread-8] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-04-24 18:04:13,198 [Thread-8] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-04-24 18:04:14,198 [Thread-8] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-04-24 18:04:15,199 [Thread-8] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-04-24 18:04:16,199 [Thread-8] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-04-24 18:04:17,200 [Thread-8] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-04-24 18:04:18,201 [Thread-8] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-04-24 18:04:19,202 [Thread-8] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-04-24 18:04:20,202 [Thread-8] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-04-24 18:04:21,203 [Thread-8] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-04-24 18:04:22,203 [Thread-8] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-04-24 18:04:23,204 [Thread-8] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-04-24 18:04:24,204 [Thread-8] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-04-24 18:04:25,204 [Thread-8] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-04-24 18:04:26,205 [Thread-8] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-04-24 18:04:27,206 [Thread-8] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-04-24 18:04:28,206 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,181
Average Time spent in bucket creation: 00:00:00,120
Average Time spent in key creation: 00:00:01,931
Average Time spent in key write: 00:00:00,843
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:59,791
***************************************************</msg>
<status status="PASS" starttime="20200424 18:04:33.194" endtime="20200424 18:04:33.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:04:33.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:04:33.196" endtime="20200424 18:04:33.198"></status>
</kw>
<msg timestamp="20200424 18:04:33.198" level="INFO">${result} = 2020-04-24 18:03:32,536 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-24 18:03:32,727 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200424 18:03:31.326" endtime="20200424 18:04:33.198"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200424 18:04:33.199" endtime="20200424 18:04:33.199"></status>
</kw>
<status status="PASS" starttime="20200424 18:04:33.198" endtime="20200424 18:04:33.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200424 18:04:33.200" endtime="20200424 18:04:33.200"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200424 18:03:31.324" endtime="20200424 18:04:33.200" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200424 18:03:31.192" endtime="20200424 18:04:33.201"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200424 18:04:33.212" level="INFO">${random} = 48755</msg>
<status status="PASS" starttime="20200424 18:04:33.211" endtime="20200424 18:04:33.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200424 18:04:33.213" level="INFO">${prefix} = 48755</msg>
<status status="PASS" starttime="20200424 18:04:33.212" endtime="20200424 18:04:33.213"></status>
</kw>
<status status="PASS" starttime="20200424 18:04:33.211" endtime="20200424 18:04:33.213"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200424 18:04:33.214" endtime="20200424 18:04:33.214"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:33.217" level="INFO">Running command 'ozone sh volume info o3://om:9862/48755-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:35.251" level="INFO">${rc} = 255</msg>
<msg timestamp="20200424 18:04:35.251" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48755-rpcwoport is not found</msg>
<status status="PASS" starttime="20200424 18:04:33.215" endtime="20200424 18:04:35.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:35.252" level="INFO">VOLUME_NOT_FOUND Volume 48755-rpcwoport is not found</msg>
<status status="PASS" starttime="20200424 18:04:35.251" endtime="20200424 18:04:35.252"></status>
</kw>
<msg timestamp="20200424 18:04:35.253" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48755-rpcwoport is not found</msg>
<status status="PASS" starttime="20200424 18:04:33.215" endtime="20200424 18:04:35.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200424 18:04:35.253" endtime="20200424 18:04:35.253"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:35.257" level="INFO">Running command 'ozone sh volume create o3://om:9862/48755-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:37.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:04:37.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:04:35.254" endtime="20200424 18:04:37.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:37.440" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:04:37.439" endtime="20200424 18:04:37.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:04:37.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:04:37.440" endtime="20200424 18:04:37.441"></status>
</kw>
<msg timestamp="20200424 18:04:37.441" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200424 18:04:35.253" endtime="20200424 18:04:37.441"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200424 18:04:37.441" endtime="20200424 18:04:37.442"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:37.445" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="48755-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:39.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:04:39.779" level="INFO">${output} = {
  "metadata": {},
  "name": "48755-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:04:37.419Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200424 18:04:37.443" endtime="20200424 18:04:39.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:39.780" level="INFO">{
  "metadata": {},
  "name": "48755-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:04:37.419Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200424 18:04:39.779" endtime="20200424 18:04:39.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:04:39.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:04:39.780" endtime="20200424 18:04:39.781"></status>
</kw>
<msg timestamp="20200424 18:04:39.781" level="INFO">${result} = {
  "metadata": {},
  "name": "48755-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:04:37.419Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200424 18:04:37.442" endtime="20200424 18:04:39.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200424 18:04:39.781" endtime="20200424 18:04:39.782"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:39.786" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48755-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:41.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:04:41.842" level="INFO">${output} = {
  "metadata": {},
  "name": "48755-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:04:37.419Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200424 18:04:39.783" endtime="20200424 18:04:41.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:41.843" level="INFO">{
  "metadata": {},
  "name": "48755-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:04:37.419Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200424 18:04:41.842" endtime="20200424 18:04:41.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:04:41.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:04:41.843" endtime="20200424 18:04:41.844"></status>
</kw>
<msg timestamp="20200424 18:04:41.844" level="INFO">${result} = {
  "metadata": {},
  "name": "48755-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:04:37.419Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200424 18:04:39.782" endtime="20200424 18:04:41.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200424 18:04:41.845" endtime="20200424 18:04:41.845"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:41.849" level="INFO">Running command 'ozone sh volume update o3://om:9862/48755-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:43.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:04:43.983" level="INFO">${output} = {
  "metadata" : { },
  "name" : "48755-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-24T18:04:37.419Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200424 18:04:41.846" endtime="20200424 18:04:43.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:43.985" level="INFO">{
  "metadata" : { },
  "name" : "48755-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-24T18:04:37.419Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200424 18:04:43.984" endtime="20200424 18:04:43.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:04:43.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:04:43.985" endtime="20200424 18:04:43.986"></status>
</kw>
<status status="PASS" starttime="20200424 18:04:41.845" endtime="20200424 18:04:43.986"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:43.989" level="INFO">Running command 'ozone sh volume info o3://om:9862/48755-rpcwoport | jq -r '. | select(.name=="48755-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:46.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:04:46.384" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200424 18:04:43.987" endtime="20200424 18:04:46.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:46.385" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200424 18:04:46.384" endtime="20200424 18:04:46.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:04:46.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:04:46.385" endtime="20200424 18:04:46.386"></status>
</kw>
<msg timestamp="20200424 18:04:46.386" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200424 18:04:43.986" endtime="20200424 18:04:46.386"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200424 18:04:46.386" endtime="20200424 18:04:46.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:46.391" level="INFO">Running command 'ozone sh bucket create o3://om:9862/48755-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:48.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:04:48.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:04:46.388" endtime="20200424 18:04:48.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:48.447" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:04:48.447" endtime="20200424 18:04:48.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:04:48.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:04:48.448" endtime="20200424 18:04:48.448"></status>
</kw>
<status status="PASS" starttime="20200424 18:04:46.387" endtime="20200424 18:04:48.448"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:48.452" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48755-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:50.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:04:50.725" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200424 18:04:48.449" endtime="20200424 18:04:50.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:50.727" level="INFO">DISK</msg>
<status status="PASS" starttime="20200424 18:04:50.726" endtime="20200424 18:04:50.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:04:50.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:04:50.727" endtime="20200424 18:04:50.728"></status>
</kw>
<msg timestamp="20200424 18:04:50.728" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200424 18:04:48.449" endtime="20200424 18:04:50.728"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200424 18:04:50.728" endtime="20200424 18:04:50.729"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:50.733" level="INFO">Running command 'ozone sh bucket list o3://om:9862/48755-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:53.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:04:53.063" level="INFO">${output} = 48755-rpcwoport</msg>
<status status="PASS" starttime="20200424 18:04:50.730" endtime="20200424 18:04:53.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:53.064" level="INFO">48755-rpcwoport</msg>
<status status="PASS" starttime="20200424 18:04:53.064" endtime="20200424 18:04:53.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:04:53.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:04:53.065" endtime="20200424 18:04:53.065"></status>
</kw>
<msg timestamp="20200424 18:04:53.066" level="INFO">${result} = 48755-rpcwoport</msg>
<status status="PASS" starttime="20200424 18:04:50.729" endtime="20200424 18:04:53.066"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200424 18:04:53.066" endtime="20200424 18:04:53.066"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:53.072" level="INFO">Running command 'ozone sh key put o3://om:9862/48755-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:57.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:04:57.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:04:53.068" endtime="20200424 18:04:57.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:57.148" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:04:57.147" endtime="20200424 18:04:57.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:04:57.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:04:57.148" endtime="20200424 18:04:57.149"></status>
</kw>
<status status="PASS" starttime="20200424 18:04:53.068" endtime="20200424 18:04:57.149"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:57.152" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:04:57.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:04:57.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:04:57.150" endtime="20200424 18:04:57.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:04:57.156" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:04:57.155" endtime="20200424 18:04:57.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:04:57.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:04:57.156" endtime="20200424 18:04:57.156"></status>
</kw>
<status status="PASS" starttime="20200424 18:04:57.149" endtime="20200424 18:04:57.157"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:04:57.160" level="INFO">Running command 'ozone sh key get o3://om:9862/48755-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:00.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:00.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:04:57.157" endtime="20200424 18:05:00.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:00.905" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:05:00.904" endtime="20200424 18:05:00.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:00.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:00.905" endtime="20200424 18:05:00.906"></status>
</kw>
<status status="PASS" starttime="20200424 18:04:57.157" endtime="20200424 18:05:00.906"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:00.910" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:00.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:00.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:05:00.906" endtime="20200424 18:05:00.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:00.914" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:05:00.913" endtime="20200424 18:05:00.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:00.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:00.915" endtime="20200424 18:05:00.915"></status>
</kw>
<status status="PASS" starttime="20200424 18:05:00.906" endtime="20200424 18:05:00.915"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:00.920" level="INFO">Running command 'ozone sh key get o3://om:9862/48755-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:02.911" level="INFO">${rc} = 255</msg>
<msg timestamp="20200424 18:05:02.911" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200424 18:05:00.917" endtime="20200424 18:05:02.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:02.912" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200424 18:05:02.912" endtime="20200424 18:05:02.912"></status>
</kw>
<msg timestamp="20200424 18:05:02.913" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200424 18:05:00.916" endtime="20200424 18:05:02.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:02.913" endtime="20200424 18:05:02.914"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:02.918" level="INFO">Running command 'ozone sh key get --force o3://om:9862/48755-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:06.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:06.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:05:02.914" endtime="20200424 18:05:06.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:06.564" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:05:06.563" endtime="20200424 18:05:06.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:06.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:06.565" endtime="20200424 18:05:06.565"></status>
</kw>
<msg timestamp="20200424 18:05:06.566" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200424 18:05:02.914" endtime="20200424 18:05:06.566"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:06.566" endtime="20200424 18:05:06.566"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:06.572" level="INFO">Running command 'ozone sh key info o3://om:9862/48755-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:08.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:08.949" level="INFO">${output} = {
  "volumeName": "48755-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-24T18:04:55.101Z",
  "modificationTime": "2020-04-24T18:04:56.765Z",
  "re...</msg>
<status status="PASS" starttime="20200424 18:05:06.567" endtime="20200424 18:05:08.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:08.950" level="INFO">{
  "volumeName": "48755-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-24T18:04:55.101Z",
  "modificationTime": "2020-04-24T18:04:56.765Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104054881982873730,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200424 18:05:08.949" endtime="20200424 18:05:08.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:08.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:08.950" endtime="20200424 18:05:08.951"></status>
</kw>
<msg timestamp="20200424 18:05:08.951" level="INFO">${result} = {
  "volumeName": "48755-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-24T18:04:55.101Z",
  "modificationTime": "2020-04-24T18:04:56.765Z",
  "re...</msg>
<status status="PASS" starttime="20200424 18:05:06.567" endtime="20200424 18:05:08.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:08.951" endtime="20200424 18:05:08.952"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:08.957" level="INFO">Running command 'ozone debug chunkinfo o3://om:9862/48755-rpcwoport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:12.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:12.693" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/d64abc13-4f33-40b1-9298-86ab45f4f03e/current/containerDir0/1/chunks/104054881982873725_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.22.0...</msg>
<status status="PASS" starttime="20200424 18:05:08.953" endtime="20200424 18:05:12.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:12.695" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/d64abc13-4f33-40b1-9298-86ab45f4f03e/current/containerDir0/1/chunks/104054881982873725_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.22.0.7",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.22.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.22.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    }
  ],
  "pipelineID": "168db0f6-ed93-4e7b-8918-173c5e638888"
}</msg>
<status status="PASS" starttime="20200424 18:05:12.694" endtime="20200424 18:05:12.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:12.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:12.695" endtime="20200424 18:05:12.696"></status>
</kw>
<msg timestamp="20200424 18:05:12.696" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/d64abc13-4f33-40b1-9298-86ab45f4f03e/current/containerDir0/1/chunks/104054881982873725_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.22.0...</msg>
<status status="PASS" starttime="20200424 18:05:08.952" endtime="20200424 18:05:12.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:12.696" endtime="20200424 18:05:12.696"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:12.701" level="INFO">Running command 'ozone sh key list o3://om:9862/48755-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:15.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:15.027" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200424 18:05:12.697" endtime="20200424 18:05:15.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:15.028" level="INFO">key1</msg>
<status status="PASS" starttime="20200424 18:05:15.027" endtime="20200424 18:05:15.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:15.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:15.028" endtime="20200424 18:05:15.029"></status>
</kw>
<msg timestamp="20200424 18:05:15.029" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200424 18:05:12.697" endtime="20200424 18:05:15.029"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:15.030" endtime="20200424 18:05:15.030"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:15.034" level="INFO">Running command 'ozone sh key rename o3://om:9862/48755-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:17.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:17.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:05:15.031" endtime="20200424 18:05:17.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:17.074" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:05:17.072" endtime="20200424 18:05:17.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:17.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:17.074" endtime="20200424 18:05:17.074"></status>
</kw>
<status status="PASS" starttime="20200424 18:05:15.030" endtime="20200424 18:05:17.075"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:17.078" level="INFO">Running command 'ozone sh key list o3://om:9862/48755-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:19.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:19.346" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200424 18:05:17.075" endtime="20200424 18:05:19.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:19.347" level="INFO">key2</msg>
<status status="PASS" starttime="20200424 18:05:19.346" endtime="20200424 18:05:19.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:19.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:19.347" endtime="20200424 18:05:19.348"></status>
</kw>
<msg timestamp="20200424 18:05:19.348" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200424 18:05:17.075" endtime="20200424 18:05:19.348"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:19.348" endtime="20200424 18:05:19.349"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:19.353" level="INFO">Running command 'ozone sh key delete o3://om:9862/48755-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:21.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:21.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:05:19.349" endtime="20200424 18:05:21.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:21.316" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:05:21.315" endtime="20200424 18:05:21.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:21.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:21.316" endtime="20200424 18:05:21.317"></status>
</kw>
<status status="PASS" starttime="20200424 18:05:19.349" endtime="20200424 18:05:21.317"></status>
</kw>
<status status="PASS" starttime="20200424 18:04:53.067" endtime="20200424 18:05:21.317"></status>
</kw>
<status status="PASS" starttime="20200424 18:04:53.067" endtime="20200424 18:05:21.317"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:21.322" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/48755-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:23.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:23.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:05:21.318" endtime="20200424 18:05:23.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:23.375" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:05:23.374" endtime="20200424 18:05:23.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:23.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:23.375" endtime="20200424 18:05:23.376"></status>
</kw>
<status status="PASS" starttime="20200424 18:05:21.317" endtime="20200424 18:05:23.376"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:23.380" level="INFO">Running command 'ozone sh volume delete o3://om:9862/48755-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:25.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:25.373" level="INFO">${output} = Volume 48755-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200424 18:05:23.377" endtime="20200424 18:05:25.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:25.374" level="INFO">Volume 48755-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200424 18:05:25.373" endtime="20200424 18:05:25.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:25.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:25.374" endtime="20200424 18:05:25.374"></status>
</kw>
<status status="PASS" starttime="20200424 18:05:23.376" endtime="20200424 18:05:25.375"></status>
</kw>
<status status="PASS" starttime="20200424 18:04:33.214" endtime="20200424 18:05:25.375"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200424 18:04:33.213" endtime="20200424 18:05:25.375" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:25.376" endtime="20200424 18:05:25.377"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:25.382" level="INFO">Running command 'ozone sh volume create o3://om:9862/48755-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:27.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:27.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:05:25.378" endtime="20200424 18:05:27.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:27.477" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:05:27.476" endtime="20200424 18:05:27.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:27.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:27.477" endtime="20200424 18:05:27.478"></status>
</kw>
<status status="PASS" starttime="20200424 18:05:25.377" endtime="20200424 18:05:27.478"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:27.482" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48755-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:29.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:29.720" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:05:27.479" endtime="20200424 18:05:29.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:29.722" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:05:29.720" endtime="20200424 18:05:29.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:29.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:29.722" endtime="20200424 18:05:29.722"></status>
</kw>
<msg timestamp="20200424 18:05:29.723" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:05:27.478" endtime="20200424 18:05:29.723"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:29.723" endtime="20200424 18:05:29.724"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:29.728" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/48755-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:31.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:31.702" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200424 18:05:29.725" endtime="20200424 18:05:31.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:31.703" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200424 18:05:31.703" endtime="20200424 18:05:31.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:31.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:31.704" endtime="20200424 18:05:31.704"></status>
</kw>
<msg timestamp="20200424 18:05:31.705" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200424 18:05:29.724" endtime="20200424 18:05:31.705"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:31.709" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48755-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:34.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:34.043" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:05:31.705" endtime="20200424 18:05:34.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:34.045" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:05:34.044" endtime="20200424 18:05:34.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:34.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:34.045" endtime="20200424 18:05:34.046"></status>
</kw>
<msg timestamp="20200424 18:05:34.046" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:05:31.705" endtime="20200424 18:05:34.046"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:34.046" endtime="20200424 18:05:34.047"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:34.051" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/48755-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:36.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:36.124" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200424 18:05:34.048" endtime="20200424 18:05:36.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:36.126" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200424 18:05:36.125" endtime="20200424 18:05:36.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:36.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:36.126" endtime="20200424 18:05:36.126"></status>
</kw>
<msg timestamp="20200424 18:05:36.127" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200424 18:05:34.047" endtime="20200424 18:05:36.127"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:36.130" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48755-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:38.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:38.432" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:05:36.127" endtime="20200424 18:05:38.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:38.434" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:05:38.433" endtime="20200424 18:05:38.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:38.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:38.434" endtime="20200424 18:05:38.434"></status>
</kw>
<msg timestamp="20200424 18:05:38.435" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:05:36.127" endtime="20200424 18:05:38.435"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:38.435" endtime="20200424 18:05:38.436"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:38.441" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/48755-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:40.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:40.381" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200424 18:05:38.437" endtime="20200424 18:05:40.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:40.382" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200424 18:05:40.381" endtime="20200424 18:05:40.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:40.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:40.383" endtime="20200424 18:05:40.383"></status>
</kw>
<msg timestamp="20200424 18:05:40.383" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200424 18:05:38.436" endtime="20200424 18:05:40.383"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:40.386" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48755-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:42.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:42.580" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200424 18:05:40.384" endtime="20200424 18:05:42.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:42.582" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:05:42.581" endtime="20200424 18:05:42.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:42.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:42.582" endtime="20200424 18:05:42.582"></status>
</kw>
<msg timestamp="20200424 18:05:42.582" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200424 18:05:40.384" endtime="20200424 18:05:42.583"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:42.583" endtime="20200424 18:05:42.583"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:42.583" endtime="20200424 18:05:42.584"></status>
</kw>
<status status="PASS" starttime="20200424 18:05:25.377" endtime="20200424 18:05:42.584"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200424 18:05:25.376" endtime="20200424 18:05:42.585" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:42.587" endtime="20200424 18:05:42.587"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:42.592" level="INFO">Running command 'ozone sh bucket create o3://om:9862/48755-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:44.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:44.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:05:42.589" endtime="20200424 18:05:44.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:44.588" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:05:44.587" endtime="20200424 18:05:44.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:44.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:44.588" endtime="20200424 18:05:44.589"></status>
</kw>
<status status="PASS" starttime="20200424 18:05:42.588" endtime="20200424 18:05:44.589"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:44.593" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48755-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:46.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:46.830" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:05:44.590" endtime="20200424 18:05:46.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:46.832" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:05:46.831" endtime="20200424 18:05:46.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:46.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:46.832" endtime="20200424 18:05:46.832"></status>
</kw>
<msg timestamp="20200424 18:05:46.833" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:05:44.589" endtime="20200424 18:05:46.833"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:46.833" endtime="20200424 18:05:46.833"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:46.837" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/48755-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:48.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:48.847" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200424 18:05:46.834" endtime="20200424 18:05:48.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:48.848" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200424 18:05:48.847" endtime="20200424 18:05:48.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:48.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:48.848" endtime="20200424 18:05:48.849"></status>
</kw>
<msg timestamp="20200424 18:05:48.849" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200424 18:05:46.834" endtime="20200424 18:05:48.849"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:48.852" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48755-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:50.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:50.977" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:05:48.850" endtime="20200424 18:05:50.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:50.978" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:05:50.978" endtime="20200424 18:05:50.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:50.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:50.979" endtime="20200424 18:05:50.979"></status>
</kw>
<msg timestamp="20200424 18:05:50.980" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:05:48.849" endtime="20200424 18:05:50.980"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:50.980" endtime="20200424 18:05:50.981"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:50.984" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/48755-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:52.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:52.986" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200424 18:05:50.982" endtime="20200424 18:05:52.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:52.987" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200424 18:05:52.987" endtime="20200424 18:05:52.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:52.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:52.988" endtime="20200424 18:05:52.989"></status>
</kw>
<msg timestamp="20200424 18:05:52.989" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200424 18:05:50.981" endtime="20200424 18:05:52.989"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:52.992" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48755-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:55.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:55.204" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:05:52.990" endtime="20200424 18:05:55.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:55.205" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:05:55.204" endtime="20200424 18:05:55.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:55.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:55.206" endtime="20200424 18:05:55.206"></status>
</kw>
<msg timestamp="20200424 18:05:55.206" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:05:52.989" endtime="20200424 18:05:55.206"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:55.207" endtime="20200424 18:05:55.208"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:55.211" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/48755-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:57.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:57.182" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200424 18:05:55.209" endtime="20200424 18:05:57.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:57.183" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200424 18:05:57.183" endtime="20200424 18:05:57.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:57.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:57.184" endtime="20200424 18:05:57.184"></status>
</kw>
<msg timestamp="20200424 18:05:57.185" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200424 18:05:55.208" endtime="20200424 18:05:57.185"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:57.189" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48755-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:05:59.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:05:59.242" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200424 18:05:57.186" endtime="20200424 18:05:59.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:05:59.243" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:05:59.243" endtime="20200424 18:05:59.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:05:59.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:05:59.244" endtime="20200424 18:05:59.244"></status>
</kw>
<msg timestamp="20200424 18:05:59.245" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200424 18:05:57.185" endtime="20200424 18:05:59.245"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:59.245" endtime="20200424 18:05:59.246"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:59.246" endtime="20200424 18:05:59.246"></status>
</kw>
<status status="PASS" starttime="20200424 18:05:42.587" endtime="20200424 18:05:59.246"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200424 18:05:42.585" endtime="20200424 18:05:59.247" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200424 18:05:59.248" endtime="20200424 18:05:59.249"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:05:59.252" level="INFO">Running command 'ozone sh key put o3://om:9862/48755-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:03.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:03.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:05:59.250" endtime="20200424 18:06:03.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:03.280" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:06:03.279" endtime="20200424 18:06:03.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:03.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:03.280" endtime="20200424 18:06:03.280"></status>
</kw>
<status status="PASS" starttime="20200424 18:05:59.249" endtime="20200424 18:06:03.281"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:03.285" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48755-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:05.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:05.544" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:06:03.283" endtime="20200424 18:06:05.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:05.546" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:06:05.545" endtime="20200424 18:06:05.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:05.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:05.546" endtime="20200424 18:06:05.546"></status>
</kw>
<msg timestamp="20200424 18:06:05.547" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:06:03.281" endtime="20200424 18:06:05.547"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:05.547" endtime="20200424 18:06:05.548"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:05.551" level="INFO">Running command 'ozone sh key addacl o3://om:9862/48755-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:07.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:07.527" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200424 18:06:05.548" endtime="20200424 18:06:07.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:07.528" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200424 18:06:07.527" endtime="20200424 18:06:07.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:07.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:07.529" endtime="20200424 18:06:07.529"></status>
</kw>
<msg timestamp="20200424 18:06:07.530" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200424 18:06:05.548" endtime="20200424 18:06:07.530"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:07.534" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48755-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:09.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:09.603" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:06:07.530" endtime="20200424 18:06:09.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:09.604" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:06:09.603" endtime="20200424 18:06:09.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:09.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:09.604" endtime="20200424 18:06:09.605"></status>
</kw>
<msg timestamp="20200424 18:06:09.605" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:06:07.530" endtime="20200424 18:06:09.605"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:09.605" endtime="20200424 18:06:09.607"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:09.610" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/48755-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:11.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:11.667" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200424 18:06:09.607" endtime="20200424 18:06:11.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:11.668" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200424 18:06:11.668" endtime="20200424 18:06:11.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:11.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:11.669" endtime="20200424 18:06:11.669"></status>
</kw>
<msg timestamp="20200424 18:06:11.669" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200424 18:06:09.607" endtime="20200424 18:06:11.670"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:11.672" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48755-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:14.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:14.248" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:06:11.670" endtime="20200424 18:06:14.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:14.249" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:06:14.248" endtime="20200424 18:06:14.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:14.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:14.250" endtime="20200424 18:06:14.250"></status>
</kw>
<msg timestamp="20200424 18:06:14.250" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200424 18:06:11.670" endtime="20200424 18:06:14.250"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:14.251" endtime="20200424 18:06:14.251"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:14.255" level="INFO">Running command 'ozone sh key setacl o3://om:9862/48755-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:16.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:16.407" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200424 18:06:14.252" endtime="20200424 18:06:16.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:16.408" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200424 18:06:16.407" endtime="20200424 18:06:16.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:16.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:16.408" endtime="20200424 18:06:16.409"></status>
</kw>
<msg timestamp="20200424 18:06:16.409" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200424 18:06:14.251" endtime="20200424 18:06:16.409"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:16.413" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48755-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:18.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:18.643" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200424 18:06:16.410" endtime="20200424 18:06:18.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:18.645" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200424 18:06:18.643" endtime="20200424 18:06:18.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:18.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:18.645" endtime="20200424 18:06:18.646"></status>
</kw>
<msg timestamp="20200424 18:06:18.646" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200424 18:06:16.409" endtime="20200424 18:06:18.646"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:18.646" endtime="20200424 18:06:18.647"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:18.647" endtime="20200424 18:06:18.648"></status>
</kw>
<status status="PASS" starttime="20200424 18:05:59.249" endtime="20200424 18:06:18.649"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200424 18:05:59.247" endtime="20200424 18:06:18.649" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:18.650" endtime="20200424 18:06:18.651"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:18.655" level="INFO">Running command 'ozone sh volume info o3:///48755-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:20.657" level="INFO">${rc} = 255</msg>
<msg timestamp="20200424 18:06:20.657" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48755-rpcwport is not found</msg>
<status status="PASS" starttime="20200424 18:06:18.652" endtime="20200424 18:06:20.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:20.658" level="INFO">VOLUME_NOT_FOUND Volume 48755-rpcwport is not found</msg>
<status status="PASS" starttime="20200424 18:06:20.657" endtime="20200424 18:06:20.658"></status>
</kw>
<msg timestamp="20200424 18:06:20.658" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48755-rpcwport is not found</msg>
<status status="PASS" starttime="20200424 18:06:18.651" endtime="20200424 18:06:20.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:20.658" endtime="20200424 18:06:20.659"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:20.661" level="INFO">Running command 'ozone sh volume create o3:///48755-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:22.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:22.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:06:20.659" endtime="20200424 18:06:22.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:22.801" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:06:22.800" endtime="20200424 18:06:22.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:22.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:22.801" endtime="20200424 18:06:22.802"></status>
</kw>
<msg timestamp="20200424 18:06:22.802" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200424 18:06:20.659" endtime="20200424 18:06:22.802"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:22.802" endtime="20200424 18:06:22.803"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:22.807" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="48755-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:24.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:24.983" level="INFO">${output} = {
  "metadata": {},
  "name": "48755-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:06:22.776Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200424 18:06:22.803" endtime="20200424 18:06:24.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:24.985" level="INFO">{
  "metadata": {},
  "name": "48755-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:06:22.776Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200424 18:06:24.984" endtime="20200424 18:06:24.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:24.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:24.985" endtime="20200424 18:06:24.986"></status>
</kw>
<msg timestamp="20200424 18:06:24.986" level="INFO">${result} = {
  "metadata": {},
  "name": "48755-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:06:22.776Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200424 18:06:22.803" endtime="20200424 18:06:24.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:24.986" endtime="20200424 18:06:24.987"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:24.990" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48755-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:27.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:27.403" level="INFO">${output} = {
  "metadata": {},
  "name": "48755-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:06:22.776Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200424 18:06:24.987" endtime="20200424 18:06:27.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:27.405" level="INFO">{
  "metadata": {},
  "name": "48755-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:06:22.776Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200424 18:06:27.404" endtime="20200424 18:06:27.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:27.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:27.405" endtime="20200424 18:06:27.406"></status>
</kw>
<msg timestamp="20200424 18:06:27.406" level="INFO">${result} = {
  "metadata": {},
  "name": "48755-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:06:22.776Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200424 18:06:24.987" endtime="20200424 18:06:27.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:27.406" endtime="20200424 18:06:27.406"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:27.410" level="INFO">Running command 'ozone sh volume update o3:///48755-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:29.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:29.645" level="INFO">${output} = {
  "metadata" : { },
  "name" : "48755-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-24T18:06:22.776Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200424 18:06:27.407" endtime="20200424 18:06:29.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:29.646" level="INFO">{
  "metadata" : { },
  "name" : "48755-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-24T18:06:22.776Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200424 18:06:29.646" endtime="20200424 18:06:29.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:29.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:29.647" endtime="20200424 18:06:29.647"></status>
</kw>
<status status="PASS" starttime="20200424 18:06:27.406" endtime="20200424 18:06:29.648"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:29.651" level="INFO">Running command 'ozone sh volume info o3:///48755-rpcwport | jq -r '. | select(.name=="48755-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:31.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:31.791" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200424 18:06:29.649" endtime="20200424 18:06:31.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:31.793" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200424 18:06:31.792" endtime="20200424 18:06:31.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:31.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:31.793" endtime="20200424 18:06:31.793"></status>
</kw>
<msg timestamp="20200424 18:06:31.794" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200424 18:06:29.648" endtime="20200424 18:06:31.794"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:31.794" endtime="20200424 18:06:31.794"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:31.797" level="INFO">Running command 'ozone sh bucket create o3:///48755-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:33.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:33.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:06:31.795" endtime="20200424 18:06:33.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:33.777" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:06:33.776" endtime="20200424 18:06:33.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:33.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:33.777" endtime="20200424 18:06:33.778"></status>
</kw>
<status status="PASS" starttime="20200424 18:06:31.795" endtime="20200424 18:06:33.778"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:33.781" level="INFO">Running command 'ozone sh bucket info o3:///48755-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:35.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:35.960" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200424 18:06:33.779" endtime="20200424 18:06:35.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:35.962" level="INFO">DISK</msg>
<status status="PASS" starttime="20200424 18:06:35.960" endtime="20200424 18:06:35.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:35.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:35.962" endtime="20200424 18:06:35.963"></status>
</kw>
<msg timestamp="20200424 18:06:35.963" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200424 18:06:33.778" endtime="20200424 18:06:35.963"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:35.963" endtime="20200424 18:06:35.963"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:35.966" level="INFO">Running command 'ozone sh bucket list o3:///48755-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:38.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:38.398" level="INFO">${output} = 48755-rpcwport</msg>
<status status="PASS" starttime="20200424 18:06:35.964" endtime="20200424 18:06:38.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:38.400" level="INFO">48755-rpcwport</msg>
<status status="PASS" starttime="20200424 18:06:38.399" endtime="20200424 18:06:38.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:38.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:38.400" endtime="20200424 18:06:38.400"></status>
</kw>
<msg timestamp="20200424 18:06:38.401" level="INFO">${result} = 48755-rpcwport</msg>
<status status="PASS" starttime="20200424 18:06:35.964" endtime="20200424 18:06:38.401"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:38.401" endtime="20200424 18:06:38.402"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:38.406" level="INFO">Running command 'ozone sh key put o3:///48755-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:42.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:42.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:06:38.403" endtime="20200424 18:06:42.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:42.327" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:06:42.327" endtime="20200424 18:06:42.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:42.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:42.328" endtime="20200424 18:06:42.328"></status>
</kw>
<status status="PASS" starttime="20200424 18:06:38.403" endtime="20200424 18:06:42.329"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:42.332" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:42.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:42.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:06:42.329" endtime="20200424 18:06:42.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:42.335" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:06:42.335" endtime="20200424 18:06:42.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:42.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:42.336" endtime="20200424 18:06:42.336"></status>
</kw>
<status status="PASS" starttime="20200424 18:06:42.329" endtime="20200424 18:06:42.336"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:42.339" level="INFO">Running command 'ozone sh key get o3:///48755-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:46.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:46.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:06:42.337" endtime="20200424 18:06:46.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:46.186" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:06:46.186" endtime="20200424 18:06:46.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:46.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:46.186" endtime="20200424 18:06:46.187"></status>
</kw>
<status status="PASS" starttime="20200424 18:06:42.337" endtime="20200424 18:06:46.187"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:46.190" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:46.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:46.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:06:46.188" endtime="20200424 18:06:46.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:46.193" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:06:46.193" endtime="20200424 18:06:46.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:46.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:46.194" endtime="20200424 18:06:46.194"></status>
</kw>
<status status="PASS" starttime="20200424 18:06:46.187" endtime="20200424 18:06:46.194"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:46.198" level="INFO">Running command 'ozone sh key get o3:///48755-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:48.146" level="INFO">${rc} = 255</msg>
<msg timestamp="20200424 18:06:48.146" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200424 18:06:46.195" endtime="20200424 18:06:48.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:48.148" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200424 18:06:48.147" endtime="20200424 18:06:48.148"></status>
</kw>
<msg timestamp="20200424 18:06:48.148" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200424 18:06:46.195" endtime="20200424 18:06:48.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:48.149" endtime="20200424 18:06:48.149"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:48.152" level="INFO">Running command 'ozone sh key get --force o3:///48755-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:51.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:51.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:06:48.150" endtime="20200424 18:06:51.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:51.724" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:06:51.723" endtime="20200424 18:06:51.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:51.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:51.724" endtime="20200424 18:06:51.725"></status>
</kw>
<msg timestamp="20200424 18:06:51.725" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200424 18:06:48.149" endtime="20200424 18:06:51.725"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:51.725" endtime="20200424 18:06:51.726"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:51.729" level="INFO">Running command 'ozone sh key info o3:///48755-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:53.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:53.951" level="INFO">${output} = {
  "volumeName": "48755-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-24T18:06:40.423Z",
  "modificationTime": "2020-04-24T18:06:41.974Z",
  "rep...</msg>
<status status="PASS" starttime="20200424 18:06:51.727" endtime="20200424 18:06:53.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:53.953" level="INFO">{
  "volumeName": "48755-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-24T18:06:40.423Z",
  "modificationTime": "2020-04-24T18:06:41.974Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104054888885125250,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200424 18:06:53.952" endtime="20200424 18:06:53.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:53.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:53.953" endtime="20200424 18:06:53.954"></status>
</kw>
<msg timestamp="20200424 18:06:53.954" level="INFO">${result} = {
  "volumeName": "48755-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-24T18:06:40.423Z",
  "modificationTime": "2020-04-24T18:06:41.974Z",
  "rep...</msg>
<status status="PASS" starttime="20200424 18:06:51.726" endtime="20200424 18:06:53.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:53.954" endtime="20200424 18:06:53.955"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:53.958" level="INFO">Running command 'ozone debug chunkinfo o3:///48755-rpcwport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:57.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:57.591" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/d64abc13-4f33-40b1-9298-86ab45f4f03e/current/containerDir0/1/chunks/104054888885125247_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.22.0...</msg>
<status status="PASS" starttime="20200424 18:06:53.956" endtime="20200424 18:06:57.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:57.593" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/d64abc13-4f33-40b1-9298-86ab45f4f03e/current/containerDir0/1/chunks/104054888885125247_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.22.0.7",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.22.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.22.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    }
  ],
  "pipelineID": "168db0f6-ed93-4e7b-8918-173c5e638888"
}</msg>
<status status="PASS" starttime="20200424 18:06:57.592" endtime="20200424 18:06:57.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:57.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:57.593" endtime="20200424 18:06:57.594"></status>
</kw>
<msg timestamp="20200424 18:06:57.594" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/d64abc13-4f33-40b1-9298-86ab45f4f03e/current/containerDir0/1/chunks/104054888885125247_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.22.0...</msg>
<status status="PASS" starttime="20200424 18:06:53.955" endtime="20200424 18:06:57.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:57.594" endtime="20200424 18:06:57.595"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:57.598" level="INFO">Running command 'ozone sh key list o3:///48755-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:06:59.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:06:59.823" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200424 18:06:57.596" endtime="20200424 18:06:59.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:06:59.824" level="INFO">key1</msg>
<status status="PASS" starttime="20200424 18:06:59.823" endtime="20200424 18:06:59.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:06:59.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:06:59.824" endtime="20200424 18:06:59.825"></status>
</kw>
<msg timestamp="20200424 18:06:59.825" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200424 18:06:57.595" endtime="20200424 18:06:59.825"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:06:59.825" endtime="20200424 18:06:59.826"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:06:59.829" level="INFO">Running command 'ozone sh key rename o3:///48755-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:01.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:01.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:06:59.827" endtime="20200424 18:07:01.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:01.846" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:01.845" endtime="20200424 18:07:01.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:01.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:01.846" endtime="20200424 18:07:01.847"></status>
</kw>
<status status="PASS" starttime="20200424 18:06:59.826" endtime="20200424 18:07:01.847"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:01.851" level="INFO">Running command 'ozone sh key list o3:///48755-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:04.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:04.239" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200424 18:07:01.848" endtime="20200424 18:07:04.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:04.240" level="INFO">key2</msg>
<status status="PASS" starttime="20200424 18:07:04.239" endtime="20200424 18:07:04.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:04.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:04.241" endtime="20200424 18:07:04.241"></status>
</kw>
<msg timestamp="20200424 18:07:04.241" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200424 18:07:01.848" endtime="20200424 18:07:04.241"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:04.242" endtime="20200424 18:07:04.242"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:04.246" level="INFO">Running command 'ozone sh key delete o3:///48755-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:06.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:06.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:04.243" endtime="20200424 18:07:06.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:06.126" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:06.125" endtime="20200424 18:07:06.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:06.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:06.126" endtime="20200424 18:07:06.127"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:04.242" endtime="20200424 18:07:06.127"></status>
</kw>
<status status="PASS" starttime="20200424 18:06:38.402" endtime="20200424 18:07:06.127"></status>
</kw>
<status status="PASS" starttime="20200424 18:06:38.402" endtime="20200424 18:07:06.128"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:06.131" level="INFO">Running command 'ozone sh bucket delete o3:///48755-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:08.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:08.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:06.128" endtime="20200424 18:07:08.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:08.060" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:08.059" endtime="20200424 18:07:08.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:08.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:08.060" endtime="20200424 18:07:08.061"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:06.128" endtime="20200424 18:07:08.061"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:08.065" level="INFO">Running command 'ozone sh volume delete o3:///48755-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:10.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:10.029" level="INFO">${output} = Volume 48755-rpcwport is deleted</msg>
<status status="PASS" starttime="20200424 18:07:08.062" endtime="20200424 18:07:10.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:10.030" level="INFO">Volume 48755-rpcwport is deleted</msg>
<status status="PASS" starttime="20200424 18:07:10.030" endtime="20200424 18:07:10.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:10.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:10.031" endtime="20200424 18:07:10.031"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:08.061" endtime="20200424 18:07:10.032"></status>
</kw>
<status status="PASS" starttime="20200424 18:06:18.651" endtime="20200424 18:07:10.032"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200424 18:06:18.650" endtime="20200424 18:07:10.032" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:10.034" endtime="20200424 18:07:10.034"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:10.038" level="INFO">Running command 'ozone sh volume info /48755-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:12.089" level="INFO">${rc} = 255</msg>
<msg timestamp="20200424 18:07:12.089" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48755-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200424 18:07:10.035" endtime="20200424 18:07:12.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:12.090" level="INFO">VOLUME_NOT_FOUND Volume 48755-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200424 18:07:12.090" endtime="20200424 18:07:12.090"></status>
</kw>
<msg timestamp="20200424 18:07:12.091" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48755-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200424 18:07:10.035" endtime="20200424 18:07:12.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:12.091" endtime="20200424 18:07:12.091"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:12.094" level="INFO">Running command 'ozone sh volume create /48755-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:14.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:14.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:12.092" endtime="20200424 18:07:14.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:14.412" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:14.411" endtime="20200424 18:07:14.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:14.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:14.412" endtime="20200424 18:07:14.413"></status>
</kw>
<msg timestamp="20200424 18:07:14.413" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200424 18:07:12.091" endtime="20200424 18:07:14.413"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:14.413" endtime="20200424 18:07:14.414"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:14.417" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="48755-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:16.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:16.765" level="INFO">${output} = {
  "metadata": {},
  "name": "48755-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:07:14.377Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200424 18:07:14.415" endtime="20200424 18:07:16.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:16.767" level="INFO">{
  "metadata": {},
  "name": "48755-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:07:14.377Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200424 18:07:16.766" endtime="20200424 18:07:16.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:16.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:16.767" endtime="20200424 18:07:16.767"></status>
</kw>
<msg timestamp="20200424 18:07:16.768" level="INFO">${result} = {
  "metadata": {},
  "name": "48755-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:07:14.377Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200424 18:07:14.414" endtime="20200424 18:07:16.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:16.768" endtime="20200424 18:07:16.768"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:16.771" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48755-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:19.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:19.061" level="INFO">${output} = {
  "metadata": {},
  "name": "48755-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:07:14.377Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200424 18:07:16.769" endtime="20200424 18:07:19.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:19.062" level="INFO">{
  "metadata": {},
  "name": "48755-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:07:14.377Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200424 18:07:19.061" endtime="20200424 18:07:19.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:19.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:19.062" endtime="20200424 18:07:19.063"></status>
</kw>
<msg timestamp="20200424 18:07:19.063" level="INFO">${result} = {
  "metadata": {},
  "name": "48755-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-24T18:07:14.377Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200424 18:07:16.769" endtime="20200424 18:07:19.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:19.063" endtime="20200424 18:07:19.064"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:19.068" level="INFO">Running command 'ozone sh volume update /48755-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:21.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:21.382" level="INFO">${output} = {
  "metadata" : { },
  "name" : "48755-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-24T18:07:14.377Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200424 18:07:19.065" endtime="20200424 18:07:21.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:21.383" level="INFO">{
  "metadata" : { },
  "name" : "48755-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-24T18:07:14.377Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200424 18:07:21.382" endtime="20200424 18:07:21.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:21.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:21.384" endtime="20200424 18:07:21.384"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:19.064" endtime="20200424 18:07:21.384"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:21.388" level="INFO">Running command 'ozone sh volume info /48755-rpcwoscheme | jq -r '. | select(.name=="48755-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:24.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:24.097" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200424 18:07:21.385" endtime="20200424 18:07:24.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:24.099" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200424 18:07:24.098" endtime="20200424 18:07:24.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:24.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:24.100" endtime="20200424 18:07:24.101"></status>
</kw>
<msg timestamp="20200424 18:07:24.101" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200424 18:07:21.385" endtime="20200424 18:07:24.101"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:24.106" endtime="20200424 18:07:24.108"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:24.113" level="INFO">Running command 'ozone sh bucket create /48755-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:26.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:26.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:24.109" endtime="20200424 18:07:26.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:26.144" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:26.143" endtime="20200424 18:07:26.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:26.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:26.145" endtime="20200424 18:07:26.145"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:24.109" endtime="20200424 18:07:26.145"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:26.149" level="INFO">Running command 'ozone sh bucket info /48755-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:28.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:28.415" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200424 18:07:26.146" endtime="20200424 18:07:28.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:28.417" level="INFO">DISK</msg>
<status status="PASS" starttime="20200424 18:07:28.416" endtime="20200424 18:07:28.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:28.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:28.417" endtime="20200424 18:07:28.417"></status>
</kw>
<msg timestamp="20200424 18:07:28.418" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200424 18:07:26.145" endtime="20200424 18:07:28.418"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:28.418" endtime="20200424 18:07:28.418"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:28.421" level="INFO">Running command 'ozone sh bucket list /48755-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:30.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:30.630" level="INFO">${output} = 48755-rpcwoscheme</msg>
<status status="PASS" starttime="20200424 18:07:28.419" endtime="20200424 18:07:30.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:30.631" level="INFO">48755-rpcwoscheme</msg>
<status status="PASS" starttime="20200424 18:07:30.631" endtime="20200424 18:07:30.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:30.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:30.632" endtime="20200424 18:07:30.632"></status>
</kw>
<msg timestamp="20200424 18:07:30.633" level="INFO">${result} = 48755-rpcwoscheme</msg>
<status status="PASS" starttime="20200424 18:07:28.418" endtime="20200424 18:07:30.633"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:30.633" endtime="20200424 18:07:30.634"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:30.638" level="INFO">Running command 'ozone sh key put /48755-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:34.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:34.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:30.635" endtime="20200424 18:07:34.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:34.542" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:34.541" endtime="20200424 18:07:34.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:34.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:34.542" endtime="20200424 18:07:34.543"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:30.635" endtime="20200424 18:07:34.544"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:34.548" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:34.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:34.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:34.544" endtime="20200424 18:07:34.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:34.550" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:34.550" endtime="20200424 18:07:34.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:34.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:34.551" endtime="20200424 18:07:34.551"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:34.544" endtime="20200424 18:07:34.552"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:34.556" level="INFO">Running command 'ozone sh key get /48755-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:38.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:38.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:34.552" endtime="20200424 18:07:38.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:38.364" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:38.364" endtime="20200424 18:07:38.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:38.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:38.365" endtime="20200424 18:07:38.365"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:34.552" endtime="20200424 18:07:38.366"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:38.369" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:38.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:38.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:38.366" endtime="20200424 18:07:38.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:38.372" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:38.372" endtime="20200424 18:07:38.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:38.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:38.372" endtime="20200424 18:07:38.373"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:38.366" endtime="20200424 18:07:38.373"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:38.376" level="INFO">Running command 'ozone sh key get /48755-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:40.359" level="INFO">${rc} = 255</msg>
<msg timestamp="20200424 18:07:40.359" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200424 18:07:38.374" endtime="20200424 18:07:40.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:40.360" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200424 18:07:40.360" endtime="20200424 18:07:40.360"></status>
</kw>
<msg timestamp="20200424 18:07:40.361" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200424 18:07:38.373" endtime="20200424 18:07:40.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:40.361" endtime="20200424 18:07:40.361"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:40.365" level="INFO">Running command 'ozone sh key get --force /48755-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:44.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:44.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:40.362" endtime="20200424 18:07:44.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:44.078" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:44.077" endtime="20200424 18:07:44.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:44.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:44.078" endtime="20200424 18:07:44.079"></status>
</kw>
<msg timestamp="20200424 18:07:44.079" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200424 18:07:40.361" endtime="20200424 18:07:44.079"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:44.079" endtime="20200424 18:07:44.080"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:44.084" level="INFO">Running command 'ozone sh key info /48755-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:46.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:46.347" level="INFO">${output} = {
  "volumeName": "48755-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-24T18:07:32.673Z",
  "modificationTime": "2020-04-24T18:07:34.185Z",
  "...</msg>
<status status="PASS" starttime="20200424 18:07:44.080" endtime="20200424 18:07:46.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:46.348" level="INFO">{
  "volumeName": "48755-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-24T18:07:32.673Z",
  "modificationTime": "2020-04-24T18:07:34.185Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104054892309512320,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200424 18:07:46.347" endtime="20200424 18:07:46.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:46.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:46.348" endtime="20200424 18:07:46.349"></status>
</kw>
<msg timestamp="20200424 18:07:46.349" level="INFO">${result} = {
  "volumeName": "48755-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-24T18:07:32.673Z",
  "modificationTime": "2020-04-24T18:07:34.185Z",
  "...</msg>
<status status="PASS" starttime="20200424 18:07:44.080" endtime="20200424 18:07:46.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:46.350" endtime="20200424 18:07:46.350"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:46.355" level="INFO">Running command 'ozone debug chunkinfo /48755-rpcwoscheme/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:50.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:50.072" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/d64abc13-4f33-40b1-9298-86ab45f4f03e/current/containerDir0/1/chunks/104054892309512320_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.22.0...</msg>
<status status="PASS" starttime="20200424 18:07:46.351" endtime="20200424 18:07:50.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:50.074" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/d64abc13-4f33-40b1-9298-86ab45f4f03e/current/containerDir0/1/chunks/104054892309512320_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.22.0.7",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.22.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.22.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    }
  ],
  "pipelineID": "168db0f6-ed93-4e7b-8918-173c5e638888"
}</msg>
<status status="PASS" starttime="20200424 18:07:50.073" endtime="20200424 18:07:50.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:50.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:50.074" endtime="20200424 18:07:50.075"></status>
</kw>
<msg timestamp="20200424 18:07:50.075" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/d64abc13-4f33-40b1-9298-86ab45f4f03e/current/containerDir0/1/chunks/104054892309512320_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.22.0...</msg>
<status status="PASS" starttime="20200424 18:07:46.351" endtime="20200424 18:07:50.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:50.075" endtime="20200424 18:07:50.076"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:50.079" level="INFO">Running command 'ozone sh key list /48755-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:52.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:52.230" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200424 18:07:50.076" endtime="20200424 18:07:52.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:52.232" level="INFO">key1</msg>
<status status="PASS" starttime="20200424 18:07:52.231" endtime="20200424 18:07:52.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:52.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:52.232" endtime="20200424 18:07:52.233"></status>
</kw>
<msg timestamp="20200424 18:07:52.233" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200424 18:07:50.076" endtime="20200424 18:07:52.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:52.233" endtime="20200424 18:07:52.234"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:52.238" level="INFO">Running command 'ozone sh key rename /48755-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:54.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:54.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:52.235" endtime="20200424 18:07:54.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:54.191" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:54.190" endtime="20200424 18:07:54.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:54.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:54.191" endtime="20200424 18:07:54.191"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:52.234" endtime="20200424 18:07:54.192"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:54.196" level="INFO">Running command 'ozone sh key list /48755-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:56.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:56.406" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200424 18:07:54.192" endtime="20200424 18:07:56.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:56.407" level="INFO">key2</msg>
<status status="PASS" starttime="20200424 18:07:56.406" endtime="20200424 18:07:56.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:56.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:56.407" endtime="20200424 18:07:56.408"></status>
</kw>
<msg timestamp="20200424 18:07:56.408" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200424 18:07:54.192" endtime="20200424 18:07:56.409"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200424 18:07:56.409" endtime="20200424 18:07:56.409"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:56.412" level="INFO">Running command 'ozone sh key delete /48755-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:07:58.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:07:58.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:56.410" endtime="20200424 18:07:58.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:07:58.371" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:07:58.370" endtime="20200424 18:07:58.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:07:58.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:07:58.371" endtime="20200424 18:07:58.372"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:56.409" endtime="20200424 18:07:58.372"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:30.634" endtime="20200424 18:07:58.372"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:30.634" endtime="20200424 18:07:58.373"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:07:58.375" level="INFO">Running command 'ozone sh bucket delete /48755-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:08:00.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:08:00.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200424 18:07:58.373" endtime="20200424 18:08:00.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:08:00.339" level="INFO"></msg>
<status status="PASS" starttime="20200424 18:08:00.339" endtime="20200424 18:08:00.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:08:00.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:08:00.340" endtime="20200424 18:08:00.340"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:58.373" endtime="20200424 18:08:00.341"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200424 18:08:00.344" level="INFO">Running command 'ozone sh volume delete /48755-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200424 18:08:02.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20200424 18:08:02.301" level="INFO">${output} = Volume 48755-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200424 18:08:00.342" endtime="20200424 18:08:02.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200424 18:08:02.303" level="INFO">Volume 48755-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200424 18:08:02.302" endtime="20200424 18:08:02.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200424 18:08:02.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200424 18:08:02.303" endtime="20200424 18:08:02.304"></status>
</kw>
<status status="PASS" starttime="20200424 18:08:00.341" endtime="20200424 18:08:02.304"></status>
</kw>
<status status="PASS" starttime="20200424 18:07:10.034" endtime="20200424 18:08:02.304"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200424 18:07:10.033" endtime="20200424 18:08:02.304" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200424 18:04:33.204" endtime="20200424 18:08:02.306"></status>
</suite>
<status status="PASS" starttime="20200424 18:03:31.161" endtime="20200424 18:08:02.311"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
