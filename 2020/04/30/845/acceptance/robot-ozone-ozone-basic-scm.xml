<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200430 10:17:39.303" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200430 10:17:39.352" endtime="20200430 10:17:39.353"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:17:39.358" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:17:39.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:17:39.461" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 30 Apr 2020 10:17:39 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 30 Apr 2020 09:57:58 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200430 10:17:39.353" endtime="20200430 10:17:39.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:17:39.462" level="INFO">HTTP/1.1 200 OK
Date: Thu, 30 Apr 2020 10:17:39 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 30 Apr 2020 09:57:58 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200430 10:17:39.461" endtime="20200430 10:17:39.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:17:39.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:17:39.462" endtime="20200430 10:17:39.462"></status>
</kw>
<msg timestamp="20200430 10:17:39.463" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 30 Apr 2020 10:17:39 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 30 Apr 2020 09:57:58 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200430 10:17:39.353" endtime="20200430 10:17:39.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200430 10:17:39.463" endtime="20200430 10:17:39.463"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200430 10:17:39.352" endtime="20200430 10:17:39.463" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200430 10:17:39.466" endtime="20200430 10:17:39.466"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:17:39.473" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:33.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:33.618" level="INFO">${output} = 2020-04-30 10:17:40,428 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:17:40,586 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200430 10:17:39.467" endtime="20200430 10:18:33.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:33.619" level="INFO">2020-04-30 10:17:40,428 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:17:40,586 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-30 10:17:40,586 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-30 10:17:41,742 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-30 10:17:41,743 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-30 10:17:41,743 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-30 10:17:41,743 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-30 10:17:41,743 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-30 10:17:41,743 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-30 10:17:41,743 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-30 10:17:41,745 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-30 10:17:41,746 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-30 10:17:41,757 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-30 10:17:41,797 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-38151, with hadoop as owner.
2020-04-30 10:17:41,898 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-67152, with hadoop as owner.
2020-04-30 10:17:41,904 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-84169, with hadoop as owner.
2020-04-30 10:17:41,910 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-17125, with hadoop as owner.
2020-04-30 10:17:41,916 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-34116, with hadoop as owner.
2020-04-30 10:17:41,926 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-38151/bucket-0-03287, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:41,952 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-67152/bucket-0-60489, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:41,959 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84169/bucket-0-95293, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:41,965 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-17125/bucket-0-11540, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:41,970 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-34116/bucket-0-32239, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:41,974 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-38151/bucket-1-16153, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:41,979 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-67152/bucket-1-43263, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:41,983 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84169/bucket-1-63481, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:41,987 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-17125/bucket-1-54987, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:41,992 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-34116/bucket-1-36180, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:41,996 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-38151/bucket-2-98709, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,000 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-67152/bucket-2-22633, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,004 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84169/bucket-2-16524, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,008 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-17125/bucket-2-40502, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,012 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-34116/bucket-2-07346, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,018 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-38151/bucket-3-58108, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,024 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-67152/bucket-3-87354, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,032 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84169/bucket-3-51084, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,035 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-17125/bucket-3-11541, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,040 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-34116/bucket-3-85979, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,045 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-38151/bucket-4-42135, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,048 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-67152/bucket-4-00808, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,053 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84169/bucket-4-14918, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,056 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-17125/bucket-4-76874, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,062 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-34116/bucket-4-08048, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:17:42,529 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-30 10:17:42,761 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-30 10:17:43,765 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-30 10:17:44,765 [Thread-5] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-04-30 10:17:45,766 [Thread-5] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-04-30 10:17:46,767 [Thread-5] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-04-30 10:17:47,767 [Thread-5] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-04-30 10:17:48,767 [Thread-5] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-04-30 10:17:49,768 [Thread-5] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-04-30 10:17:50,769 [Thread-5] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-04-30 10:17:51,773 [Thread-5] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-04-30 10:17:52,773 [Thread-5] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-04-30 10:17:53,774 [Thread-5] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-04-30 10:17:54,774 [Thread-5] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-04-30 10:17:55,776 [Thread-5] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-04-30 10:17:56,777 [Thread-5] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-04-30 10:17:57,778 [Thread-5] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-04-30 10:17:58,778 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-04-30 10:17:59,779 [Thread-5] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-04-30 10:18:00,780 [Thread-5] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-04-30 10:18:01,780 [Thread-5] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-04-30 10:18:02,780 [Thread-5] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-04-30 10:18:03,781 [Thread-5] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-04-30 10:18:04,790 [Thread-5] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-04-30 10:18:05,790 [Thread-5] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-04-30 10:18:06,791 [Thread-5] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-04-30 10:18:07,792 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-04-30 10:18:08,792 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-04-30 10:18:09,792 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-04-30 10:18:10,793 [Thread-5] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-04-30 10:18:11,793 [Thread-5] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-04-30 10:18:12,794 [Thread-5] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-04-30 10:18:13,794 [Thread-5] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-04-30 10:18:14,795 [Thread-5] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-04-30 10:18:15,795 [Thread-5] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-04-30 10:18:16,810 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-04-30 10:18:17,811 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-04-30 10:18:18,811 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-04-30 10:18:19,812 [Thread-5] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-04-30 10:18:20,812 [Thread-5] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-04-30 10:18:21,813 [Thread-5] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-04-30 10:18:22,813 [Thread-5] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-04-30 10:18:23,813 [Thread-5] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-04-30 10:18:24,814 [Thread-5] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-04-30 10:18:25,814 [Thread-5] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-04-30 10:18:26,815 [Thread-5] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-04-30 10:18:27,816 [Thread-5] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-04-30 10:18:28,816 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,145
Average Time spent in bucket creation: 00:00:00,099
Average Time spent in key creation: 00:00:01,688
Average Time spent in key write: 00:00:00,580
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:52,509
***************************************************</msg>
<status status="PASS" starttime="20200430 10:18:33.618" endtime="20200430 10:18:33.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:33.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:33.620" endtime="20200430 10:18:33.620"></status>
</kw>
<msg timestamp="20200430 10:18:33.620" level="INFO">${result} = 2020-04-30 10:17:40,428 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:17:40,586 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200430 10:17:39.466" endtime="20200430 10:18:33.620"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200430 10:18:33.621" endtime="20200430 10:18:33.621"></status>
</kw>
<status status="PASS" starttime="20200430 10:18:33.621" endtime="20200430 10:18:33.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200430 10:18:33.622" endtime="20200430 10:18:33.622"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200430 10:17:39.465" endtime="20200430 10:18:33.622" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200430 10:17:39.329" endtime="20200430 10:18:33.623"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200430 10:18:33.630" level="INFO">${random} = 79307</msg>
<status status="PASS" starttime="20200430 10:18:33.630" endtime="20200430 10:18:33.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200430 10:18:33.631" level="INFO">${prefix} = 79307</msg>
<status status="PASS" starttime="20200430 10:18:33.630" endtime="20200430 10:18:33.631"></status>
</kw>
<status status="PASS" starttime="20200430 10:18:33.630" endtime="20200430 10:18:33.631"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200430 10:18:33.632" endtime="20200430 10:18:33.632"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:33.635" level="INFO">Running command 'ozone sh volume info o3://om:9862/79307-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:35.248" level="INFO">${rc} = 255</msg>
<msg timestamp="20200430 10:18:35.248" level="INFO">${output} = VOLUME_NOT_FOUND Volume 79307-rpcwoport is not found</msg>
<status status="PASS" starttime="20200430 10:18:33.633" endtime="20200430 10:18:35.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:35.249" level="INFO">VOLUME_NOT_FOUND Volume 79307-rpcwoport is not found</msg>
<status status="PASS" starttime="20200430 10:18:35.249" endtime="20200430 10:18:35.249"></status>
</kw>
<msg timestamp="20200430 10:18:35.250" level="INFO">${result} = VOLUME_NOT_FOUND Volume 79307-rpcwoport is not found</msg>
<status status="PASS" starttime="20200430 10:18:33.633" endtime="20200430 10:18:35.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200430 10:18:35.250" endtime="20200430 10:18:35.250"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:35.254" level="INFO">Running command 'ozone sh volume create o3://om:9862/79307-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:36.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:36.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:18:35.251" endtime="20200430 10:18:36.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:36.924" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:18:36.924" endtime="20200430 10:18:36.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:36.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:36.925" endtime="20200430 10:18:36.925"></status>
</kw>
<msg timestamp="20200430 10:18:36.925" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200430 10:18:35.250" endtime="20200430 10:18:36.926"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200430 10:18:36.926" endtime="20200430 10:18:36.926"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:36.930" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="79307-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:38.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:38.840" level="INFO">${output} = {
  "metadata": {},
  "name": "79307-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:18:36.910Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200430 10:18:36.927" endtime="20200430 10:18:38.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:38.841" level="INFO">{
  "metadata": {},
  "name": "79307-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:18:36.910Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200430 10:18:38.840" endtime="20200430 10:18:38.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:38.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:38.841" endtime="20200430 10:18:38.842"></status>
</kw>
<msg timestamp="20200430 10:18:38.842" level="INFO">${result} = {
  "metadata": {},
  "name": "79307-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:18:36.910Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200430 10:18:36.926" endtime="20200430 10:18:38.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200430 10:18:38.842" endtime="20200430 10:18:38.843"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:38.845" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="79307-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:40.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:40.709" level="INFO">${output} = {
  "metadata": {},
  "name": "79307-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:18:36.910Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200430 10:18:38.843" endtime="20200430 10:18:40.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:40.710" level="INFO">{
  "metadata": {},
  "name": "79307-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:18:36.910Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200430 10:18:40.710" endtime="20200430 10:18:40.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:40.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:40.710" endtime="20200430 10:18:40.711"></status>
</kw>
<msg timestamp="20200430 10:18:40.711" level="INFO">${result} = {
  "metadata": {},
  "name": "79307-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:18:36.910Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200430 10:18:38.843" endtime="20200430 10:18:40.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200430 10:18:40.711" endtime="20200430 10:18:40.712"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:40.716" level="INFO">Running command 'ozone sh volume update o3://om:9862/79307-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:42.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:42.624" level="INFO">${output} = {
  "metadata" : { },
  "name" : "79307-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-30T10:18:36.910Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200430 10:18:40.712" endtime="20200430 10:18:42.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:42.625" level="INFO">{
  "metadata" : { },
  "name" : "79307-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-30T10:18:36.910Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200430 10:18:42.625" endtime="20200430 10:18:42.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:42.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:42.626" endtime="20200430 10:18:42.626"></status>
</kw>
<status status="PASS" starttime="20200430 10:18:40.712" endtime="20200430 10:18:42.626"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:42.629" level="INFO">Running command 'ozone sh volume info o3://om:9862/79307-rpcwoport | jq -r '. | select(.name=="79307-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:44.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:44.521" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200430 10:18:42.627" endtime="20200430 10:18:44.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:44.522" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200430 10:18:44.521" endtime="20200430 10:18:44.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:44.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:44.522" endtime="20200430 10:18:44.522"></status>
</kw>
<msg timestamp="20200430 10:18:44.523" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200430 10:18:42.626" endtime="20200430 10:18:44.523"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200430 10:18:44.523" endtime="20200430 10:18:44.524"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:44.527" level="INFO">Running command 'ozone sh bucket create o3://om:9862/79307-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:46.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:46.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:18:44.525" endtime="20200430 10:18:46.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:46.229" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:18:46.229" endtime="20200430 10:18:46.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:46.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:46.229" endtime="20200430 10:18:46.230"></status>
</kw>
<status status="PASS" starttime="20200430 10:18:44.524" endtime="20200430 10:18:46.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:46.234" level="INFO">Running command 'ozone sh bucket info o3://om:9862/79307-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:48.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:48.042" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200430 10:18:46.231" endtime="20200430 10:18:48.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:48.043" level="INFO">DISK</msg>
<status status="PASS" starttime="20200430 10:18:48.042" endtime="20200430 10:18:48.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:48.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:48.044" endtime="20200430 10:18:48.044"></status>
</kw>
<msg timestamp="20200430 10:18:48.044" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200430 10:18:46.230" endtime="20200430 10:18:48.044"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200430 10:18:48.045" endtime="20200430 10:18:48.045"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:48.048" level="INFO">Running command 'ozone sh bucket list o3://om:9862/79307-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:49.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:49.925" level="INFO">${output} = 79307-rpcwoport</msg>
<status status="PASS" starttime="20200430 10:18:48.046" endtime="20200430 10:18:49.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:49.926" level="INFO">79307-rpcwoport</msg>
<status status="PASS" starttime="20200430 10:18:49.925" endtime="20200430 10:18:49.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:49.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:49.926" endtime="20200430 10:18:49.927"></status>
</kw>
<msg timestamp="20200430 10:18:49.927" level="INFO">${result} = 79307-rpcwoport</msg>
<status status="PASS" starttime="20200430 10:18:48.045" endtime="20200430 10:18:49.927"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200430 10:18:49.927" endtime="20200430 10:18:49.928"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:49.931" level="INFO">Running command 'ozone sh key put o3://om:9862/79307-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:53.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:53.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:18:49.929" endtime="20200430 10:18:53.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:53.379" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:18:53.378" endtime="20200430 10:18:53.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:53.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:53.379" endtime="20200430 10:18:53.379"></status>
</kw>
<status status="PASS" starttime="20200430 10:18:49.928" endtime="20200430 10:18:53.380"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:53.382" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:53.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:53.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:18:53.380" endtime="20200430 10:18:53.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:53.386" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:18:53.385" endtime="20200430 10:18:53.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:53.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:53.386" endtime="20200430 10:18:53.387"></status>
</kw>
<status status="PASS" starttime="20200430 10:18:53.380" endtime="20200430 10:18:53.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:53.390" level="INFO">Running command 'ozone sh key get o3://om:9862/79307-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:56.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:56.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:18:53.388" endtime="20200430 10:18:56.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:56.560" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:18:56.560" endtime="20200430 10:18:56.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:56.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:56.561" endtime="20200430 10:18:56.561"></status>
</kw>
<status status="PASS" starttime="20200430 10:18:53.387" endtime="20200430 10:18:56.561"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:56.564" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:56.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:18:56.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:18:56.562" endtime="20200430 10:18:56.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:56.569" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:18:56.568" endtime="20200430 10:18:56.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:18:56.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:18:56.569" endtime="20200430 10:18:56.570"></status>
</kw>
<status status="PASS" starttime="20200430 10:18:56.562" endtime="20200430 10:18:56.570"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:56.574" level="INFO">Running command 'ozone sh key get o3://om:9862/79307-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:18:58.211" level="INFO">${rc} = 255</msg>
<msg timestamp="20200430 10:18:58.211" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200430 10:18:56.571" endtime="20200430 10:18:58.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:18:58.212" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200430 10:18:58.212" endtime="20200430 10:18:58.213"></status>
</kw>
<msg timestamp="20200430 10:18:58.213" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200430 10:18:56.570" endtime="20200430 10:18:58.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200430 10:18:58.213" endtime="20200430 10:18:58.213"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:18:58.216" level="INFO">Running command 'ozone sh key get --force o3://om:9862/79307-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:01.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:01.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:18:58.214" endtime="20200430 10:19:01.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:01.484" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:19:01.483" endtime="20200430 10:19:01.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:01.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:01.484" endtime="20200430 10:19:01.485"></status>
</kw>
<msg timestamp="20200430 10:19:01.485" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200430 10:18:58.213" endtime="20200430 10:19:01.485"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:01.485" endtime="20200430 10:19:01.486"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:01.490" level="INFO">Running command 'ozone sh key info o3://om:9862/79307-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:03.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:03.361" level="INFO">${output} = {
  "volumeName": "79307-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-30T10:18:51.570Z",
  "modificationTime": "2020-04-30T10:18:53.032Z",
  "re...</msg>
<status status="PASS" starttime="20200430 10:19:01.486" endtime="20200430 10:19:03.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:03.362" level="INFO">{
  "volumeName": "79307-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-30T10:18:51.570Z",
  "modificationTime": "2020-04-30T10:18:53.032Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104087023227306110,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200430 10:19:03.362" endtime="20200430 10:19:03.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:03.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:03.363" endtime="20200430 10:19:03.363"></status>
</kw>
<msg timestamp="20200430 10:19:03.364" level="INFO">${result} = {
  "volumeName": "79307-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-30T10:18:51.570Z",
  "modificationTime": "2020-04-30T10:18:53.032Z",
  "re...</msg>
<status status="PASS" starttime="20200430 10:19:01.486" endtime="20200430 10:19:03.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:03.364" endtime="20200430 10:19:03.364"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:03.367" level="INFO">Running command 'ozone debug chunkinfo o3://om:9862/79307-rpcwoport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:06.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:06.570" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/7d166d98-7c2b-4c95-822a-feb464e22994/current/containerDir0/1/chunks/104087023227306109_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200430 10:19:03.365" endtime="20200430 10:19:06.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:06.571" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/7d166d98-7c2b-4c95-822a-feb464e22994/current/containerDir0/1/chunks/104087023227306109_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.7",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_2.ozone_default"
    }
  ],
  "pipelineID": "dd308256-9ce4-4caf-8c14-e1c5363fafa0"
}</msg>
<status status="PASS" starttime="20200430 10:19:06.571" endtime="20200430 10:19:06.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:06.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:06.572" endtime="20200430 10:19:06.572"></status>
</kw>
<msg timestamp="20200430 10:19:06.572" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/7d166d98-7c2b-4c95-822a-feb464e22994/current/containerDir0/1/chunks/104087023227306109_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200430 10:19:03.364" endtime="20200430 10:19:06.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:06.572" endtime="20200430 10:19:06.573"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:06.576" level="INFO">Running command 'ozone sh key list o3://om:9862/79307-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:08.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:08.423" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200430 10:19:06.574" endtime="20200430 10:19:08.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:08.424" level="INFO">key1</msg>
<status status="PASS" starttime="20200430 10:19:08.423" endtime="20200430 10:19:08.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:08.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:08.424" endtime="20200430 10:19:08.425"></status>
</kw>
<msg timestamp="20200430 10:19:08.425" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200430 10:19:06.573" endtime="20200430 10:19:08.425"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:08.425" endtime="20200430 10:19:08.426"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:08.429" level="INFO">Running command 'ozone sh key rename o3://om:9862/79307-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:10.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:10.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:19:08.426" endtime="20200430 10:19:10.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:10.066" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:19:10.065" endtime="20200430 10:19:10.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:10.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:10.066" endtime="20200430 10:19:10.067"></status>
</kw>
<status status="PASS" starttime="20200430 10:19:08.426" endtime="20200430 10:19:10.067"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:10.071" level="INFO">Running command 'ozone sh key list o3://om:9862/79307-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:11.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:11.916" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200430 10:19:10.068" endtime="20200430 10:19:11.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:11.917" level="INFO">key2</msg>
<status status="PASS" starttime="20200430 10:19:11.916" endtime="20200430 10:19:11.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:11.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:11.917" endtime="20200430 10:19:11.918"></status>
</kw>
<msg timestamp="20200430 10:19:11.918" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200430 10:19:10.067" endtime="20200430 10:19:11.918"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:11.918" endtime="20200430 10:19:11.918"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:11.922" level="INFO">Running command 'ozone sh key delete o3://om:9862/79307-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:13.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:13.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:19:11.919" endtime="20200430 10:19:13.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:13.598" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:19:13.597" endtime="20200430 10:19:13.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:13.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:13.598" endtime="20200430 10:19:13.598"></status>
</kw>
<status status="PASS" starttime="20200430 10:19:11.918" endtime="20200430 10:19:13.599"></status>
</kw>
<status status="PASS" starttime="20200430 10:18:49.928" endtime="20200430 10:19:13.599"></status>
</kw>
<status status="PASS" starttime="20200430 10:18:49.928" endtime="20200430 10:19:13.599"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:13.603" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/79307-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:15.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:15.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:19:13.599" endtime="20200430 10:19:15.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:15.305" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:19:15.304" endtime="20200430 10:19:15.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:15.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:15.305" endtime="20200430 10:19:15.305"></status>
</kw>
<status status="PASS" starttime="20200430 10:19:13.599" endtime="20200430 10:19:15.306"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:15.309" level="INFO">Running command 'ozone sh volume delete o3://om:9862/79307-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:16.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:16.953" level="INFO">${output} = Volume 79307-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200430 10:19:15.307" endtime="20200430 10:19:16.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:16.954" level="INFO">Volume 79307-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200430 10:19:16.954" endtime="20200430 10:19:16.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:16.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:16.955" endtime="20200430 10:19:16.955"></status>
</kw>
<status status="PASS" starttime="20200430 10:19:15.306" endtime="20200430 10:19:16.955"></status>
</kw>
<status status="PASS" starttime="20200430 10:18:33.632" endtime="20200430 10:19:16.955"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200430 10:18:33.631" endtime="20200430 10:19:16.956" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:16.957" endtime="20200430 10:19:16.957"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:16.960" level="INFO">Running command 'ozone sh volume create o3://om:9862/79307-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:18.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:18.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:19:16.958" endtime="20200430 10:19:18.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:18.620" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:19:18.620" endtime="20200430 10:19:18.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:18.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:18.621" endtime="20200430 10:19:18.621"></status>
</kw>
<status status="PASS" starttime="20200430 10:19:16.958" endtime="20200430 10:19:18.621"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:18.624" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/79307-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:20.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:20.576" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:18.622" endtime="20200430 10:19:20.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:20.578" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:20.577" endtime="20200430 10:19:20.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:20.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:20.578" endtime="20200430 10:19:20.579"></status>
</kw>
<msg timestamp="20200430 10:19:20.579" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:18.621" endtime="20200430 10:19:20.579"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:20.579" endtime="20200430 10:19:20.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:20.583" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/79307-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:22.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:22.281" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200430 10:19:20.581" endtime="20200430 10:19:22.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:22.283" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200430 10:19:22.282" endtime="20200430 10:19:22.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:22.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:22.283" endtime="20200430 10:19:22.283"></status>
</kw>
<msg timestamp="20200430 10:19:22.284" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200430 10:19:20.580" endtime="20200430 10:19:22.284"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:22.286" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/79307-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:24.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:24.185" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:22.284" endtime="20200430 10:19:24.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:24.186" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:24.185" endtime="20200430 10:19:24.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:24.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:24.186" endtime="20200430 10:19:24.186"></status>
</kw>
<msg timestamp="20200430 10:19:24.187" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:22.284" endtime="20200430 10:19:24.187"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:24.187" endtime="20200430 10:19:24.188"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:24.191" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/79307-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:26.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:26.027" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200430 10:19:24.188" endtime="20200430 10:19:26.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:26.028" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200430 10:19:26.028" endtime="20200430 10:19:26.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:26.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:26.029" endtime="20200430 10:19:26.029"></status>
</kw>
<msg timestamp="20200430 10:19:26.029" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200430 10:19:24.188" endtime="20200430 10:19:26.029"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:26.033" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/79307-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:27.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:27.861" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:26.030" endtime="20200430 10:19:27.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:27.862" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:27.861" endtime="20200430 10:19:27.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:27.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:27.862" endtime="20200430 10:19:27.863"></status>
</kw>
<msg timestamp="20200430 10:19:27.863" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:26.029" endtime="20200430 10:19:27.863"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:27.863" endtime="20200430 10:19:27.864"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:27.867" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/79307-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:29.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:29.497" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200430 10:19:27.865" endtime="20200430 10:19:29.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:29.499" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200430 10:19:29.498" endtime="20200430 10:19:29.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:29.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:29.499" endtime="20200430 10:19:29.500"></status>
</kw>
<msg timestamp="20200430 10:19:29.500" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200430 10:19:27.864" endtime="20200430 10:19:29.500"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:29.503" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/79307-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:31.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:31.305" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200430 10:19:29.501" endtime="20200430 10:19:31.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:31.306" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:31.305" endtime="20200430 10:19:31.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:31.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:31.306" endtime="20200430 10:19:31.307"></status>
</kw>
<msg timestamp="20200430 10:19:31.307" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200430 10:19:29.500" endtime="20200430 10:19:31.307"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:31.307" endtime="20200430 10:19:31.308"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:31.308" endtime="20200430 10:19:31.309"></status>
</kw>
<status status="PASS" starttime="20200430 10:19:16.957" endtime="20200430 10:19:31.309"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200430 10:19:16.956" endtime="20200430 10:19:31.309" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:31.310" endtime="20200430 10:19:31.311"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:31.315" level="INFO">Running command 'ozone sh bucket create o3://om:9862/79307-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:32.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:32.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:19:31.312" endtime="20200430 10:19:32.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:32.991" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:19:32.991" endtime="20200430 10:19:32.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:32.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:32.991" endtime="20200430 10:19:32.992"></status>
</kw>
<status status="PASS" starttime="20200430 10:19:31.311" endtime="20200430 10:19:32.992"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:32.995" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/79307-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:34.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:34.864" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:32.993" endtime="20200430 10:19:34.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:34.866" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:34.865" endtime="20200430 10:19:34.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:34.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:34.866" endtime="20200430 10:19:34.866"></status>
</kw>
<msg timestamp="20200430 10:19:34.867" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:32.992" endtime="20200430 10:19:34.867"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:34.867" endtime="20200430 10:19:34.867"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:34.870" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/79307-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:36.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:36.555" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200430 10:19:34.868" endtime="20200430 10:19:36.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:36.557" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200430 10:19:36.556" endtime="20200430 10:19:36.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:36.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:36.557" endtime="20200430 10:19:36.557"></status>
</kw>
<msg timestamp="20200430 10:19:36.558" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200430 10:19:34.868" endtime="20200430 10:19:36.558"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:36.560" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/79307-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:38.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:38.345" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:36.558" endtime="20200430 10:19:38.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:38.346" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:38.346" endtime="20200430 10:19:38.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:38.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:38.347" endtime="20200430 10:19:38.347"></status>
</kw>
<msg timestamp="20200430 10:19:38.347" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:36.558" endtime="20200430 10:19:38.347"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:38.348" endtime="20200430 10:19:38.349"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:38.352" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/79307-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:40.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:40.157" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200430 10:19:38.350" endtime="20200430 10:19:40.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:40.159" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200430 10:19:40.158" endtime="20200430 10:19:40.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:40.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:40.159" endtime="20200430 10:19:40.159"></status>
</kw>
<msg timestamp="20200430 10:19:40.160" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200430 10:19:38.349" endtime="20200430 10:19:40.160"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:40.163" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/79307-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:41.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:41.960" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:40.160" endtime="20200430 10:19:41.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:41.961" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:41.961" endtime="20200430 10:19:41.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:41.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:41.961" endtime="20200430 10:19:41.962"></status>
</kw>
<msg timestamp="20200430 10:19:41.962" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:40.160" endtime="20200430 10:19:41.962"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:41.962" endtime="20200430 10:19:41.963"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:41.966" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/79307-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:43.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:43.648" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200430 10:19:41.964" endtime="20200430 10:19:43.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:43.649" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200430 10:19:43.648" endtime="20200430 10:19:43.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:43.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:43.649" endtime="20200430 10:19:43.650"></status>
</kw>
<msg timestamp="20200430 10:19:43.650" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200430 10:19:41.963" endtime="20200430 10:19:43.650"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:43.653" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/79307-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:45.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:45.385" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200430 10:19:43.651" endtime="20200430 10:19:45.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:45.386" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:45.385" endtime="20200430 10:19:45.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:45.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:45.387" endtime="20200430 10:19:45.387"></status>
</kw>
<msg timestamp="20200430 10:19:45.387" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200430 10:19:43.650" endtime="20200430 10:19:45.388"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:45.388" endtime="20200430 10:19:45.388"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:45.388" endtime="20200430 10:19:45.389"></status>
</kw>
<status status="PASS" starttime="20200430 10:19:31.311" endtime="20200430 10:19:45.389"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200430 10:19:31.309" endtime="20200430 10:19:45.389" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:45.390" endtime="20200430 10:19:45.391"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:45.395" level="INFO">Running command 'ozone sh key put o3://om:9862/79307-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:48.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:48.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:19:45.392" endtime="20200430 10:19:48.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:48.712" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:19:48.712" endtime="20200430 10:19:48.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:48.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:48.712" endtime="20200430 10:19:48.713"></status>
</kw>
<status status="PASS" starttime="20200430 10:19:45.391" endtime="20200430 10:19:48.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:48.717" level="INFO">Running command 'ozone sh key getacl o3://om:9862/79307-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:50.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:50.569" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:48.715" endtime="20200430 10:19:50.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:50.570" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:50.570" endtime="20200430 10:19:50.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:50.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:50.570" endtime="20200430 10:19:50.571"></status>
</kw>
<msg timestamp="20200430 10:19:50.571" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:48.713" endtime="20200430 10:19:50.571"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:50.571" endtime="20200430 10:19:50.572"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:50.575" level="INFO">Running command 'ozone sh key addacl o3://om:9862/79307-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:52.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:52.223" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200430 10:19:50.573" endtime="20200430 10:19:52.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:52.224" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200430 10:19:52.223" endtime="20200430 10:19:52.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:52.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:52.224" endtime="20200430 10:19:52.225"></status>
</kw>
<msg timestamp="20200430 10:19:52.225" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200430 10:19:50.572" endtime="20200430 10:19:52.225"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:52.228" level="INFO">Running command 'ozone sh key getacl o3://om:9862/79307-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:54.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:54.141" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:52.226" endtime="20200430 10:19:54.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:54.142" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:54.142" endtime="20200430 10:19:54.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:54.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:54.143" endtime="20200430 10:19:54.143"></status>
</kw>
<msg timestamp="20200430 10:19:54.143" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:52.226" endtime="20200430 10:19:54.143"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:54.144" endtime="20200430 10:19:54.145"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:54.148" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/79307-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:55.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:55.808" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200430 10:19:54.145" endtime="20200430 10:19:55.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:55.809" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200430 10:19:55.808" endtime="20200430 10:19:55.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:55.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:55.809" endtime="20200430 10:19:55.809"></status>
</kw>
<msg timestamp="20200430 10:19:55.810" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200430 10:19:54.145" endtime="20200430 10:19:55.810"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:55.814" level="INFO">Running command 'ozone sh key getacl o3://om:9862/79307-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:57.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:57.601" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:55.810" endtime="20200430 10:19:57.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:57.602" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:19:57.601" endtime="20200430 10:19:57.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:57.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:57.602" endtime="20200430 10:19:57.603"></status>
</kw>
<msg timestamp="20200430 10:19:57.603" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200430 10:19:55.810" endtime="20200430 10:19:57.603"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200430 10:19:57.603" endtime="20200430 10:19:57.604"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:57.607" level="INFO">Running command 'ozone sh key setacl o3://om:9862/79307-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:19:59.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:19:59.312" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200430 10:19:57.605" endtime="20200430 10:19:59.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:19:59.313" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200430 10:19:59.312" endtime="20200430 10:19:59.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:19:59.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:19:59.313" endtime="20200430 10:19:59.314"></status>
</kw>
<msg timestamp="20200430 10:19:59.314" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200430 10:19:57.604" endtime="20200430 10:19:59.314"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:19:59.318" level="INFO">Running command 'ozone sh key getacl o3://om:9862/79307-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:01.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:01.136" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200430 10:19:59.315" endtime="20200430 10:20:01.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:01.137" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200430 10:20:01.136" endtime="20200430 10:20:01.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:01.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:01.137" endtime="20200430 10:20:01.138"></status>
</kw>
<msg timestamp="20200430 10:20:01.138" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200430 10:19:59.314" endtime="20200430 10:20:01.138"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:01.138" endtime="20200430 10:20:01.139"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:01.139" endtime="20200430 10:20:01.140"></status>
</kw>
<status status="PASS" starttime="20200430 10:19:45.391" endtime="20200430 10:20:01.140"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200430 10:19:45.390" endtime="20200430 10:20:01.140" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:01.142" endtime="20200430 10:20:01.142"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:01.145" level="INFO">Running command 'ozone sh volume info o3:///79307-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:02.852" level="INFO">${rc} = 255</msg>
<msg timestamp="20200430 10:20:02.852" level="INFO">${output} = VOLUME_NOT_FOUND Volume 79307-rpcwport is not found</msg>
<status status="PASS" starttime="20200430 10:20:01.143" endtime="20200430 10:20:02.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:02.853" level="INFO">VOLUME_NOT_FOUND Volume 79307-rpcwport is not found</msg>
<status status="PASS" starttime="20200430 10:20:02.852" endtime="20200430 10:20:02.853"></status>
</kw>
<msg timestamp="20200430 10:20:02.853" level="INFO">${result} = VOLUME_NOT_FOUND Volume 79307-rpcwport is not found</msg>
<status status="PASS" starttime="20200430 10:20:01.143" endtime="20200430 10:20:02.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:02.854" endtime="20200430 10:20:02.854"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:02.858" level="INFO">Running command 'ozone sh volume create o3:///79307-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:04.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:04.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:02.855" endtime="20200430 10:20:04.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:04.595" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:04.594" endtime="20200430 10:20:04.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:04.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:04.595" endtime="20200430 10:20:04.596"></status>
</kw>
<msg timestamp="20200430 10:20:04.596" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200430 10:20:02.854" endtime="20200430 10:20:04.596"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:04.596" endtime="20200430 10:20:04.596"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:04.600" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="79307-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:06.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:06.412" level="INFO">${output} = {
  "metadata": {},
  "name": "79307-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:04.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200430 10:20:04.597" endtime="20200430 10:20:06.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:06.413" level="INFO">{
  "metadata": {},
  "name": "79307-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:04.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200430 10:20:06.413" endtime="20200430 10:20:06.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:06.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:06.414" endtime="20200430 10:20:06.414"></status>
</kw>
<msg timestamp="20200430 10:20:06.414" level="INFO">${result} = {
  "metadata": {},
  "name": "79307-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:04.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200430 10:20:04.597" endtime="20200430 10:20:06.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:06.415" endtime="20200430 10:20:06.415"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:06.419" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="79307-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:08.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:08.349" level="INFO">${output} = {
  "metadata": {},
  "name": "79307-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:04.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200430 10:20:06.415" endtime="20200430 10:20:08.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:08.350" level="INFO">{
  "metadata": {},
  "name": "79307-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:04.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200430 10:20:08.349" endtime="20200430 10:20:08.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:08.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:08.350" endtime="20200430 10:20:08.351"></status>
</kw>
<msg timestamp="20200430 10:20:08.351" level="INFO">${result} = {
  "metadata": {},
  "name": "79307-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:04.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200430 10:20:06.415" endtime="20200430 10:20:08.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:08.351" endtime="20200430 10:20:08.351"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:08.354" level="INFO">Running command 'ozone sh volume update o3:///79307-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:10.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:10.248" level="INFO">${output} = {
  "metadata" : { },
  "name" : "79307-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-30T10:20:04.582Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200430 10:20:08.352" endtime="20200430 10:20:10.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:10.249" level="INFO">{
  "metadata" : { },
  "name" : "79307-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-30T10:20:04.582Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200430 10:20:10.248" endtime="20200430 10:20:10.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:10.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:10.249" endtime="20200430 10:20:10.250"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:08.352" endtime="20200430 10:20:10.250"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:10.253" level="INFO">Running command 'ozone sh volume info o3:///79307-rpcwport | jq -r '. | select(.name=="79307-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:12.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:12.081" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200430 10:20:10.251" endtime="20200430 10:20:12.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:12.082" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200430 10:20:12.081" endtime="20200430 10:20:12.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:12.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:12.082" endtime="20200430 10:20:12.082"></status>
</kw>
<msg timestamp="20200430 10:20:12.083" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200430 10:20:10.250" endtime="20200430 10:20:12.083"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:12.083" endtime="20200430 10:20:12.083"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:12.087" level="INFO">Running command 'ozone sh bucket create o3:///79307-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:13.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:13.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:12.084" endtime="20200430 10:20:13.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:13.837" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:13.836" endtime="20200430 10:20:13.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:13.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:13.837" endtime="20200430 10:20:13.838"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:12.083" endtime="20200430 10:20:13.838"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:13.842" level="INFO">Running command 'ozone sh bucket info o3:///79307-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:15.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:15.724" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200430 10:20:13.838" endtime="20200430 10:20:15.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:15.725" level="INFO">DISK</msg>
<status status="PASS" starttime="20200430 10:20:15.724" endtime="20200430 10:20:15.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:15.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:15.725" endtime="20200430 10:20:15.725"></status>
</kw>
<msg timestamp="20200430 10:20:15.726" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200430 10:20:13.838" endtime="20200430 10:20:15.726"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:15.726" endtime="20200430 10:20:15.726"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:15.730" level="INFO">Running command 'ozone sh bucket list o3:///79307-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:17.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:17.549" level="INFO">${output} = 79307-rpcwport</msg>
<status status="PASS" starttime="20200430 10:20:15.727" endtime="20200430 10:20:17.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:17.550" level="INFO">79307-rpcwport</msg>
<status status="PASS" starttime="20200430 10:20:17.549" endtime="20200430 10:20:17.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:17.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:17.550" endtime="20200430 10:20:17.551"></status>
</kw>
<msg timestamp="20200430 10:20:17.551" level="INFO">${result} = 79307-rpcwport</msg>
<status status="PASS" starttime="20200430 10:20:15.726" endtime="20200430 10:20:17.551"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:17.551" endtime="20200430 10:20:17.552"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:17.555" level="INFO">Running command 'ozone sh key put o3:///79307-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:21.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:21.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:17.553" endtime="20200430 10:20:21.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:21.181" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:21.180" endtime="20200430 10:20:21.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:21.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:21.181" endtime="20200430 10:20:21.182"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:17.553" endtime="20200430 10:20:21.182"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:21.184" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:21.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:21.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:21.182" endtime="20200430 10:20:21.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:21.188" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:21.187" endtime="20200430 10:20:21.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:21.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:21.188" endtime="20200430 10:20:21.188"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:21.182" endtime="20200430 10:20:21.189"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:21.191" level="INFO">Running command 'ozone sh key get o3:///79307-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:24.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:24.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:21.189" endtime="20200430 10:20:24.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:24.363" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:24.362" endtime="20200430 10:20:24.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:24.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:24.363" endtime="20200430 10:20:24.363"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:21.189" endtime="20200430 10:20:24.364"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:24.366" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:24.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:24.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:24.364" endtime="20200430 10:20:24.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:24.370" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:24.369" endtime="20200430 10:20:24.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:24.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:24.370" endtime="20200430 10:20:24.370"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:24.364" endtime="20200430 10:20:24.370"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:24.373" level="INFO">Running command 'ozone sh key get o3:///79307-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:26.104" level="INFO">${rc} = 255</msg>
<msg timestamp="20200430 10:20:26.104" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200430 10:20:24.371" endtime="20200430 10:20:26.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:26.106" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200430 10:20:26.105" endtime="20200430 10:20:26.106"></status>
</kw>
<msg timestamp="20200430 10:20:26.106" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200430 10:20:24.371" endtime="20200430 10:20:26.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:26.106" endtime="20200430 10:20:26.107"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:26.109" level="INFO">Running command 'ozone sh key get --force o3:///79307-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:29.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:29.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:26.107" endtime="20200430 10:20:29.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:29.359" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:29.358" endtime="20200430 10:20:29.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:29.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:29.359" endtime="20200430 10:20:29.360"></status>
</kw>
<msg timestamp="20200430 10:20:29.360" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200430 10:20:26.107" endtime="20200430 10:20:29.360"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:29.360" endtime="20200430 10:20:29.360"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:29.363" level="INFO">Running command 'ozone sh key info o3:///79307-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:31.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:31.269" level="INFO">${output} = {
  "volumeName": "79307-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-30T10:20:19.379Z",
  "modificationTime": "2020-04-30T10:20:20.827Z",
  "rep...</msg>
<status status="PASS" starttime="20200430 10:20:29.361" endtime="20200430 10:20:31.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:31.270" level="INFO">{
  "volumeName": "79307-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-30T10:20:19.379Z",
  "modificationTime": "2020-04-30T10:20:20.827Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104087028981825660,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200430 10:20:31.269" endtime="20200430 10:20:31.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:31.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:31.270" endtime="20200430 10:20:31.271"></status>
</kw>
<msg timestamp="20200430 10:20:31.271" level="INFO">${result} = {
  "volumeName": "79307-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-30T10:20:19.379Z",
  "modificationTime": "2020-04-30T10:20:20.827Z",
  "rep...</msg>
<status status="PASS" starttime="20200430 10:20:29.360" endtime="20200430 10:20:31.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:31.271" endtime="20200430 10:20:31.272"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:31.274" level="INFO">Running command 'ozone debug chunkinfo o3:///79307-rpcwport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:34.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:34.781" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/7d166d98-7c2b-4c95-822a-feb464e22994/current/containerDir0/1/chunks/104087028981825663_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200430 10:20:31.272" endtime="20200430 10:20:34.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:34.782" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/7d166d98-7c2b-4c95-822a-feb464e22994/current/containerDir0/1/chunks/104087028981825663_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.7",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_2.ozone_default"
    }
  ],
  "pipelineID": "dd308256-9ce4-4caf-8c14-e1c5363fafa0"
}</msg>
<status status="PASS" starttime="20200430 10:20:34.781" endtime="20200430 10:20:34.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:34.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:34.782" endtime="20200430 10:20:34.783"></status>
</kw>
<msg timestamp="20200430 10:20:34.783" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/7d166d98-7c2b-4c95-822a-feb464e22994/current/containerDir0/1/chunks/104087028981825663_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200430 10:20:31.272" endtime="20200430 10:20:34.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:34.783" endtime="20200430 10:20:34.783"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:34.786" level="INFO">Running command 'ozone sh key list o3:///79307-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:36.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:36.679" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200430 10:20:34.784" endtime="20200430 10:20:36.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:36.680" level="INFO">key1</msg>
<status status="PASS" starttime="20200430 10:20:36.680" endtime="20200430 10:20:36.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:36.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:36.681" endtime="20200430 10:20:36.681"></status>
</kw>
<msg timestamp="20200430 10:20:36.681" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200430 10:20:34.784" endtime="20200430 10:20:36.681"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:36.682" endtime="20200430 10:20:36.682"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:36.686" level="INFO">Running command 'ozone sh key rename o3:///79307-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:38.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:38.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:36.683" endtime="20200430 10:20:38.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:38.332" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:38.331" endtime="20200430 10:20:38.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:38.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:38.332" endtime="20200430 10:20:38.333"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:36.682" endtime="20200430 10:20:38.333"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:38.336" level="INFO">Running command 'ozone sh key list o3:///79307-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:40.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:40.208" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200430 10:20:38.334" endtime="20200430 10:20:40.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:40.209" level="INFO">key2</msg>
<status status="PASS" starttime="20200430 10:20:40.208" endtime="20200430 10:20:40.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:40.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:40.209" endtime="20200430 10:20:40.209"></status>
</kw>
<msg timestamp="20200430 10:20:40.210" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200430 10:20:38.333" endtime="20200430 10:20:40.210"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:40.210" endtime="20200430 10:20:40.210"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:40.214" level="INFO">Running command 'ozone sh key delete o3:///79307-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:41.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:41.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:40.211" endtime="20200430 10:20:41.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:41.856" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:41.856" endtime="20200430 10:20:41.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:41.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:41.857" endtime="20200430 10:20:41.857"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:40.210" endtime="20200430 10:20:41.857"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:17.552" endtime="20200430 10:20:41.857"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:17.552" endtime="20200430 10:20:41.857"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:41.860" level="INFO">Running command 'ozone sh bucket delete o3:///79307-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:43.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:43.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:41.858" endtime="20200430 10:20:43.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:43.494" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:43.494" endtime="20200430 10:20:43.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:43.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:43.494" endtime="20200430 10:20:43.495"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:41.858" endtime="20200430 10:20:43.495"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:43.498" level="INFO">Running command 'ozone sh volume delete o3:///79307-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:45.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:45.181" level="INFO">${output} = Volume 79307-rpcwport is deleted</msg>
<status status="PASS" starttime="20200430 10:20:43.496" endtime="20200430 10:20:45.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:45.182" level="INFO">Volume 79307-rpcwport is deleted</msg>
<status status="PASS" starttime="20200430 10:20:45.181" endtime="20200430 10:20:45.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:45.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:45.182" endtime="20200430 10:20:45.182"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:43.495" endtime="20200430 10:20:45.183"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:01.142" endtime="20200430 10:20:45.183"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200430 10:20:01.141" endtime="20200430 10:20:45.183" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:45.185" endtime="20200430 10:20:45.185"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:45.188" level="INFO">Running command 'ozone sh volume info /79307-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:46.785" level="INFO">${rc} = 255</msg>
<msg timestamp="20200430 10:20:46.785" level="INFO">${output} = VOLUME_NOT_FOUND Volume 79307-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200430 10:20:45.186" endtime="20200430 10:20:46.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:46.786" level="INFO">VOLUME_NOT_FOUND Volume 79307-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200430 10:20:46.785" endtime="20200430 10:20:46.786"></status>
</kw>
<msg timestamp="20200430 10:20:46.786" level="INFO">${result} = VOLUME_NOT_FOUND Volume 79307-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200430 10:20:45.186" endtime="20200430 10:20:46.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:46.786" endtime="20200430 10:20:46.787"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:46.789" level="INFO">Running command 'ozone sh volume create /79307-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:48.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:48.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:46.787" endtime="20200430 10:20:48.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:48.421" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:48.420" endtime="20200430 10:20:48.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:48.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:48.421" endtime="20200430 10:20:48.422"></status>
</kw>
<msg timestamp="20200430 10:20:48.422" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200430 10:20:46.787" endtime="20200430 10:20:48.422"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:48.422" endtime="20200430 10:20:48.423"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:48.426" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="79307-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:50.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:50.383" level="INFO">${output} = {
  "metadata": {},
  "name": "79307-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:48.407Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200430 10:20:48.423" endtime="20200430 10:20:50.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:50.384" level="INFO">{
  "metadata": {},
  "name": "79307-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:48.407Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200430 10:20:50.383" endtime="20200430 10:20:50.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:50.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:50.384" endtime="20200430 10:20:50.385"></status>
</kw>
<msg timestamp="20200430 10:20:50.385" level="INFO">${result} = {
  "metadata": {},
  "name": "79307-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:48.407Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200430 10:20:48.423" endtime="20200430 10:20:50.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:50.385" endtime="20200430 10:20:50.385"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:50.388" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="79307-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:52.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:52.230" level="INFO">${output} = {
  "metadata": {},
  "name": "79307-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:48.407Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200430 10:20:50.386" endtime="20200430 10:20:52.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:52.231" level="INFO">{
  "metadata": {},
  "name": "79307-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:48.407Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200430 10:20:52.230" endtime="20200430 10:20:52.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:52.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:52.231" endtime="20200430 10:20:52.232"></status>
</kw>
<msg timestamp="20200430 10:20:52.232" level="INFO">${result} = {
  "metadata": {},
  "name": "79307-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-30T10:20:48.407Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200430 10:20:50.386" endtime="20200430 10:20:52.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:52.232" endtime="20200430 10:20:52.233"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:52.236" level="INFO">Running command 'ozone sh volume update /79307-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:54.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:54.098" level="INFO">${output} = {
  "metadata" : { },
  "name" : "79307-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-30T10:20:48.407Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200430 10:20:52.233" endtime="20200430 10:20:54.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:54.099" level="INFO">{
  "metadata" : { },
  "name" : "79307-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-30T10:20:48.407Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200430 10:20:54.099" endtime="20200430 10:20:54.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:54.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:54.100" endtime="20200430 10:20:54.100"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:52.233" endtime="20200430 10:20:54.100"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:54.103" level="INFO">Running command 'ozone sh volume info /79307-rpcwoscheme | jq -r '. | select(.name=="79307-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:55.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:55.920" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200430 10:20:54.101" endtime="20200430 10:20:55.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:55.922" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200430 10:20:55.921" endtime="20200430 10:20:55.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:55.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:55.922" endtime="20200430 10:20:55.922"></status>
</kw>
<msg timestamp="20200430 10:20:55.923" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200430 10:20:54.101" endtime="20200430 10:20:55.923"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:55.923" endtime="20200430 10:20:55.923"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:55.926" level="INFO">Running command 'ozone sh bucket create /79307-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:57.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:57.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:20:55.924" endtime="20200430 10:20:57.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:57.558" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:20:57.557" endtime="20200430 10:20:57.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:57.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:57.558" endtime="20200430 10:20:57.558"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:55.923" endtime="20200430 10:20:57.559"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:57.562" level="INFO">Running command 'ozone sh bucket info /79307-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:20:59.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:20:59.351" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200430 10:20:57.560" endtime="20200430 10:20:59.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:20:59.352" level="INFO">DISK</msg>
<status status="PASS" starttime="20200430 10:20:59.351" endtime="20200430 10:20:59.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:20:59.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:20:59.352" endtime="20200430 10:20:59.353"></status>
</kw>
<msg timestamp="20200430 10:20:59.353" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200430 10:20:57.559" endtime="20200430 10:20:59.353"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200430 10:20:59.353" endtime="20200430 10:20:59.354"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:20:59.356" level="INFO">Running command 'ozone sh bucket list /79307-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:01.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:01.276" level="INFO">${output} = 79307-rpcwoscheme</msg>
<status status="PASS" starttime="20200430 10:20:59.354" endtime="20200430 10:21:01.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:01.278" level="INFO">79307-rpcwoscheme</msg>
<status status="PASS" starttime="20200430 10:21:01.277" endtime="20200430 10:21:01.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:01.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:01.278" endtime="20200430 10:21:01.278"></status>
</kw>
<msg timestamp="20200430 10:21:01.279" level="INFO">${result} = 79307-rpcwoscheme</msg>
<status status="PASS" starttime="20200430 10:20:59.354" endtime="20200430 10:21:01.279"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200430 10:21:01.279" endtime="20200430 10:21:01.279"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:01.283" level="INFO">Running command 'ozone sh key put /79307-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:04.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:04.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:21:01.281" endtime="20200430 10:21:04.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:04.727" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:21:04.726" endtime="20200430 10:21:04.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:04.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:04.727" endtime="20200430 10:21:04.728"></status>
</kw>
<status status="PASS" starttime="20200430 10:21:01.280" endtime="20200430 10:21:04.728"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:04.731" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:04.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:04.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:21:04.728" endtime="20200430 10:21:04.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:04.734" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:21:04.733" endtime="20200430 10:21:04.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:04.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:04.734" endtime="20200430 10:21:04.734"></status>
</kw>
<status status="PASS" starttime="20200430 10:21:04.728" endtime="20200430 10:21:04.735"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:04.737" level="INFO">Running command 'ozone sh key get /79307-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:07.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:07.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:21:04.735" endtime="20200430 10:21:07.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:07.912" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:21:07.911" endtime="20200430 10:21:07.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:07.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:07.912" endtime="20200430 10:21:07.913"></status>
</kw>
<status status="PASS" starttime="20200430 10:21:04.735" endtime="20200430 10:21:07.913"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:07.916" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:07.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:07.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:21:07.913" endtime="20200430 10:21:07.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:07.919" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:21:07.918" endtime="20200430 10:21:07.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:07.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:07.919" endtime="20200430 10:21:07.920"></status>
</kw>
<status status="PASS" starttime="20200430 10:21:07.913" endtime="20200430 10:21:07.920"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:07.922" level="INFO">Running command 'ozone sh key get /79307-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:09.597" level="INFO">${rc} = 255</msg>
<msg timestamp="20200430 10:21:09.597" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200430 10:21:07.920" endtime="20200430 10:21:09.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:09.598" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200430 10:21:09.597" endtime="20200430 10:21:09.598"></status>
</kw>
<msg timestamp="20200430 10:21:09.598" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200430 10:21:07.920" endtime="20200430 10:21:09.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200430 10:21:09.598" endtime="20200430 10:21:09.599"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:09.602" level="INFO">Running command 'ozone sh key get --force /79307-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:12.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:12.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:21:09.600" endtime="20200430 10:21:12.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:12.661" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:21:12.660" endtime="20200430 10:21:12.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:12.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:12.661" endtime="20200430 10:21:12.662"></status>
</kw>
<msg timestamp="20200430 10:21:12.662" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200430 10:21:09.599" endtime="20200430 10:21:12.662"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200430 10:21:12.662" endtime="20200430 10:21:12.662"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:12.665" level="INFO">Running command 'ozone sh key info /79307-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:14.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:14.559" level="INFO">${output} = {
  "volumeName": "79307-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-30T10:21:03.031Z",
  "modificationTime": "2020-04-30T10:21:04.379Z",
  "...</msg>
<status status="PASS" starttime="20200430 10:21:12.663" endtime="20200430 10:21:14.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:14.560" level="INFO">{
  "volumeName": "79307-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-30T10:21:03.031Z",
  "modificationTime": "2020-04-30T10:21:04.379Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104087031842734200,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200430 10:21:14.560" endtime="20200430 10:21:14.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:14.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:14.561" endtime="20200430 10:21:14.561"></status>
</kw>
<msg timestamp="20200430 10:21:14.561" level="INFO">${result} = {
  "volumeName": "79307-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-30T10:21:03.031Z",
  "modificationTime": "2020-04-30T10:21:04.379Z",
  "...</msg>
<status status="PASS" starttime="20200430 10:21:12.662" endtime="20200430 10:21:14.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200430 10:21:14.561" endtime="20200430 10:21:14.562"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:14.565" level="INFO">Running command 'ozone debug chunkinfo /79307-rpcwoscheme/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:17.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:17.811" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/7d166d98-7c2b-4c95-822a-feb464e22994/current/containerDir0/1/chunks/104087031842734208_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200430 10:21:14.563" endtime="20200430 10:21:17.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:17.812" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/7d166d98-7c2b-4c95-822a-feb464e22994/current/containerDir0/1/chunks/104087031842734208_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.7",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_2.ozone_default"
    }
  ],
  "pipelineID": "dd308256-9ce4-4caf-8c14-e1c5363fafa0"
}</msg>
<status status="PASS" starttime="20200430 10:21:17.812" endtime="20200430 10:21:17.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:17.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:17.812" endtime="20200430 10:21:17.813"></status>
</kw>
<msg timestamp="20200430 10:21:17.813" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/7d166d98-7c2b-4c95-822a-feb464e22994/current/containerDir0/1/chunks/104087031842734208_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200430 10:21:14.562" endtime="20200430 10:21:17.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200430 10:21:17.813" endtime="20200430 10:21:17.814"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:17.817" level="INFO">Running command 'ozone sh key list /79307-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:19.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:19.662" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200430 10:21:17.814" endtime="20200430 10:21:19.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:19.667" level="INFO">key1</msg>
<status status="PASS" starttime="20200430 10:21:19.666" endtime="20200430 10:21:19.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:19.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:19.667" endtime="20200430 10:21:19.668"></status>
</kw>
<msg timestamp="20200430 10:21:19.668" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200430 10:21:17.814" endtime="20200430 10:21:19.668"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200430 10:21:19.668" endtime="20200430 10:21:19.669"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:19.671" level="INFO">Running command 'ozone sh key rename /79307-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:21.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:21.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:21:19.669" endtime="20200430 10:21:21.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:21.293" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:21:21.292" endtime="20200430 10:21:21.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:21.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:21.293" endtime="20200430 10:21:21.294"></status>
</kw>
<status status="PASS" starttime="20200430 10:21:19.669" endtime="20200430 10:21:21.294"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:21.298" level="INFO">Running command 'ozone sh key list /79307-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:23.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:23.161" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200430 10:21:21.295" endtime="20200430 10:21:23.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:23.162" level="INFO">key2</msg>
<status status="PASS" starttime="20200430 10:21:23.161" endtime="20200430 10:21:23.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:23.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:23.162" endtime="20200430 10:21:23.163"></status>
</kw>
<msg timestamp="20200430 10:21:23.163" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200430 10:21:21.294" endtime="20200430 10:21:23.163"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200430 10:21:23.163" endtime="20200430 10:21:23.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:23.166" level="INFO">Running command 'ozone sh key delete /79307-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:24.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:24.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:21:23.164" endtime="20200430 10:21:24.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:24.845" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:21:24.844" endtime="20200430 10:21:24.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:24.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:24.845" endtime="20200430 10:21:24.846"></status>
</kw>
<status status="PASS" starttime="20200430 10:21:23.163" endtime="20200430 10:21:24.846"></status>
</kw>
<status status="PASS" starttime="20200430 10:21:01.280" endtime="20200430 10:21:24.846"></status>
</kw>
<status status="PASS" starttime="20200430 10:21:01.279" endtime="20200430 10:21:24.846"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:24.849" level="INFO">Running command 'ozone sh bucket delete /79307-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:26.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:26.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200430 10:21:24.847" endtime="20200430 10:21:26.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:26.573" level="INFO"></msg>
<status status="PASS" starttime="20200430 10:21:26.572" endtime="20200430 10:21:26.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:26.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:26.573" endtime="20200430 10:21:26.574"></status>
</kw>
<status status="PASS" starttime="20200430 10:21:24.846" endtime="20200430 10:21:26.574"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:21:26.577" level="INFO">Running command 'ozone sh volume delete /79307-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:21:28.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:21:28.302" level="INFO">${output} = Volume 79307-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200430 10:21:26.575" endtime="20200430 10:21:28.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:21:28.303" level="INFO">Volume 79307-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200430 10:21:28.303" endtime="20200430 10:21:28.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:21:28.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:21:28.304" endtime="20200430 10:21:28.304"></status>
</kw>
<status status="PASS" starttime="20200430 10:21:26.574" endtime="20200430 10:21:28.304"></status>
</kw>
<status status="PASS" starttime="20200430 10:20:45.185" endtime="20200430 10:21:28.305"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200430 10:20:45.184" endtime="20200430 10:21:28.305" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200430 10:18:33.624" endtime="20200430 10:21:28.306"></status>
</suite>
<status status="PASS" starttime="20200430 10:17:39.304" endtime="20200430 10:21:28.310"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
