<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200430 10:27:35.883" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:27:35.940" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:27:43.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:27:43.063" level="INFO">${output} = 2020-04-30 10:27:36,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:37,006 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200430 10:27:35.936" endtime="20200430 10:27:43.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:27:43.065" level="INFO">2020-04-30 10:27:36,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:37,006 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-30 10:27:37,007 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-30 10:27:37,703 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-30 10:27:37,704 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-30 10:27:37,704 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-30 10:27:37,704 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-30 10:27:37,705 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-30 10:27:37,705 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-30 10:27:37,705 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-30 10:27:37,706 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-30 10:27:37,718 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-30 10:27:37,742 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-60219, with hadoop as owner.
2020-04-30 10:27:37,771 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-60219/bucket-0-82990, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:27:38,241 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-30 10:27:38,720 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,040
Average Time spent in bucket creation: 00:00:00,007
Average Time spent in key creation: 00:00:00,037
Average Time spent in key write: 00:00:00,590
Total bytes written: 10240
Total Execution time: 00:00:05,575
***************************************************</msg>
<status status="PASS" starttime="20200430 10:27:43.064" endtime="20200430 10:27:43.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:27:43.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:27:43.065" endtime="20200430 10:27:43.065"></status>
</kw>
<msg timestamp="20200430 10:27:43.066" level="INFO">${result} = 2020-04-30 10:27:36,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:37,006 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200430 10:27:35.936" endtime="20200430 10:27:43.066"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200430 10:27:43.066" endtime="20200430 10:27:43.067"></status>
</kw>
<status status="PASS" starttime="20200430 10:27:43.066" endtime="20200430 10:27:43.067"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200430 10:27:35.935" endtime="20200430 10:27:43.067" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:27:43.072" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:27:47.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:27:47.284" level="INFO">${output} = 2020-04-30 10:27:43,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:44,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200430 10:27:43.069" endtime="20200430 10:27:47.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:27:47.286" level="INFO">2020-04-30 10:27:43,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:44,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-30 10:27:44,132 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-30 10:27:44,288 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6c76nrf4cn
2020-04-30 10:27:44,311 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-30 10:27:44,909 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-30 10:27:44,923 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-30 10:27:45,313 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-30 10:27:45,447 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-30 10:27:46,314 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-30 10:27:46,960 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1191.928324, max=1191.928324, mean=1191.928324, stddev=0.0, median=1191.928324, p75=1191.928324, p95=1191.928324, p98=1191.928324, p99=1191.928324, p999=1191.928324, mean_rate=0.4940678928177492, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-30 10:27:46,960 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-30 10:27:46,960 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-30 10:27:46,960 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200430 10:27:47.285" endtime="20200430 10:27:47.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:27:47.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:27:47.286" endtime="20200430 10:27:47.286"></status>
</kw>
<msg timestamp="20200430 10:27:47.287" level="INFO">${result} = 2020-04-30 10:27:43,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:44,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200430 10:27:43.068" endtime="20200430 10:27:47.287"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200430 10:27:47.287" endtime="20200430 10:27:47.288"></status>
</kw>
<status status="PASS" starttime="20200430 10:27:47.287" endtime="20200430 10:27:47.288"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200430 10:27:43.067" endtime="20200430 10:27:47.288" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:27:47.292" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:27:50.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:27:50.158" level="INFO">${output} = 2020-04-30 10:27:48,163 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:48,338 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200430 10:27:47.290" endtime="20200430 10:27:50.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:27:50.159" level="INFO">2020-04-30 10:27:48,163 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:48,338 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-30 10:27:48,339 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-30 10:27:48,517 [main] INFO freon.BaseFreonGenerator: Executing test with prefix a8vevi2sjl
2020-04-30 10:27:48,534 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-30 10:27:49,538 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-30 10:27:50,149 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=29.595824, max=29.595824, mean=29.595824, stddev=0.0, median=29.595824, p75=29.595824, p95=29.595824, p98=29.595824, p99=29.595824, p999=29.595824, mean_rate=0.9860471731692486, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-30 10:27:50,150 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-30 10:27:50,150 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-30 10:27:50,150 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200430 10:27:50.158" endtime="20200430 10:27:50.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:27:50.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:27:50.160" endtime="20200430 10:27:50.160"></status>
</kw>
<msg timestamp="20200430 10:27:50.160" level="INFO">${result} = 2020-04-30 10:27:48,163 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:48,338 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200430 10:27:47.289" endtime="20200430 10:27:50.160"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200430 10:27:50.161" endtime="20200430 10:27:50.161"></status>
</kw>
<status status="PASS" starttime="20200430 10:27:50.160" endtime="20200430 10:27:50.161"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200430 10:27:47.288" endtime="20200430 10:27:50.161" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200430 10:27:50.167" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200430 10:27:53.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20200430 10:27:53.011" level="INFO">${output} = 2020-04-30 10:27:51,071 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:51,230 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200430 10:27:50.164" endtime="20200430 10:27:53.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200430 10:27:53.012" level="INFO">2020-04-30 10:27:51,071 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:51,230 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-30 10:27:51,231 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-30 10:27:51,404 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 5mp2d0skpn
2020-04-30 10:27:51,424 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-30 10:27:52,429 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-30 10:27:53,001 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=6.756928, max=6.756928, mean=6.756928, stddev=0.0, median=6.756928, p75=6.756928, p95=6.756928, p98=6.756928, p99=6.756928, p999=6.756928, mean_rate=0.990215447472677, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-30 10:27:53,003 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-30 10:27:53,003 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-30 10:27:53,003 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200430 10:27:53.011" endtime="20200430 10:27:53.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200430 10:27:53.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200430 10:27:53.012" endtime="20200430 10:27:53.013"></status>
</kw>
<msg timestamp="20200430 10:27:53.013" level="INFO">${result} = 2020-04-30 10:27:51,071 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-30 10:27:51,230 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200430 10:27:50.163" endtime="20200430 10:27:53.013"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200430 10:27:53.013" endtime="20200430 10:27:53.014"></status>
</kw>
<status status="PASS" starttime="20200430 10:27:53.013" endtime="20200430 10:27:53.014"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200430 10:27:50.162" endtime="20200430 10:27:53.014" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200430 10:27:35.911" endtime="20200430 10:27:53.015"></status>
</suite>
<status status="PASS" starttime="20200430 10:27:35.884" endtime="20200430 10:27:53.018"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
