<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200427 13:57:04.949" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:57:04.995" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:57:12.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:57:12.150" level="INFO">${output} = 2020-04-27 13:57:05,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:05,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:57:04.991" endtime="20200427 13:57:12.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:57:12.151" level="INFO">2020-04-27 13:57:05,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:05,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 13:57:05,987 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 13:57:06,792 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-27 13:57:06,793 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-27 13:57:06,793 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-27 13:57:06,793 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-27 13:57:06,793 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-27 13:57:06,793 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-27 13:57:06,793 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-27 13:57:06,794 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-27 13:57:06,802 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 13:57:06,834 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-60247, with hadoop as owner.
2020-04-27 13:57:06,869 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-60247/bucket-0-32840, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:57:07,324 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-27 13:57:07,805 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,050
Average Time spent in bucket creation: 00:00:00,030
Average Time spent in key creation: 00:00:00,035
Average Time spent in key write: 00:00:00,567
Total bytes written: 10240
Total Execution time: 00:00:05,569
***************************************************</msg>
<status status="PASS" starttime="20200427 13:57:12.150" endtime="20200427 13:57:12.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:57:12.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:57:12.152" endtime="20200427 13:57:12.152"></status>
</kw>
<msg timestamp="20200427 13:57:12.152" level="INFO">${result} = 2020-04-27 13:57:05,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:05,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:57:04.990" endtime="20200427 13:57:12.152"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 13:57:12.153" endtime="20200427 13:57:12.153"></status>
</kw>
<status status="PASS" starttime="20200427 13:57:12.153" endtime="20200427 13:57:12.154"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 13:57:04.990" endtime="20200427 13:57:12.154" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:57:12.158" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:57:16.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:57:16.278" level="INFO">${output} = 2020-04-27 13:57:12,964 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:13,103 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:57:12.155" endtime="20200427 13:57:16.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:57:16.279" level="INFO">2020-04-27 13:57:12,964 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:13,103 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 13:57:13,103 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 13:57:13,393 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 981mijwjgg
2020-04-27 13:57:13,399 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 13:57:13,882 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-27 13:57:13,900 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:57:14,389 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-27 13:57:14,408 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 13:57:15,409 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-27 13:57:15,951 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1315.551233, max=1315.551233, mean=1315.551233, stddev=0.0, median=1315.551233, p75=1315.551233, p95=1315.551233, p98=1315.551233, p99=1315.551233, p999=1315.551233, mean_rate=0.4914665978842781, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-27 13:57:15,951 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-27 13:57:15,951 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-27 13:57:15,951 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200427 13:57:16.278" endtime="20200427 13:57:16.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:57:16.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:57:16.280" endtime="20200427 13:57:16.280"></status>
</kw>
<msg timestamp="20200427 13:57:16.280" level="INFO">${result} = 2020-04-27 13:57:12,964 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:13,103 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:57:12.155" endtime="20200427 13:57:16.280"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 13:57:16.281" endtime="20200427 13:57:16.281"></status>
</kw>
<status status="PASS" starttime="20200427 13:57:16.281" endtime="20200427 13:57:16.281"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 13:57:12.154" endtime="20200427 13:57:16.282" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:57:16.286" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:57:19.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:57:19.077" level="INFO">${output} = 2020-04-27 13:57:17,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:17,223 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:57:16.283" endtime="20200427 13:57:19.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:57:19.079" level="INFO">2020-04-27 13:57:17,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:17,223 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 13:57:17,223 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 13:57:17,486 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qsnvh2hmms
2020-04-27 13:57:17,492 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 13:57:18,502 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-27 13:57:19,069 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=31.658572, max=31.658572, mean=31.658572, stddev=0.0, median=31.658572, p75=31.658572, p95=31.658572, p98=31.658572, p99=31.658572, p999=31.658572, mean_rate=0.9900066569829628, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-27 13:57:19,069 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-27 13:57:19,070 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-27 13:57:19,070 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200427 13:57:19.078" endtime="20200427 13:57:19.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:57:19.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:57:19.079" endtime="20200427 13:57:19.079"></status>
</kw>
<msg timestamp="20200427 13:57:19.080" level="INFO">${result} = 2020-04-27 13:57:17,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:17,223 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:57:16.283" endtime="20200427 13:57:19.080"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 13:57:19.080" endtime="20200427 13:57:19.081"></status>
</kw>
<status status="PASS" starttime="20200427 13:57:19.080" endtime="20200427 13:57:19.081"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 13:57:16.282" endtime="20200427 13:57:19.081" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:57:19.086" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:57:21.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:57:21.936" level="INFO">${output} = 2020-04-27 13:57:19,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:20,051 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:57:19.082" endtime="20200427 13:57:21.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:57:21.937" level="INFO">2020-04-27 13:57:19,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:20,051 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 13:57:20,051 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 13:57:20,277 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bodb77h8wz
2020-04-27 13:57:20,296 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 13:57:21,316 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-27 13:57:21,913 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.906073, max=8.906073, mean=8.906073, stddev=0.0, median=8.906073, p75=8.906073, p95=8.906073, p98=8.906073, p99=8.906073, p999=8.906073, mean_rate=0.9893648580752549, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-27 13:57:21,918 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-27 13:57:21,918 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-27 13:57:21,918 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200427 13:57:21.936" endtime="20200427 13:57:21.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:57:21.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:57:21.937" endtime="20200427 13:57:21.938"></status>
</kw>
<msg timestamp="20200427 13:57:21.938" level="INFO">${result} = 2020-04-27 13:57:19,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:57:20,051 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:57:19.082" endtime="20200427 13:57:21.938"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 13:57:21.939" endtime="20200427 13:57:21.939"></status>
</kw>
<status status="PASS" starttime="20200427 13:57:21.938" endtime="20200427 13:57:21.939"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 13:57:19.081" endtime="20200427 13:57:21.939" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200427 13:57:04.970" endtime="20200427 13:57:21.941"></status>
</suite>
<status status="PASS" starttime="20200427 13:57:04.949" endtime="20200427 13:57:21.944"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
