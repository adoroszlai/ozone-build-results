<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200427 13:47:02.721" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200427 13:47:02.767" endtime="20200427 13:47:02.768"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:47:02.771" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:47:02.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:47:02.876" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 27 Apr 2020 13:47:02 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Apr 2020 13:25:32 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200427 13:47:02.768" endtime="20200427 13:47:02.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:47:02.877" level="INFO">HTTP/1.1 200 OK
Date: Mon, 27 Apr 2020 13:47:02 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Apr 2020 13:25:32 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200427 13:47:02.876" endtime="20200427 13:47:02.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:47:02.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:47:02.877" endtime="20200427 13:47:02.877"></status>
</kw>
<msg timestamp="20200427 13:47:02.878" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 27 Apr 2020 13:47:02 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Apr 2020 13:25:32 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200427 13:47:02.768" endtime="20200427 13:47:02.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200427 13:47:02.878" endtime="20200427 13:47:02.878"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 13:47:02.767" endtime="20200427 13:47:02.878" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 13:47:02.880" endtime="20200427 13:47:02.880"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:47:02.883" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:17.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:17.205" level="INFO">${output} = 2020-04-27 13:47:03,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:47:04,003 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:47:02.880" endtime="20200427 13:48:17.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:17.207" level="INFO">2020-04-27 13:47:03,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:47:04,003 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 13:47:04,003 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 13:47:05,230 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-27 13:47:05,230 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-27 13:47:05,231 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-27 13:47:05,231 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-27 13:47:05,231 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-27 13:47:05,231 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-27 13:47:05,231 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-27 13:47:05,234 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-27 13:47:05,235 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-27 13:47:05,242 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-27 13:47:05,270 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-28452, with hadoop as owner.
2020-04-27 13:47:05,402 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-79440, with hadoop as owner.
2020-04-27 13:47:05,416 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-73259, with hadoop as owner.
2020-04-27 13:47:05,424 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-89029, with hadoop as owner.
2020-04-27 13:47:05,429 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-40560, with hadoop as owner.
2020-04-27 13:47:05,436 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28452/bucket-0-44807, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,458 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-79440/bucket-0-21436, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,465 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73259/bucket-0-87812, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,473 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-89029/bucket-0-71852, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,479 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40560/bucket-0-45325, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,484 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28452/bucket-1-30152, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,488 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-79440/bucket-1-01901, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,495 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73259/bucket-1-43531, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,500 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-89029/bucket-1-67024, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,505 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40560/bucket-1-84400, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,508 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28452/bucket-2-57737, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,531 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-79440/bucket-2-61178, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,537 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73259/bucket-2-81853, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,542 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-89029/bucket-2-64375, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,552 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40560/bucket-2-66316, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,557 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28452/bucket-3-79441, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,565 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-79440/bucket-3-22489, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,570 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73259/bucket-3-09199, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,574 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-89029/bucket-3-38991, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,578 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40560/bucket-3-20587, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,582 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28452/bucket-4-15881, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,586 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-79440/bucket-4-20486, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,592 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73259/bucket-4-64352, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,597 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-89029/bucket-4-74951, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:05,600 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40560/bucket-4-38471, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:47:06,249 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-27 13:47:06,262 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-27 13:47:07,249 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-27 13:47:08,250 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-27 13:47:09,256 [Thread-8] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-04-27 13:47:10,257 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-27 13:47:11,257 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-27 13:47:12,258 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-27 13:47:13,258 [Thread-8] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-04-27 13:47:14,259 [Thread-8] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-04-27 13:47:15,260 [Thread-8] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-04-27 13:47:16,260 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-04-27 13:47:17,261 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-04-27 13:47:18,263 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-04-27 13:47:19,265 [Thread-8] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-04-27 13:47:20,265 [Thread-8] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-04-27 13:47:21,266 [Thread-8] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-04-27 13:47:22,266 [Thread-8] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-04-27 13:47:23,266 [Thread-8] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-04-27 13:47:24,267 [Thread-8] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-04-27 13:47:25,267 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-04-27 13:47:26,268 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-04-27 13:47:27,269 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-04-27 13:47:28,269 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-04-27 13:47:29,270 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-04-27 13:47:30,270 [Thread-8] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-04-27 13:47:31,271 [Thread-8] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-04-27 13:47:32,271 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-04-27 13:47:33,271 [Thread-8] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-04-27 13:47:34,272 [Thread-8] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-04-27 13:47:35,272 [Thread-8] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-04-27 13:47:36,273 [Thread-8] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-04-27 13:47:37,273 [Thread-8] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-04-27 13:47:38,274 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-27 13:47:39,274 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-27 13:47:40,275 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-27 13:47:41,275 [Thread-8] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-04-27 13:47:42,275 [Thread-8] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-04-27 13:47:43,276 [Thread-8] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-04-27 13:47:44,276 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-04-27 13:47:45,277 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-04-27 13:47:46,277 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-04-27 13:47:47,278 [Thread-8] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-04-27 13:47:48,278 [Thread-8] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-04-27 13:47:49,279 [Thread-8] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-04-27 13:47:50,279 [Thread-8] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-04-27 13:47:51,280 [Thread-8] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-04-27 13:47:52,280 [Thread-8] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-04-27 13:47:53,281 [Thread-8] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-04-27 13:47:54,281 [Thread-8] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-04-27 13:47:55,285 [Thread-8] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-04-27 13:47:56,286 [Thread-8] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-04-27 13:47:57,286 [Thread-8] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-04-27 13:47:58,290 [Thread-8] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-04-27 13:47:59,290 [Thread-8] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-04-27 13:48:00,291 [Thread-8] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-04-27 13:48:01,296 [Thread-8] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-04-27 13:48:02,297 [Thread-8] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-04-27 13:48:03,297 [Thread-8] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-04-27 13:48:04,297 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-04-27 13:48:05,298 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-04-27 13:48:06,298 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-04-27 13:48:07,299 [Thread-8] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-04-27 13:48:08,299 [Thread-8] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-04-27 13:48:09,300 [Thread-8] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-04-27 13:48:10,300 [Thread-8] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-04-27 13:48:11,301 [Thread-8] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-04-27 13:48:12,301 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,176
Average Time spent in bucket creation: 00:00:00,115
Average Time spent in key creation: 00:00:01,771
Average Time spent in key write: 00:00:00,682
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:12,597
***************************************************</msg>
<status status="PASS" starttime="20200427 13:48:17.205" endtime="20200427 13:48:17.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:17.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:17.207" endtime="20200427 13:48:17.208"></status>
</kw>
<msg timestamp="20200427 13:48:17.208" level="INFO">${result} = 2020-04-27 13:47:03,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:47:04,003 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:47:02.880" endtime="20200427 13:48:17.208"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:17.208" endtime="20200427 13:48:17.209"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:17.208" endtime="20200427 13:48:17.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:17.209" endtime="20200427 13:48:17.209"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 13:47:02.879" endtime="20200427 13:48:17.209" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200427 13:47:02.746" endtime="20200427 13:48:17.210"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200427 13:48:17.218" level="INFO">${random} = 62767</msg>
<status status="PASS" starttime="20200427 13:48:17.217" endtime="20200427 13:48:17.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200427 13:48:17.218" level="INFO">${prefix} = 62767</msg>
<status status="PASS" starttime="20200427 13:48:17.218" endtime="20200427 13:48:17.218"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:17.217" endtime="20200427 13:48:17.218"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:17.219" endtime="20200427 13:48:17.220"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:17.224" level="INFO">Running command 'ozone sh volume info o3://om:9862/62767-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:18.973" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 13:48:18.973" level="INFO">${output} = VOLUME_NOT_FOUND Volume 62767-rpcwoport is not found</msg>
<status status="PASS" starttime="20200427 13:48:17.221" endtime="20200427 13:48:18.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:18.974" level="INFO">VOLUME_NOT_FOUND Volume 62767-rpcwoport is not found</msg>
<status status="PASS" starttime="20200427 13:48:18.974" endtime="20200427 13:48:18.974"></status>
</kw>
<msg timestamp="20200427 13:48:18.975" level="INFO">${result} = VOLUME_NOT_FOUND Volume 62767-rpcwoport is not found</msg>
<status status="PASS" starttime="20200427 13:48:17.220" endtime="20200427 13:48:18.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:18.975" endtime="20200427 13:48:18.975"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:18.978" level="INFO">Running command 'ozone sh volume create o3://om:9862/62767-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:20.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:20.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:48:18.976" endtime="20200427 13:48:20.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:20.666" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:48:20.665" endtime="20200427 13:48:20.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:20.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:20.666" endtime="20200427 13:48:20.667"></status>
</kw>
<msg timestamp="20200427 13:48:20.667" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 13:48:18.975" endtime="20200427 13:48:20.667"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:20.667" endtime="20200427 13:48:20.667"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:20.672" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="62767-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:22.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:22.512" level="INFO">${output} = {
  "metadata": {},
  "name": "62767-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:48:20.646Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200427 13:48:20.669" endtime="20200427 13:48:22.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:22.513" level="INFO">{
  "metadata": {},
  "name": "62767-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:48:20.646Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 13:48:22.513" endtime="20200427 13:48:22.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:22.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:22.514" endtime="20200427 13:48:22.514"></status>
</kw>
<msg timestamp="20200427 13:48:22.514" level="INFO">${result} = {
  "metadata": {},
  "name": "62767-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:48:20.646Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200427 13:48:20.667" endtime="20200427 13:48:22.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:22.515" endtime="20200427 13:48:22.515"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:22.518" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="62767-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:24.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:24.475" level="INFO">${output} = {
  "metadata": {},
  "name": "62767-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:48:20.646Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200427 13:48:22.516" endtime="20200427 13:48:24.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:24.476" level="INFO">{
  "metadata": {},
  "name": "62767-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:48:20.646Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 13:48:24.475" endtime="20200427 13:48:24.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:24.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:24.476" endtime="20200427 13:48:24.477"></status>
</kw>
<msg timestamp="20200427 13:48:24.477" level="INFO">${result} = {
  "metadata": {},
  "name": "62767-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:48:20.646Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200427 13:48:22.515" endtime="20200427 13:48:24.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:24.477" endtime="20200427 13:48:24.478"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:24.480" level="INFO">Running command 'ozone sh volume update o3://om:9862/62767-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:26.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:26.412" level="INFO">${output} = {
  "metadata" : { },
  "name" : "62767-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T13:48:20.646Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200427 13:48:24.478" endtime="20200427 13:48:26.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:26.413" level="INFO">{
  "metadata" : { },
  "name" : "62767-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T13:48:20.646Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200427 13:48:26.412" endtime="20200427 13:48:26.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:26.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:26.413" endtime="20200427 13:48:26.413"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:24.478" endtime="20200427 13:48:26.413"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:26.417" level="INFO">Running command 'ozone sh volume info o3://om:9862/62767-rpcwoport | jq -r '. | select(.name=="62767-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:28.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:28.319" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200427 13:48:26.414" endtime="20200427 13:48:28.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:28.320" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200427 13:48:28.320" endtime="20200427 13:48:28.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:28.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:28.321" endtime="20200427 13:48:28.321"></status>
</kw>
<msg timestamp="20200427 13:48:28.321" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200427 13:48:26.414" endtime="20200427 13:48:28.321"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:28.322" endtime="20200427 13:48:28.322"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:28.325" level="INFO">Running command 'ozone sh bucket create o3://om:9862/62767-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:29.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:29.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:48:28.322" endtime="20200427 13:48:29.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:29.989" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:48:29.988" endtime="20200427 13:48:29.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:29.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:29.989" endtime="20200427 13:48:29.989"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:28.322" endtime="20200427 13:48:29.990"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:29.993" level="INFO">Running command 'ozone sh bucket info o3://om:9862/62767-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:31.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:31.779" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200427 13:48:29.991" endtime="20200427 13:48:31.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:31.780" level="INFO">DISK</msg>
<status status="PASS" starttime="20200427 13:48:31.779" endtime="20200427 13:48:31.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:31.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:31.780" endtime="20200427 13:48:31.781"></status>
</kw>
<msg timestamp="20200427 13:48:31.781" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200427 13:48:29.990" endtime="20200427 13:48:31.781"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:31.781" endtime="20200427 13:48:31.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:31.785" level="INFO">Running command 'ozone sh bucket list o3://om:9862/62767-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:33.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:33.630" level="INFO">${output} = 62767-rpcwoport</msg>
<status status="PASS" starttime="20200427 13:48:31.782" endtime="20200427 13:48:33.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:33.631" level="INFO">62767-rpcwoport</msg>
<status status="PASS" starttime="20200427 13:48:33.631" endtime="20200427 13:48:33.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:33.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:33.631" endtime="20200427 13:48:33.632"></status>
</kw>
<msg timestamp="20200427 13:48:33.632" level="INFO">${result} = 62767-rpcwoport</msg>
<status status="PASS" starttime="20200427 13:48:31.781" endtime="20200427 13:48:33.632"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:33.632" endtime="20200427 13:48:33.633"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:33.636" level="INFO">Running command 'ozone sh key put o3://om:9862/62767-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:36.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:36.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:48:33.634" endtime="20200427 13:48:36.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:36.855" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:48:36.854" endtime="20200427 13:48:36.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:36.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:36.855" endtime="20200427 13:48:36.856"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:33.633" endtime="20200427 13:48:36.856"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:36.859" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:36.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:36.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:48:36.856" endtime="20200427 13:48:36.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:36.861" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:48:36.861" endtime="20200427 13:48:36.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:36.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:36.861" endtime="20200427 13:48:36.862"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:36.856" endtime="20200427 13:48:36.862"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:36.866" level="INFO">Running command 'ozone sh key get o3://om:9862/62767-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:40.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:40.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:48:36.863" endtime="20200427 13:48:40.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:40.011" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:48:40.010" endtime="20200427 13:48:40.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:40.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:40.011" endtime="20200427 13:48:40.011"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:36.862" endtime="20200427 13:48:40.012"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:40.014" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:40.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:40.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:48:40.012" endtime="20200427 13:48:40.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:40.019" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:48:40.018" endtime="20200427 13:48:40.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:40.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:40.019" endtime="20200427 13:48:40.019"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:40.012" endtime="20200427 13:48:40.020"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:40.022" level="INFO">Running command 'ozone sh key get o3://om:9862/62767-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:41.810" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 13:48:41.810" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 13:48:40.020" endtime="20200427 13:48:41.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:41.811" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 13:48:41.811" endtime="20200427 13:48:41.812"></status>
</kw>
<msg timestamp="20200427 13:48:41.812" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 13:48:40.020" endtime="20200427 13:48:41.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:41.812" endtime="20200427 13:48:41.813"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:41.816" level="INFO">Running command 'ozone sh key get --force o3://om:9862/62767-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:45.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:45.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:48:41.813" endtime="20200427 13:48:45.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:45.095" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:48:45.094" endtime="20200427 13:48:45.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:45.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:45.095" endtime="20200427 13:48:45.096"></status>
</kw>
<msg timestamp="20200427 13:48:45.096" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 13:48:41.813" endtime="20200427 13:48:45.096"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:45.096" endtime="20200427 13:48:45.097"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:45.100" level="INFO">Running command 'ozone sh key info o3://om:9862/62767-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:47.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:47.070" level="INFO">${output} = {
  "volumeName": "62767-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T13:48:35.251Z",
  "modificationTime": "2020-04-27T13:48:36.489Z",
  "re...</msg>
<status status="PASS" starttime="20200427 13:48:45.097" endtime="20200427 13:48:47.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:47.071" level="INFO">{
  "volumeName": "62767-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T13:48:35.251Z",
  "modificationTime": "2020-04-27T13:48:36.489Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104070860980289660,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200427 13:48:47.070" endtime="20200427 13:48:47.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:47.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:47.071" endtime="20200427 13:48:47.072"></status>
</kw>
<msg timestamp="20200427 13:48:47.072" level="INFO">${result} = {
  "volumeName": "62767-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T13:48:35.251Z",
  "modificationTime": "2020-04-27T13:48:36.489Z",
  "re...</msg>
<status status="PASS" starttime="20200427 13:48:45.097" endtime="20200427 13:48:47.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:47.072" endtime="20200427 13:48:47.072"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:47.076" level="INFO">Running command 'ozone debug chunkinfo o3://om:9862/62767-rpcwoport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:50.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:50.828" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/c0fbb108-1eaf-4327-a579-4a1d326f82cc/current/containerDir0/1/chunks/104070860980289661_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 13:48:47.073" endtime="20200427 13:48:50.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:50.829" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/c0fbb108-1eaf-4327-a579-4a1d326f82cc/current/containerDir0/1/chunks/104070860980289661_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.4",
      "hostName": "ozone_datanode_1.ozone_default"
    }
  ],
  "pipelineID": "04cd8456-2c79-4a47-a2e0-6b5ef6882f28"
}</msg>
<status status="PASS" starttime="20200427 13:48:50.828" endtime="20200427 13:48:50.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:50.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:50.830" endtime="20200427 13:48:50.831"></status>
</kw>
<msg timestamp="20200427 13:48:50.831" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/c0fbb108-1eaf-4327-a579-4a1d326f82cc/current/containerDir0/1/chunks/104070860980289661_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 13:48:47.073" endtime="20200427 13:48:50.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:50.831" endtime="20200427 13:48:50.832"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:50.835" level="INFO">Running command 'ozone sh key list o3://om:9862/62767-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:52.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:52.750" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200427 13:48:50.833" endtime="20200427 13:48:52.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:52.751" level="INFO">key1</msg>
<status status="PASS" starttime="20200427 13:48:52.750" endtime="20200427 13:48:52.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:52.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:52.751" endtime="20200427 13:48:52.752"></status>
</kw>
<msg timestamp="20200427 13:48:52.752" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200427 13:48:50.832" endtime="20200427 13:48:52.752"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:52.752" endtime="20200427 13:48:52.753"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:52.755" level="INFO">Running command 'ozone sh key rename o3://om:9862/62767-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:54.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:54.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:48:52.753" endtime="20200427 13:48:54.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:54.457" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:48:54.456" endtime="20200427 13:48:54.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:54.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:54.457" endtime="20200427 13:48:54.458"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:52.753" endtime="20200427 13:48:54.458"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:54.461" level="INFO">Running command 'ozone sh key list o3://om:9862/62767-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:56.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:56.359" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200427 13:48:54.459" endtime="20200427 13:48:56.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:56.361" level="INFO">key2</msg>
<status status="PASS" starttime="20200427 13:48:56.360" endtime="20200427 13:48:56.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:56.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:56.361" endtime="20200427 13:48:56.362"></status>
</kw>
<msg timestamp="20200427 13:48:56.362" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200427 13:48:54.458" endtime="20200427 13:48:56.362"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200427 13:48:56.362" endtime="20200427 13:48:56.362"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:56.365" level="INFO">Running command 'ozone sh key delete o3://om:9862/62767-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:58.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:58.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:48:56.363" endtime="20200427 13:48:58.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:58.090" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:48:58.089" endtime="20200427 13:48:58.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:58.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:58.090" endtime="20200427 13:48:58.091"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:56.362" endtime="20200427 13:48:58.091"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:33.633" endtime="20200427 13:48:58.091"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:33.633" endtime="20200427 13:48:58.091"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:58.093" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/62767-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:48:59.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:48:59.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:48:58.092" endtime="20200427 13:48:59.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:48:59.857" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:48:59.856" endtime="20200427 13:48:59.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:48:59.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:48:59.857" endtime="20200427 13:48:59.858"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:58.091" endtime="20200427 13:48:59.858"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:48:59.861" level="INFO">Running command 'ozone sh volume delete o3://om:9862/62767-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:01.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:01.577" level="INFO">${output} = Volume 62767-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200427 13:48:59.859" endtime="20200427 13:49:01.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:01.578" level="INFO">Volume 62767-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200427 13:49:01.578" endtime="20200427 13:49:01.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:01.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:01.579" endtime="20200427 13:49:01.579"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:59.858" endtime="20200427 13:49:01.580"></status>
</kw>
<status status="PASS" starttime="20200427 13:48:17.220" endtime="20200427 13:49:01.580"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 13:48:17.219" endtime="20200427 13:49:01.580" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:01.581" endtime="20200427 13:49:01.582"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:01.586" level="INFO">Running command 'ozone sh volume create o3://om:9862/62767-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:03.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:03.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:49:01.583" endtime="20200427 13:49:03.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:03.321" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:49:03.320" endtime="20200427 13:49:03.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:03.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:03.321" endtime="20200427 13:49:03.322"></status>
</kw>
<status status="PASS" starttime="20200427 13:49:01.582" endtime="20200427 13:49:03.322"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:03.325" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62767-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:05.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:05.175" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:03.322" endtime="20200427 13:49:05.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:05.176" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:05.175" endtime="20200427 13:49:05.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:05.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:05.176" endtime="20200427 13:49:05.177"></status>
</kw>
<msg timestamp="20200427 13:49:05.177" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:03.322" endtime="20200427 13:49:05.177"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:05.177" endtime="20200427 13:49:05.178"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:05.180" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/62767-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:06.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:06.944" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200427 13:49:05.179" endtime="20200427 13:49:06.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:06.945" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200427 13:49:06.945" endtime="20200427 13:49:06.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:06.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:06.945" endtime="20200427 13:49:06.946"></status>
</kw>
<msg timestamp="20200427 13:49:06.946" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200427 13:49:05.178" endtime="20200427 13:49:06.946"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:06.950" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62767-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:08.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:08.761" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:06.947" endtime="20200427 13:49:08.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:08.765" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:08.764" endtime="20200427 13:49:08.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:08.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:08.765" endtime="20200427 13:49:08.766"></status>
</kw>
<msg timestamp="20200427 13:49:08.766" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:06.946" endtime="20200427 13:49:08.766"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:08.766" endtime="20200427 13:49:08.767"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:08.770" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/62767-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:10.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:10.508" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200427 13:49:08.768" endtime="20200427 13:49:10.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:10.509" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200427 13:49:10.509" endtime="20200427 13:49:10.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:10.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:10.510" endtime="20200427 13:49:10.510"></status>
</kw>
<msg timestamp="20200427 13:49:10.510" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200427 13:49:08.767" endtime="20200427 13:49:10.510"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:10.513" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62767-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:12.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:12.345" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:10.511" endtime="20200427 13:49:12.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:12.346" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:12.345" endtime="20200427 13:49:12.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:12.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:12.346" endtime="20200427 13:49:12.347"></status>
</kw>
<msg timestamp="20200427 13:49:12.347" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:10.510" endtime="20200427 13:49:12.347"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:12.347" endtime="20200427 13:49:12.348"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:12.351" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/62767-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:14.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:14.067" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 13:49:12.348" endtime="20200427 13:49:14.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:14.069" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 13:49:14.068" endtime="20200427 13:49:14.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:14.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:14.069" endtime="20200427 13:49:14.069"></status>
</kw>
<msg timestamp="20200427 13:49:14.069" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 13:49:12.348" endtime="20200427 13:49:14.069"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:14.072" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62767-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:15.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:15.881" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200427 13:49:14.070" endtime="20200427 13:49:15.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:15.882" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:15.881" endtime="20200427 13:49:15.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:15.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:15.882" endtime="20200427 13:49:15.883"></status>
</kw>
<msg timestamp="20200427 13:49:15.883" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200427 13:49:14.070" endtime="20200427 13:49:15.883"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:15.883" endtime="20200427 13:49:15.883"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:15.884" endtime="20200427 13:49:15.884"></status>
</kw>
<status status="PASS" starttime="20200427 13:49:01.582" endtime="20200427 13:49:15.884"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 13:49:01.581" endtime="20200427 13:49:15.885" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:15.886" endtime="20200427 13:49:15.886"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:15.889" level="INFO">Running command 'ozone sh bucket create o3://om:9862/62767-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:17.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:17.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:49:15.887" endtime="20200427 13:49:17.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:17.554" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:49:17.553" endtime="20200427 13:49:17.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:17.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:17.554" endtime="20200427 13:49:17.555"></status>
</kw>
<status status="PASS" starttime="20200427 13:49:15.886" endtime="20200427 13:49:17.555"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:17.559" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62767-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:19.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:19.463" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:17.556" endtime="20200427 13:49:19.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:19.464" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:19.463" endtime="20200427 13:49:19.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:19.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:19.464" endtime="20200427 13:49:19.465"></status>
</kw>
<msg timestamp="20200427 13:49:19.465" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:17.555" endtime="20200427 13:49:19.465"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:19.465" endtime="20200427 13:49:19.466"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:19.468" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/62767-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:21.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:21.217" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200427 13:49:19.466" endtime="20200427 13:49:21.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:21.218" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200427 13:49:21.218" endtime="20200427 13:49:21.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:21.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:21.219" endtime="20200427 13:49:21.219"></status>
</kw>
<msg timestamp="20200427 13:49:21.219" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200427 13:49:19.466" endtime="20200427 13:49:21.219"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:21.222" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62767-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:23.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:23.215" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:21.220" endtime="20200427 13:49:23.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:23.216" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:23.216" endtime="20200427 13:49:23.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:23.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:23.217" endtime="20200427 13:49:23.217"></status>
</kw>
<msg timestamp="20200427 13:49:23.217" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:21.219" endtime="20200427 13:49:23.217"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:23.217" endtime="20200427 13:49:23.219"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:23.223" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/62767-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:24.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:24.937" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 13:49:23.219" endtime="20200427 13:49:24.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:24.938" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 13:49:24.937" endtime="20200427 13:49:24.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:24.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:24.938" endtime="20200427 13:49:24.939"></status>
</kw>
<msg timestamp="20200427 13:49:24.939" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 13:49:23.219" endtime="20200427 13:49:24.939"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:24.942" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62767-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:26.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:26.775" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:24.940" endtime="20200427 13:49:26.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:26.776" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:26.776" endtime="20200427 13:49:26.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:26.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:26.776" endtime="20200427 13:49:26.777"></status>
</kw>
<msg timestamp="20200427 13:49:26.777" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:24.939" endtime="20200427 13:49:26.777"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:26.777" endtime="20200427 13:49:26.778"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:26.781" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/62767-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:28.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:28.521" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 13:49:26.779" endtime="20200427 13:49:28.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:28.522" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 13:49:28.521" endtime="20200427 13:49:28.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:28.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:28.522" endtime="20200427 13:49:28.522"></status>
</kw>
<msg timestamp="20200427 13:49:28.522" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 13:49:26.778" endtime="20200427 13:49:28.523"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:28.525" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62767-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:30.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:30.463" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200427 13:49:28.523" endtime="20200427 13:49:30.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:30.464" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:30.463" endtime="20200427 13:49:30.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:30.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:30.464" endtime="20200427 13:49:30.465"></status>
</kw>
<msg timestamp="20200427 13:49:30.465" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200427 13:49:28.523" endtime="20200427 13:49:30.465"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:30.465" endtime="20200427 13:49:30.466"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:30.466" endtime="20200427 13:49:30.466"></status>
</kw>
<status status="PASS" starttime="20200427 13:49:15.886" endtime="20200427 13:49:30.466"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 13:49:15.885" endtime="20200427 13:49:30.466" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:30.468" endtime="20200427 13:49:30.468"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:30.472" level="INFO">Running command 'ozone sh key put o3://om:9862/62767-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:33.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:33.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:49:30.469" endtime="20200427 13:49:33.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:33.916" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:49:33.916" endtime="20200427 13:49:33.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:33.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:33.916" endtime="20200427 13:49:33.917"></status>
</kw>
<status status="PASS" starttime="20200427 13:49:30.469" endtime="20200427 13:49:33.917"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:33.920" level="INFO">Running command 'ozone sh key getacl o3://om:9862/62767-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:35.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:35.777" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:33.918" endtime="20200427 13:49:35.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:35.779" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:35.778" endtime="20200427 13:49:35.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:35.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:35.779" endtime="20200427 13:49:35.779"></status>
</kw>
<msg timestamp="20200427 13:49:35.780" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:33.917" endtime="20200427 13:49:35.780"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:35.780" endtime="20200427 13:49:35.780"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:35.783" level="INFO">Running command 'ozone sh key addacl o3://om:9862/62767-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:37.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:37.462" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200427 13:49:35.781" endtime="20200427 13:49:37.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:37.463" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200427 13:49:37.462" endtime="20200427 13:49:37.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:37.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:37.463" endtime="20200427 13:49:37.464"></status>
</kw>
<msg timestamp="20200427 13:49:37.464" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200427 13:49:35.780" endtime="20200427 13:49:37.464"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:37.467" level="INFO">Running command 'ozone sh key getacl o3://om:9862/62767-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:39.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:39.375" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:37.465" endtime="20200427 13:49:39.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:39.376" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:39.376" endtime="20200427 13:49:39.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:39.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:39.377" endtime="20200427 13:49:39.377"></status>
</kw>
<msg timestamp="20200427 13:49:39.378" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:37.464" endtime="20200427 13:49:39.378"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:39.378" endtime="20200427 13:49:39.379"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:39.382" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/62767-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:41.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:41.162" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 13:49:39.380" endtime="20200427 13:49:41.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:41.163" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 13:49:41.162" endtime="20200427 13:49:41.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:41.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:41.163" endtime="20200427 13:49:41.164"></status>
</kw>
<msg timestamp="20200427 13:49:41.164" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 13:49:39.379" endtime="20200427 13:49:41.164"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:41.168" level="INFO">Running command 'ozone sh key getacl o3://om:9862/62767-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:43.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:43.164" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:41.165" endtime="20200427 13:49:43.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:43.166" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:43.165" endtime="20200427 13:49:43.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:43.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:43.166" endtime="20200427 13:49:43.166"></status>
</kw>
<msg timestamp="20200427 13:49:43.167" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 13:49:41.164" endtime="20200427 13:49:43.167"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:43.167" endtime="20200427 13:49:43.167"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:43.171" level="INFO">Running command 'ozone sh key setacl o3://om:9862/62767-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:44.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:44.978" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 13:49:43.169" endtime="20200427 13:49:44.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:44.979" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 13:49:44.978" endtime="20200427 13:49:44.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:44.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:44.979" endtime="20200427 13:49:44.979"></status>
</kw>
<msg timestamp="20200427 13:49:44.980" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 13:49:43.167" endtime="20200427 13:49:44.980"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:44.983" level="INFO">Running command 'ozone sh key getacl o3://om:9862/62767-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:46.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:46.941" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200427 13:49:44.981" endtime="20200427 13:49:46.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:46.942" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200427 13:49:46.941" endtime="20200427 13:49:46.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:46.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:46.942" endtime="20200427 13:49:46.943"></status>
</kw>
<msg timestamp="20200427 13:49:46.943" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200427 13:49:44.980" endtime="20200427 13:49:46.943"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:46.943" endtime="20200427 13:49:46.943"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:46.943" endtime="20200427 13:49:46.944"></status>
</kw>
<status status="PASS" starttime="20200427 13:49:30.468" endtime="20200427 13:49:46.944"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 13:49:30.467" endtime="20200427 13:49:46.945" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:46.946" endtime="20200427 13:49:46.946"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:46.950" level="INFO">Running command 'ozone sh volume info o3:///62767-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:48.712" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 13:49:48.712" level="INFO">${output} = VOLUME_NOT_FOUND Volume 62767-rpcwport is not found</msg>
<status status="PASS" starttime="20200427 13:49:46.947" endtime="20200427 13:49:48.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:48.713" level="INFO">VOLUME_NOT_FOUND Volume 62767-rpcwport is not found</msg>
<status status="PASS" starttime="20200427 13:49:48.713" endtime="20200427 13:49:48.713"></status>
</kw>
<msg timestamp="20200427 13:49:48.714" level="INFO">${result} = VOLUME_NOT_FOUND Volume 62767-rpcwport is not found</msg>
<status status="PASS" starttime="20200427 13:49:46.947" endtime="20200427 13:49:48.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:48.714" endtime="20200427 13:49:48.714"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:48.717" level="INFO">Running command 'ozone sh volume create o3:///62767-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:50.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:50.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:49:48.715" endtime="20200427 13:49:50.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:50.430" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:49:50.429" endtime="20200427 13:49:50.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:50.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:50.430" endtime="20200427 13:49:50.431"></status>
</kw>
<msg timestamp="20200427 13:49:50.431" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 13:49:48.714" endtime="20200427 13:49:50.431"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:50.431" endtime="20200427 13:49:50.431"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:50.434" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="62767-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:52.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:52.327" level="INFO">${output} = {
  "metadata": {},
  "name": "62767-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:49:50.399Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200427 13:49:50.432" endtime="20200427 13:49:52.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:52.328" level="INFO">{
  "metadata": {},
  "name": "62767-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:49:50.399Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 13:49:52.327" endtime="20200427 13:49:52.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:52.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:52.328" endtime="20200427 13:49:52.329"></status>
</kw>
<msg timestamp="20200427 13:49:52.329" level="INFO">${result} = {
  "metadata": {},
  "name": "62767-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:49:50.399Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200427 13:49:50.431" endtime="20200427 13:49:52.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:52.329" endtime="20200427 13:49:52.330"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:52.333" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="62767-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:54.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:54.297" level="INFO">${output} = {
  "metadata": {},
  "name": "62767-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:49:50.399Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200427 13:49:52.330" endtime="20200427 13:49:54.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:54.298" level="INFO">{
  "metadata": {},
  "name": "62767-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:49:50.399Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 13:49:54.298" endtime="20200427 13:49:54.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:54.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:54.299" endtime="20200427 13:49:54.299"></status>
</kw>
<msg timestamp="20200427 13:49:54.299" level="INFO">${result} = {
  "metadata": {},
  "name": "62767-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:49:50.399Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200427 13:49:52.330" endtime="20200427 13:49:54.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:54.299" endtime="20200427 13:49:54.300"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:54.304" level="INFO">Running command 'ozone sh volume update o3:///62767-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:56.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:56.336" level="INFO">${output} = {
  "metadata" : { },
  "name" : "62767-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T13:49:50.399Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200427 13:49:54.300" endtime="20200427 13:49:56.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:56.337" level="INFO">{
  "metadata" : { },
  "name" : "62767-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T13:49:50.399Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200427 13:49:56.337" endtime="20200427 13:49:56.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:56.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:56.338" endtime="20200427 13:49:56.338"></status>
</kw>
<status status="PASS" starttime="20200427 13:49:54.300" endtime="20200427 13:49:56.338"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:56.342" level="INFO">Running command 'ozone sh volume info o3:///62767-rpcwport | jq -r '. | select(.name=="62767-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:49:58.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:49:58.493" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200427 13:49:56.339" endtime="20200427 13:49:58.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:49:58.494" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200427 13:49:58.493" endtime="20200427 13:49:58.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:49:58.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:49:58.494" endtime="20200427 13:49:58.495"></status>
</kw>
<msg timestamp="20200427 13:49:58.495" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200427 13:49:56.338" endtime="20200427 13:49:58.495"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200427 13:49:58.495" endtime="20200427 13:49:58.496"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:49:58.498" level="INFO">Running command 'ozone sh bucket create o3:///62767-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:00.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:00.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:49:58.496" endtime="20200427 13:50:00.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:00.287" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:00.286" endtime="20200427 13:50:00.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:00.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:00.287" endtime="20200427 13:50:00.287"></status>
</kw>
<status status="PASS" starttime="20200427 13:49:58.496" endtime="20200427 13:50:00.288"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:00.291" level="INFO">Running command 'ozone sh bucket info o3:///62767-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:02.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:02.134" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200427 13:50:00.288" endtime="20200427 13:50:02.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:02.135" level="INFO">DISK</msg>
<status status="PASS" starttime="20200427 13:50:02.135" endtime="20200427 13:50:02.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:02.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:02.136" endtime="20200427 13:50:02.136"></status>
</kw>
<msg timestamp="20200427 13:50:02.136" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200427 13:50:00.288" endtime="20200427 13:50:02.136"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:02.136" endtime="20200427 13:50:02.137"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:02.139" level="INFO">Running command 'ozone sh bucket list o3:///62767-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:03.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:03.948" level="INFO">${output} = 62767-rpcwport</msg>
<status status="PASS" starttime="20200427 13:50:02.137" endtime="20200427 13:50:03.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:03.950" level="INFO">62767-rpcwport</msg>
<status status="PASS" starttime="20200427 13:50:03.949" endtime="20200427 13:50:03.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:03.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:03.950" endtime="20200427 13:50:03.951"></status>
</kw>
<msg timestamp="20200427 13:50:03.951" level="INFO">${result} = 62767-rpcwport</msg>
<status status="PASS" starttime="20200427 13:50:02.137" endtime="20200427 13:50:03.951"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:03.951" endtime="20200427 13:50:03.952"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:03.957" level="INFO">Running command 'ozone sh key put o3:///62767-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:07.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:07.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:03.955" endtime="20200427 13:50:07.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:07.224" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:07.223" endtime="20200427 13:50:07.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:07.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:07.224" endtime="20200427 13:50:07.225"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:03.954" endtime="20200427 13:50:07.225"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:07.229" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:07.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:07.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:07.226" endtime="20200427 13:50:07.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:07.231" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:07.230" endtime="20200427 13:50:07.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:07.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:07.231" endtime="20200427 13:50:07.231"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:07.225" endtime="20200427 13:50:07.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:07.234" level="INFO">Running command 'ozone sh key get o3:///62767-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:10.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:10.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:07.232" endtime="20200427 13:50:10.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:10.504" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:10.503" endtime="20200427 13:50:10.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:10.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:10.504" endtime="20200427 13:50:10.505"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:07.232" endtime="20200427 13:50:10.505"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:10.508" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:10.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:10.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:10.506" endtime="20200427 13:50:10.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:10.511" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:10.510" endtime="20200427 13:50:10.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:10.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:10.511" endtime="20200427 13:50:10.511"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:10.505" endtime="20200427 13:50:10.512"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:10.515" level="INFO">Running command 'ozone sh key get o3:///62767-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:12.235" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 13:50:12.236" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 13:50:10.512" endtime="20200427 13:50:12.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:12.237" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 13:50:12.236" endtime="20200427 13:50:12.237"></status>
</kw>
<msg timestamp="20200427 13:50:12.237" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 13:50:10.512" endtime="20200427 13:50:12.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:12.237" endtime="20200427 13:50:12.238"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:12.242" level="INFO">Running command 'ozone sh key get --force o3:///62767-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:15.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:15.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:12.238" endtime="20200427 13:50:15.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:15.568" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:15.567" endtime="20200427 13:50:15.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:15.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:15.568" endtime="20200427 13:50:15.569"></status>
</kw>
<msg timestamp="20200427 13:50:15.569" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 13:50:12.238" endtime="20200427 13:50:15.569"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:15.569" endtime="20200427 13:50:15.570"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:15.574" level="INFO">Running command 'ozone sh key info o3:///62767-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:17.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:17.501" level="INFO">${output} = {
  "volumeName": "62767-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T13:50:05.574Z",
  "modificationTime": "2020-04-27T13:50:06.842Z",
  "rep...</msg>
<status status="PASS" starttime="20200427 13:50:15.570" endtime="20200427 13:50:17.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:17.502" level="INFO">{
  "volumeName": "62767-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T13:50:05.574Z",
  "modificationTime": "2020-04-27T13:50:06.842Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104070866899566720,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200427 13:50:17.501" endtime="20200427 13:50:17.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:17.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:17.502" endtime="20200427 13:50:17.502"></status>
</kw>
<msg timestamp="20200427 13:50:17.503" level="INFO">${result} = {
  "volumeName": "62767-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T13:50:05.574Z",
  "modificationTime": "2020-04-27T13:50:06.842Z",
  "rep...</msg>
<status status="PASS" starttime="20200427 13:50:15.570" endtime="20200427 13:50:17.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:17.503" endtime="20200427 13:50:17.503"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:17.507" level="INFO">Running command 'ozone debug chunkinfo o3:///62767-rpcwport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:20.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:20.697" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/c0fbb108-1eaf-4327-a579-4a1d326f82cc/current/containerDir0/1/chunks/104070866899566719_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 13:50:17.504" endtime="20200427 13:50:20.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:20.698" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/c0fbb108-1eaf-4327-a579-4a1d326f82cc/current/containerDir0/1/chunks/104070866899566719_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.4",
      "hostName": "ozone_datanode_1.ozone_default"
    }
  ],
  "pipelineID": "04cd8456-2c79-4a47-a2e0-6b5ef6882f28"
}</msg>
<status status="PASS" starttime="20200427 13:50:20.698" endtime="20200427 13:50:20.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:20.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:20.699" endtime="20200427 13:50:20.699"></status>
</kw>
<msg timestamp="20200427 13:50:20.699" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/c0fbb108-1eaf-4327-a579-4a1d326f82cc/current/containerDir0/1/chunks/104070866899566719_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 13:50:17.503" endtime="20200427 13:50:20.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:20.699" endtime="20200427 13:50:20.700"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:20.703" level="INFO">Running command 'ozone sh key list o3:///62767-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:22.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:22.572" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200427 13:50:20.701" endtime="20200427 13:50:22.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:22.573" level="INFO">key1</msg>
<status status="PASS" starttime="20200427 13:50:22.572" endtime="20200427 13:50:22.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:22.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:22.573" endtime="20200427 13:50:22.574"></status>
</kw>
<msg timestamp="20200427 13:50:22.574" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200427 13:50:20.700" endtime="20200427 13:50:22.574"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:22.574" endtime="20200427 13:50:22.575"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:22.577" level="INFO">Running command 'ozone sh key rename o3:///62767-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:24.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:24.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:22.575" endtime="20200427 13:50:24.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:24.340" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:24.339" endtime="20200427 13:50:24.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:24.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:24.340" endtime="20200427 13:50:24.341"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:22.575" endtime="20200427 13:50:24.341"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:24.345" level="INFO">Running command 'ozone sh key list o3:///62767-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:26.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:26.166" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200427 13:50:24.342" endtime="20200427 13:50:26.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:26.167" level="INFO">key2</msg>
<status status="PASS" starttime="20200427 13:50:26.166" endtime="20200427 13:50:26.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:26.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:26.167" endtime="20200427 13:50:26.168"></status>
</kw>
<msg timestamp="20200427 13:50:26.168" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200427 13:50:24.341" endtime="20200427 13:50:26.168"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:26.168" endtime="20200427 13:50:26.168"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:26.172" level="INFO">Running command 'ozone sh key delete o3:///62767-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:27.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:27.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:26.169" endtime="20200427 13:50:27.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:27.881" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:27.881" endtime="20200427 13:50:27.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:27.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:27.882" endtime="20200427 13:50:27.882"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:26.168" endtime="20200427 13:50:27.882"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:03.953" endtime="20200427 13:50:27.882"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:03.952" endtime="20200427 13:50:27.883"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:27.885" level="INFO">Running command 'ozone sh bucket delete o3:///62767-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:29.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:29.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:27.883" endtime="20200427 13:50:29.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:29.568" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:29.567" endtime="20200427 13:50:29.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:29.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:29.568" endtime="20200427 13:50:29.568"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:27.883" endtime="20200427 13:50:29.569"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:29.572" level="INFO">Running command 'ozone sh volume delete o3:///62767-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:31.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:31.209" level="INFO">${output} = Volume 62767-rpcwport is deleted</msg>
<status status="PASS" starttime="20200427 13:50:29.570" endtime="20200427 13:50:31.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:31.210" level="INFO">Volume 62767-rpcwport is deleted</msg>
<status status="PASS" starttime="20200427 13:50:31.209" endtime="20200427 13:50:31.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:31.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:31.210" endtime="20200427 13:50:31.210"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:29.569" endtime="20200427 13:50:31.210"></status>
</kw>
<status status="PASS" starttime="20200427 13:49:46.946" endtime="20200427 13:50:31.211"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 13:49:46.945" endtime="20200427 13:50:31.211" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:31.212" endtime="20200427 13:50:31.212"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:31.215" level="INFO">Running command 'ozone sh volume info /62767-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:32.875" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 13:50:32.875" level="INFO">${output} = VOLUME_NOT_FOUND Volume 62767-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200427 13:50:31.213" endtime="20200427 13:50:32.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:32.876" level="INFO">VOLUME_NOT_FOUND Volume 62767-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200427 13:50:32.875" endtime="20200427 13:50:32.876"></status>
</kw>
<msg timestamp="20200427 13:50:32.876" level="INFO">${result} = VOLUME_NOT_FOUND Volume 62767-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200427 13:50:31.213" endtime="20200427 13:50:32.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:32.876" endtime="20200427 13:50:32.876"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:32.879" level="INFO">Running command 'ozone sh volume create /62767-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:34.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:34.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:32.877" endtime="20200427 13:50:34.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:34.546" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:34.545" endtime="20200427 13:50:34.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:34.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:34.546" endtime="20200427 13:50:34.547"></status>
</kw>
<msg timestamp="20200427 13:50:34.547" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 13:50:32.877" endtime="20200427 13:50:34.547"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:34.547" endtime="20200427 13:50:34.547"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:34.550" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="62767-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:36.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:36.334" level="INFO">${output} = {
  "metadata": {},
  "name": "62767-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:50:34.514Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200427 13:50:34.548" endtime="20200427 13:50:36.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:36.336" level="INFO">{
  "metadata": {},
  "name": "62767-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:50:34.514Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 13:50:36.335" endtime="20200427 13:50:36.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:36.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:36.336" endtime="20200427 13:50:36.336"></status>
</kw>
<msg timestamp="20200427 13:50:36.336" level="INFO">${result} = {
  "metadata": {},
  "name": "62767-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:50:34.514Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200427 13:50:34.548" endtime="20200427 13:50:36.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:36.337" endtime="20200427 13:50:36.337"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:36.340" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="62767-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:38.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:38.147" level="INFO">${output} = {
  "metadata": {},
  "name": "62767-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:50:34.514Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200427 13:50:36.337" endtime="20200427 13:50:38.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:38.149" level="INFO">{
  "metadata": {},
  "name": "62767-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:50:34.514Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 13:50:38.148" endtime="20200427 13:50:38.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:38.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:38.150" endtime="20200427 13:50:38.150"></status>
</kw>
<msg timestamp="20200427 13:50:38.151" level="INFO">${result} = {
  "metadata": {},
  "name": "62767-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T13:50:34.514Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200427 13:50:36.337" endtime="20200427 13:50:38.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:38.151" endtime="20200427 13:50:38.151"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:38.154" level="INFO">Running command 'ozone sh volume update /62767-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:39.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:39.979" level="INFO">${output} = {
  "metadata" : { },
  "name" : "62767-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T13:50:34.514Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200427 13:50:38.151" endtime="20200427 13:50:39.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:39.980" level="INFO">{
  "metadata" : { },
  "name" : "62767-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T13:50:34.514Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200427 13:50:39.979" endtime="20200427 13:50:39.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:39.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:39.980" endtime="20200427 13:50:39.980"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:38.151" endtime="20200427 13:50:39.981"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:39.983" level="INFO">Running command 'ozone sh volume info /62767-rpcwoscheme | jq -r '. | select(.name=="62767-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:41.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:41.819" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200427 13:50:39.981" endtime="20200427 13:50:41.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:41.820" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200427 13:50:41.820" endtime="20200427 13:50:41.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:41.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:41.821" endtime="20200427 13:50:41.821"></status>
</kw>
<msg timestamp="20200427 13:50:41.821" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200427 13:50:39.981" endtime="20200427 13:50:41.821"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:41.821" endtime="20200427 13:50:41.822"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:41.825" level="INFO">Running command 'ozone sh bucket create /62767-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:43.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:43.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:41.822" endtime="20200427 13:50:43.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:43.501" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:43.500" endtime="20200427 13:50:43.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:43.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:43.501" endtime="20200427 13:50:43.502"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:41.822" endtime="20200427 13:50:43.502"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:43.505" level="INFO">Running command 'ozone sh bucket info /62767-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:45.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:45.297" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200427 13:50:43.502" endtime="20200427 13:50:45.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:45.298" level="INFO">DISK</msg>
<status status="PASS" starttime="20200427 13:50:45.298" endtime="20200427 13:50:45.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:45.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:45.298" endtime="20200427 13:50:45.299"></status>
</kw>
<msg timestamp="20200427 13:50:45.299" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200427 13:50:43.502" endtime="20200427 13:50:45.299"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:45.299" endtime="20200427 13:50:45.299"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:45.303" level="INFO">Running command 'ozone sh bucket list /62767-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:47.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:47.090" level="INFO">${output} = 62767-rpcwoscheme</msg>
<status status="PASS" starttime="20200427 13:50:45.300" endtime="20200427 13:50:47.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:47.091" level="INFO">62767-rpcwoscheme</msg>
<status status="PASS" starttime="20200427 13:50:47.090" endtime="20200427 13:50:47.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:47.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:47.091" endtime="20200427 13:50:47.091"></status>
</kw>
<msg timestamp="20200427 13:50:47.092" level="INFO">${result} = 62767-rpcwoscheme</msg>
<status status="PASS" starttime="20200427 13:50:45.300" endtime="20200427 13:50:47.092"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:47.092" endtime="20200427 13:50:47.092"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:47.096" level="INFO">Running command 'ozone sh key put /62767-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:50.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:50.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:47.093" endtime="20200427 13:50:50.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:50.541" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:50.540" endtime="20200427 13:50:50.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:50.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:50.541" endtime="20200427 13:50:50.541"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:47.093" endtime="20200427 13:50:50.542"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:50.545" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:50.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:50.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:50.542" endtime="20200427 13:50:50.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:50.547" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:50.546" endtime="20200427 13:50:50.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:50.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:50.547" endtime="20200427 13:50:50.547"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:50.542" endtime="20200427 13:50:50.548"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:50.550" level="INFO">Running command 'ozone sh key get /62767-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:53.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:53.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:50.548" endtime="20200427 13:50:53.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:53.989" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:53.988" endtime="20200427 13:50:53.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:53.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:53.989" endtime="20200427 13:50:53.989"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:50.548" endtime="20200427 13:50:53.990"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:53.993" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:53.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:53.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:53.990" endtime="20200427 13:50:53.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:53.996" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:53.995" endtime="20200427 13:50:53.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:53.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:53.996" endtime="20200427 13:50:53.996"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:53.990" endtime="20200427 13:50:53.997"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:53.999" level="INFO">Running command 'ozone sh key get /62767-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:55.631" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 13:50:55.631" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 13:50:53.997" endtime="20200427 13:50:55.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:55.633" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 13:50:55.632" endtime="20200427 13:50:55.633"></status>
</kw>
<msg timestamp="20200427 13:50:55.633" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 13:50:53.997" endtime="20200427 13:50:55.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:55.633" endtime="20200427 13:50:55.633"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:55.636" level="INFO">Running command 'ozone sh key get --force /62767-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:50:58.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:50:58.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:50:55.634" endtime="20200427 13:50:58.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:50:58.705" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:50:58.704" endtime="20200427 13:50:58.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:50:58.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:50:58.705" endtime="20200427 13:50:58.705"></status>
</kw>
<msg timestamp="20200427 13:50:58.705" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 13:50:55.633" endtime="20200427 13:50:58.705"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 13:50:58.706" endtime="20200427 13:50:58.706"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:50:58.709" level="INFO">Running command 'ozone sh key info /62767-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:51:00.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:51:00.617" level="INFO">${output} = {
  "volumeName": "62767-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T13:50:48.741Z",
  "modificationTime": "2020-04-27T13:50:50.182Z",
  "...</msg>
<status status="PASS" starttime="20200427 13:50:58.707" endtime="20200427 13:51:00.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:51:00.618" level="INFO">{
  "volumeName": "62767-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T13:50:48.741Z",
  "modificationTime": "2020-04-27T13:50:50.182Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104070869728624770,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200427 13:51:00.617" endtime="20200427 13:51:00.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:51:00.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:51:00.618" endtime="20200427 13:51:00.619"></status>
</kw>
<msg timestamp="20200427 13:51:00.619" level="INFO">${result} = {
  "volumeName": "62767-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T13:50:48.741Z",
  "modificationTime": "2020-04-27T13:50:50.182Z",
  "...</msg>
<status status="PASS" starttime="20200427 13:50:58.706" endtime="20200427 13:51:00.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 13:51:00.619" endtime="20200427 13:51:00.620"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:51:00.624" level="INFO">Running command 'ozone debug chunkinfo /62767-rpcwoscheme/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:51:03.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:51:03.780" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/c0fbb108-1eaf-4327-a579-4a1d326f82cc/current/containerDir0/1/chunks/104070869728624768_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 13:51:00.621" endtime="20200427 13:51:03.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:51:03.781" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/c0fbb108-1eaf-4327-a579-4a1d326f82cc/current/containerDir0/1/chunks/104070869728624768_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.4",
      "hostName": "ozone_datanode_1.ozone_default"
    }
  ],
  "pipelineID": "04cd8456-2c79-4a47-a2e0-6b5ef6882f28"
}</msg>
<status status="PASS" starttime="20200427 13:51:03.781" endtime="20200427 13:51:03.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:51:03.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:51:03.782" endtime="20200427 13:51:03.782"></status>
</kw>
<msg timestamp="20200427 13:51:03.782" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/c0fbb108-1eaf-4327-a579-4a1d326f82cc/current/containerDir0/1/chunks/104070869728624768_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 13:51:00.620" endtime="20200427 13:51:03.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200427 13:51:03.782" endtime="20200427 13:51:03.783"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:51:03.785" level="INFO">Running command 'ozone sh key list /62767-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:51:05.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:51:05.545" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200427 13:51:03.783" endtime="20200427 13:51:05.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:51:05.546" level="INFO">key1</msg>
<status status="PASS" starttime="20200427 13:51:05.546" endtime="20200427 13:51:05.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:51:05.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:51:05.546" endtime="20200427 13:51:05.547"></status>
</kw>
<msg timestamp="20200427 13:51:05.547" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200427 13:51:03.783" endtime="20200427 13:51:05.547"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200427 13:51:05.547" endtime="20200427 13:51:05.548"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:51:05.550" level="INFO">Running command 'ozone sh key rename /62767-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:51:07.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:51:07.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:51:05.548" endtime="20200427 13:51:07.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:51:07.214" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:51:07.213" endtime="20200427 13:51:07.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:51:07.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:51:07.214" endtime="20200427 13:51:07.214"></status>
</kw>
<status status="PASS" starttime="20200427 13:51:05.548" endtime="20200427 13:51:07.215"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:51:07.217" level="INFO">Running command 'ozone sh key list /62767-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:51:09.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:51:09.046" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200427 13:51:07.215" endtime="20200427 13:51:09.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:51:09.047" level="INFO">key2</msg>
<status status="PASS" starttime="20200427 13:51:09.047" endtime="20200427 13:51:09.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:51:09.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:51:09.047" endtime="20200427 13:51:09.048"></status>
</kw>
<msg timestamp="20200427 13:51:09.048" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200427 13:51:07.215" endtime="20200427 13:51:09.048"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200427 13:51:09.048" endtime="20200427 13:51:09.049"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:51:09.052" level="INFO">Running command 'ozone sh key delete /62767-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:51:10.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:51:10.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:51:09.049" endtime="20200427 13:51:10.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:51:10.734" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:51:10.733" endtime="20200427 13:51:10.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:51:10.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:51:10.734" endtime="20200427 13:51:10.735"></status>
</kw>
<status status="PASS" starttime="20200427 13:51:09.049" endtime="20200427 13:51:10.735"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:47.092" endtime="20200427 13:51:10.735"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:47.092" endtime="20200427 13:51:10.735"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:51:10.737" level="INFO">Running command 'ozone sh bucket delete /62767-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:51:12.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:51:12.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 13:51:10.735" endtime="20200427 13:51:12.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:51:12.293" level="INFO"></msg>
<status status="PASS" starttime="20200427 13:51:12.293" endtime="20200427 13:51:12.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:51:12.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:51:12.294" endtime="20200427 13:51:12.294"></status>
</kw>
<status status="PASS" starttime="20200427 13:51:10.735" endtime="20200427 13:51:12.294"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:51:12.298" level="INFO">Running command 'ozone sh volume delete /62767-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:51:13.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:51:13.940" level="INFO">${output} = Volume 62767-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200427 13:51:12.295" endtime="20200427 13:51:13.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:51:13.941" level="INFO">Volume 62767-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200427 13:51:13.940" endtime="20200427 13:51:13.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:51:13.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:51:13.941" endtime="20200427 13:51:13.942"></status>
</kw>
<status status="PASS" starttime="20200427 13:51:12.294" endtime="20200427 13:51:13.942"></status>
</kw>
<status status="PASS" starttime="20200427 13:50:31.213" endtime="20200427 13:51:13.942"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 13:50:31.211" endtime="20200427 13:51:13.942" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200427 13:48:17.212" endtime="20200427 13:51:13.943"></status>
</suite>
<status status="PASS" starttime="20200427 13:47:02.722" endtime="20200427 13:51:13.947"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
