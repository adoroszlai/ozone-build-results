<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200427 13:42:16.453" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:42:16.506" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:42:23.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:42:23.717" level="INFO">${output} = 2020-04-27 13:42:17,425 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:17,584 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:42:16.501" endtime="20200427 13:42:23.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:42:23.718" level="INFO">2020-04-27 13:42:17,425 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:17,584 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 13:42:17,584 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 13:42:18,363 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-27 13:42:18,363 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-27 13:42:18,364 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-27 13:42:18,364 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-27 13:42:18,364 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-27 13:42:18,364 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-27 13:42:18,364 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-27 13:42:18,365 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-27 13:42:18,373 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 13:42:18,403 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-09720, with hadoop as owner.
2020-04-27 13:42:18,440 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09720/bucket-0-25699, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:42:18,909 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-27 13:42:19,377 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,065
Average Time spent in bucket creation: 00:00:00,040
Average Time spent in key creation: 00:00:00,053
Average Time spent in key write: 00:00:00,530
Total bytes written: 10240
Total Execution time: 00:00:05,570
***************************************************</msg>
<status status="PASS" starttime="20200427 13:42:23.717" endtime="20200427 13:42:23.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:42:23.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:42:23.718" endtime="20200427 13:42:23.719"></status>
</kw>
<msg timestamp="20200427 13:42:23.719" level="INFO">${result} = 2020-04-27 13:42:17,425 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:17,584 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:42:16.500" endtime="20200427 13:42:23.719"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 13:42:23.719" endtime="20200427 13:42:23.720"></status>
</kw>
<status status="PASS" starttime="20200427 13:42:23.719" endtime="20200427 13:42:23.720"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 13:42:16.500" endtime="20200427 13:42:23.720" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:42:23.723" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:42:27.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:42:27.921" level="INFO">${output} = 2020-04-27 13:42:24,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:24,731 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:42:23.721" endtime="20200427 13:42:27.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:42:27.922" level="INFO">2020-04-27 13:42:24,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:24,731 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 13:42:24,731 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 13:42:24,961 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 5l6qiwtuzf
2020-04-27 13:42:24,976 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 13:42:25,499 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-27 13:42:25,528 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 13:42:25,979 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 13:42:26,091 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-27 13:42:26,980 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-27 13:42:27,594 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1379.349523, max=1379.349523, mean=1379.349523, stddev=0.0, median=1379.349523, p75=1379.349523, p95=1379.349523, p98=1379.349523, p99=1379.349523, p999=1379.349523, mean_rate=0.49296171690363116, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-27 13:42:27,594 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-27 13:42:27,594 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-27 13:42:27,594 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200427 13:42:27.921" endtime="20200427 13:42:27.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:42:27.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:42:27.922" endtime="20200427 13:42:27.923"></status>
</kw>
<msg timestamp="20200427 13:42:27.923" level="INFO">${result} = 2020-04-27 13:42:24,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:24,731 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:42:23.721" endtime="20200427 13:42:27.923"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 13:42:27.923" endtime="20200427 13:42:27.924"></status>
</kw>
<status status="PASS" starttime="20200427 13:42:27.923" endtime="20200427 13:42:27.924"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 13:42:23.720" endtime="20200427 13:42:27.924" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:42:27.928" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:42:30.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:42:30.801" level="INFO">${output} = 2020-04-27 13:42:28,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:28,927 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:42:27.925" endtime="20200427 13:42:30.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:42:30.803" level="INFO">2020-04-27 13:42:28,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:28,927 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 13:42:28,927 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 13:42:29,130 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xnio40zjot
2020-04-27 13:42:29,142 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 13:42:30,145 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-27 13:42:30,772 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=47.752133, max=47.752133, mean=47.752133, stddev=0.0, median=47.752133, p75=47.752133, p95=47.752133, p98=47.752133, p99=47.752133, p999=47.752133, mean_rate=0.9772260355237984, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-27 13:42:30,781 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-27 13:42:30,781 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-27 13:42:30,781 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200427 13:42:30.802" endtime="20200427 13:42:30.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:42:30.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:42:30.804" endtime="20200427 13:42:30.804"></status>
</kw>
<msg timestamp="20200427 13:42:30.805" level="INFO">${result} = 2020-04-27 13:42:28,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:28,927 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:42:27.925" endtime="20200427 13:42:30.805"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 13:42:30.805" endtime="20200427 13:42:30.806"></status>
</kw>
<status status="PASS" starttime="20200427 13:42:30.805" endtime="20200427 13:42:30.806"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 13:42:27.924" endtime="20200427 13:42:30.806" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 13:42:30.809" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 13:42:33.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 13:42:33.604" level="INFO">${output} = 2020-04-27 13:42:31,673 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:31,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:42:30.808" endtime="20200427 13:42:33.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 13:42:33.605" level="INFO">2020-04-27 13:42:31,673 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:31,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 13:42:31,831 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 13:42:32,081 [main] INFO freon.BaseFreonGenerator: Executing test with prefix tnlk4mneju
2020-04-27 13:42:32,091 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 13:42:33,095 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-27 13:42:33,584 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=18.24844, max=18.24844, mean=18.24844, stddev=0.0, median=18.24844, p75=18.24844, p95=18.24844, p98=18.24844, p99=18.24844, p999=18.24844, mean_rate=0.9890615998364931, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-27 13:42:33,585 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-27 13:42:33,585 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-27 13:42:33,585 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200427 13:42:33.604" endtime="20200427 13:42:33.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 13:42:33.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 13:42:33.605" endtime="20200427 13:42:33.606"></status>
</kw>
<msg timestamp="20200427 13:42:33.606" level="INFO">${result} = 2020-04-27 13:42:31,673 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 13:42:31,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 13:42:30.807" endtime="20200427 13:42:33.606"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 13:42:33.606" endtime="20200427 13:42:33.606"></status>
</kw>
<status status="PASS" starttime="20200427 13:42:33.606" endtime="20200427 13:42:33.607"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 13:42:30.806" endtime="20200427 13:42:33.607" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200427 13:42:16.478" endtime="20200427 13:42:33.608"></status>
</suite>
<status status="PASS" starttime="20200427 13:42:16.453" endtime="20200427 13:42:33.610"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
