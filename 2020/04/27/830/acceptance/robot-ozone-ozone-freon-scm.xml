<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200427 22:16:44.722" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:16:44.782" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:16:51.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:16:51.999" level="INFO">${output} = 2020-04-27 22:16:45,675 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:16:45,823 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 22:16:44.778" endtime="20200427 22:16:51.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:16:52.000" level="INFO">2020-04-27 22:16:45,675 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:16:45,823 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 22:16:45,823 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 22:16:46,629 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-27 22:16:46,635 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-27 22:16:46,635 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-27 22:16:46,635 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-27 22:16:46,635 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-27 22:16:46,635 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-27 22:16:46,635 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-27 22:16:46,641 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-27 22:16:46,652 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 22:16:46,686 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-68947, with hadoop as owner.
2020-04-27 22:16:46,702 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-68947/bucket-0-39200, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:16:47,158 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-27 22:16:47,654 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,051
Average Time spent in bucket creation: 00:00:00,021
Average Time spent in key creation: 00:00:00,034
Average Time spent in key write: 00:00:00,571
Total bytes written: 10240
Total Execution time: 00:00:05,623
***************************************************</msg>
<status status="PASS" starttime="20200427 22:16:51.999" endtime="20200427 22:16:52.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:16:52.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:16:52.000" endtime="20200427 22:16:52.000"></status>
</kw>
<msg timestamp="20200427 22:16:52.001" level="INFO">${result} = 2020-04-27 22:16:45,675 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:16:45,823 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 22:16:44.778" endtime="20200427 22:16:52.001"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 22:16:52.001" endtime="20200427 22:16:52.002"></status>
</kw>
<status status="PASS" starttime="20200427 22:16:52.001" endtime="20200427 22:16:52.002"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 22:16:44.777" endtime="20200427 22:16:52.002" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:16:52.006" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:16:56.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:16:56.337" level="INFO">${output} = 2020-04-27 22:16:52,929 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:16:53,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 22:16:52.004" endtime="20200427 22:16:56.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:16:56.339" level="INFO">2020-04-27 22:16:52,929 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:16:53,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 22:16:53,118 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 22:16:53,362 [main] INFO freon.BaseFreonGenerator: Executing test with prefix tzc3k6heee
2020-04-27 22:16:53,381 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 22:16:53,957 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-27 22:16:53,970 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:16:54,383 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 22:16:54,467 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-27 22:16:55,384 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-27 22:16:56,009 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1228.163377, max=1228.163377, mean=1228.163377, stddev=0.0, median=1228.163377, p75=1228.163377, p95=1228.163377, p98=1228.163377, p99=1228.163377, p999=1228.163377, mean_rate=0.49392049829679197, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-27 22:16:56,013 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-27 22:16:56,013 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-27 22:16:56,013 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200427 22:16:56.338" endtime="20200427 22:16:56.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:16:56.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:16:56.339" endtime="20200427 22:16:56.340"></status>
</kw>
<msg timestamp="20200427 22:16:56.340" level="INFO">${result} = 2020-04-27 22:16:52,929 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:16:53,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 22:16:52.003" endtime="20200427 22:16:56.340"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 22:16:56.341" endtime="20200427 22:16:56.342"></status>
</kw>
<status status="PASS" starttime="20200427 22:16:56.341" endtime="20200427 22:16:56.342"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 22:16:52.002" endtime="20200427 22:16:56.342" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:16:56.348" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:16:59.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:16:59.353" level="INFO">${output} = 2020-04-27 22:16:57,217 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:16:57,412 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 22:16:56.344" endtime="20200427 22:16:59.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:16:59.355" level="INFO">2020-04-27 22:16:57,217 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:16:57,412 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 22:16:57,412 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 22:16:57,668 [main] INFO freon.BaseFreonGenerator: Executing test with prefix tacv0twjnk
2020-04-27 22:16:57,689 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 22:16:58,699 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-27 22:16:59,326 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=36.584714, max=36.584714, mean=36.584714, stddev=0.0, median=36.584714, p75=36.584714, p95=36.584714, p98=36.584714, p99=36.584714, p999=36.584714, mean_rate=0.9796433472615727, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-27 22:16:59,327 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-27 22:16:59,327 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-27 22:16:59,327 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200427 22:16:59.354" endtime="20200427 22:16:59.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:16:59.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:16:59.355" endtime="20200427 22:16:59.356"></status>
</kw>
<msg timestamp="20200427 22:16:59.356" level="INFO">${result} = 2020-04-27 22:16:57,217 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:16:57,412 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 22:16:56.344" endtime="20200427 22:16:59.356"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 22:16:59.357" endtime="20200427 22:16:59.357"></status>
</kw>
<status status="PASS" starttime="20200427 22:16:59.356" endtime="20200427 22:16:59.357"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 22:16:56.343" endtime="20200427 22:16:59.358" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:16:59.362" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:17:02.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:17:02.360" level="INFO">${output} = 2020-04-27 22:17:00,294 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:17:00,445 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 22:16:59.359" endtime="20200427 22:17:02.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:17:02.361" level="INFO">2020-04-27 22:17:00,294 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:17:00,445 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 22:17:00,445 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 22:17:00,756 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ldsurzryyv
2020-04-27 22:17:00,771 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-27 22:17:01,785 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-27 22:17:02,340 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.225148, max=8.225148, mean=8.225148, stddev=0.0, median=8.225148, p75=8.225148, p95=8.225148, p98=8.225148, p99=8.225148, p999=8.225148, mean_rate=0.9858893453671579, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-27 22:17:02,341 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-27 22:17:02,341 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-27 22:17:02,341 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200427 22:17:02.361" endtime="20200427 22:17:02.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:17:02.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:17:02.362" endtime="20200427 22:17:02.362"></status>
</kw>
<msg timestamp="20200427 22:17:02.363" level="INFO">${result} = 2020-04-27 22:17:00,294 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:17:00,445 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 22:16:59.359" endtime="20200427 22:17:02.363"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200427 22:17:02.363" endtime="20200427 22:17:02.364"></status>
</kw>
<status status="PASS" starttime="20200427 22:17:02.363" endtime="20200427 22:17:02.364"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 22:16:59.358" endtime="20200427 22:17:02.364" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200427 22:16:44.753" endtime="20200427 22:17:02.373"></status>
</suite>
<status status="PASS" starttime="20200427 22:16:44.724" endtime="20200427 22:17:02.377"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
