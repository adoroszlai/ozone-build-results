<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200427 22:06:46.619" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200427 22:06:46.677" endtime="20200427 22:06:46.677"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:06:46.681" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:06:46.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:06:46.805" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 27 Apr 2020 22:06:46 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Apr 2020 21:42:30 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200427 22:06:46.678" endtime="20200427 22:06:46.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:06:46.806" level="INFO">HTTP/1.1 200 OK
Date: Mon, 27 Apr 2020 22:06:46 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Apr 2020 21:42:30 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200427 22:06:46.806" endtime="20200427 22:06:46.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:06:46.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:06:46.807" endtime="20200427 22:06:46.807"></status>
</kw>
<msg timestamp="20200427 22:06:46.808" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 27 Apr 2020 22:06:46 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Apr 2020 21:42:30 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200427 22:06:46.678" endtime="20200427 22:06:46.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200427 22:06:46.808" endtime="20200427 22:06:46.808"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 22:06:46.676" endtime="20200427 22:06:46.808" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 22:06:46.810" endtime="20200427 22:06:46.811"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:06:46.813" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:07:56.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:07:56.671" level="INFO">${output} = 2020-04-27 22:06:47,841 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:06:48,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 22:06:46.811" endtime="20200427 22:07:56.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:07:56.672" level="INFO">2020-04-27 22:06:47,841 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:06:48,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-27 22:06:48,032 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-27 22:06:49,399 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-27 22:06:49,400 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-27 22:06:49,400 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-27 22:06:49,400 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-27 22:06:49,401 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-27 22:06:49,401 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-27 22:06:49,401 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-27 22:06:49,406 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-27 22:06:49,410 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-27 22:06:49,417 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-27 22:06:49,446 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-85333, with hadoop as owner.
2020-04-27 22:06:49,581 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-42874, with hadoop as owner.
2020-04-27 22:06:49,590 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-48365, with hadoop as owner.
2020-04-27 22:06:49,596 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-99344, with hadoop as owner.
2020-04-27 22:06:49,603 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-86397, with hadoop as owner.
2020-04-27 22:06:49,610 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-85333/bucket-0-70608, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,635 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-42874/bucket-0-05802, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,642 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-48365/bucket-0-56590, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,653 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-99344/bucket-0-03993, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,658 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-86397/bucket-0-12712, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,664 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-85333/bucket-1-81498, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,670 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-42874/bucket-1-03776, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,676 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-48365/bucket-1-32885, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,680 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-99344/bucket-1-96538, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,685 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-86397/bucket-1-79447, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,691 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-85333/bucket-2-54078, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,696 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-42874/bucket-2-27333, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,701 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-48365/bucket-2-90280, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,708 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-99344/bucket-2-76601, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,716 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-86397/bucket-2-05767, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,720 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-85333/bucket-3-22916, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,731 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-42874/bucket-3-67250, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,735 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-48365/bucket-3-18487, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,741 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-99344/bucket-3-90378, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,747 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-86397/bucket-3-45547, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,753 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-85333/bucket-4-50972, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,757 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-42874/bucket-4-93358, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,761 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-48365/bucket-4-20833, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,765 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-99344/bucket-4-64713, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:49,769 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-86397/bucket-4-55278, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-27 22:06:50,293 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-27 22:06:50,419 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-27 22:06:51,420 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-27 22:06:52,425 [Thread-8] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-04-27 22:06:53,426 [Thread-8] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-04-27 22:06:54,426 [Thread-8] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-04-27 22:06:55,427 [Thread-8] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-04-27 22:06:56,428 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-27 22:06:57,428 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-04-27 22:06:58,429 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-04-27 22:06:59,430 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-04-27 22:07:00,431 [Thread-8] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-04-27 22:07:01,431 [Thread-8] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-04-27 22:07:02,432 [Thread-8] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-04-27 22:07:03,432 [Thread-8] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-04-27 22:07:04,433 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-04-27 22:07:05,433 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-04-27 22:07:06,434 [Thread-8] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-04-27 22:07:07,434 [Thread-8] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-04-27 22:07:08,435 [Thread-8] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-04-27 22:07:09,435 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-04-27 22:07:10,436 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-04-27 22:07:11,436 [Thread-8] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-04-27 22:07:12,437 [Thread-8] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-04-27 22:07:13,437 [Thread-8] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-04-27 22:07:14,438 [Thread-8] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-04-27 22:07:15,438 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-04-27 22:07:16,439 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-04-27 22:07:17,439 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-04-27 22:07:18,439 [Thread-8] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-04-27 22:07:19,440 [Thread-8] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-04-27 22:07:20,440 [Thread-8] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-04-27 22:07:21,441 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-04-27 22:07:22,441 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-04-27 22:07:23,442 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-04-27 22:07:24,442 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-04-27 22:07:25,443 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-04-27 22:07:26,443 [Thread-8] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-04-27 22:07:27,444 [Thread-8] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-04-27 22:07:28,444 [Thread-8] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-04-27 22:07:29,445 [Thread-8] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-04-27 22:07:30,445 [Thread-8] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-04-27 22:07:31,446 [Thread-8] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-04-27 22:07:32,446 [Thread-8] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-04-27 22:07:33,447 [Thread-8] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-04-27 22:07:34,448 [Thread-8] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-04-27 22:07:35,449 [Thread-8] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-04-27 22:07:36,449 [Thread-8] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-04-27 22:07:37,450 [Thread-8] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-04-27 22:07:38,450 [Thread-8] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-04-27 22:07:39,451 [Thread-8] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-04-27 22:07:40,451 [Thread-8] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-04-27 22:07:41,452 [Thread-8] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-04-27 22:07:42,452 [Thread-8] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-04-27 22:07:43,453 [Thread-8] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-04-27 22:07:44,453 [Thread-8] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-04-27 22:07:45,454 [Thread-8] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-04-27 22:07:46,454 [Thread-8] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-04-27 22:07:47,455 [Thread-8] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-04-27 22:07:48,455 [Thread-8] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-04-27 22:07:49,456 [Thread-8] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-04-27 22:07:50,456 [Thread-8] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-04-27 22:07:51,456 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,176
Average Time spent in bucket creation: 00:00:00,113
Average Time spent in key creation: 00:00:01,826
Average Time spent in key write: 00:00:00,671
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:07,998
***************************************************</msg>
<status status="PASS" starttime="20200427 22:07:56.671" endtime="20200427 22:07:56.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:07:56.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:07:56.672" endtime="20200427 22:07:56.673"></status>
</kw>
<msg timestamp="20200427 22:07:56.673" level="INFO">${result} = 2020-04-27 22:06:47,841 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-27 22:06:48,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200427 22:06:46.811" endtime="20200427 22:07:56.673"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200427 22:07:56.674" endtime="20200427 22:07:56.674"></status>
</kw>
<status status="PASS" starttime="20200427 22:07:56.673" endtime="20200427 22:07:56.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200427 22:07:56.675" endtime="20200427 22:07:56.675"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200427 22:06:46.810" endtime="20200427 22:07:56.675" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200427 22:06:46.650" endtime="20200427 22:07:56.676"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200427 22:07:56.685" level="INFO">${random} = 77885</msg>
<status status="PASS" starttime="20200427 22:07:56.685" endtime="20200427 22:07:56.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200427 22:07:56.686" level="INFO">${prefix} = 77885</msg>
<status status="PASS" starttime="20200427 22:07:56.685" endtime="20200427 22:07:56.686"></status>
</kw>
<status status="PASS" starttime="20200427 22:07:56.684" endtime="20200427 22:07:56.686"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 22:07:56.686" endtime="20200427 22:07:56.687"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:07:56.690" level="INFO">Running command 'ozone sh volume info o3://om:9862/77885-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:07:58.496" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 22:07:58.496" level="INFO">${output} = VOLUME_NOT_FOUND Volume 77885-rpcwoport is not found</msg>
<status status="PASS" starttime="20200427 22:07:56.688" endtime="20200427 22:07:58.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:07:58.498" level="INFO">VOLUME_NOT_FOUND Volume 77885-rpcwoport is not found</msg>
<status status="PASS" starttime="20200427 22:07:58.497" endtime="20200427 22:07:58.498"></status>
</kw>
<msg timestamp="20200427 22:07:58.498" level="INFO">${result} = VOLUME_NOT_FOUND Volume 77885-rpcwoport is not found</msg>
<status status="PASS" starttime="20200427 22:07:56.687" endtime="20200427 22:07:58.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200427 22:07:58.498" endtime="20200427 22:07:58.498"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:07:58.501" level="INFO">Running command 'ozone sh volume create o3://om:9862/77885-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:00.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:00.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:07:58.499" endtime="20200427 22:08:00.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:00.357" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:08:00.356" endtime="20200427 22:08:00.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:00.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:00.357" endtime="20200427 22:08:00.357"></status>
</kw>
<msg timestamp="20200427 22:08:00.358" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 22:07:58.499" endtime="20200427 22:08:00.358"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:00.358" endtime="20200427 22:08:00.358"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:00.363" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="77885-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:02.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:02.502" level="INFO">${output} = {
  "metadata": {},
  "name": "77885-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:08:00.330Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200427 22:08:00.359" endtime="20200427 22:08:02.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:02.503" level="INFO">{
  "metadata": {},
  "name": "77885-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:08:00.330Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 22:08:02.502" endtime="20200427 22:08:02.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:02.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:02.503" endtime="20200427 22:08:02.504"></status>
</kw>
<msg timestamp="20200427 22:08:02.504" level="INFO">${result} = {
  "metadata": {},
  "name": "77885-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:08:00.330Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200427 22:08:00.358" endtime="20200427 22:08:02.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:02.504" endtime="20200427 22:08:02.504"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:02.507" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="77885-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:04.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:04.550" level="INFO">${output} = {
  "metadata": {},
  "name": "77885-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:08:00.330Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200427 22:08:02.505" endtime="20200427 22:08:04.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:04.551" level="INFO">{
  "metadata": {},
  "name": "77885-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:08:00.330Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 22:08:04.550" endtime="20200427 22:08:04.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:04.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:04.551" endtime="20200427 22:08:04.551"></status>
</kw>
<msg timestamp="20200427 22:08:04.552" level="INFO">${result} = {
  "metadata": {},
  "name": "77885-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:08:00.330Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200427 22:08:02.504" endtime="20200427 22:08:04.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:04.552" endtime="20200427 22:08:04.552"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:04.556" level="INFO">Running command 'ozone sh volume update o3://om:9862/77885-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:06.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:06.640" level="INFO">${output} = {
  "metadata" : { },
  "name" : "77885-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T22:08:00.330Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200427 22:08:04.553" endtime="20200427 22:08:06.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:06.641" level="INFO">{
  "metadata" : { },
  "name" : "77885-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T22:08:00.330Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200427 22:08:06.640" endtime="20200427 22:08:06.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:06.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:06.641" endtime="20200427 22:08:06.642"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:04.552" endtime="20200427 22:08:06.642"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:06.645" level="INFO">Running command 'ozone sh volume info o3://om:9862/77885-rpcwoport | jq -r '. | select(.name=="77885-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:08.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:08.563" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200427 22:08:06.643" endtime="20200427 22:08:08.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:08.565" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200427 22:08:08.564" endtime="20200427 22:08:08.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:08.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:08.565" endtime="20200427 22:08:08.566"></status>
</kw>
<msg timestamp="20200427 22:08:08.566" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200427 22:08:06.642" endtime="20200427 22:08:08.566"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:08.566" endtime="20200427 22:08:08.566"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:08.569" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77885-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:10.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:10.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:08:08.567" endtime="20200427 22:08:10.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:10.499" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:08:10.499" endtime="20200427 22:08:10.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:10.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:10.500" endtime="20200427 22:08:10.500"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:08.566" endtime="20200427 22:08:10.501"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:10.512" level="INFO">Running command 'ozone sh bucket info o3://om:9862/77885-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:12.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:12.592" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200427 22:08:10.502" endtime="20200427 22:08:12.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:12.594" level="INFO">DISK</msg>
<status status="PASS" starttime="20200427 22:08:12.593" endtime="20200427 22:08:12.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:12.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:12.594" endtime="20200427 22:08:12.595"></status>
</kw>
<msg timestamp="20200427 22:08:12.595" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200427 22:08:10.501" endtime="20200427 22:08:12.595"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:12.595" endtime="20200427 22:08:12.596"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:12.599" level="INFO">Running command 'ozone sh bucket list o3://om:9862/77885-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:14.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:14.664" level="INFO">${output} = 77885-rpcwoport</msg>
<status status="PASS" starttime="20200427 22:08:12.597" endtime="20200427 22:08:14.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:14.665" level="INFO">77885-rpcwoport</msg>
<status status="PASS" starttime="20200427 22:08:14.665" endtime="20200427 22:08:14.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:14.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:14.666" endtime="20200427 22:08:14.666"></status>
</kw>
<msg timestamp="20200427 22:08:14.666" level="INFO">${result} = 77885-rpcwoport</msg>
<status status="PASS" starttime="20200427 22:08:12.596" endtime="20200427 22:08:14.666"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:14.666" endtime="20200427 22:08:14.667"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:14.671" level="INFO">Running command 'ozone sh key put o3://om:9862/77885-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:18.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:18.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:08:14.668" endtime="20200427 22:08:18.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:18.222" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:08:18.221" endtime="20200427 22:08:18.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:18.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:18.222" endtime="20200427 22:08:18.223"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:14.668" endtime="20200427 22:08:18.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:18.226" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:18.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:18.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:08:18.224" endtime="20200427 22:08:18.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:18.230" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:08:18.229" endtime="20200427 22:08:18.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:18.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:18.230" endtime="20200427 22:08:18.231"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:18.223" endtime="20200427 22:08:18.231"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:18.234" level="INFO">Running command 'ozone sh key get o3://om:9862/77885-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:21.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:21.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:08:18.232" endtime="20200427 22:08:21.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:21.550" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:08:21.549" endtime="20200427 22:08:21.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:21.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:21.550" endtime="20200427 22:08:21.551"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:18.231" endtime="20200427 22:08:21.551"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:21.556" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:21.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:21.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:08:21.552" endtime="20200427 22:08:21.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:21.559" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:08:21.559" endtime="20200427 22:08:21.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:21.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:21.560" endtime="20200427 22:08:21.560"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:21.551" endtime="20200427 22:08:21.561"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:21.565" level="INFO">Running command 'ozone sh key get o3://om:9862/77885-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:23.716" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 22:08:23.716" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 22:08:21.562" endtime="20200427 22:08:23.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:23.717" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 22:08:23.717" endtime="20200427 22:08:23.718"></status>
</kw>
<msg timestamp="20200427 22:08:23.718" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 22:08:21.561" endtime="20200427 22:08:23.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:23.718" endtime="20200427 22:08:23.719"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:23.721" level="INFO">Running command 'ozone sh key get --force o3://om:9862/77885-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:27.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:27.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:08:23.719" endtime="20200427 22:08:27.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:27.220" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:08:27.219" endtime="20200427 22:08:27.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:27.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:27.220" endtime="20200427 22:08:27.220"></status>
</kw>
<msg timestamp="20200427 22:08:27.221" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 22:08:23.719" endtime="20200427 22:08:27.221"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:27.221" endtime="20200427 22:08:27.221"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:27.224" level="INFO">Running command 'ozone sh key info o3://om:9862/77885-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:29.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:29.319" level="INFO">${output} = {
  "volumeName": "77885-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T22:08:16.466Z",
  "modificationTime": "2020-04-27T22:08:17.865Z",
  "re...</msg>
<status status="PASS" starttime="20200427 22:08:27.222" endtime="20200427 22:08:29.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:29.321" level="INFO">{
  "volumeName": "77885-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T22:08:16.466Z",
  "modificationTime": "2020-04-27T22:08:17.865Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104072825829130370,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200427 22:08:29.320" endtime="20200427 22:08:29.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:29.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:29.321" endtime="20200427 22:08:29.322"></status>
</kw>
<msg timestamp="20200427 22:08:29.322" level="INFO">${result} = {
  "volumeName": "77885-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T22:08:16.466Z",
  "modificationTime": "2020-04-27T22:08:17.865Z",
  "re...</msg>
<status status="PASS" starttime="20200427 22:08:27.221" endtime="20200427 22:08:29.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:29.322" endtime="20200427 22:08:29.322"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:29.326" level="INFO">Running command 'ozone debug chunkinfo o3://om:9862/77885-rpcwoport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:33.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:33.113" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/19339952-279b-4418-9fe1-aec7611be52e/current/containerDir0/1/chunks/104072825829130365_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 22:08:29.323" endtime="20200427 22:08:33.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:33.114" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/19339952-279b-4418-9fe1-aec7611be52e/current/containerDir0/1/chunks/104072825829130365_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.3",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.7",
      "hostName": "ozone_datanode_1.ozone_default"
    }
  ],
  "pipelineID": "f4db53cf-9b9a-492b-80ec-330cd41403d5"
}</msg>
<status status="PASS" starttime="20200427 22:08:33.113" endtime="20200427 22:08:33.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:33.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:33.114" endtime="20200427 22:08:33.115"></status>
</kw>
<msg timestamp="20200427 22:08:33.115" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/19339952-279b-4418-9fe1-aec7611be52e/current/containerDir0/1/chunks/104072825829130365_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 22:08:29.323" endtime="20200427 22:08:33.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:33.115" endtime="20200427 22:08:33.116"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:33.119" level="INFO">Running command 'ozone sh key list o3://om:9862/77885-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:35.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:35.218" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200427 22:08:33.117" endtime="20200427 22:08:35.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:35.219" level="INFO">key1</msg>
<status status="PASS" starttime="20200427 22:08:35.219" endtime="20200427 22:08:35.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:35.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:35.220" endtime="20200427 22:08:35.220"></status>
</kw>
<msg timestamp="20200427 22:08:35.220" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200427 22:08:33.116" endtime="20200427 22:08:35.221"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:35.221" endtime="20200427 22:08:35.221"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:35.224" level="INFO">Running command 'ozone sh key rename o3://om:9862/77885-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:37.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:37.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:08:35.222" endtime="20200427 22:08:37.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:37.065" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:08:37.064" endtime="20200427 22:08:37.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:37.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:37.066" endtime="20200427 22:08:37.066"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:35.221" endtime="20200427 22:08:37.066"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:37.069" level="INFO">Running command 'ozone sh key list o3://om:9862/77885-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:39.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:39.059" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200427 22:08:37.067" endtime="20200427 22:08:39.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:39.060" level="INFO">key2</msg>
<status status="PASS" starttime="20200427 22:08:39.059" endtime="20200427 22:08:39.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:39.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:39.060" endtime="20200427 22:08:39.061"></status>
</kw>
<msg timestamp="20200427 22:08:39.061" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200427 22:08:37.066" endtime="20200427 22:08:39.061"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:39.062" endtime="20200427 22:08:39.062"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:39.066" level="INFO">Running command 'ozone sh key delete o3://om:9862/77885-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:40.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:40.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:08:39.063" endtime="20200427 22:08:40.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:40.981" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:08:40.981" endtime="20200427 22:08:40.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:40.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:40.981" endtime="20200427 22:08:40.982"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:39.062" endtime="20200427 22:08:40.982"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:14.667" endtime="20200427 22:08:40.982"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:14.667" endtime="20200427 22:08:40.982"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:40.985" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/77885-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:42.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:42.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:08:40.983" endtime="20200427 22:08:42.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:42.765" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:08:42.765" endtime="20200427 22:08:42.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:42.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:42.766" endtime="20200427 22:08:42.766"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:40.982" endtime="20200427 22:08:42.767"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:42.770" level="INFO">Running command 'ozone sh volume delete o3://om:9862/77885-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:44.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:44.546" level="INFO">${output} = Volume 77885-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200427 22:08:42.767" endtime="20200427 22:08:44.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:44.547" level="INFO">Volume 77885-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200427 22:08:44.546" endtime="20200427 22:08:44.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:44.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:44.547" endtime="20200427 22:08:44.548"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:42.767" endtime="20200427 22:08:44.548"></status>
</kw>
<status status="PASS" starttime="20200427 22:07:56.687" endtime="20200427 22:08:44.548"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 22:07:56.686" endtime="20200427 22:08:44.548" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:44.549" endtime="20200427 22:08:44.550"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:44.554" level="INFO">Running command 'ozone sh volume create o3://om:9862/77885-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:46.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:46.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:08:44.551" endtime="20200427 22:08:46.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:46.369" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:08:46.368" endtime="20200427 22:08:46.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:46.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:46.369" endtime="20200427 22:08:46.369"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:44.550" endtime="20200427 22:08:46.370"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:46.373" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77885-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:48.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:48.347" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:08:46.370" endtime="20200427 22:08:48.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:48.350" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:08:48.348" endtime="20200427 22:08:48.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:48.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:48.350" endtime="20200427 22:08:48.351"></status>
</kw>
<msg timestamp="20200427 22:08:48.351" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:08:46.370" endtime="20200427 22:08:48.351"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:48.351" endtime="20200427 22:08:48.352"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:48.355" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/77885-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:50.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:50.221" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200427 22:08:48.353" endtime="20200427 22:08:50.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:50.222" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200427 22:08:50.221" endtime="20200427 22:08:50.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:50.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:50.222" endtime="20200427 22:08:50.223"></status>
</kw>
<msg timestamp="20200427 22:08:50.223" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200427 22:08:48.352" endtime="20200427 22:08:50.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:50.226" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77885-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:52.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:52.397" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:08:50.224" endtime="20200427 22:08:52.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:52.398" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:08:52.397" endtime="20200427 22:08:52.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:52.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:52.398" endtime="20200427 22:08:52.399"></status>
</kw>
<msg timestamp="20200427 22:08:52.399" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:08:50.223" endtime="20200427 22:08:52.399"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:52.399" endtime="20200427 22:08:52.400"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:52.403" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/77885-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:54.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:54.146" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200427 22:08:52.401" endtime="20200427 22:08:54.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:54.147" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200427 22:08:54.146" endtime="20200427 22:08:54.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:54.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:54.147" endtime="20200427 22:08:54.148"></status>
</kw>
<msg timestamp="20200427 22:08:54.149" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200427 22:08:52.401" endtime="20200427 22:08:54.149"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:54.152" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77885-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:56.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:56.110" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:08:54.149" endtime="20200427 22:08:56.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:56.111" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:08:56.111" endtime="20200427 22:08:56.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:56.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:56.111" endtime="20200427 22:08:56.112"></status>
</kw>
<msg timestamp="20200427 22:08:56.112" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:08:54.149" endtime="20200427 22:08:56.112"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:56.112" endtime="20200427 22:08:56.113"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:56.116" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/77885-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:57.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:57.963" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 22:08:56.114" endtime="20200427 22:08:57.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:57.965" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 22:08:57.964" endtime="20200427 22:08:57.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:57.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:57.965" endtime="20200427 22:08:57.966"></status>
</kw>
<msg timestamp="20200427 22:08:57.966" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 22:08:56.113" endtime="20200427 22:08:57.966"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:57.970" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77885-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:08:59.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:08:59.957" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200427 22:08:57.967" endtime="20200427 22:08:59.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:08:59.958" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:08:59.958" endtime="20200427 22:08:59.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:08:59.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:08:59.959" endtime="20200427 22:08:59.959"></status>
</kw>
<msg timestamp="20200427 22:08:59.959" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200427 22:08:57.966" endtime="20200427 22:08:59.959"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:59.959" endtime="20200427 22:08:59.960"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:59.960" endtime="20200427 22:08:59.961"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:44.550" endtime="20200427 22:08:59.961"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 22:08:44.549" endtime="20200427 22:08:59.961" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 22:08:59.963" endtime="20200427 22:08:59.963"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:08:59.966" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77885-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:01.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:01.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:08:59.964" endtime="20200427 22:09:01.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:01.827" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:09:01.826" endtime="20200427 22:09:01.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:01.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:01.827" endtime="20200427 22:09:01.828"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:59.963" endtime="20200427 22:09:01.829"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:01.835" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/77885-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:04.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:04.214" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:01.830" endtime="20200427 22:09:04.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:04.215" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:09:04.214" endtime="20200427 22:09:04.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:04.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:04.216" endtime="20200427 22:09:04.216"></status>
</kw>
<msg timestamp="20200427 22:09:04.217" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:01.830" endtime="20200427 22:09:04.217"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:04.217" endtime="20200427 22:09:04.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:04.221" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/77885-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:06.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:06.077" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200427 22:09:04.218" endtime="20200427 22:09:06.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:06.078" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200427 22:09:06.078" endtime="20200427 22:09:06.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:06.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:06.078" endtime="20200427 22:09:06.079"></status>
</kw>
<msg timestamp="20200427 22:09:06.079" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200427 22:09:04.217" endtime="20200427 22:09:06.079"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:06.082" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/77885-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:08.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:08.038" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:06.080" endtime="20200427 22:09:08.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:08.039" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:09:08.039" endtime="20200427 22:09:08.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:08.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:08.040" endtime="20200427 22:09:08.040"></status>
</kw>
<msg timestamp="20200427 22:09:08.040" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:06.080" endtime="20200427 22:09:08.040"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:08.041" endtime="20200427 22:09:08.042"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:08.046" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/77885-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:09.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:09.806" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 22:09:08.043" endtime="20200427 22:09:09.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:09.807" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 22:09:09.806" endtime="20200427 22:09:09.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:09.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:09.807" endtime="20200427 22:09:09.808"></status>
</kw>
<msg timestamp="20200427 22:09:09.808" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 22:09:08.042" endtime="20200427 22:09:09.808"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:09.811" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/77885-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:11.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:11.704" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:09.809" endtime="20200427 22:09:11.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:11.705" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:09:11.704" endtime="20200427 22:09:11.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:11.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:11.706" endtime="20200427 22:09:11.706"></status>
</kw>
<msg timestamp="20200427 22:09:11.706" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:09.808" endtime="20200427 22:09:11.706"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:11.707" endtime="20200427 22:09:11.707"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:11.710" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/77885-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:13.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:13.493" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 22:09:11.708" endtime="20200427 22:09:13.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:13.494" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 22:09:13.493" endtime="20200427 22:09:13.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:13.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:13.494" endtime="20200427 22:09:13.495"></status>
</kw>
<msg timestamp="20200427 22:09:13.495" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 22:09:11.708" endtime="20200427 22:09:13.495"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:13.497" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/77885-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:15.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:15.445" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200427 22:09:13.496" endtime="20200427 22:09:15.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:15.447" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:09:15.446" endtime="20200427 22:09:15.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:15.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:15.447" endtime="20200427 22:09:15.448"></status>
</kw>
<msg timestamp="20200427 22:09:15.448" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200427 22:09:13.495" endtime="20200427 22:09:15.448"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:15.448" endtime="20200427 22:09:15.449"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:15.449" endtime="20200427 22:09:15.450"></status>
</kw>
<status status="PASS" starttime="20200427 22:08:59.963" endtime="20200427 22:09:15.450"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 22:08:59.962" endtime="20200427 22:09:15.450" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:15.451" endtime="20200427 22:09:15.452"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:15.455" level="INFO">Running command 'ozone sh key put o3://om:9862/77885-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:18.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:18.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:09:15.453" endtime="20200427 22:09:18.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:18.973" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:09:18.972" endtime="20200427 22:09:18.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:18.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:18.973" endtime="20200427 22:09:18.974"></status>
</kw>
<status status="PASS" starttime="20200427 22:09:15.452" endtime="20200427 22:09:18.974"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:18.980" level="INFO">Running command 'ozone sh key getacl o3://om:9862/77885-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:21.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:21.100" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:18.976" endtime="20200427 22:09:21.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:21.102" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:09:21.101" endtime="20200427 22:09:21.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:21.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:21.102" endtime="20200427 22:09:21.102"></status>
</kw>
<msg timestamp="20200427 22:09:21.103" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:18.974" endtime="20200427 22:09:21.103"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:21.103" endtime="20200427 22:09:21.103"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:21.107" level="INFO">Running command 'ozone sh key addacl o3://om:9862/77885-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:22.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:22.914" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200427 22:09:21.104" endtime="20200427 22:09:22.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:22.915" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200427 22:09:22.914" endtime="20200427 22:09:22.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:22.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:22.915" endtime="20200427 22:09:22.915"></status>
</kw>
<msg timestamp="20200427 22:09:22.916" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200427 22:09:21.103" endtime="20200427 22:09:22.916"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:22.919" level="INFO">Running command 'ozone sh key getacl o3://om:9862/77885-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:24.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:24.970" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:22.916" endtime="20200427 22:09:24.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:24.971" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:09:24.971" endtime="20200427 22:09:24.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:24.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:24.971" endtime="20200427 22:09:24.972"></status>
</kw>
<msg timestamp="20200427 22:09:24.972" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:22.916" endtime="20200427 22:09:24.972"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:24.972" endtime="20200427 22:09:24.973"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:24.977" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/77885-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:27.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:27.004" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 22:09:24.974" endtime="20200427 22:09:27.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:27.005" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 22:09:27.004" endtime="20200427 22:09:27.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:27.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:27.005" endtime="20200427 22:09:27.006"></status>
</kw>
<msg timestamp="20200427 22:09:27.006" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200427 22:09:24.974" endtime="20200427 22:09:27.006"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:27.009" level="INFO">Running command 'ozone sh key getacl o3://om:9862/77885-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:29.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:29.220" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:27.006" endtime="20200427 22:09:29.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:29.221" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:09:29.220" endtime="20200427 22:09:29.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:29.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:29.221" endtime="20200427 22:09:29.222"></status>
</kw>
<msg timestamp="20200427 22:09:29.222" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200427 22:09:27.006" endtime="20200427 22:09:29.222"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:29.222" endtime="20200427 22:09:29.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:29.227" level="INFO">Running command 'ozone sh key setacl o3://om:9862/77885-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:31.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:31.125" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 22:09:29.224" endtime="20200427 22:09:31.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:31.126" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 22:09:31.126" endtime="20200427 22:09:31.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:31.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:31.127" endtime="20200427 22:09:31.127"></status>
</kw>
<msg timestamp="20200427 22:09:31.127" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200427 22:09:29.223" endtime="20200427 22:09:31.127"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:31.131" level="INFO">Running command 'ozone sh key getacl o3://om:9862/77885-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:33.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:33.362" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200427 22:09:31.129" endtime="20200427 22:09:33.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:33.364" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200427 22:09:33.363" endtime="20200427 22:09:33.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:33.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:33.364" endtime="20200427 22:09:33.365"></status>
</kw>
<msg timestamp="20200427 22:09:33.365" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200427 22:09:31.127" endtime="20200427 22:09:33.365"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:33.365" endtime="20200427 22:09:33.366"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:33.366" endtime="20200427 22:09:33.367"></status>
</kw>
<status status="PASS" starttime="20200427 22:09:15.452" endtime="20200427 22:09:33.367"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 22:09:15.450" endtime="20200427 22:09:33.367" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:33.368" endtime="20200427 22:09:33.369"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:33.372" level="INFO">Running command 'ozone sh volume info o3:///77885-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:35.308" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 22:09:35.308" level="INFO">${output} = VOLUME_NOT_FOUND Volume 77885-rpcwport is not found</msg>
<status status="PASS" starttime="20200427 22:09:33.370" endtime="20200427 22:09:35.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:35.309" level="INFO">VOLUME_NOT_FOUND Volume 77885-rpcwport is not found</msg>
<status status="PASS" starttime="20200427 22:09:35.308" endtime="20200427 22:09:35.309"></status>
</kw>
<msg timestamp="20200427 22:09:35.309" level="INFO">${result} = VOLUME_NOT_FOUND Volume 77885-rpcwport is not found</msg>
<status status="PASS" starttime="20200427 22:09:33.369" endtime="20200427 22:09:35.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:35.309" endtime="20200427 22:09:35.310"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:35.313" level="INFO">Running command 'ozone sh volume create o3:///77885-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:37.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:37.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:09:35.311" endtime="20200427 22:09:37.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:37.197" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:09:37.196" endtime="20200427 22:09:37.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:37.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:37.198" endtime="20200427 22:09:37.198"></status>
</kw>
<msg timestamp="20200427 22:09:37.198" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 22:09:35.310" endtime="20200427 22:09:37.198"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:37.199" endtime="20200427 22:09:37.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:37.204" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="77885-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:39.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:39.400" level="INFO">${output} = {
  "metadata": {},
  "name": "77885-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:09:37.174Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200427 22:09:37.200" endtime="20200427 22:09:39.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:39.402" level="INFO">{
  "metadata": {},
  "name": "77885-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:09:37.174Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 22:09:39.401" endtime="20200427 22:09:39.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:39.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:39.402" endtime="20200427 22:09:39.403"></status>
</kw>
<msg timestamp="20200427 22:09:39.403" level="INFO">${result} = {
  "metadata": {},
  "name": "77885-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:09:37.174Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200427 22:09:37.199" endtime="20200427 22:09:39.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:39.404" endtime="20200427 22:09:39.404"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:39.408" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="77885-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:41.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:41.703" level="INFO">${output} = {
  "metadata": {},
  "name": "77885-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:09:37.174Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200427 22:09:39.405" endtime="20200427 22:09:41.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:41.705" level="INFO">{
  "metadata": {},
  "name": "77885-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:09:37.174Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 22:09:41.704" endtime="20200427 22:09:41.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:41.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:41.705" endtime="20200427 22:09:41.706"></status>
</kw>
<msg timestamp="20200427 22:09:41.706" level="INFO">${result} = {
  "metadata": {},
  "name": "77885-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:09:37.174Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200427 22:09:39.404" endtime="20200427 22:09:41.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:41.706" endtime="20200427 22:09:41.707"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:41.710" level="INFO">Running command 'ozone sh volume update o3:///77885-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:43.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:43.961" level="INFO">${output} = {
  "metadata" : { },
  "name" : "77885-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T22:09:37.174Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200427 22:09:41.707" endtime="20200427 22:09:43.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:43.962" level="INFO">{
  "metadata" : { },
  "name" : "77885-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T22:09:37.174Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200427 22:09:43.962" endtime="20200427 22:09:43.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:43.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:43.963" endtime="20200427 22:09:43.963"></status>
</kw>
<status status="PASS" starttime="20200427 22:09:41.707" endtime="20200427 22:09:43.964"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:43.968" level="INFO">Running command 'ozone sh volume info o3:///77885-rpcwport | jq -r '. | select(.name=="77885-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:46.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:46.202" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200427 22:09:43.965" endtime="20200427 22:09:46.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:46.203" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200427 22:09:46.202" endtime="20200427 22:09:46.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:46.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:46.203" endtime="20200427 22:09:46.204"></status>
</kw>
<msg timestamp="20200427 22:09:46.204" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200427 22:09:43.964" endtime="20200427 22:09:46.204"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:46.204" endtime="20200427 22:09:46.205"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:46.209" level="INFO">Running command 'ozone sh bucket create o3:///77885-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:48.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:48.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:09:46.205" endtime="20200427 22:09:48.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:48.155" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:09:48.154" endtime="20200427 22:09:48.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:48.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:48.155" endtime="20200427 22:09:48.155"></status>
</kw>
<status status="PASS" starttime="20200427 22:09:46.205" endtime="20200427 22:09:48.156"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:48.160" level="INFO">Running command 'ozone sh bucket info o3:///77885-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:50.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:50.333" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200427 22:09:48.156" endtime="20200427 22:09:50.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:50.334" level="INFO">DISK</msg>
<status status="PASS" starttime="20200427 22:09:50.334" endtime="20200427 22:09:50.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:50.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:50.335" endtime="20200427 22:09:50.335"></status>
</kw>
<msg timestamp="20200427 22:09:50.335" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200427 22:09:48.156" endtime="20200427 22:09:50.335"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:50.336" endtime="20200427 22:09:50.336"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:50.340" level="INFO">Running command 'ozone sh bucket list o3:///77885-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:52.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:52.473" level="INFO">${output} = 77885-rpcwport</msg>
<status status="PASS" starttime="20200427 22:09:50.337" endtime="20200427 22:09:52.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:52.474" level="INFO">77885-rpcwport</msg>
<status status="PASS" starttime="20200427 22:09:52.474" endtime="20200427 22:09:52.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:52.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:52.475" endtime="20200427 22:09:52.475"></status>
</kw>
<msg timestamp="20200427 22:09:52.475" level="INFO">${result} = 77885-rpcwport</msg>
<status status="PASS" starttime="20200427 22:09:50.336" endtime="20200427 22:09:52.475"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200427 22:09:52.476" endtime="20200427 22:09:52.476"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:52.481" level="INFO">Running command 'ozone sh key put o3:///77885-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:56.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:56.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:09:52.478" endtime="20200427 22:09:56.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:56.218" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:09:56.218" endtime="20200427 22:09:56.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:56.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:56.218" endtime="20200427 22:09:56.219"></status>
</kw>
<status status="PASS" starttime="20200427 22:09:52.477" endtime="20200427 22:09:56.219"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:56.222" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:56.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:56.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:09:56.220" endtime="20200427 22:09:56.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:56.225" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:09:56.225" endtime="20200427 22:09:56.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:56.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:56.226" endtime="20200427 22:09:56.226"></status>
</kw>
<status status="PASS" starttime="20200427 22:09:56.219" endtime="20200427 22:09:56.227"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:56.229" level="INFO">Running command 'ozone sh key get o3:///77885-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:59.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:59.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:09:56.227" endtime="20200427 22:09:59.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:59.712" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:09:59.711" endtime="20200427 22:09:59.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:59.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:59.712" endtime="20200427 22:09:59.713"></status>
</kw>
<status status="PASS" starttime="20200427 22:09:56.227" endtime="20200427 22:09:59.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:59.716" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:09:59.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:09:59.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:09:59.714" endtime="20200427 22:09:59.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:09:59.719" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:09:59.718" endtime="20200427 22:09:59.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:09:59.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:09:59.719" endtime="20200427 22:09:59.719"></status>
</kw>
<status status="PASS" starttime="20200427 22:09:59.713" endtime="20200427 22:09:59.719"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:09:59.723" level="INFO">Running command 'ozone sh key get o3:///77885-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:01.573" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 22:10:01.573" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 22:09:59.720" endtime="20200427 22:10:01.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:01.574" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 22:10:01.574" endtime="20200427 22:10:01.574"></status>
</kw>
<msg timestamp="20200427 22:10:01.575" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 22:09:59.720" endtime="20200427 22:10:01.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:01.575" endtime="20200427 22:10:01.575"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:01.578" level="INFO">Running command 'ozone sh key get --force o3:///77885-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:04.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:04.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:01.576" endtime="20200427 22:10:04.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:04.921" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:10:04.921" endtime="20200427 22:10:04.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:04.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:04.921" endtime="20200427 22:10:04.922"></status>
</kw>
<msg timestamp="20200427 22:10:04.922" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 22:10:01.575" endtime="20200427 22:10:04.922"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:04.922" endtime="20200427 22:10:04.923"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:04.926" level="INFO">Running command 'ozone sh key info o3:///77885-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:07.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:07.032" level="INFO">${output} = {
  "volumeName": "77885-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T22:09:54.273Z",
  "modificationTime": "2020-04-27T22:09:55.846Z",
  "rep...</msg>
<status status="PASS" starttime="20200427 22:10:04.923" endtime="20200427 22:10:07.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:07.034" level="INFO">{
  "volumeName": "77885-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T22:09:54.273Z",
  "modificationTime": "2020-04-27T22:09:55.846Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104072832239009920,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200427 22:10:07.033" endtime="20200427 22:10:07.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:07.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:07.034" endtime="20200427 22:10:07.034"></status>
</kw>
<msg timestamp="20200427 22:10:07.035" level="INFO">${result} = {
  "volumeName": "77885-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T22:09:54.273Z",
  "modificationTime": "2020-04-27T22:09:55.846Z",
  "rep...</msg>
<status status="PASS" starttime="20200427 22:10:04.923" endtime="20200427 22:10:07.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:07.035" endtime="20200427 22:10:07.035"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:07.039" level="INFO">Running command 'ozone debug chunkinfo o3:///77885-rpcwport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:10.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:10.418" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/19339952-279b-4418-9fe1-aec7611be52e/current/containerDir0/1/chunks/104072832239009919_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 22:10:07.036" endtime="20200427 22:10:10.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:10.419" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/19339952-279b-4418-9fe1-aec7611be52e/current/containerDir0/1/chunks/104072832239009919_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.3",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.7",
      "hostName": "ozone_datanode_1.ozone_default"
    }
  ],
  "pipelineID": "f4db53cf-9b9a-492b-80ec-330cd41403d5"
}</msg>
<status status="PASS" starttime="20200427 22:10:10.418" endtime="20200427 22:10:10.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:10.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:10.420" endtime="20200427 22:10:10.420"></status>
</kw>
<msg timestamp="20200427 22:10:10.420" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/19339952-279b-4418-9fe1-aec7611be52e/current/containerDir0/1/chunks/104072832239009919_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 22:10:07.036" endtime="20200427 22:10:10.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:10.421" endtime="20200427 22:10:10.421"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:10.424" level="INFO">Running command 'ozone sh key list o3:///77885-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:12.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:12.443" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200427 22:10:10.422" endtime="20200427 22:10:12.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:12.444" level="INFO">key1</msg>
<status status="PASS" starttime="20200427 22:10:12.444" endtime="20200427 22:10:12.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:12.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:12.445" endtime="20200427 22:10:12.445"></status>
</kw>
<msg timestamp="20200427 22:10:12.446" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200427 22:10:10.421" endtime="20200427 22:10:12.446"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:12.446" endtime="20200427 22:10:12.446"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:12.450" level="INFO">Running command 'ozone sh key rename o3:///77885-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:14.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:14.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:12.447" endtime="20200427 22:10:14.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:14.274" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:10:14.273" endtime="20200427 22:10:14.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:14.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:14.274" endtime="20200427 22:10:14.275"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:12.446" endtime="20200427 22:10:14.275"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:14.280" level="INFO">Running command 'ozone sh key list o3:///77885-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:16.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:16.321" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200427 22:10:14.276" endtime="20200427 22:10:16.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:16.322" level="INFO">key2</msg>
<status status="PASS" starttime="20200427 22:10:16.321" endtime="20200427 22:10:16.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:16.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:16.322" endtime="20200427 22:10:16.323"></status>
</kw>
<msg timestamp="20200427 22:10:16.323" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200427 22:10:14.276" endtime="20200427 22:10:16.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:16.323" endtime="20200427 22:10:16.323"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:16.327" level="INFO">Running command 'ozone sh key delete o3:///77885-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:18.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:18.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:16.324" endtime="20200427 22:10:18.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:18.202" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:10:18.202" endtime="20200427 22:10:18.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:18.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:18.203" endtime="20200427 22:10:18.203"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:16.324" endtime="20200427 22:10:18.203"></status>
</kw>
<status status="PASS" starttime="20200427 22:09:52.477" endtime="20200427 22:10:18.204"></status>
</kw>
<status status="PASS" starttime="20200427 22:09:52.476" endtime="20200427 22:10:18.204"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:18.207" level="INFO">Running command 'ozone sh bucket delete o3:///77885-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:20.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:20.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:18.205" endtime="20200427 22:10:20.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:20.030" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:10:20.030" endtime="20200427 22:10:20.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:20.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:20.030" endtime="20200427 22:10:20.031"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:18.204" endtime="20200427 22:10:20.031"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:20.035" level="INFO">Running command 'ozone sh volume delete o3:///77885-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:21.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:21.762" level="INFO">${output} = Volume 77885-rpcwport is deleted</msg>
<status status="PASS" starttime="20200427 22:10:20.032" endtime="20200427 22:10:21.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:21.763" level="INFO">Volume 77885-rpcwport is deleted</msg>
<status status="PASS" starttime="20200427 22:10:21.763" endtime="20200427 22:10:21.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:21.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:21.764" endtime="20200427 22:10:21.764"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:20.031" endtime="20200427 22:10:21.764"></status>
</kw>
<status status="PASS" starttime="20200427 22:09:33.369" endtime="20200427 22:10:21.764"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 22:09:33.368" endtime="20200427 22:10:21.764" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:21.766" endtime="20200427 22:10:21.766"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:21.770" level="INFO">Running command 'ozone sh volume info /77885-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:23.522" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 22:10:23.522" level="INFO">${output} = VOLUME_NOT_FOUND Volume 77885-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200427 22:10:21.767" endtime="20200427 22:10:23.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:23.523" level="INFO">VOLUME_NOT_FOUND Volume 77885-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200427 22:10:23.522" endtime="20200427 22:10:23.523"></status>
</kw>
<msg timestamp="20200427 22:10:23.524" level="INFO">${result} = VOLUME_NOT_FOUND Volume 77885-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200427 22:10:21.766" endtime="20200427 22:10:23.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:23.524" endtime="20200427 22:10:23.524"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:23.529" level="INFO">Running command 'ozone sh volume create /77885-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:25.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:25.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:23.525" endtime="20200427 22:10:25.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:25.280" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:10:25.280" endtime="20200427 22:10:25.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:25.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:25.281" endtime="20200427 22:10:25.281"></status>
</kw>
<msg timestamp="20200427 22:10:25.281" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 22:10:23.525" endtime="20200427 22:10:25.281"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:25.281" endtime="20200427 22:10:25.282"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:25.285" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="77885-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:27.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:27.368" level="INFO">${output} = {
  "metadata": {},
  "name": "77885-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:10:25.257Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200427 22:10:25.283" endtime="20200427 22:10:27.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:27.370" level="INFO">{
  "metadata": {},
  "name": "77885-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:10:25.257Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 22:10:27.369" endtime="20200427 22:10:27.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:27.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:27.370" endtime="20200427 22:10:27.370"></status>
</kw>
<msg timestamp="20200427 22:10:27.371" level="INFO">${result} = {
  "metadata": {},
  "name": "77885-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:10:25.257Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200427 22:10:25.282" endtime="20200427 22:10:27.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:27.371" endtime="20200427 22:10:27.371"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:27.374" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="77885-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:29.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:29.483" level="INFO">${output} = {
  "metadata": {},
  "name": "77885-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:10:25.257Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200427 22:10:27.372" endtime="20200427 22:10:29.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:29.484" level="INFO">{
  "metadata": {},
  "name": "77885-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:10:25.257Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200427 22:10:29.483" endtime="20200427 22:10:29.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:29.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:29.484" endtime="20200427 22:10:29.485"></status>
</kw>
<msg timestamp="20200427 22:10:29.485" level="INFO">${result} = {
  "metadata": {},
  "name": "77885-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-27T22:10:25.257Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200427 22:10:27.372" endtime="20200427 22:10:29.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:29.485" endtime="20200427 22:10:29.485"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:29.488" level="INFO">Running command 'ozone sh volume update /77885-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:31.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:31.376" level="INFO">${output} = {
  "metadata" : { },
  "name" : "77885-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T22:10:25.257Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200427 22:10:29.486" endtime="20200427 22:10:31.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:31.377" level="INFO">{
  "metadata" : { },
  "name" : "77885-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-27T22:10:25.257Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200427 22:10:31.377" endtime="20200427 22:10:31.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:31.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:31.378" endtime="20200427 22:10:31.378"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:29.486" endtime="20200427 22:10:31.378"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:31.382" level="INFO">Running command 'ozone sh volume info /77885-rpcwoscheme | jq -r '. | select(.name=="77885-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:33.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:33.430" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200427 22:10:31.379" endtime="20200427 22:10:33.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:33.431" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200427 22:10:33.430" endtime="20200427 22:10:33.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:33.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:33.431" endtime="20200427 22:10:33.432"></status>
</kw>
<msg timestamp="20200427 22:10:33.432" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200427 22:10:31.378" endtime="20200427 22:10:33.432"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:33.432" endtime="20200427 22:10:33.433"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:33.437" level="INFO">Running command 'ozone sh bucket create /77885-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:35.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:35.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:33.433" endtime="20200427 22:10:35.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:35.172" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:10:35.171" endtime="20200427 22:10:35.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:35.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:35.172" endtime="20200427 22:10:35.173"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:33.433" endtime="20200427 22:10:35.173"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:35.177" level="INFO">Running command 'ozone sh bucket info /77885-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:37.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:37.169" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200427 22:10:35.174" endtime="20200427 22:10:37.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:37.170" level="INFO">DISK</msg>
<status status="PASS" starttime="20200427 22:10:37.170" endtime="20200427 22:10:37.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:37.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:37.171" endtime="20200427 22:10:37.171"></status>
</kw>
<msg timestamp="20200427 22:10:37.172" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200427 22:10:35.173" endtime="20200427 22:10:37.172"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:37.172" endtime="20200427 22:10:37.172"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:37.176" level="INFO">Running command 'ozone sh bucket list /77885-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:39.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:39.153" level="INFO">${output} = 77885-rpcwoscheme</msg>
<status status="PASS" starttime="20200427 22:10:37.173" endtime="20200427 22:10:39.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:39.154" level="INFO">77885-rpcwoscheme</msg>
<status status="PASS" starttime="20200427 22:10:39.153" endtime="20200427 22:10:39.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:39.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:39.154" endtime="20200427 22:10:39.154"></status>
</kw>
<msg timestamp="20200427 22:10:39.155" level="INFO">${result} = 77885-rpcwoscheme</msg>
<status status="PASS" starttime="20200427 22:10:37.173" endtime="20200427 22:10:39.155"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:39.155" endtime="20200427 22:10:39.155"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:39.159" level="INFO">Running command 'ozone sh key put /77885-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:43.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:43.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:39.156" endtime="20200427 22:10:43.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:43.029" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:10:43.028" endtime="20200427 22:10:43.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:43.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:43.029" endtime="20200427 22:10:43.030"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:39.156" endtime="20200427 22:10:43.030"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:43.032" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:43.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:43.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:43.031" endtime="20200427 22:10:43.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:43.036" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:10:43.035" endtime="20200427 22:10:43.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:43.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:43.036" endtime="20200427 22:10:43.036"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:43.030" endtime="20200427 22:10:43.037"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:43.039" level="INFO">Running command 'ozone sh key get /77885-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:46.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:46.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:43.037" endtime="20200427 22:10:46.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:46.572" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:10:46.572" endtime="20200427 22:10:46.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:46.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:46.573" endtime="20200427 22:10:46.573"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:43.037" endtime="20200427 22:10:46.573"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:46.576" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:46.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:46.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:46.574" endtime="20200427 22:10:46.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:46.579" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:10:46.578" endtime="20200427 22:10:46.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:46.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:46.579" endtime="20200427 22:10:46.580"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:46.573" endtime="20200427 22:10:46.580"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:46.584" level="INFO">Running command 'ozone sh key get /77885-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:48.385" level="INFO">${rc} = 255</msg>
<msg timestamp="20200427 22:10:48.385" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 22:10:46.581" endtime="20200427 22:10:48.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:48.386" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 22:10:48.386" endtime="20200427 22:10:48.386"></status>
</kw>
<msg timestamp="20200427 22:10:48.387" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200427 22:10:46.580" endtime="20200427 22:10:48.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:48.387" endtime="20200427 22:10:48.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:48.390" level="INFO">Running command 'ozone sh key get --force /77885-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:51.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:51.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:48.388" endtime="20200427 22:10:51.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:51.804" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:10:51.800" endtime="20200427 22:10:51.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:51.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:51.805" endtime="20200427 22:10:51.805"></status>
</kw>
<msg timestamp="20200427 22:10:51.806" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200427 22:10:48.387" endtime="20200427 22:10:51.806"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:51.806" endtime="20200427 22:10:51.806"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:51.809" level="INFO">Running command 'ozone sh key info /77885-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:53.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:53.829" level="INFO">${output} = {
  "volumeName": "77885-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T22:10:41.026Z",
  "modificationTime": "2020-04-27T22:10:42.659Z",
  "...</msg>
<status status="PASS" starttime="20200427 22:10:51.807" endtime="20200427 22:10:53.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:53.830" level="INFO">{
  "volumeName": "77885-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T22:10:41.026Z",
  "modificationTime": "2020-04-27T22:10:42.659Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104072835303080060,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200427 22:10:53.830" endtime="20200427 22:10:53.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:53.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:53.831" endtime="20200427 22:10:53.831"></status>
</kw>
<msg timestamp="20200427 22:10:53.831" level="INFO">${result} = {
  "volumeName": "77885-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-27T22:10:41.026Z",
  "modificationTime": "2020-04-27T22:10:42.659Z",
  "...</msg>
<status status="PASS" starttime="20200427 22:10:51.806" endtime="20200427 22:10:53.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:53.832" endtime="20200427 22:10:53.832"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:53.835" level="INFO">Running command 'ozone debug chunkinfo /77885-rpcwoscheme/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:57.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:57.323" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/19339952-279b-4418-9fe1-aec7611be52e/current/containerDir0/1/chunks/104072835303080064_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 22:10:53.833" endtime="20200427 22:10:57.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:57.325" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/19339952-279b-4418-9fe1-aec7611be52e/current/containerDir0/1/chunks/104072835303080064_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.3",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.7",
      "hostName": "ozone_datanode_1.ozone_default"
    }
  ],
  "pipelineID": "f4db53cf-9b9a-492b-80ec-330cd41403d5"
}</msg>
<status status="PASS" starttime="20200427 22:10:57.324" endtime="20200427 22:10:57.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:57.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:57.325" endtime="20200427 22:10:57.325"></status>
</kw>
<msg timestamp="20200427 22:10:57.326" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/19339952-279b-4418-9fe1-aec7611be52e/current/containerDir0/1/chunks/104072835303080064_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200427 22:10:53.832" endtime="20200427 22:10:57.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:57.326" endtime="20200427 22:10:57.326"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:57.329" level="INFO">Running command 'ozone sh key list /77885-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:10:59.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:10:59.349" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200427 22:10:57.327" endtime="20200427 22:10:59.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:10:59.350" level="INFO">key1</msg>
<status status="PASS" starttime="20200427 22:10:59.349" endtime="20200427 22:10:59.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:10:59.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:10:59.350" endtime="20200427 22:10:59.350"></status>
</kw>
<msg timestamp="20200427 22:10:59.351" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200427 22:10:57.326" endtime="20200427 22:10:59.351"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200427 22:10:59.351" endtime="20200427 22:10:59.352"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:10:59.355" level="INFO">Running command 'ozone sh key rename /77885-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:11:01.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:11:01.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:10:59.353" endtime="20200427 22:11:01.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:11:01.215" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:11:01.214" endtime="20200427 22:11:01.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:11:01.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:11:01.215" endtime="20200427 22:11:01.216"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:59.352" endtime="20200427 22:11:01.216"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:11:01.218" level="INFO">Running command 'ozone sh key list /77885-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:11:03.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:11:03.201" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200427 22:11:01.217" endtime="20200427 22:11:03.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:11:03.202" level="INFO">key2</msg>
<status status="PASS" starttime="20200427 22:11:03.201" endtime="20200427 22:11:03.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:11:03.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:11:03.202" endtime="20200427 22:11:03.202"></status>
</kw>
<msg timestamp="20200427 22:11:03.203" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200427 22:11:01.216" endtime="20200427 22:11:03.203"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200427 22:11:03.203" endtime="20200427 22:11:03.203"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:11:03.207" level="INFO">Running command 'ozone sh key delete /77885-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:11:04.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:11:04.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:11:03.204" endtime="20200427 22:11:04.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:11:05.000" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:11:04.999" endtime="20200427 22:11:05.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:11:05.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:11:05.000" endtime="20200427 22:11:05.001"></status>
</kw>
<status status="PASS" starttime="20200427 22:11:03.203" endtime="20200427 22:11:05.001"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:39.156" endtime="20200427 22:11:05.001"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:39.155" endtime="20200427 22:11:05.001"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:11:05.004" level="INFO">Running command 'ozone sh bucket delete /77885-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:11:06.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:11:06.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200427 22:11:05.002" endtime="20200427 22:11:06.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:11:06.903" level="INFO"></msg>
<status status="PASS" starttime="20200427 22:11:06.902" endtime="20200427 22:11:06.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:11:06.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:11:06.903" endtime="20200427 22:11:06.904"></status>
</kw>
<status status="PASS" starttime="20200427 22:11:05.002" endtime="20200427 22:11:06.904"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200427 22:11:06.908" level="INFO">Running command 'ozone sh volume delete /77885-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200427 22:11:08.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20200427 22:11:08.622" level="INFO">${output} = Volume 77885-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200427 22:11:06.905" endtime="20200427 22:11:08.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200427 22:11:08.623" level="INFO">Volume 77885-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200427 22:11:08.622" endtime="20200427 22:11:08.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200427 22:11:08.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200427 22:11:08.623" endtime="20200427 22:11:08.624"></status>
</kw>
<status status="PASS" starttime="20200427 22:11:06.904" endtime="20200427 22:11:08.624"></status>
</kw>
<status status="PASS" starttime="20200427 22:10:21.766" endtime="20200427 22:11:08.624"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200427 22:10:21.765" endtime="20200427 22:11:08.625" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200427 22:07:56.678" endtime="20200427 22:11:08.626"></status>
</suite>
<status status="PASS" starttime="20200427 22:06:46.620" endtime="20200427 22:11:08.630"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
