<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200401 12:58:57.601" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-om-ha-s3-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:58:57.666" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:59:05.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:59:05.880" level="INFO">${output} = 2020-04-01 12:58:58,759 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:58:58,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:59:05.880" starttime="20200401 12:58:57.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:59:05.881" level="INFO">2020-04-01 12:58:58,759 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:58:58,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:58:58,975 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:59:00,509 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-01 12:59:00,510 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-01 12:59:00,510 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-01 12:59:00,510 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-01 12:59:00,510 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-01 12:59:00,510 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-01 12:59:00,510 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-01 12:59:00,512 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-01 12:59:00,514 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:59:00,569 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-53600, with hadoop as owner.
2020-04-01 12:59:00,614 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-53600/bucket-0-43748, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:59:01,270 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-01 12:59:01,518 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,086
Average Time spent in bucket creation: 00:00:00,025
Average Time spent in key creation: 00:00:00,073
Average Time spent in key write: 00:00:00,759
Total bytes written: 10240
Total Execution time: 00:00:06,155
***************************************************</msg>
<status status="PASS" endtime="20200401 12:59:05.881" starttime="20200401 12:59:05.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:59:05.882" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:59:05.882" starttime="20200401 12:59:05.881"></status>
</kw>
<msg timestamp="20200401 12:59:05.882" level="INFO">${result} = 2020-04-01 12:58:58,759 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:58:58,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:59:05.882" starttime="20200401 12:58:57.663"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:59:05.883" starttime="20200401 12:59:05.883"></status>
</kw>
<status status="PASS" endtime="20200401 12:59:05.883" starttime="20200401 12:59:05.882"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:59:05.884" critical="yes" starttime="20200401 12:58:57.663"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:59:05.896" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:59:10.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:59:10.983" level="INFO">${output} = 2020-04-01 12:59:06,977 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:59:07,186 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:59:10.983" starttime="20200401 12:59:05.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:59:10.984" level="INFO">2020-04-01 12:59:06,977 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:59:07,186 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:59:07,186 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:59:07,544 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yYcN1JSfcw
2020-04-01 12:59:07,556 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:59:08,545 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-01 12:59:08,563 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:59:08,572 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:59:09,280 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-01 12:59:09,563 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:59:10,564 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 12:59:10,650 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1662.009723, max=1662.009723, mean=1662.009723, stddev=0.0, median=1662.009723, p75=1662.009723, p95=1662.009723, p98=1662.009723, p99=1662.009723, p999=1662.009723, mean_rate=0.48991236441746355, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 12:59:10,651 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-01 12:59:10,651 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 12:59:10,651 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 12:59:10.985" starttime="20200401 12:59:10.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:59:10.985" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:59:10.986" starttime="20200401 12:59:10.985"></status>
</kw>
<msg timestamp="20200401 12:59:10.986" level="INFO">${result} = 2020-04-01 12:59:06,977 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:59:07,186 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:59:10.986" starttime="20200401 12:59:05.885"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:59:10.987" starttime="20200401 12:59:10.987"></status>
</kw>
<status status="PASS" endtime="20200401 12:59:10.987" starttime="20200401 12:59:10.986"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:59:10.987" critical="yes" starttime="20200401 12:59:05.884"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:59:10.991" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:59:14.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:59:14.733" level="INFO">${output} = 2020-04-01 12:59:12,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:59:12,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:59:14.734" starttime="20200401 12:59:10.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:59:14.735" level="INFO">2020-04-01 12:59:12,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:59:12,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:59:12,207 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:59:12,603 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 5OcF2s8gUY
2020-04-01 12:59:12,618 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:59:13,623 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:59:14,625 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 12:59:14,720 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=70.241223, max=70.241223, mean=70.241223, stddev=0.0, median=70.241223, p75=70.241223, p95=70.241223, p98=70.241223, p99=70.241223, p999=70.241223, mean_rate=0.9871902460217582, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 12:59:14,721 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-01 12:59:14,722 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 12:59:14,722 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 12:59:14.741" starttime="20200401 12:59:14.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:59:14.742" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:59:14.742" starttime="20200401 12:59:14.741"></status>
</kw>
<msg timestamp="20200401 12:59:14.742" level="INFO">${result} = 2020-04-01 12:59:12,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:59:12,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:59:14.743" starttime="20200401 12:59:10.989"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:59:14.744" starttime="20200401 12:59:14.743"></status>
</kw>
<status status="PASS" endtime="20200401 12:59:14.744" starttime="20200401 12:59:14.743"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:59:14.744" critical="yes" starttime="20200401 12:59:10.988"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:59:14.748" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:59:18.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:59:18.395" level="INFO">${output} = 2020-04-01 12:59:15,822 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:59:15,982 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:59:18.395" starttime="20200401 12:59:14.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:59:18.396" level="INFO">2020-04-01 12:59:15,822 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:59:15,982 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:59:15,982 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:59:16,336 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 0aK0QG4uvZ
2020-04-01 12:59:16,354 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:59:17,362 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:59:18,368 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 12:59:18,381 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=24.923043, max=24.923043, mean=24.923043, stddev=0.0, median=24.923043, p75=24.923043, p95=24.923043, p98=24.923043, p99=24.923043, p999=24.923043, mean_rate=0.9523395646104644, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 12:59:18,382 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-01 12:59:18,383 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 12:59:18,383 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 12:59:18.397" starttime="20200401 12:59:18.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:59:18.397" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:59:18.397" starttime="20200401 12:59:18.397"></status>
</kw>
<msg timestamp="20200401 12:59:18.398" level="INFO">${result} = 2020-04-01 12:59:15,822 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:59:15,982 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:59:18.398" starttime="20200401 12:59:14.746"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:59:18.399" starttime="20200401 12:59:18.399"></status>
</kw>
<status status="PASS" endtime="20200401 12:59:18.399" starttime="20200401 12:59:18.398"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:59:18.399" critical="yes" starttime="20200401 12:59:14.745"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200401 12:59:18.401" starttime="20200401 12:58:57.632"></status>
</suite>
<status status="PASS" endtime="20200401 12:59:18.404" starttime="20200401 12:58:57.601"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-om-ha-s3-freon" pass="4">ozone-om-ha-s3-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
