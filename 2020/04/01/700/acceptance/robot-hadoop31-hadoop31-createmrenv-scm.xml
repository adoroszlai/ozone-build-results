<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200401 12:50:32.260" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop31-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:50:32.312" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:50:35.003" level="INFO">${rc} = 255</msg>
<msg timestamp="20200401 12:50:35.003" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20200401 12:50:35.004" starttime="20200401 12:50:32.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:50:35.005" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20200401 12:50:35.005" starttime="20200401 12:50:35.004"></status>
</kw>
<msg timestamp="20200401 12:50:35.005" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20200401 12:50:35.005" starttime="20200401 12:50:32.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:50:35.008" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:50:37.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:50:37.177" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:50:37.177" starttime="20200401 12:50:35.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:50:37.178" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:50:37.178" starttime="20200401 12:50:37.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:50:37.179" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:50:37.179" starttime="20200401 12:50:37.179"></status>
</kw>
<msg timestamp="20200401 12:50:37.180" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200401 12:50:37.180" starttime="20200401 12:50:35.006"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200401 12:50:37.180" starttime="20200401 12:50:37.180"></status>
</kw>
<status status="PASS" endtime="20200401 12:50:37.180" starttime="20200401 12:50:35.006"></status>
</kw>
<status status="PASS" endtime="20200401 12:50:37.180" starttime="20200401 12:50:35.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:50:37.185" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:50:39.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:50:39.402" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:50:39.402" starttime="20200401 12:50:37.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:50:39.403" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:50:39.403" starttime="20200401 12:50:39.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:50:39.404" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:50:39.404" starttime="20200401 12:50:39.404"></status>
</kw>
<status status="PASS" endtime="20200401 12:50:39.404" starttime="20200401 12:50:37.181"></status>
</kw>
<status status="PASS" endtime="20200401 12:50:39.404" starttime="20200401 12:50:37.181"></status>
</kw>
<status status="PASS" endtime="20200401 12:50:39.404" starttime="20200401 12:50:37.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200401 12:50:39.405" starttime="20200401 12:50:39.405"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:50:39.407" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:50:41.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:50:41.786" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-04-01T12:50:39.377Z",
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20200401 12:50:41.786" starttime="20200401 12:50:39.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:50:41.787" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-04-01T12:50:39.377Z",
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20200401 12:50:41.787" starttime="20200401 12:50:41.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:50:41.787" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:50:41.788" starttime="20200401 12:50:41.787"></status>
</kw>
<msg timestamp="20200401 12:50:41.788" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-04-01T12:50:39.377Z",
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20200401 12:50:41.788" starttime="20200401 12:50:39.405"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200401 12:50:41.789" starttime="20200401 12:50:41.788"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:50:41.790" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:50:47.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:50:47.294" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:50:47.294" starttime="20200401 12:50:41.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:50:47.295" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:50:47.295" starttime="20200401 12:50:47.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:50:47.296" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:50:47.296" starttime="20200401 12:50:47.296"></status>
</kw>
<status status="PASS" endtime="20200401 12:50:47.297" starttime="20200401 12:50:41.789"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 12:50:47.297" critical="yes" starttime="20200401 12:50:32.309"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:50:47.301" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:50:49.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:50:49.967" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:50:49.967" starttime="20200401 12:50:47.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:50:49.968" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:50:49.968" starttime="20200401 12:50:49.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:50:49.969" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:50:49.969" starttime="20200401 12:50:49.968"></status>
</kw>
<status status="PASS" endtime="20200401 12:50:49.969" starttime="20200401 12:50:47.299"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:50:49.971" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:50:52.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:50:52.523" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:50:52.523" starttime="20200401 12:50:49.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:50:52.524" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:50:52.524" starttime="20200401 12:50:52.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:50:52.525" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:50:52.525" starttime="20200401 12:50:52.524"></status>
</kw>
<status status="PASS" endtime="20200401 12:50:52.525" starttime="20200401 12:50:49.969"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 12:50:52.525" critical="yes" starttime="20200401 12:50:47.298"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200401 12:50:52.527" starttime="20200401 12:50:32.261"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="hadoop31-createmrenv" pass="2">hadoop31-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
