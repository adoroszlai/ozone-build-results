<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200401 14:21:09.378" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:21:09.432" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:21:17.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:21:17.180" level="INFO">${output} = 2020-04-01 14:21:10,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:10,582 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 14:21:17.180" starttime="20200401 14:21:09.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:21:17.181" level="INFO">2020-04-01 14:21:10,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:10,582 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 14:21:10,582 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 14:21:11,802 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-01 14:21:11,803 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-01 14:21:11,803 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-01 14:21:11,803 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-01 14:21:11,803 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-01 14:21:11,803 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-01 14:21:11,803 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-01 14:21:11,807 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-01 14:21:11,812 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 14:21:11,842 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-77455, with hadoop as owner.
2020-04-01 14:21:11,864 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77455/bucket-0-10525, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:21:12,379 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-01 14:21:12,814 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,047
Average Time spent in bucket creation: 00:00:00,008
Average Time spent in key creation: 00:00:00,037
Average Time spent in key write: 00:00:00,661
Total bytes written: 10240
Total Execution time: 00:00:05,955
***************************************************</msg>
<status status="PASS" endtime="20200401 14:21:17.181" starttime="20200401 14:21:17.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:21:17.181" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:21:17.182" starttime="20200401 14:21:17.181"></status>
</kw>
<msg timestamp="20200401 14:21:17.182" level="INFO">${result} = 2020-04-01 14:21:10,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:10,582 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 14:21:17.182" starttime="20200401 14:21:09.429"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 14:21:17.183" starttime="20200401 14:21:17.183"></status>
</kw>
<status status="PASS" endtime="20200401 14:21:17.183" starttime="20200401 14:21:17.182"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 14:21:17.184" critical="yes" starttime="20200401 14:21:09.429"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:21:17.187" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:21:22.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:21:22.087" level="INFO">${output} = 2020-04-01 14:21:18,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:18,402 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 14:21:22.087" starttime="20200401 14:21:17.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:21:22.088" level="INFO">2020-04-01 14:21:18,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:18,402 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 14:21:18,402 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 14:21:18,694 [main] INFO freon.BaseFreonGenerator: Executing test with prefix sFzuHPkh1f
2020-04-01 14:21:18,712 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 14:21:19,522 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-01 14:21:19,537 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:21:19,721 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 14:21:20,051 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-01 14:21:20,721 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 14:21:21,722 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 14:21:21,752 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1304.778473, max=1304.778473, mean=1304.778473, stddev=0.0, median=1304.778473, p75=1304.778473, p95=1304.778473, p98=1304.778473, p99=1304.778473, p999=1304.778473, mean_rate=0.4564548070782575, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 14:21:21,752 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-01 14:21:21,755 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 14:21:21,755 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 14:21:22.088" starttime="20200401 14:21:22.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:21:22.089" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:21:22.089" starttime="20200401 14:21:22.088"></status>
</kw>
<msg timestamp="20200401 14:21:22.089" level="INFO">${result} = 2020-04-01 14:21:18,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:18,402 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 14:21:22.089" starttime="20200401 14:21:17.185"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 14:21:22.090" starttime="20200401 14:21:22.090"></status>
</kw>
<status status="PASS" endtime="20200401 14:21:22.090" starttime="20200401 14:21:22.089"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 14:21:22.090" critical="yes" starttime="20200401 14:21:17.184"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:21:22.094" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:21:25.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:21:25.567" level="INFO">${output} = 2020-04-01 14:21:23,055 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:23,275 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 14:21:25.567" starttime="20200401 14:21:22.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:21:25.568" level="INFO">2020-04-01 14:21:23,055 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:23,275 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 14:21:23,275 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 14:21:23,591 [main] INFO freon.BaseFreonGenerator: Executing test with prefix fRy8GW0qVb
2020-04-01 14:21:23,607 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 14:21:24,613 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 14:21:25,554 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=41.648583, max=41.648583, mean=41.648583, stddev=0.0, median=41.648583, p75=41.648583, p95=41.648583, p98=41.648583, p99=41.648583, p999=41.648583, mean_rate=0.9875248347806516, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 14:21:25,555 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-01 14:21:25,555 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 14:21:25,555 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 14:21:25.568" starttime="20200401 14:21:25.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:21:25.569" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:21:25.569" starttime="20200401 14:21:25.569"></status>
</kw>
<msg timestamp="20200401 14:21:25.570" level="INFO">${result} = 2020-04-01 14:21:23,055 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:23,275 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 14:21:25.570" starttime="20200401 14:21:22.092"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 14:21:25.571" starttime="20200401 14:21:25.571"></status>
</kw>
<status status="PASS" endtime="20200401 14:21:25.571" starttime="20200401 14:21:25.570"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 14:21:25.571" critical="yes" starttime="20200401 14:21:22.091"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:21:25.575" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:21:28.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:21:28.912" level="INFO">${output} = 2020-04-01 14:21:26,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:26,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 14:21:28.912" starttime="20200401 14:21:25.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:21:28.913" level="INFO">2020-04-01 14:21:26,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:26,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 14:21:26,716 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 14:21:27,020 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Mp00GSdz7T
2020-04-01 14:21:27,042 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 14:21:28,046 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 14:21:28,887 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=7.180631, max=7.180631, mean=7.180631, stddev=0.0, median=7.180631, p75=7.180631, p95=7.180631, p98=7.180631, p99=7.180631, p999=7.180631, mean_rate=0.9888074491912021, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 14:21:28,893 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-01 14:21:28,894 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 14:21:28,894 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 14:21:28.914" starttime="20200401 14:21:28.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:21:28.914" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:21:28.914" starttime="20200401 14:21:28.914"></status>
</kw>
<msg timestamp="20200401 14:21:28.915" level="INFO">${result} = 2020-04-01 14:21:26,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:21:26,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 14:21:28.915" starttime="20200401 14:21:25.572"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 14:21:28.916" starttime="20200401 14:21:28.915"></status>
</kw>
<status status="PASS" endtime="20200401 14:21:28.916" starttime="20200401 14:21:28.915"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 14:21:28.916" critical="yes" starttime="20200401 14:21:25.572"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200401 14:21:28.917" starttime="20200401 14:21:09.404"></status>
</suite>
<status status="PASS" endtime="20200401 14:21:28.920" starttime="20200401 14:21:09.379"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-freon" pass="4">ozone-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
