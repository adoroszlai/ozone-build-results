<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200401 14:10:08.155" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozone-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20200401 14:10:08.205" starttime="20200401 14:10:08.204"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:10:08.207" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:10:08.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:10:08.318" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 01 Apr 2020 14:10:08 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 01 Apr 2020 12:39:26 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200401 14:10:08.318" starttime="20200401 14:10:08.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:10:08.319" level="INFO">HTTP/1.1 200 OK
Date: Wed, 01 Apr 2020 14:10:08 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 01 Apr 2020 12:39:26 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200401 14:10:08.319" starttime="20200401 14:10:08.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:10:08.320" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:10:08.321" starttime="20200401 14:10:08.319"></status>
</kw>
<msg timestamp="20200401 14:10:08.321" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 01 Apr 2020 14:10:08 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 01 Apr 2020 12:39:26 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200401 14:10:08.321" starttime="20200401 14:10:08.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200401 14:10:08.322" starttime="20200401 14:10:08.321"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 14:10:08.322" critical="yes" starttime="20200401 14:10:08.204"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 14:10:08.324" starttime="20200401 14:10:08.324"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:10:08.326" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:34.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:11:34.438" level="INFO">${output} = 2020-04-01 14:10:09,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:10:09,562 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 14:11:34.438" starttime="20200401 14:10:08.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:34.439" level="INFO">2020-04-01 14:10:09,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:10:09,562 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 14:10:09,562 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 14:10:11,418 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-01 14:10:11,418 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-01 14:10:11,419 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-01 14:10:11,419 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-01 14:10:11,419 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-01 14:10:11,419 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-01 14:10:11,419 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-01 14:10:11,420 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-01 14:10:11,425 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-01 14:10:11,440 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-01 14:10:11,456 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-72166, with hadoop as owner.
2020-04-01 14:10:11,570 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-05755, with hadoop as owner.
2020-04-01 14:10:11,577 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-82369, with hadoop as owner.
2020-04-01 14:10:11,584 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-94276, with hadoop as owner.
2020-04-01 14:10:11,604 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-05250, with hadoop as owner.
2020-04-01 14:10:11,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-72166/bucket-0-88350, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,642 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-05755/bucket-0-03017, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,648 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82369/bucket-0-69363, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,658 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-94276/bucket-0-88789, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,664 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-05250/bucket-0-77080, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,669 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-72166/bucket-1-04751, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,674 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-05755/bucket-1-50157, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,680 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82369/bucket-1-87699, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,684 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-94276/bucket-1-54883, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,691 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-05250/bucket-1-73231, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,697 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-72166/bucket-2-54124, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,702 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-05755/bucket-2-89955, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,715 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82369/bucket-2-19634, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,720 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-94276/bucket-2-90858, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,725 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-05250/bucket-2-86583, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,732 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-72166/bucket-3-68861, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,738 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-05755/bucket-3-39872, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,744 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82369/bucket-3-18633, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,753 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-94276/bucket-3-81211, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,758 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-05250/bucket-3-01376, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,765 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-72166/bucket-4-09621, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,772 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-05755/bucket-4-09763, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,778 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82369/bucket-4-30701, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,784 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-94276/bucket-4-82339, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:11,790 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-05250/bucket-4-38364, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 14:10:12,358 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-01 14:10:12,441 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-01 14:10:13,441 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-01 14:10:14,446 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-01 14:10:15,446 [Thread-8] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-04-01 14:10:16,447 [Thread-8] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-04-01 14:10:17,447 [Thread-8] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-04-01 14:10:18,448 [Thread-8] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-04-01 14:10:19,449 [Thread-8] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-04-01 14:10:20,449 [Thread-8] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-04-01 14:10:21,450 [Thread-8] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-04-01 14:10:22,450 [Thread-8] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-04-01 14:10:23,451 [Thread-8] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-04-01 14:10:24,452 [Thread-8] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-04-01 14:10:25,452 [Thread-8] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-04-01 14:10:26,453 [Thread-8] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-04-01 14:10:27,453 [Thread-8] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-04-01 14:10:28,453 [Thread-8] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-04-01 14:10:29,454 [Thread-8] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-04-01 14:10:30,454 [Thread-8] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-04-01 14:10:31,455 [Thread-8] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-04-01 14:10:32,455 [Thread-8] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-04-01 14:10:33,456 [Thread-8] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-04-01 14:10:34,456 [Thread-8] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-04-01 14:10:35,457 [Thread-8] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-04-01 14:10:36,457 [Thread-8] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-04-01 14:10:37,458 [Thread-8] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-04-01 14:10:38,458 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-04-01 14:10:39,459 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-04-01 14:10:40,464 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-04-01 14:10:41,465 [Thread-8] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-04-01 14:10:42,465 [Thread-8] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-04-01 14:10:43,466 [Thread-8] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-04-01 14:10:44,466 [Thread-8] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-04-01 14:10:45,467 [Thread-8] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-04-01 14:10:46,467 [Thread-8] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-04-01 14:10:47,468 [Thread-8] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-04-01 14:10:48,468 [Thread-8] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-04-01 14:10:49,469 [Thread-8] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-04-01 14:10:50,469 [Thread-8] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-04-01 14:10:51,469 [Thread-8] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-04-01 14:10:52,470 [Thread-8] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-04-01 14:10:53,470 [Thread-8] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-04-01 14:10:54,471 [Thread-8] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-04-01 14:10:55,472 [Thread-8] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-04-01 14:10:56,472 [Thread-8] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-04-01 14:10:57,472 [Thread-8] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-04-01 14:10:58,473 [Thread-8] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-04-01 14:10:59,473 [Thread-8] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-04-01 14:11:00,474 [Thread-8] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-04-01 14:11:01,478 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-04-01 14:11:02,479 [Thread-8] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-04-01 14:11:03,479 [Thread-8] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-04-01 14:11:04,480 [Thread-8] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-04-01 14:11:05,480 [Thread-8] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-04-01 14:11:06,480 [Thread-8] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-04-01 14:11:07,481 [Thread-8] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-04-01 14:11:08,482 [Thread-8] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-04-01 14:11:09,482 [Thread-8] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-04-01 14:11:10,487 [Thread-8] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-04-01 14:11:11,487 [Thread-8] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-04-01 14:11:12,488 [Thread-8] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-04-01 14:11:13,488 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-04-01 14:11:14,489 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-04-01 14:11:15,489 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-04-01 14:11:16,490 [Thread-8] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-04-01 14:11:17,490 [Thread-8] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-04-01 14:11:18,490 [Thread-8] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-04-01 14:11:19,491 [Thread-8] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-04-01 14:11:20,491 [Thread-8] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-04-01 14:11:21,492 [Thread-8] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-04-01 14:11:22,492 [Thread-8] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-04-01 14:11:23,492 [Thread-8] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-04-01 14:11:24,493 [Thread-8] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-04-01 14:11:25,493 [Thread-8] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-04-01 14:11:26,494 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-04-01 14:11:27,494 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-04-01 14:11:28,494 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-04-01 14:11:29,495 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,164
Average Time spent in bucket creation: 00:00:00,125
Average Time spent in key creation: 00:00:01,875
Average Time spent in key write: 00:00:00,721
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:24,257
***************************************************</msg>
<status status="PASS" endtime="20200401 14:11:34.439" starttime="20200401 14:11:34.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:11:34.440" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:11:34.440" starttime="20200401 14:11:34.439"></status>
</kw>
<msg timestamp="20200401 14:11:34.440" level="INFO">${result} = 2020-04-01 14:10:09,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 14:10:09,562 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 14:11:34.440" starttime="20200401 14:10:08.324"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200401 14:11:34.441" starttime="20200401 14:11:34.441"></status>
</kw>
<status status="PASS" endtime="20200401 14:11:34.441" starttime="20200401 14:11:34.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200401 14:11:34.442" starttime="20200401 14:11:34.442"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 14:11:34.442" critical="yes" starttime="20200401 14:10:08.323"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200401 14:11:34.443" starttime="20200401 14:10:08.179"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200401 14:11:34.452" level="INFO">${random} = 40569</msg>
<status status="PASS" endtime="20200401 14:11:34.452" starttime="20200401 14:11:34.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200401 14:11:34.452" level="INFO">${prefix} = 40569</msg>
<status status="PASS" endtime="20200401 14:11:34.453" starttime="20200401 14:11:34.452"></status>
</kw>
<status status="PASS" endtime="20200401 14:11:34.453" starttime="20200401 14:11:34.451"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 14:11:34.454" starttime="20200401 14:11:34.454"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:34.457" level="INFO">Running command 'ozone sh volume info o3://om:9862/40569-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:36.587" level="INFO">${rc} = 255</msg>
<msg timestamp="20200401 14:11:36.587" level="INFO">${output} = VOLUME_NOT_FOUND Volume 40569-rpcwoport is not found</msg>
<status status="PASS" endtime="20200401 14:11:36.587" starttime="20200401 14:11:34.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:36.588" level="INFO">VOLUME_NOT_FOUND Volume 40569-rpcwoport is not found</msg>
<status status="PASS" endtime="20200401 14:11:36.588" starttime="20200401 14:11:36.588"></status>
</kw>
<msg timestamp="20200401 14:11:36.589" level="INFO">${result} = VOLUME_NOT_FOUND Volume 40569-rpcwoport is not found</msg>
<status status="PASS" endtime="20200401 14:11:36.589" starttime="20200401 14:11:34.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200401 14:11:36.589" starttime="20200401 14:11:36.589"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:36.591" level="INFO">Running command 'ozone sh volume create o3://om:9862/40569-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:38.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:11:38.723" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:11:38.723" starttime="20200401 14:11:36.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:38.725" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:11:38.725" starttime="20200401 14:11:38.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:11:38.725" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:11:38.725" starttime="20200401 14:11:38.725"></status>
</kw>
<msg timestamp="20200401 14:11:38.726" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200401 14:11:38.726" starttime="20200401 14:11:36.589"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200401 14:11:38.726" starttime="20200401 14:11:38.726"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:38.729" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="40569-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:41.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:11:41.022" level="INFO">${output} = {
  "metadata": {},
  "name": "40569-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:11:38.691Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200401 14:11:41.022" starttime="20200401 14:11:38.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:41.023" level="INFO">{
  "metadata": {},
  "name": "40569-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:11:38.691Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 14:11:41.023" starttime="20200401 14:11:41.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:11:41.023" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:11:41.024" starttime="20200401 14:11:41.023"></status>
</kw>
<msg timestamp="20200401 14:11:41.024" level="INFO">${result} = {
  "metadata": {},
  "name": "40569-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:11:38.691Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200401 14:11:41.024" starttime="20200401 14:11:38.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 14:11:41.025" starttime="20200401 14:11:41.024"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:41.027" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="40569-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:43.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:11:43.225" level="INFO">${output} = {
  "metadata": {},
  "name": "40569-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:11:38.691Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200401 14:11:43.225" starttime="20200401 14:11:41.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:43.226" level="INFO">{
  "metadata": {},
  "name": "40569-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:11:38.691Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 14:11:43.226" starttime="20200401 14:11:43.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:11:43.227" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:11:43.227" starttime="20200401 14:11:43.226"></status>
</kw>
<msg timestamp="20200401 14:11:43.227" level="INFO">${result} = {
  "metadata": {},
  "name": "40569-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:11:38.691Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200401 14:11:43.227" starttime="20200401 14:11:41.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 14:11:43.228" starttime="20200401 14:11:43.228"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:43.230" level="INFO">Running command 'ozone sh volume update o3://om:9862/40569-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:45.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:11:45.402" level="INFO">${output} = {
  "metadata" : { },
  "name" : "40569-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T14:11:38.691Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" endtime="20200401 14:11:45.402" starttime="20200401 14:11:43.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:45.403" level="INFO">{
  "metadata" : { },
  "name" : "40569-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T14:11:38.691Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200401 14:11:45.403" starttime="20200401 14:11:45.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:11:45.404" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:11:45.404" starttime="20200401 14:11:45.403"></status>
</kw>
<status status="PASS" endtime="20200401 14:11:45.404" starttime="20200401 14:11:43.228"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:45.407" level="INFO">Running command 'ozone sh volume info o3://om:9862/40569-rpcwoport | jq -r '. | select(.name=="40569-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:47.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:11:47.684" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200401 14:11:47.684" starttime="20200401 14:11:45.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:47.685" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200401 14:11:47.686" starttime="20200401 14:11:47.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:11:47.686" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:11:47.686" starttime="20200401 14:11:47.686"></status>
</kw>
<msg timestamp="20200401 14:11:47.687" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200401 14:11:47.687" starttime="20200401 14:11:45.404"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200401 14:11:47.687" starttime="20200401 14:11:47.687"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:47.689" level="INFO">Running command 'ozone sh bucket create o3://om:9862/40569-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:49.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:11:49.750" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:11:49.750" starttime="20200401 14:11:47.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:49.751" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:11:49.751" starttime="20200401 14:11:49.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:11:49.752" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:11:49.752" starttime="20200401 14:11:49.751"></status>
</kw>
<status status="PASS" endtime="20200401 14:11:49.752" starttime="20200401 14:11:47.688"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:49.755" level="INFO">Running command 'ozone sh bucket info o3://om:9862/40569-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:51.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:11:51.976" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200401 14:11:51.976" starttime="20200401 14:11:49.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:51.978" level="INFO">DISK</msg>
<status status="PASS" endtime="20200401 14:11:51.978" starttime="20200401 14:11:51.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:11:51.978" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:11:51.979" starttime="20200401 14:11:51.978"></status>
</kw>
<msg timestamp="20200401 14:11:51.979" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200401 14:11:51.979" starttime="20200401 14:11:49.752"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200401 14:11:51.980" starttime="20200401 14:11:51.979"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:51.982" level="INFO">Running command 'ozone sh bucket list o3://om:9862/40569-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:54.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:11:54.332" level="INFO">${output} = 40569-rpcwoport</msg>
<status status="PASS" endtime="20200401 14:11:54.332" starttime="20200401 14:11:51.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:54.333" level="INFO">40569-rpcwoport</msg>
<status status="PASS" endtime="20200401 14:11:54.333" starttime="20200401 14:11:54.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:11:54.334" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:11:54.334" starttime="20200401 14:11:54.333"></status>
</kw>
<msg timestamp="20200401 14:11:54.334" level="INFO">${result} = 40569-rpcwoport</msg>
<status status="PASS" endtime="20200401 14:11:54.335" starttime="20200401 14:11:51.980"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200401 14:11:54.335" starttime="20200401 14:11:54.335"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:54.338" level="INFO">Running command 'ozone sh key put o3://om:9862/40569-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:58.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:11:58.412" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:11:58.412" starttime="20200401 14:11:54.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:58.413" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:11:58.413" starttime="20200401 14:11:58.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:11:58.414" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:11:58.414" starttime="20200401 14:11:58.414"></status>
</kw>
<status status="PASS" endtime="20200401 14:11:58.414" starttime="20200401 14:11:54.336"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:58.417" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:11:58.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:11:58.419" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:11:58.419" starttime="20200401 14:11:58.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:11:58.420" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:11:58.420" starttime="20200401 14:11:58.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:11:58.421" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:11:58.421" starttime="20200401 14:11:58.420"></status>
</kw>
<status status="PASS" endtime="20200401 14:11:58.421" starttime="20200401 14:11:58.415"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:11:58.423" level="INFO">Running command 'ozone sh key get o3://om:9862/40569-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:02.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:02.256" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:12:02.256" starttime="20200401 14:11:58.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:02.257" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:12:02.257" starttime="20200401 14:12:02.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:02.258" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:02.258" starttime="20200401 14:12:02.257"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:02.258" starttime="20200401 14:11:58.421"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:02.261" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:02.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:02.266" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Apr  1 14:12 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 14:12:02.266" starttime="20200401 14:12:02.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:02.267" level="INFO">-rw-r--r-- 1 hadoop users 17540 Apr  1 14:12 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 14:12:02.267" starttime="20200401 14:12:02.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:02.268" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:02.268" starttime="20200401 14:12:02.268"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:02.269" starttime="20200401 14:12:02.259"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:02.275" level="INFO">Running command 'ozone sh key info o3://om:9862/40569-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:04.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:04.575" level="INFO">${output} = {
  "volumeName": "40569-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T14:11:56.527Z",
  "modificationTime": "2020-04-01T14:11:58.055Z",
  "re...</msg>
<status status="PASS" endtime="20200401 14:12:04.575" starttime="20200401 14:12:02.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:04.576" level="INFO">{
  "volumeName": "40569-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T14:11:56.527Z",
  "modificationTime": "2020-04-01T14:11:58.055Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103923732743717000,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200401 14:12:04.576" starttime="20200401 14:12:04.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:04.576" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:04.577" starttime="20200401 14:12:04.576"></status>
</kw>
<msg timestamp="20200401 14:12:04.577" level="INFO">${result} = {
  "volumeName": "40569-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T14:11:56.527Z",
  "modificationTime": "2020-04-01T14:11:58.055Z",
  "re...</msg>
<status status="PASS" endtime="20200401 14:12:04.577" starttime="20200401 14:12:02.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:04.578" starttime="20200401 14:12:04.577"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:04.580" level="INFO">Running command 'ozone sh key list o3://om:9862/40569-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:06.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:06.930" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200401 14:12:06.930" starttime="20200401 14:12:04.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:06.931" level="INFO">key1</msg>
<status status="PASS" endtime="20200401 14:12:06.932" starttime="20200401 14:12:06.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:06.932" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:06.932" starttime="20200401 14:12:06.932"></status>
</kw>
<msg timestamp="20200401 14:12:06.932" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200401 14:12:06.933" starttime="20200401 14:12:04.578"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:06.933" starttime="20200401 14:12:06.933"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:06.935" level="INFO">Running command 'ozone sh key rename o3://om:9862/40569-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:09.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:09.122" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:12:09.122" starttime="20200401 14:12:06.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:09.124" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:12:09.124" starttime="20200401 14:12:09.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:09.124" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:09.125" starttime="20200401 14:12:09.124"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:09.125" starttime="20200401 14:12:06.933"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:09.127" level="INFO">Running command 'ozone sh key list o3://om:9862/40569-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:11.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:11.371" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200401 14:12:11.371" starttime="20200401 14:12:09.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:11.372" level="INFO">key2</msg>
<status status="PASS" endtime="20200401 14:12:11.373" starttime="20200401 14:12:11.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:11.374" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:11.374" starttime="20200401 14:12:11.373"></status>
</kw>
<msg timestamp="20200401 14:12:11.374" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200401 14:12:11.374" starttime="20200401 14:12:09.125"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:11.375" starttime="20200401 14:12:11.375"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:11.377" level="INFO">Running command 'ozone sh key delete o3://om:9862/40569-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:13.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:13.538" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:12:13.538" starttime="20200401 14:12:11.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:13.539" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:12:13.539" starttime="20200401 14:12:13.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:13.540" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:13.540" starttime="20200401 14:12:13.539"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:13.540" starttime="20200401 14:12:11.375"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:13.540" starttime="20200401 14:11:54.336"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:13.540" starttime="20200401 14:11:54.335"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:13.543" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/40569-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:15.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:15.680" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:12:15.680" starttime="20200401 14:12:13.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:15.681" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:12:15.681" starttime="20200401 14:12:15.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:15.682" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:15.682" starttime="20200401 14:12:15.681"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:15.682" starttime="20200401 14:12:13.540"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:15.684" level="INFO">Running command 'ozone sh volume delete o3://om:9862/40569-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:17.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:17.742" level="INFO">${output} = Volume 40569-rpcwoport is deleted</msg>
<status status="PASS" endtime="20200401 14:12:17.742" starttime="20200401 14:12:15.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:17.743" level="INFO">Volume 40569-rpcwoport is deleted</msg>
<status status="PASS" endtime="20200401 14:12:17.743" starttime="20200401 14:12:17.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:17.744" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:17.744" starttime="20200401 14:12:17.743"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:17.744" starttime="20200401 14:12:15.683"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:17.744" starttime="20200401 14:11:34.454"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 14:12:17.744" critical="yes" starttime="20200401 14:11:34.453"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:17.747" starttime="20200401 14:12:17.746"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:17.750" level="INFO">Running command 'ozone sh volume create o3://om:9862/40569-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:19.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:19.829" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:12:19.829" starttime="20200401 14:12:17.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:19.830" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:12:19.830" starttime="20200401 14:12:19.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:19.831" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:19.831" starttime="20200401 14:12:19.830"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:19.831" starttime="20200401 14:12:17.748"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:19.833" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/40569-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:22.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:22.071" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:12:22.071" starttime="20200401 14:12:19.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:22.073" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:12:22.073" starttime="20200401 14:12:22.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:22.073" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:22.073" starttime="20200401 14:12:22.073"></status>
</kw>
<msg timestamp="20200401 14:12:22.074" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:12:22.074" starttime="20200401 14:12:19.831"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:22.075" starttime="20200401 14:12:22.074"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:22.077" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/40569-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:24.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:24.205" level="INFO">${output} = ACL added successfully.</msg>
<status status="PASS" endtime="20200401 14:12:24.205" starttime="20200401 14:12:22.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:24.206" level="INFO">ACL added successfully.</msg>
<status status="PASS" endtime="20200401 14:12:24.206" starttime="20200401 14:12:24.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:24.207" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:24.207" starttime="20200401 14:12:24.206"></status>
</kw>
<msg timestamp="20200401 14:12:24.207" level="INFO">${result} = ACL added successfully.</msg>
<status status="PASS" endtime="20200401 14:12:24.207" starttime="20200401 14:12:22.075"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:24.209" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/40569-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:26.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:26.532" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:26.532" starttime="20200401 14:12:24.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:26.533" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:12:26.533" starttime="20200401 14:12:26.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:26.534" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:26.534" starttime="20200401 14:12:26.534"></status>
</kw>
<msg timestamp="20200401 14:12:26.535" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:26.535" starttime="20200401 14:12:24.207"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:26.536" starttime="20200401 14:12:26.535"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:26.538" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/40569-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:28.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:28.679" level="INFO">${output} = ACL doesn't exist.</msg>
<status status="PASS" endtime="20200401 14:12:28.679" starttime="20200401 14:12:26.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:28.680" level="INFO">ACL doesn't exist.</msg>
<status status="PASS" endtime="20200401 14:12:28.680" starttime="20200401 14:12:28.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:28.681" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:28.681" starttime="20200401 14:12:28.680"></status>
</kw>
<msg timestamp="20200401 14:12:28.681" level="INFO">${result} = ACL doesn't exist.</msg>
<status status="PASS" endtime="20200401 14:12:28.681" starttime="20200401 14:12:26.536"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:28.683" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/40569-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:30.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:30.927" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:30.927" starttime="20200401 14:12:28.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:30.928" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:12:30.928" starttime="20200401 14:12:30.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:30.929" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:30.929" starttime="20200401 14:12:30.928"></status>
</kw>
<msg timestamp="20200401 14:12:30.929" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:30.929" starttime="20200401 14:12:28.681"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:30.931" starttime="20200401 14:12:30.930"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:30.933" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/40569-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:33.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:33.311" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 14:12:33.311" starttime="20200401 14:12:30.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:33.312" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 14:12:33.312" starttime="20200401 14:12:33.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:33.313" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:33.313" starttime="20200401 14:12:33.312"></status>
</kw>
<msg timestamp="20200401 14:12:33.313" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 14:12:33.313" starttime="20200401 14:12:30.932"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:33.316" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/40569-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:35.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:35.465" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20200401 14:12:35.465" starttime="20200401 14:12:33.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:35.467" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:12:35.467" starttime="20200401 14:12:35.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:35.467" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:35.467" starttime="20200401 14:12:35.467"></status>
</kw>
<msg timestamp="20200401 14:12:35.468" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20200401 14:12:35.468" starttime="20200401 14:12:33.313"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:35.469" starttime="20200401 14:12:35.468"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:35.470" starttime="20200401 14:12:35.469"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:35.471" starttime="20200401 14:12:17.747"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 14:12:35.471" critical="yes" starttime="20200401 14:12:17.745"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:35.473" starttime="20200401 14:12:35.472"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:35.476" level="INFO">Running command 'ozone sh bucket create o3://om:9862/40569-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:37.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:37.802" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:12:37.802" starttime="20200401 14:12:35.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:37.804" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:12:37.804" starttime="20200401 14:12:37.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:37.805" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:37.805" starttime="20200401 14:12:37.804"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:37.805" starttime="20200401 14:12:35.474"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:37.808" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/40569-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:39.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:39.909" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:39.909" starttime="20200401 14:12:37.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:39.910" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:12:39.910" starttime="20200401 14:12:39.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:39.911" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:39.911" starttime="20200401 14:12:39.910"></status>
</kw>
<msg timestamp="20200401 14:12:39.911" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:39.911" starttime="20200401 14:12:37.806"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:39.912" starttime="20200401 14:12:39.911"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:39.914" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/40569-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:41.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:41.967" level="INFO">${output} = ACL already exists.</msg>
<status status="PASS" endtime="20200401 14:12:41.967" starttime="20200401 14:12:39.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:41.968" level="INFO">ACL already exists.</msg>
<status status="PASS" endtime="20200401 14:12:41.968" starttime="20200401 14:12:41.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:41.968" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:41.969" starttime="20200401 14:12:41.968"></status>
</kw>
<msg timestamp="20200401 14:12:41.969" level="INFO">${result} = ACL already exists.</msg>
<status status="PASS" endtime="20200401 14:12:41.969" starttime="20200401 14:12:39.912"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:41.971" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/40569-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:44.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:44.076" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:44.076" starttime="20200401 14:12:41.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:44.077" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:12:44.077" starttime="20200401 14:12:44.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:44.078" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:44.078" starttime="20200401 14:12:44.077"></status>
</kw>
<msg timestamp="20200401 14:12:44.078" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:44.078" starttime="20200401 14:12:41.969"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:44.080" starttime="20200401 14:12:44.079"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:44.082" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/40569-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:46.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:46.128" level="INFO">${output} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 14:12:46.128" starttime="20200401 14:12:44.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:46.129" level="INFO">ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 14:12:46.130" starttime="20200401 14:12:46.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:46.130" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:46.130" starttime="20200401 14:12:46.130"></status>
</kw>
<msg timestamp="20200401 14:12:46.131" level="INFO">${result} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 14:12:46.131" starttime="20200401 14:12:44.080"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:46.133" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/40569-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:48.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:48.362" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:48.362" starttime="20200401 14:12:46.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:48.363" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:12:48.363" starttime="20200401 14:12:48.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:48.363" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:48.364" starttime="20200401 14:12:48.363"></status>
</kw>
<msg timestamp="20200401 14:12:48.364" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:48.364" starttime="20200401 14:12:46.131"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:48.365" starttime="20200401 14:12:48.364"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:48.368" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/40569-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:50.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:50.438" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 14:12:50.438" starttime="20200401 14:12:48.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:50.439" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 14:12:50.439" starttime="20200401 14:12:50.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:50.440" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:50.440" starttime="20200401 14:12:50.439"></status>
</kw>
<msg timestamp="20200401 14:12:50.440" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 14:12:50.440" starttime="20200401 14:12:48.365"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:50.442" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/40569-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:52.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:52.524" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200401 14:12:52.524" starttime="20200401 14:12:50.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:52.525" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:12:52.525" starttime="20200401 14:12:52.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:52.525" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:52.526" starttime="20200401 14:12:52.525"></status>
</kw>
<msg timestamp="20200401 14:12:52.526" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200401 14:12:52.526" starttime="20200401 14:12:50.440"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:52.527" starttime="20200401 14:12:52.526"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:52.528" starttime="20200401 14:12:52.527"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:52.528" starttime="20200401 14:12:35.473"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 14:12:52.528" critical="yes" starttime="20200401 14:12:35.472"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:52.530" starttime="20200401 14:12:52.529"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:52.532" level="INFO">Running command 'ozone sh key put o3://om:9862/40569-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:56.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:56.815" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:12:56.815" starttime="20200401 14:12:52.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:56.816" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:12:56.817" starttime="20200401 14:12:56.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:56.817" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:56.817" starttime="20200401 14:12:56.817"></status>
</kw>
<status status="PASS" endtime="20200401 14:12:56.818" starttime="20200401 14:12:52.531"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:56.820" level="INFO">Running command 'ozone sh key getacl o3://om:9862/40569-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:12:58.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:12:58.926" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:58.926" starttime="20200401 14:12:56.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:12:58.927" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:12:58.927" starttime="20200401 14:12:58.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:12:58.928" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:12:58.928" starttime="20200401 14:12:58.927"></status>
</kw>
<msg timestamp="20200401 14:12:58.928" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:12:58.928" starttime="20200401 14:12:56.818"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 14:12:58.929" starttime="20200401 14:12:58.928"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:12:58.931" level="INFO">Running command 'ozone sh key addacl o3://om:9862/40569-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:01.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:01.056" level="INFO">${output} = ACL added successfully.</msg>
<status status="PASS" endtime="20200401 14:13:01.056" starttime="20200401 14:12:58.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:01.057" level="INFO">ACL added successfully.</msg>
<status status="PASS" endtime="20200401 14:13:01.057" starttime="20200401 14:13:01.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:01.057" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:01.058" starttime="20200401 14:13:01.057"></status>
</kw>
<msg timestamp="20200401 14:13:01.058" level="INFO">${result} = ACL added successfully.</msg>
<status status="PASS" endtime="20200401 14:13:01.058" starttime="20200401 14:12:58.929"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:01.060" level="INFO">Running command 'ozone sh key getacl o3://om:9862/40569-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:03.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:03.242" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:13:03.242" starttime="20200401 14:13:01.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:03.244" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:13:03.244" starttime="20200401 14:13:03.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:03.244" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:03.245" starttime="20200401 14:13:03.244"></status>
</kw>
<msg timestamp="20200401 14:13:03.245" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:13:03.245" starttime="20200401 14:13:01.058"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:03.246" starttime="20200401 14:13:03.245"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:03.248" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/40569-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:05.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:05.378" level="INFO">${output} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 14:13:05.378" starttime="20200401 14:13:03.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:05.379" level="INFO">ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 14:13:05.379" starttime="20200401 14:13:05.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:05.380" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:05.380" starttime="20200401 14:13:05.379"></status>
</kw>
<msg timestamp="20200401 14:13:05.380" level="INFO">${result} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 14:13:05.380" starttime="20200401 14:13:03.246"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:05.383" level="INFO">Running command 'ozone sh key getacl o3://om:9862/40569-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:07.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:07.711" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:13:07.711" starttime="20200401 14:13:05.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:07.712" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:13:07.713" starttime="20200401 14:13:07.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:07.713" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:07.713" starttime="20200401 14:13:07.713"></status>
</kw>
<msg timestamp="20200401 14:13:07.714" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 14:13:07.714" starttime="20200401 14:13:05.381"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:07.715" starttime="20200401 14:13:07.714"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:07.717" level="INFO">Running command 'ozone sh key setacl o3://om:9862/40569-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:09.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:09.886" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 14:13:09.886" starttime="20200401 14:13:07.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:09.887" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 14:13:09.887" starttime="20200401 14:13:09.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:09.888" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:09.888" starttime="20200401 14:13:09.888"></status>
</kw>
<msg timestamp="20200401 14:13:09.888" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 14:13:09.888" starttime="20200401 14:13:07.715"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:09.891" level="INFO">Running command 'ozone sh key getacl o3://om:9862/40569-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:12.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:12.112" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200401 14:13:12.112" starttime="20200401 14:13:09.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:12.114" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200401 14:13:12.114" starttime="20200401 14:13:12.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:12.115" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:12.115" starttime="20200401 14:13:12.114"></status>
</kw>
<msg timestamp="20200401 14:13:12.115" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200401 14:13:12.115" starttime="20200401 14:13:09.889"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:12.116" starttime="20200401 14:13:12.115"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:12.118" starttime="20200401 14:13:12.116"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:12.118" starttime="20200401 14:12:52.530"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 14:13:12.118" critical="yes" starttime="20200401 14:12:52.529"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:12.120" starttime="20200401 14:13:12.120"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:12.123" level="INFO">Running command 'ozone sh volume info o3:///40569-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:14.271" level="INFO">${rc} = 255</msg>
<msg timestamp="20200401 14:13:14.271" level="INFO">${output} = VOLUME_NOT_FOUND Volume 40569-rpcwport is not found</msg>
<status status="PASS" endtime="20200401 14:13:14.271" starttime="20200401 14:13:12.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:14.273" level="INFO">VOLUME_NOT_FOUND Volume 40569-rpcwport is not found</msg>
<status status="PASS" endtime="20200401 14:13:14.273" starttime="20200401 14:13:14.272"></status>
</kw>
<msg timestamp="20200401 14:13:14.274" level="INFO">${result} = VOLUME_NOT_FOUND Volume 40569-rpcwport is not found</msg>
<status status="PASS" endtime="20200401 14:13:14.274" starttime="20200401 14:13:12.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:14.275" starttime="20200401 14:13:14.274"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:14.277" level="INFO">Running command 'ozone sh volume create o3:///40569-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:16.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:16.486" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:13:16.486" starttime="20200401 14:13:14.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:16.487" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:13:16.488" starttime="20200401 14:13:16.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:16.488" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:16.488" starttime="20200401 14:13:16.488"></status>
</kw>
<msg timestamp="20200401 14:13:16.489" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200401 14:13:16.489" starttime="20200401 14:13:14.275"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:16.489" starttime="20200401 14:13:16.489"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:16.491" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="40569-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:18.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:18.696" level="INFO">${output} = {
  "metadata": {},
  "name": "40569-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:16.456Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200401 14:13:18.696" starttime="20200401 14:13:16.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:18.697" level="INFO">{
  "metadata": {},
  "name": "40569-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:16.456Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 14:13:18.697" starttime="20200401 14:13:18.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:18.698" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:18.698" starttime="20200401 14:13:18.698"></status>
</kw>
<msg timestamp="20200401 14:13:18.698" level="INFO">${result} = {
  "metadata": {},
  "name": "40569-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:16.456Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200401 14:13:18.698" starttime="20200401 14:13:16.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:18.699" starttime="20200401 14:13:18.699"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:18.701" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="40569-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:20.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:20.883" level="INFO">${output} = {
  "metadata": {},
  "name": "40569-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:16.456Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200401 14:13:20.883" starttime="20200401 14:13:18.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:20.884" level="INFO">{
  "metadata": {},
  "name": "40569-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:16.456Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 14:13:20.884" starttime="20200401 14:13:20.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:20.885" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:20.885" starttime="20200401 14:13:20.885"></status>
</kw>
<msg timestamp="20200401 14:13:20.885" level="INFO">${result} = {
  "metadata": {},
  "name": "40569-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:16.456Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200401 14:13:20.885" starttime="20200401 14:13:18.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:20.886" starttime="20200401 14:13:20.886"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:20.888" level="INFO">Running command 'ozone sh volume update o3:///40569-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:23.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:23.023" level="INFO">${output} = {
  "metadata" : { },
  "name" : "40569-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T14:13:16.456Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" endtime="20200401 14:13:23.023" starttime="20200401 14:13:20.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:23.024" level="INFO">{
  "metadata" : { },
  "name" : "40569-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T14:13:16.456Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200401 14:13:23.024" starttime="20200401 14:13:23.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:23.025" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:23.025" starttime="20200401 14:13:23.024"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:23.025" starttime="20200401 14:13:20.886"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:23.028" level="INFO">Running command 'ozone sh volume info o3:///40569-rpcwport | jq -r '. | select(.name=="40569-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:25.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:25.174" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200401 14:13:25.174" starttime="20200401 14:13:23.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:25.175" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200401 14:13:25.176" starttime="20200401 14:13:25.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:25.176" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:25.176" starttime="20200401 14:13:25.176"></status>
</kw>
<msg timestamp="20200401 14:13:25.177" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200401 14:13:25.177" starttime="20200401 14:13:23.025"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:25.177" starttime="20200401 14:13:25.177"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:25.180" level="INFO">Running command 'ozone sh bucket create o3:///40569-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:27.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:27.364" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:13:27.364" starttime="20200401 14:13:25.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:27.365" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:13:27.365" starttime="20200401 14:13:27.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:27.366" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:27.366" starttime="20200401 14:13:27.365"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:27.366" starttime="20200401 14:13:25.177"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:27.369" level="INFO">Running command 'ozone sh bucket info o3:///40569-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:29.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:29.490" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200401 14:13:29.490" starttime="20200401 14:13:27.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:29.491" level="INFO">DISK</msg>
<status status="PASS" endtime="20200401 14:13:29.491" starttime="20200401 14:13:29.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:29.492" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:29.492" starttime="20200401 14:13:29.492"></status>
</kw>
<msg timestamp="20200401 14:13:29.492" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200401 14:13:29.492" starttime="20200401 14:13:27.366"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:29.493" starttime="20200401 14:13:29.493"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:29.495" level="INFO">Running command 'ozone sh bucket list o3:///40569-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:31.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:31.703" level="INFO">${output} = 40569-rpcwport</msg>
<status status="PASS" endtime="20200401 14:13:31.703" starttime="20200401 14:13:29.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:31.704" level="INFO">40569-rpcwport</msg>
<status status="PASS" endtime="20200401 14:13:31.704" starttime="20200401 14:13:31.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:31.705" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:31.705" starttime="20200401 14:13:31.704"></status>
</kw>
<msg timestamp="20200401 14:13:31.705" level="INFO">${result} = 40569-rpcwport</msg>
<status status="PASS" endtime="20200401 14:13:31.705" starttime="20200401 14:13:29.493"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:31.706" starttime="20200401 14:13:31.705"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:31.709" level="INFO">Running command 'ozone sh key put o3:///40569-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:35.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:35.749" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:13:35.749" starttime="20200401 14:13:31.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:35.750" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:13:35.750" starttime="20200401 14:13:35.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:35.750" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:35.750" starttime="20200401 14:13:35.750"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:35.751" starttime="20200401 14:13:31.707"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:35.752" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:35.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:35.755" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:13:35.755" starttime="20200401 14:13:35.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:35.756" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:13:35.756" starttime="20200401 14:13:35.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:35.757" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:35.757" starttime="20200401 14:13:35.756"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:35.757" starttime="20200401 14:13:35.751"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:35.759" level="INFO">Running command 'ozone sh key get o3:///40569-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:39.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:39.589" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:13:39.589" starttime="20200401 14:13:35.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:39.591" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:13:39.591" starttime="20200401 14:13:39.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:39.592" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:39.592" starttime="20200401 14:13:39.591"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:39.592" starttime="20200401 14:13:35.757"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:39.594" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:39.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:39.598" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Apr  1 14:13 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 14:13:39.598" starttime="20200401 14:13:39.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:39.599" level="INFO">-rw-r--r-- 1 hadoop users 17540 Apr  1 14:13 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 14:13:39.599" starttime="20200401 14:13:39.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:39.600" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:39.600" starttime="20200401 14:13:39.600"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:39.600" starttime="20200401 14:13:39.592"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:39.602" level="INFO">Running command 'ozone sh key info o3:///40569-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:42.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:42.015" level="INFO">${output} = {
  "volumeName": "40569-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T14:13:33.837Z",
  "modificationTime": "2020-04-01T14:13:35.393Z",
  "rep...</msg>
<status status="PASS" endtime="20200401 14:13:42.016" starttime="20200401 14:13:39.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:42.017" level="INFO">{
  "volumeName": "40569-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T14:13:33.837Z",
  "modificationTime": "2020-04-01T14:13:35.393Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103923739120959620,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200401 14:13:42.017" starttime="20200401 14:13:42.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:42.017" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:42.018" starttime="20200401 14:13:42.017"></status>
</kw>
<msg timestamp="20200401 14:13:42.018" level="INFO">${result} = {
  "volumeName": "40569-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T14:13:33.837Z",
  "modificationTime": "2020-04-01T14:13:35.393Z",
  "rep...</msg>
<status status="PASS" endtime="20200401 14:13:42.018" starttime="20200401 14:13:39.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:42.019" starttime="20200401 14:13:42.018"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:42.021" level="INFO">Running command 'ozone sh key list o3:///40569-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:44.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:44.215" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200401 14:13:44.215" starttime="20200401 14:13:42.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:44.216" level="INFO">key1</msg>
<status status="PASS" endtime="20200401 14:13:44.216" starttime="20200401 14:13:44.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:44.217" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:44.217" starttime="20200401 14:13:44.216"></status>
</kw>
<msg timestamp="20200401 14:13:44.217" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200401 14:13:44.217" starttime="20200401 14:13:42.019"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:44.218" starttime="20200401 14:13:44.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:44.220" level="INFO">Running command 'ozone sh key rename o3:///40569-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:46.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:46.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:13:46.337" starttime="20200401 14:13:44.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:46.339" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:13:46.339" starttime="20200401 14:13:46.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:46.339" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:46.339" starttime="20200401 14:13:46.339"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:46.340" starttime="20200401 14:13:44.218"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:46.342" level="INFO">Running command 'ozone sh key list o3:///40569-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:48.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:48.442" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200401 14:13:48.442" starttime="20200401 14:13:46.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:48.444" level="INFO">key2</msg>
<status status="PASS" endtime="20200401 14:13:48.444" starttime="20200401 14:13:48.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:48.444" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:48.445" starttime="20200401 14:13:48.444"></status>
</kw>
<msg timestamp="20200401 14:13:48.445" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200401 14:13:48.445" starttime="20200401 14:13:46.340"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:48.446" starttime="20200401 14:13:48.445"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:48.448" level="INFO">Running command 'ozone sh key delete o3:///40569-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:50.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:50.485" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:13:50.485" starttime="20200401 14:13:48.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:50.486" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:13:50.487" starttime="20200401 14:13:50.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:50.487" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:50.487" starttime="20200401 14:13:50.487"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:50.488" starttime="20200401 14:13:48.446"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:50.488" starttime="20200401 14:13:31.706"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:50.488" starttime="20200401 14:13:31.706"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:50.490" level="INFO">Running command 'ozone sh bucket delete o3:///40569-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:52.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:52.585" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:13:52.585" starttime="20200401 14:13:50.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:52.586" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:13:52.587" starttime="20200401 14:13:52.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:52.587" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:52.587" starttime="20200401 14:13:52.587"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:52.588" starttime="20200401 14:13:50.488"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:52.590" level="INFO">Running command 'ozone sh volume delete o3:///40569-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:54.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:54.627" level="INFO">${output} = Volume 40569-rpcwport is deleted</msg>
<status status="PASS" endtime="20200401 14:13:54.627" starttime="20200401 14:13:52.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:54.628" level="INFO">Volume 40569-rpcwport is deleted</msg>
<status status="PASS" endtime="20200401 14:13:54.629" starttime="20200401 14:13:54.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:54.629" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:54.629" starttime="20200401 14:13:54.629"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:54.630" starttime="20200401 14:13:52.588"></status>
</kw>
<status status="PASS" endtime="20200401 14:13:54.630" starttime="20200401 14:13:12.121"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 14:13:54.630" critical="yes" starttime="20200401 14:13:12.119"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:54.632" starttime="20200401 14:13:54.632"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:54.635" level="INFO">Running command 'ozone sh volume info /40569-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:56.641" level="INFO">${rc} = 255</msg>
<msg timestamp="20200401 14:13:56.641" level="INFO">${output} = VOLUME_NOT_FOUND Volume 40569-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200401 14:13:56.641" starttime="20200401 14:13:54.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:56.642" level="INFO">VOLUME_NOT_FOUND Volume 40569-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200401 14:13:56.642" starttime="20200401 14:13:56.642"></status>
</kw>
<msg timestamp="20200401 14:13:56.643" level="INFO">${result} = VOLUME_NOT_FOUND Volume 40569-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200401 14:13:56.643" starttime="20200401 14:13:54.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:56.643" starttime="20200401 14:13:56.643"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:56.645" level="INFO">Running command 'ozone sh volume create /40569-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:13:58.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:13:58.745" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:13:58.745" starttime="20200401 14:13:56.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:13:58.746" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:13:58.746" starttime="20200401 14:13:58.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:13:58.747" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:13:58.747" starttime="20200401 14:13:58.747"></status>
</kw>
<msg timestamp="20200401 14:13:58.747" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200401 14:13:58.747" starttime="20200401 14:13:56.644"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200401 14:13:58.748" starttime="20200401 14:13:58.748"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:13:58.750" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="40569-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:00.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:00.946" level="INFO">${output} = {
  "metadata": {},
  "name": "40569-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:58.716Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200401 14:14:00.946" starttime="20200401 14:13:58.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:00.948" level="INFO">{
  "metadata": {},
  "name": "40569-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:58.716Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 14:14:00.948" starttime="20200401 14:14:00.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:00.948" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:00.949" starttime="20200401 14:14:00.948"></status>
</kw>
<msg timestamp="20200401 14:14:00.949" level="INFO">${result} = {
  "metadata": {},
  "name": "40569-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:58.716Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200401 14:14:00.949" starttime="20200401 14:13:58.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 14:14:00.949" starttime="20200401 14:14:00.949"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:00.952" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="40569-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:03.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:03.241" level="INFO">${output} = {
  "metadata": {},
  "name": "40569-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:58.716Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200401 14:14:03.241" starttime="20200401 14:14:00.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:03.242" level="INFO">{
  "metadata": {},
  "name": "40569-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:58.716Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 14:14:03.242" starttime="20200401 14:14:03.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:03.243" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:03.243" starttime="20200401 14:14:03.242"></status>
</kw>
<msg timestamp="20200401 14:14:03.243" level="INFO">${result} = {
  "metadata": {},
  "name": "40569-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T14:13:58.716Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200401 14:14:03.243" starttime="20200401 14:14:00.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 14:14:03.244" starttime="20200401 14:14:03.244"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:03.246" level="INFO">Running command 'ozone sh volume update /40569-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:05.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:05.417" level="INFO">${output} = {
  "metadata" : { },
  "name" : "40569-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T14:13:58.716Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" endtime="20200401 14:14:05.417" starttime="20200401 14:14:03.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:05.419" level="INFO">{
  "metadata" : { },
  "name" : "40569-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T14:13:58.716Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200401 14:14:05.419" starttime="20200401 14:14:05.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:05.419" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:05.422" starttime="20200401 14:14:05.419"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:05.422" starttime="20200401 14:14:03.244"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:05.425" level="INFO">Running command 'ozone sh volume info /40569-rpcwoscheme | jq -r '. | select(.name=="40569-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:07.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:07.656" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200401 14:14:07.656" starttime="20200401 14:14:05.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:07.657" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200401 14:14:07.657" starttime="20200401 14:14:07.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:07.658" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:07.658" starttime="20200401 14:14:07.657"></status>
</kw>
<msg timestamp="20200401 14:14:07.658" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200401 14:14:07.658" starttime="20200401 14:14:05.423"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200401 14:14:07.659" starttime="20200401 14:14:07.658"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:07.661" level="INFO">Running command 'ozone sh bucket create /40569-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:09.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:09.837" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:14:09.837" starttime="20200401 14:14:07.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:09.838" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:14:09.838" starttime="20200401 14:14:09.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:09.839" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:09.839" starttime="20200401 14:14:09.838"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:09.839" starttime="20200401 14:14:07.659"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:09.842" level="INFO">Running command 'ozone sh bucket info /40569-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:11.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:11.958" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200401 14:14:11.958" starttime="20200401 14:14:09.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:11.959" level="INFO">DISK</msg>
<status status="PASS" endtime="20200401 14:14:11.959" starttime="20200401 14:14:11.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:11.960" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:11.960" starttime="20200401 14:14:11.959"></status>
</kw>
<msg timestamp="20200401 14:14:11.960" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200401 14:14:11.960" starttime="20200401 14:14:09.839"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200401 14:14:11.961" starttime="20200401 14:14:11.961"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:11.963" level="INFO">Running command 'ozone sh bucket list /40569-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:14.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:14.165" level="INFO">${output} = 40569-rpcwoscheme</msg>
<status status="PASS" endtime="20200401 14:14:14.165" starttime="20200401 14:14:11.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:14.166" level="INFO">40569-rpcwoscheme</msg>
<status status="PASS" endtime="20200401 14:14:14.167" starttime="20200401 14:14:14.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:14.167" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:14.167" starttime="20200401 14:14:14.167"></status>
</kw>
<msg timestamp="20200401 14:14:14.168" level="INFO">${result} = 40569-rpcwoscheme</msg>
<status status="PASS" endtime="20200401 14:14:14.168" starttime="20200401 14:14:11.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200401 14:14:14.168" starttime="20200401 14:14:14.168"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:14.172" level="INFO">Running command 'ozone sh key put /40569-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:18.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:18.266" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:14:18.266" starttime="20200401 14:14:14.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:18.267" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:14:18.267" starttime="20200401 14:14:18.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:18.268" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:18.268" starttime="20200401 14:14:18.268"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:18.268" starttime="20200401 14:14:14.170"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:18.271" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:18.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:18.279" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:14:18.279" starttime="20200401 14:14:18.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:18.280" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:14:18.280" starttime="20200401 14:14:18.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:18.280" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:18.281" starttime="20200401 14:14:18.280"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:18.281" starttime="20200401 14:14:18.269"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:18.285" level="INFO">Running command 'ozone sh key get /40569-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:22.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:22.109" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:14:22.109" starttime="20200401 14:14:18.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:22.110" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:14:22.110" starttime="20200401 14:14:22.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:22.111" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:22.111" starttime="20200401 14:14:22.110"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:22.112" starttime="20200401 14:14:18.281"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:22.114" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:22.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:22.119" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Apr  1 14:14 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 14:14:22.119" starttime="20200401 14:14:22.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:22.120" level="INFO">-rw-r--r-- 1 hadoop users 17540 Apr  1 14:14 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 14:14:22.121" starttime="20200401 14:14:22.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:22.121" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:22.122" starttime="20200401 14:14:22.121"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:22.122" starttime="20200401 14:14:22.112"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:22.125" level="INFO">Running command 'ozone sh key info /40569-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:24.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:24.356" level="INFO">${output} = {
  "volumeName": "40569-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T14:14:16.321Z",
  "modificationTime": "2020-04-01T14:14:17.909Z",
  "...</msg>
<status status="PASS" endtime="20200401 14:14:24.356" starttime="20200401 14:14:22.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:24.357" level="INFO">{
  "volumeName": "40569-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T14:14:16.321Z",
  "modificationTime": "2020-04-01T14:14:17.909Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103923741905453180,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200401 14:14:24.357" starttime="20200401 14:14:24.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:24.358" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:24.358" starttime="20200401 14:14:24.357"></status>
</kw>
<msg timestamp="20200401 14:14:24.358" level="INFO">${result} = {
  "volumeName": "40569-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T14:14:16.321Z",
  "modificationTime": "2020-04-01T14:14:17.909Z",
  "...</msg>
<status status="PASS" endtime="20200401 14:14:24.358" starttime="20200401 14:14:22.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 14:14:24.359" starttime="20200401 14:14:24.358"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:24.362" level="INFO">Running command 'ozone sh key list /40569-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:26.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:26.643" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200401 14:14:26.643" starttime="20200401 14:14:24.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:26.645" level="INFO">key1</msg>
<status status="PASS" endtime="20200401 14:14:26.645" starttime="20200401 14:14:26.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:26.646" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:26.646" starttime="20200401 14:14:26.645"></status>
</kw>
<msg timestamp="20200401 14:14:26.646" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200401 14:14:26.646" starttime="20200401 14:14:24.359"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200401 14:14:26.647" starttime="20200401 14:14:26.646"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:26.649" level="INFO">Running command 'ozone sh key rename /40569-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:28.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:28.734" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:14:28.734" starttime="20200401 14:14:26.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:28.735" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:14:28.735" starttime="20200401 14:14:28.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:28.736" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:28.736" starttime="20200401 14:14:28.736"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:28.736" starttime="20200401 14:14:26.647"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:28.739" level="INFO">Running command 'ozone sh key list /40569-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:31.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:31.060" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200401 14:14:31.060" starttime="20200401 14:14:28.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:31.061" level="INFO">key2</msg>
<status status="PASS" endtime="20200401 14:14:31.061" starttime="20200401 14:14:31.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:31.062" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:31.062" starttime="20200401 14:14:31.061"></status>
</kw>
<msg timestamp="20200401 14:14:31.062" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200401 14:14:31.062" starttime="20200401 14:14:28.737"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200401 14:14:31.063" starttime="20200401 14:14:31.062"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:31.065" level="INFO">Running command 'ozone sh key delete /40569-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:33.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:33.163" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:14:33.163" starttime="20200401 14:14:31.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:33.165" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:14:33.165" starttime="20200401 14:14:33.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:33.166" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:33.166" starttime="20200401 14:14:33.165"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:33.167" starttime="20200401 14:14:31.063"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:33.167" starttime="20200401 14:14:14.169"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:33.167" starttime="20200401 14:14:14.168"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:33.169" level="INFO">Running command 'ozone sh bucket delete /40569-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:35.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:35.296" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 14:14:35.296" starttime="20200401 14:14:33.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:35.297" level="INFO"></msg>
<status status="PASS" endtime="20200401 14:14:35.297" starttime="20200401 14:14:35.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:35.298" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:35.298" starttime="20200401 14:14:35.297"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:35.298" starttime="20200401 14:14:33.167"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 14:14:35.300" level="INFO">Running command 'ozone sh volume delete /40569-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 14:14:37.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 14:14:37.418" level="INFO">${output} = Volume 40569-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20200401 14:14:37.418" starttime="20200401 14:14:35.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 14:14:37.419" level="INFO">Volume 40569-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20200401 14:14:37.419" starttime="20200401 14:14:37.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 14:14:37.420" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 14:14:37.420" starttime="20200401 14:14:37.419"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:37.420" starttime="20200401 14:14:35.298"></status>
</kw>
<status status="PASS" endtime="20200401 14:14:37.420" starttime="20200401 14:13:54.632"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 14:14:37.421" critical="yes" starttime="20200401 14:13:54.631"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200401 14:14:37.422" starttime="20200401 14:11:34.445"></status>
</suite>
<status status="PASS" endtime="20200401 14:14:37.427" starttime="20200401 14:10:08.156"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-basic" pass="8">ozone-basic</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-basic.Basic</stat>
<stat fail="0" id="s1-s2" name="Ozone-Shell" pass="6">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
