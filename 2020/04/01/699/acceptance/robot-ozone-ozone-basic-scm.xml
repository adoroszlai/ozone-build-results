<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200401 12:14:39.510" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozone-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20200401 12:14:39.566" starttime="20200401 12:14:39.565"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:14:39.567" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:14:39.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:14:39.650" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 01 Apr 2020 12:14:39 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 01 Apr 2020 11:49:44 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200401 12:14:39.650" starttime="20200401 12:14:39.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:14:39.651" level="INFO">HTTP/1.1 200 OK
Date: Wed, 01 Apr 2020 12:14:39 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 01 Apr 2020 11:49:44 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200401 12:14:39.651" starttime="20200401 12:14:39.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:14:39.652" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:14:39.653" starttime="20200401 12:14:39.652"></status>
</kw>
<msg timestamp="20200401 12:14:39.653" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 01 Apr 2020 12:14:39 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 01 Apr 2020 11:49:44 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200401 12:14:39.653" starttime="20200401 12:14:39.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200401 12:14:39.653" starttime="20200401 12:14:39.653"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:14:39.654" critical="yes" starttime="20200401 12:14:39.564"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 12:14:39.656" starttime="20200401 12:14:39.655"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:14:39.657" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:15:37.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:15:37.970" level="INFO">${output} = 2020-04-01 12:14:40,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:14:40,898 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:15:37.970" starttime="20200401 12:14:39.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:15:37.971" level="INFO">2020-04-01 12:14:40,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:14:40,898 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:14:40,898 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:14:42,629 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-01 12:14:42,631 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-01 12:14:42,631 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-01 12:14:42,631 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-01 12:14:42,631 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-01 12:14:42,631 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-01 12:14:42,635 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-01 12:14:42,637 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-01 12:14:42,638 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-01 12:14:42,649 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-01 12:14:42,703 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-88237, with hadoop as owner.
2020-04-01 12:14:42,822 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-55011, with hadoop as owner.
2020-04-01 12:14:42,832 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-45652, with hadoop as owner.
2020-04-01 12:14:42,840 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-86728, with hadoop as owner.
2020-04-01 12:14:42,848 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-64230, with hadoop as owner.
2020-04-01 12:14:42,858 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88237/bucket-0-89330, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,891 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-55011/bucket-0-73998, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,899 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45652/bucket-0-63156, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,912 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-86728/bucket-0-93495, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,918 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-64230/bucket-0-07788, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,924 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88237/bucket-1-47300, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,930 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-55011/bucket-1-00064, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,937 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45652/bucket-1-31092, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,942 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-86728/bucket-1-24040, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,950 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-64230/bucket-1-03128, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,957 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88237/bucket-2-12576, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,971 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-55011/bucket-2-30125, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,979 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45652/bucket-2-28217, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,986 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-86728/bucket-2-01727, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:42,994 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-64230/bucket-2-64484, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:43,001 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88237/bucket-3-43819, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:43,007 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-55011/bucket-3-44836, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:43,015 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45652/bucket-3-14381, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:43,023 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-86728/bucket-3-19182, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:43,028 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-64230/bucket-3-47738, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:43,036 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88237/bucket-4-53707, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:43,040 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-55011/bucket-4-38859, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:43,045 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45652/bucket-4-23236, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:43,054 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-86728/bucket-4-85709, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:43,066 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-64230/bucket-4-69771, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:14:43,585 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-01 12:14:43,655 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-01 12:14:44,655 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-01 12:14:45,656 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-01 12:14:46,661 [Thread-8] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-04-01 12:14:47,667 [Thread-8] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-04-01 12:14:48,668 [Thread-8] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-04-01 12:14:49,669 [Thread-8] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-04-01 12:14:50,669 [Thread-8] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-04-01 12:14:51,670 [Thread-8] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-04-01 12:14:52,670 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-04-01 12:14:53,671 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-04-01 12:14:54,671 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-04-01 12:14:55,672 [Thread-8] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-04-01 12:14:56,672 [Thread-8] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-04-01 12:14:57,673 [Thread-8] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-04-01 12:14:58,673 [Thread-8] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-04-01 12:14:59,674 [Thread-8] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-04-01 12:15:00,675 [Thread-8] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-04-01 12:15:01,677 [Thread-8] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-04-01 12:15:02,679 [Thread-8] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-04-01 12:15:03,679 [Thread-8] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-04-01 12:15:04,680 [Thread-8] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-04-01 12:15:05,680 [Thread-8] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-04-01 12:15:06,681 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-01 12:15:07,681 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-01 12:15:08,682 [Thread-8] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-04-01 12:15:09,682 [Thread-8] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-04-01 12:15:10,682 [Thread-8] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-04-01 12:15:11,683 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-04-01 12:15:12,683 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-04-01 12:15:13,684 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-04-01 12:15:14,684 [Thread-8] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-04-01 12:15:15,685 [Thread-8] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-04-01 12:15:16,691 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-04-01 12:15:17,692 [Thread-8] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-04-01 12:15:18,692 [Thread-8] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-04-01 12:15:19,693 [Thread-8] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-04-01 12:15:20,693 [Thread-8] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-04-01 12:15:21,694 [Thread-8] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-04-01 12:15:22,698 [Thread-8] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-04-01 12:15:23,698 [Thread-8] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-04-01 12:15:24,698 [Thread-8] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-04-01 12:15:25,700 [Thread-8] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-04-01 12:15:26,700 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-04-01 12:15:27,701 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-04-01 12:15:28,702 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-04-01 12:15:29,702 [Thread-8] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-04-01 12:15:30,703 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-04-01 12:15:31,703 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-04-01 12:15:32,703 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,169
Average Time spent in bucket creation: 00:00:00,135
Average Time spent in key creation: 00:00:01,723
Average Time spent in key write: 00:00:00,689
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:56,405
***************************************************</msg>
<status status="PASS" endtime="20200401 12:15:37.971" starttime="20200401 12:15:37.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:15:37.972" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:15:37.972" starttime="20200401 12:15:37.971"></status>
</kw>
<msg timestamp="20200401 12:15:37.972" level="INFO">${result} = 2020-04-01 12:14:40,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:14:40,898 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:15:37.972" starttime="20200401 12:14:39.656"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200401 12:15:37.973" starttime="20200401 12:15:37.973"></status>
</kw>
<status status="PASS" endtime="20200401 12:15:37.973" starttime="20200401 12:15:37.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200401 12:15:37.974" starttime="20200401 12:15:37.973"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:15:37.974" critical="yes" starttime="20200401 12:14:39.654"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200401 12:15:37.975" starttime="20200401 12:14:39.535"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200401 12:15:37.982" level="INFO">${random} = 60089</msg>
<status status="PASS" endtime="20200401 12:15:37.982" starttime="20200401 12:15:37.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200401 12:15:37.983" level="INFO">${prefix} = 60089</msg>
<status status="PASS" endtime="20200401 12:15:37.983" starttime="20200401 12:15:37.982"></status>
</kw>
<status status="PASS" endtime="20200401 12:15:37.983" starttime="20200401 12:15:37.981"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 12:15:37.984" starttime="20200401 12:15:37.984"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:15:37.986" level="INFO">Running command 'ozone sh volume info o3://om:9862/60089-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:15:40.108" level="INFO">${rc} = 255</msg>
<msg timestamp="20200401 12:15:40.108" level="INFO">${output} = VOLUME_NOT_FOUND Volume 60089-rpcwoport is not found</msg>
<status status="PASS" endtime="20200401 12:15:40.108" starttime="20200401 12:15:37.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:15:40.109" level="INFO">VOLUME_NOT_FOUND Volume 60089-rpcwoport is not found</msg>
<status status="PASS" endtime="20200401 12:15:40.109" starttime="20200401 12:15:40.109"></status>
</kw>
<msg timestamp="20200401 12:15:40.110" level="INFO">${result} = VOLUME_NOT_FOUND Volume 60089-rpcwoport is not found</msg>
<status status="PASS" endtime="20200401 12:15:40.110" starttime="20200401 12:15:37.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200401 12:15:40.110" starttime="20200401 12:15:40.110"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:15:40.112" level="INFO">Running command 'ozone sh volume create o3://om:9862/60089-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:15:42.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:15:42.236" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:15:42.236" starttime="20200401 12:15:40.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:15:42.238" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:15:42.238" starttime="20200401 12:15:42.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:15:42.238" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:15:42.238" starttime="20200401 12:15:42.238"></status>
</kw>
<msg timestamp="20200401 12:15:42.239" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200401 12:15:42.239" starttime="20200401 12:15:40.110"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200401 12:15:42.239" starttime="20200401 12:15:42.239"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:15:42.241" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="60089-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:15:44.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:15:44.347" level="INFO">${output} = {
  "metadata": {},
  "name": "60089-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:15:42.217Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200401 12:15:44.347" starttime="20200401 12:15:42.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:15:44.348" level="INFO">{
  "metadata": {},
  "name": "60089-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:15:42.217Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 12:15:44.348" starttime="20200401 12:15:44.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:15:44.348" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:15:44.348" starttime="20200401 12:15:44.348"></status>
</kw>
<msg timestamp="20200401 12:15:44.349" level="INFO">${result} = {
  "metadata": {},
  "name": "60089-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:15:42.217Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200401 12:15:44.349" starttime="20200401 12:15:42.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 12:15:44.349" starttime="20200401 12:15:44.349"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:15:44.351" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="60089-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:15:46.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:15:46.542" level="INFO">${output} = {
  "metadata": {},
  "name": "60089-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:15:42.217Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200401 12:15:46.542" starttime="20200401 12:15:44.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:15:46.543" level="INFO">{
  "metadata": {},
  "name": "60089-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:15:42.217Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 12:15:46.543" starttime="20200401 12:15:46.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:15:46.544" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:15:46.544" starttime="20200401 12:15:46.543"></status>
</kw>
<msg timestamp="20200401 12:15:46.544" level="INFO">${result} = {
  "metadata": {},
  "name": "60089-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:15:42.217Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200401 12:15:46.544" starttime="20200401 12:15:44.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 12:15:46.545" starttime="20200401 12:15:46.545"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:15:46.547" level="INFO">Running command 'ozone sh volume update o3://om:9862/60089-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:15:48.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:15:48.730" level="INFO">${output} = {
  "metadata" : { },
  "name" : "60089-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T12:15:42.217Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" endtime="20200401 12:15:48.730" starttime="20200401 12:15:46.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:15:48.731" level="INFO">{
  "metadata" : { },
  "name" : "60089-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T12:15:42.217Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200401 12:15:48.731" starttime="20200401 12:15:48.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:15:48.732" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:15:48.732" starttime="20200401 12:15:48.732"></status>
</kw>
<status status="PASS" endtime="20200401 12:15:48.732" starttime="20200401 12:15:46.545"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:15:48.735" level="INFO">Running command 'ozone sh volume info o3://om:9862/60089-rpcwoport | jq -r '. | select(.name=="60089-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:15:50.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:15:50.844" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200401 12:15:50.845" starttime="20200401 12:15:48.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:15:50.846" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200401 12:15:50.846" starttime="20200401 12:15:50.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:15:50.846" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:15:50.846" starttime="20200401 12:15:50.846"></status>
</kw>
<msg timestamp="20200401 12:15:50.847" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200401 12:15:50.847" starttime="20200401 12:15:48.733"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200401 12:15:50.848" starttime="20200401 12:15:50.847"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:15:50.849" level="INFO">Running command 'ozone sh bucket create o3://om:9862/60089-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:15:53.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:15:53.019" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:15:53.019" starttime="20200401 12:15:50.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:15:53.020" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:15:53.020" starttime="20200401 12:15:53.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:15:53.021" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:15:53.021" starttime="20200401 12:15:53.020"></status>
</kw>
<status status="PASS" endtime="20200401 12:15:53.021" starttime="20200401 12:15:50.848"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:15:53.023" level="INFO">Running command 'ozone sh bucket info o3://om:9862/60089-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:15:55.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:15:55.197" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200401 12:15:55.198" starttime="20200401 12:15:53.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:15:55.198" level="INFO">DISK</msg>
<status status="PASS" endtime="20200401 12:15:55.199" starttime="20200401 12:15:55.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:15:55.199" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:15:55.199" starttime="20200401 12:15:55.199"></status>
</kw>
<msg timestamp="20200401 12:15:55.200" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200401 12:15:55.200" starttime="20200401 12:15:53.021"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200401 12:15:55.200" starttime="20200401 12:15:55.200"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:15:55.203" level="INFO">Running command 'ozone sh bucket list o3://om:9862/60089-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:15:57.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:15:57.202" level="INFO">${output} = 60089-rpcwoport</msg>
<status status="PASS" endtime="20200401 12:15:57.202" starttime="20200401 12:15:55.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:15:57.203" level="INFO">60089-rpcwoport</msg>
<status status="PASS" endtime="20200401 12:15:57.203" starttime="20200401 12:15:57.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:15:57.203" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:15:57.203" starttime="20200401 12:15:57.203"></status>
</kw>
<msg timestamp="20200401 12:15:57.204" level="INFO">${result} = 60089-rpcwoport</msg>
<status status="PASS" endtime="20200401 12:15:57.204" starttime="20200401 12:15:55.201"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200401 12:15:57.204" starttime="20200401 12:15:57.204"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:15:57.207" level="INFO">Running command 'ozone sh key put o3://om:9862/60089-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:01.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:01.248" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:16:01.248" starttime="20200401 12:15:57.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:01.249" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:16:01.249" starttime="20200401 12:16:01.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:01.250" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:01.250" starttime="20200401 12:16:01.250"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:01.250" starttime="20200401 12:15:57.205"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:01.252" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:01.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:01.255" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:16:01.255" starttime="20200401 12:16:01.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:01.256" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:16:01.256" starttime="20200401 12:16:01.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:01.257" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:01.257" starttime="20200401 12:16:01.256"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:01.257" starttime="20200401 12:16:01.250"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:01.259" level="INFO">Running command 'ozone sh key get o3://om:9862/60089-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:05.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:05.029" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:16:05.029" starttime="20200401 12:16:01.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:05.030" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:16:05.030" starttime="20200401 12:16:05.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:05.031" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:05.031" starttime="20200401 12:16:05.030"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:05.031" starttime="20200401 12:16:01.257"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:05.034" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:05.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:05.038" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Apr  1 12:16 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 12:16:05.038" starttime="20200401 12:16:05.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:05.039" level="INFO">-rw-r--r-- 1 hadoop users 17540 Apr  1 12:16 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 12:16:05.039" starttime="20200401 12:16:05.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:05.040" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:05.040" starttime="20200401 12:16:05.039"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:05.040" starttime="20200401 12:16:05.031"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:05.042" level="INFO">Running command 'ozone sh key info o3://om:9862/60089-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:07.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:07.187" level="INFO">${output} = {
  "volumeName": "60089-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T12:15:59.275Z",
  "modificationTime": "2020-04-01T12:16:00.881Z",
  "re...</msg>
<status status="PASS" endtime="20200401 12:16:07.187" starttime="20200401 12:16:05.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:07.188" level="INFO">{
  "volumeName": "60089-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T12:15:59.275Z",
  "modificationTime": "2020-04-01T12:16:00.881Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103923276793381000,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200401 12:16:07.188" starttime="20200401 12:16:07.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:07.189" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:07.189" starttime="20200401 12:16:07.188"></status>
</kw>
<msg timestamp="20200401 12:16:07.189" level="INFO">${result} = {
  "volumeName": "60089-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T12:15:59.275Z",
  "modificationTime": "2020-04-01T12:16:00.881Z",
  "re...</msg>
<status status="PASS" endtime="20200401 12:16:07.189" starttime="20200401 12:16:05.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:07.190" starttime="20200401 12:16:07.189"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:07.192" level="INFO">Running command 'ozone sh key list o3://om:9862/60089-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:09.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:09.447" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200401 12:16:09.448" starttime="20200401 12:16:07.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:09.448" level="INFO">key1</msg>
<status status="PASS" endtime="20200401 12:16:09.449" starttime="20200401 12:16:09.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:09.449" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:09.449" starttime="20200401 12:16:09.449"></status>
</kw>
<msg timestamp="20200401 12:16:09.450" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200401 12:16:09.450" starttime="20200401 12:16:07.190"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:09.450" starttime="20200401 12:16:09.450"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:09.452" level="INFO">Running command 'ozone sh key rename o3://om:9862/60089-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:11.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:11.535" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:16:11.536" starttime="20200401 12:16:09.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:11.537" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:16:11.537" starttime="20200401 12:16:11.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:11.537" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:11.538" starttime="20200401 12:16:11.537"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:11.538" starttime="20200401 12:16:09.451"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:11.540" level="INFO">Running command 'ozone sh key list o3://om:9862/60089-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:13.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:13.760" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200401 12:16:13.760" starttime="20200401 12:16:11.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:13.761" level="INFO">key2</msg>
<status status="PASS" endtime="20200401 12:16:13.761" starttime="20200401 12:16:13.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:13.762" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:13.762" starttime="20200401 12:16:13.761"></status>
</kw>
<msg timestamp="20200401 12:16:13.762" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200401 12:16:13.762" starttime="20200401 12:16:11.538"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:13.763" starttime="20200401 12:16:13.763"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:13.765" level="INFO">Running command 'ozone sh key delete o3://om:9862/60089-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:15.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:15.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:16:15.916" starttime="20200401 12:16:13.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:15.916" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:16:15.917" starttime="20200401 12:16:15.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:15.917" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:15.917" starttime="20200401 12:16:15.917"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:15.917" starttime="20200401 12:16:13.763"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:15.918" starttime="20200401 12:15:57.205"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:15.918" starttime="20200401 12:15:57.205"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:15.920" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/60089-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:17.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:17.976" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:16:17.976" starttime="20200401 12:16:15.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:17.977" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:16:17.977" starttime="20200401 12:16:17.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:17.978" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:17.978" starttime="20200401 12:16:17.977"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:17.978" starttime="20200401 12:16:15.918"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:17.980" level="INFO">Running command 'ozone sh volume delete o3://om:9862/60089-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:19.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:19.972" level="INFO">${output} = Volume 60089-rpcwoport is deleted</msg>
<status status="PASS" endtime="20200401 12:16:19.972" starttime="20200401 12:16:17.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:19.973" level="INFO">Volume 60089-rpcwoport is deleted</msg>
<status status="PASS" endtime="20200401 12:16:19.973" starttime="20200401 12:16:19.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:19.974" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:19.974" starttime="20200401 12:16:19.973"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:19.974" starttime="20200401 12:16:17.978"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:19.974" starttime="20200401 12:15:37.984"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 12:16:19.974" critical="yes" starttime="20200401 12:15:37.983"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:19.976" starttime="20200401 12:16:19.976"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:19.979" level="INFO">Running command 'ozone sh volume create o3://om:9862/60089-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:22.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:22.139" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:16:22.139" starttime="20200401 12:16:19.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:22.140" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:16:22.140" starttime="20200401 12:16:22.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:22.140" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:22.141" starttime="20200401 12:16:22.140"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:22.141" starttime="20200401 12:16:19.977"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:22.143" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/60089-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:24.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:24.502" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:16:24.502" starttime="20200401 12:16:22.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:24.503" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:16:24.503" starttime="20200401 12:16:24.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:24.504" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:24.504" starttime="20200401 12:16:24.503"></status>
</kw>
<msg timestamp="20200401 12:16:24.504" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:16:24.504" starttime="20200401 12:16:22.141"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:24.505" starttime="20200401 12:16:24.504"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:24.507" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/60089-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:26.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:26.612" level="INFO">${output} = ACL added successfully.</msg>
<status status="PASS" endtime="20200401 12:16:26.612" starttime="20200401 12:16:24.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:26.613" level="INFO">ACL added successfully.</msg>
<status status="PASS" endtime="20200401 12:16:26.613" starttime="20200401 12:16:26.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:26.614" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:26.614" starttime="20200401 12:16:26.613"></status>
</kw>
<msg timestamp="20200401 12:16:26.614" level="INFO">${result} = ACL added successfully.</msg>
<status status="PASS" endtime="20200401 12:16:26.614" starttime="20200401 12:16:24.506"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:26.616" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/60089-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:28.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:28.748" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:16:28.748" starttime="20200401 12:16:26.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:28.749" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:16:28.749" starttime="20200401 12:16:28.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:28.750" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:28.750" starttime="20200401 12:16:28.750"></status>
</kw>
<msg timestamp="20200401 12:16:28.750" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:16:28.750" starttime="20200401 12:16:26.614"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:28.752" starttime="20200401 12:16:28.751"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:28.754" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/60089-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:30.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:30.776" level="INFO">${output} = ACL doesn't exist.</msg>
<status status="PASS" endtime="20200401 12:16:30.776" starttime="20200401 12:16:28.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:30.777" level="INFO">ACL doesn't exist.</msg>
<status status="PASS" endtime="20200401 12:16:30.777" starttime="20200401 12:16:30.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:30.778" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:30.778" starttime="20200401 12:16:30.777"></status>
</kw>
<msg timestamp="20200401 12:16:30.778" level="INFO">${result} = ACL doesn't exist.</msg>
<status status="PASS" endtime="20200401 12:16:30.778" starttime="20200401 12:16:28.752"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:30.781" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/60089-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:33.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:33.068" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:16:33.068" starttime="20200401 12:16:30.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:33.070" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:16:33.070" starttime="20200401 12:16:33.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:33.070" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:33.070" starttime="20200401 12:16:33.070"></status>
</kw>
<msg timestamp="20200401 12:16:33.070" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:16:33.071" starttime="20200401 12:16:30.779"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:33.072" starttime="20200401 12:16:33.071"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:33.074" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/60089-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:35.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:35.059" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 12:16:35.059" starttime="20200401 12:16:33.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:35.060" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 12:16:35.060" starttime="20200401 12:16:35.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:35.061" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:35.061" starttime="20200401 12:16:35.060"></status>
</kw>
<msg timestamp="20200401 12:16:35.061" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 12:16:35.061" starttime="20200401 12:16:33.072"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:35.063" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/60089-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:37.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:37.168" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20200401 12:16:37.168" starttime="20200401 12:16:35.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:37.169" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:16:37.169" starttime="20200401 12:16:37.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:37.170" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:37.170" starttime="20200401 12:16:37.170"></status>
</kw>
<msg timestamp="20200401 12:16:37.170" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20200401 12:16:37.170" starttime="20200401 12:16:35.061"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:37.171" starttime="20200401 12:16:37.171"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:37.172" starttime="20200401 12:16:37.171"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:37.172" starttime="20200401 12:16:19.976"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 12:16:37.172" critical="yes" starttime="20200401 12:16:19.975"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:37.175" starttime="20200401 12:16:37.174"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:37.177" level="INFO">Running command 'ozone sh bucket create o3://om:9862/60089-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:39.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:39.258" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:16:39.258" starttime="20200401 12:16:37.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:39.259" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:16:39.260" starttime="20200401 12:16:39.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:39.260" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:39.260" starttime="20200401 12:16:39.260"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:39.261" starttime="20200401 12:16:37.175"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:39.263" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/60089-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:41.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:41.396" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:16:41.396" starttime="20200401 12:16:39.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:41.397" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:16:41.397" starttime="20200401 12:16:41.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:41.398" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:41.398" starttime="20200401 12:16:41.397"></status>
</kw>
<msg timestamp="20200401 12:16:41.398" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:16:41.398" starttime="20200401 12:16:39.261"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:41.399" starttime="20200401 12:16:41.398"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:41.401" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/60089-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:43.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:43.550" level="INFO">${output} = ACL already exists.</msg>
<status status="PASS" endtime="20200401 12:16:43.550" starttime="20200401 12:16:41.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:43.551" level="INFO">ACL already exists.</msg>
<status status="PASS" endtime="20200401 12:16:43.551" starttime="20200401 12:16:43.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:43.551" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:43.551" starttime="20200401 12:16:43.551"></status>
</kw>
<msg timestamp="20200401 12:16:43.552" level="INFO">${result} = ACL already exists.</msg>
<status status="PASS" endtime="20200401 12:16:43.552" starttime="20200401 12:16:41.399"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:43.554" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/60089-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:45.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:45.574" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:16:45.574" starttime="20200401 12:16:43.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:45.575" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:16:45.576" starttime="20200401 12:16:45.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:45.576" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:45.576" starttime="20200401 12:16:45.576"></status>
</kw>
<msg timestamp="20200401 12:16:45.577" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:16:45.577" starttime="20200401 12:16:43.552"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:45.578" starttime="20200401 12:16:45.577"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:45.580" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/60089-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:47.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:47.610" level="INFO">${output} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 12:16:47.610" starttime="20200401 12:16:45.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:47.611" level="INFO">ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 12:16:47.611" starttime="20200401 12:16:47.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:47.612" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:47.612" starttime="20200401 12:16:47.612"></status>
</kw>
<msg timestamp="20200401 12:16:47.612" level="INFO">${result} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 12:16:47.613" starttime="20200401 12:16:45.578"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:47.615" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/60089-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:49.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:49.670" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:16:49.670" starttime="20200401 12:16:47.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:49.672" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:16:49.672" starttime="20200401 12:16:49.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:49.672" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:49.673" starttime="20200401 12:16:49.672"></status>
</kw>
<msg timestamp="20200401 12:16:49.673" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:16:49.673" starttime="20200401 12:16:47.613"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:49.674" starttime="20200401 12:16:49.673"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:49.677" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/60089-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:51.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:51.740" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 12:16:51.740" starttime="20200401 12:16:49.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:51.741" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 12:16:51.741" starttime="20200401 12:16:51.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:51.742" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:51.742" starttime="20200401 12:16:51.741"></status>
</kw>
<msg timestamp="20200401 12:16:51.742" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 12:16:51.742" starttime="20200401 12:16:49.674"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:51.744" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/60089-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:53.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:53.928" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200401 12:16:53.928" starttime="20200401 12:16:51.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:53.929" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:16:53.930" starttime="20200401 12:16:53.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:53.930" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:53.930" starttime="20200401 12:16:53.930"></status>
</kw>
<msg timestamp="20200401 12:16:53.931" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200401 12:16:53.931" starttime="20200401 12:16:51.742"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:53.931" starttime="20200401 12:16:53.931"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:53.932" starttime="20200401 12:16:53.932"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:53.932" starttime="20200401 12:16:37.175"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 12:16:53.933" critical="yes" starttime="20200401 12:16:37.173"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 12:16:53.934" starttime="20200401 12:16:53.934"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:53.937" level="INFO">Running command 'ozone sh key put o3://om:9862/60089-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:16:57.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:16:57.898" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:16:57.899" starttime="20200401 12:16:53.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:16:57.900" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:16:57.900" starttime="20200401 12:16:57.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:16:57.900" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:16:57.900" starttime="20200401 12:16:57.900"></status>
</kw>
<status status="PASS" endtime="20200401 12:16:57.901" starttime="20200401 12:16:53.935"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:16:57.903" level="INFO">Running command 'ozone sh key getacl o3://om:9862/60089-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:00.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:00.047" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:17:00.047" starttime="20200401 12:16:57.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:00.048" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:17:00.048" starttime="20200401 12:17:00.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:00.048" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:00.049" starttime="20200401 12:17:00.048"></status>
</kw>
<msg timestamp="20200401 12:17:00.049" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:17:00.049" starttime="20200401 12:16:57.901"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:00.050" starttime="20200401 12:17:00.049"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:00.051" level="INFO">Running command 'ozone sh key addacl o3://om:9862/60089-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:02.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:02.110" level="INFO">${output} = ACL added successfully.</msg>
<status status="PASS" endtime="20200401 12:17:02.110" starttime="20200401 12:17:00.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:02.111" level="INFO">ACL added successfully.</msg>
<status status="PASS" endtime="20200401 12:17:02.111" starttime="20200401 12:17:02.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:02.112" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:02.112" starttime="20200401 12:17:02.111"></status>
</kw>
<msg timestamp="20200401 12:17:02.112" level="INFO">${result} = ACL added successfully.</msg>
<status status="PASS" endtime="20200401 12:17:02.112" starttime="20200401 12:17:00.050"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:02.114" level="INFO">Running command 'ozone sh key getacl o3://om:9862/60089-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:04.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:04.371" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:17:04.371" starttime="20200401 12:17:02.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:04.372" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:17:04.373" starttime="20200401 12:17:04.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:04.373" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:04.373" starttime="20200401 12:17:04.373"></status>
</kw>
<msg timestamp="20200401 12:17:04.373" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:17:04.374" starttime="20200401 12:17:02.112"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:04.375" starttime="20200401 12:17:04.374"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:04.377" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/60089-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:06.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:06.378" level="INFO">${output} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 12:17:06.378" starttime="20200401 12:17:04.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:06.380" level="INFO">ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 12:17:06.380" starttime="20200401 12:17:06.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:06.380" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:06.380" starttime="20200401 12:17:06.380"></status>
</kw>
<msg timestamp="20200401 12:17:06.381" level="INFO">${result} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200401 12:17:06.381" starttime="20200401 12:17:04.375"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:06.383" level="INFO">Running command 'ozone sh key getacl o3://om:9862/60089-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:08.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:08.516" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:17:08.516" starttime="20200401 12:17:06.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:08.517" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:17:08.517" starttime="20200401 12:17:08.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:08.518" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:08.518" starttime="20200401 12:17:08.518"></status>
</kw>
<msg timestamp="20200401 12:17:08.519" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200401 12:17:08.519" starttime="20200401 12:17:06.381"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:08.520" starttime="20200401 12:17:08.519"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:08.523" level="INFO">Running command 'ozone sh key setacl o3://om:9862/60089-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:10.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:10.500" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 12:17:10.500" starttime="20200401 12:17:08.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:10.501" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 12:17:10.501" starttime="20200401 12:17:10.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:10.501" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:10.501" starttime="20200401 12:17:10.501"></status>
</kw>
<msg timestamp="20200401 12:17:10.502" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200401 12:17:10.502" starttime="20200401 12:17:08.520"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:10.504" level="INFO">Running command 'ozone sh key getacl o3://om:9862/60089-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:12.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:12.753" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200401 12:17:12.753" starttime="20200401 12:17:10.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:12.754" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200401 12:17:12.754" starttime="20200401 12:17:12.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:12.755" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:12.755" starttime="20200401 12:17:12.754"></status>
</kw>
<msg timestamp="20200401 12:17:12.755" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200401 12:17:12.755" starttime="20200401 12:17:10.502"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:12.756" starttime="20200401 12:17:12.756"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:12.757" starttime="20200401 12:17:12.756"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:12.757" starttime="20200401 12:16:53.934"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 12:17:12.758" critical="yes" starttime="20200401 12:16:53.933"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:12.760" starttime="20200401 12:17:12.759"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:12.762" level="INFO">Running command 'ozone sh volume info o3:///60089-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:14.665" level="INFO">${rc} = 255</msg>
<msg timestamp="20200401 12:17:14.665" level="INFO">${output} = VOLUME_NOT_FOUND Volume 60089-rpcwport is not found</msg>
<status status="PASS" endtime="20200401 12:17:14.666" starttime="20200401 12:17:12.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:14.668" level="INFO">VOLUME_NOT_FOUND Volume 60089-rpcwport is not found</msg>
<status status="PASS" endtime="20200401 12:17:14.668" starttime="20200401 12:17:14.666"></status>
</kw>
<msg timestamp="20200401 12:17:14.668" level="INFO">${result} = VOLUME_NOT_FOUND Volume 60089-rpcwport is not found</msg>
<status status="PASS" endtime="20200401 12:17:14.668" starttime="20200401 12:17:12.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:14.669" starttime="20200401 12:17:14.668"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:14.671" level="INFO">Running command 'ozone sh volume create o3:///60089-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:16.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:16.714" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:17:16.714" starttime="20200401 12:17:14.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:16.715" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:17:16.715" starttime="20200401 12:17:16.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:16.715" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:16.716" starttime="20200401 12:17:16.715"></status>
</kw>
<msg timestamp="20200401 12:17:16.716" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200401 12:17:16.716" starttime="20200401 12:17:14.669"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:16.717" starttime="20200401 12:17:16.716"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:16.719" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="60089-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:18.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:18.927" level="INFO">${output} = {
  "metadata": {},
  "name": "60089-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:16.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200401 12:17:18.927" starttime="20200401 12:17:16.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:18.928" level="INFO">{
  "metadata": {},
  "name": "60089-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:16.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 12:17:18.928" starttime="20200401 12:17:18.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:18.929" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:18.929" starttime="20200401 12:17:18.928"></status>
</kw>
<msg timestamp="20200401 12:17:18.929" level="INFO">${result} = {
  "metadata": {},
  "name": "60089-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:16.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200401 12:17:18.929" starttime="20200401 12:17:16.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:18.930" starttime="20200401 12:17:18.929"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:18.931" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="60089-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:21.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:21.090" level="INFO">${output} = {
  "metadata": {},
  "name": "60089-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:16.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200401 12:17:21.090" starttime="20200401 12:17:18.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:21.091" level="INFO">{
  "metadata": {},
  "name": "60089-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:16.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 12:17:21.092" starttime="20200401 12:17:21.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:21.092" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:21.092" starttime="20200401 12:17:21.092"></status>
</kw>
<msg timestamp="20200401 12:17:21.092" level="INFO">${result} = {
  "metadata": {},
  "name": "60089-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:16.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200401 12:17:21.093" starttime="20200401 12:17:18.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:21.093" starttime="20200401 12:17:21.093"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:21.095" level="INFO">Running command 'ozone sh volume update o3:///60089-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:23.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:23.255" level="INFO">${output} = {
  "metadata" : { },
  "name" : "60089-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T12:17:16.694Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" endtime="20200401 12:17:23.255" starttime="20200401 12:17:21.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:23.256" level="INFO">{
  "metadata" : { },
  "name" : "60089-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T12:17:16.694Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200401 12:17:23.256" starttime="20200401 12:17:23.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:23.256" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:23.257" starttime="20200401 12:17:23.256"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:23.257" starttime="20200401 12:17:21.093"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:23.259" level="INFO">Running command 'ozone sh volume info o3:///60089-rpcwport | jq -r '. | select(.name=="60089-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:25.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:25.482" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200401 12:17:25.482" starttime="20200401 12:17:23.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:25.483" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200401 12:17:25.484" starttime="20200401 12:17:25.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:25.484" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:25.484" starttime="20200401 12:17:25.484"></status>
</kw>
<msg timestamp="20200401 12:17:25.485" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200401 12:17:25.485" starttime="20200401 12:17:23.257"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:25.485" starttime="20200401 12:17:25.485"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:25.487" level="INFO">Running command 'ozone sh bucket create o3:///60089-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:27.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:27.564" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:17:27.564" starttime="20200401 12:17:25.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:27.566" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:17:27.566" starttime="20200401 12:17:27.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:27.566" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:27.567" starttime="20200401 12:17:27.566"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:27.567" starttime="20200401 12:17:25.485"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:27.569" level="INFO">Running command 'ozone sh bucket info o3:///60089-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:29.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:29.726" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200401 12:17:29.726" starttime="20200401 12:17:27.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:29.728" level="INFO">DISK</msg>
<status status="PASS" endtime="20200401 12:17:29.728" starttime="20200401 12:17:29.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:29.728" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:29.728" starttime="20200401 12:17:29.728"></status>
</kw>
<msg timestamp="20200401 12:17:29.729" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200401 12:17:29.729" starttime="20200401 12:17:27.567"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:29.729" starttime="20200401 12:17:29.729"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:29.732" level="INFO">Running command 'ozone sh bucket list o3:///60089-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:32.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:32.066" level="INFO">${output} = 60089-rpcwport</msg>
<status status="PASS" endtime="20200401 12:17:32.066" starttime="20200401 12:17:29.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:32.067" level="INFO">60089-rpcwport</msg>
<status status="PASS" endtime="20200401 12:17:32.067" starttime="20200401 12:17:32.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:32.068" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:32.068" starttime="20200401 12:17:32.067"></status>
</kw>
<msg timestamp="20200401 12:17:32.068" level="INFO">${result} = 60089-rpcwport</msg>
<status status="PASS" endtime="20200401 12:17:32.068" starttime="20200401 12:17:29.730"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:32.069" starttime="20200401 12:17:32.068"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:32.072" level="INFO">Running command 'ozone sh key put o3:///60089-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:35.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:35.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:17:35.915" starttime="20200401 12:17:32.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:35.916" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:17:35.916" starttime="20200401 12:17:35.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:35.917" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:35.917" starttime="20200401 12:17:35.916"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:35.917" starttime="20200401 12:17:32.070"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:35.919" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:35.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:35.921" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:17:35.921" starttime="20200401 12:17:35.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:35.922" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:17:35.922" starttime="20200401 12:17:35.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:35.923" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:35.923" starttime="20200401 12:17:35.922"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:35.923" starttime="20200401 12:17:35.917"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:35.924" level="INFO">Running command 'ozone sh key get o3:///60089-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:39.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:39.684" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:17:39.684" starttime="20200401 12:17:35.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:39.686" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:17:39.686" starttime="20200401 12:17:39.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:39.687" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:39.687" starttime="20200401 12:17:39.686"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:39.687" starttime="20200401 12:17:35.923"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:39.689" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:39.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:39.692" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Apr  1 12:17 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 12:17:39.693" starttime="20200401 12:17:39.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:39.693" level="INFO">-rw-r--r-- 1 hadoop users 17540 Apr  1 12:17 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 12:17:39.693" starttime="20200401 12:17:39.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:39.694" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:39.694" starttime="20200401 12:17:39.694"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:39.694" starttime="20200401 12:17:39.687"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:39.696" level="INFO">Running command 'ozone sh key info o3:///60089-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:41.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:41.894" level="INFO">${output} = {
  "volumeName": "60089-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T12:17:34.101Z",
  "modificationTime": "2020-04-01T12:17:35.560Z",
  "rep...</msg>
<status status="PASS" endtime="20200401 12:17:41.894" starttime="20200401 12:17:39.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:41.896" level="INFO">{
  "volumeName": "60089-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T12:17:34.101Z",
  "modificationTime": "2020-04-01T12:17:35.560Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103923283007570050,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200401 12:17:41.896" starttime="20200401 12:17:41.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:41.896" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:41.896" starttime="20200401 12:17:41.896"></status>
</kw>
<msg timestamp="20200401 12:17:41.897" level="INFO">${result} = {
  "volumeName": "60089-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T12:17:34.101Z",
  "modificationTime": "2020-04-01T12:17:35.560Z",
  "rep...</msg>
<status status="PASS" endtime="20200401 12:17:41.897" starttime="20200401 12:17:39.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:41.897" starttime="20200401 12:17:41.897"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:41.899" level="INFO">Running command 'ozone sh key list o3:///60089-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:44.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:44.017" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200401 12:17:44.017" starttime="20200401 12:17:41.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:44.018" level="INFO">key1</msg>
<status status="PASS" endtime="20200401 12:17:44.018" starttime="20200401 12:17:44.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:44.018" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:44.019" starttime="20200401 12:17:44.018"></status>
</kw>
<msg timestamp="20200401 12:17:44.019" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200401 12:17:44.019" starttime="20200401 12:17:41.897"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:44.019" starttime="20200401 12:17:44.019"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:44.022" level="INFO">Running command 'ozone sh key rename o3:///60089-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:46.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:46.083" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:17:46.083" starttime="20200401 12:17:44.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:46.084" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:17:46.084" starttime="20200401 12:17:46.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:46.085" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:46.085" starttime="20200401 12:17:46.085"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:46.085" starttime="20200401 12:17:44.020"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:46.088" level="INFO">Running command 'ozone sh key list o3:///60089-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:48.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:48.137" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200401 12:17:48.137" starttime="20200401 12:17:46.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:48.138" level="INFO">key2</msg>
<status status="PASS" endtime="20200401 12:17:48.139" starttime="20200401 12:17:48.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:48.139" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:48.139" starttime="20200401 12:17:48.139"></status>
</kw>
<msg timestamp="20200401 12:17:48.139" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200401 12:17:48.139" starttime="20200401 12:17:46.086"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:48.140" starttime="20200401 12:17:48.140"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:48.142" level="INFO">Running command 'ozone sh key delete o3:///60089-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:50.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:50.167" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:17:50.167" starttime="20200401 12:17:48.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:50.169" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:17:50.169" starttime="20200401 12:17:50.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:50.169" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:50.170" starttime="20200401 12:17:50.169"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:50.170" starttime="20200401 12:17:48.140"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:50.170" starttime="20200401 12:17:32.069"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:50.170" starttime="20200401 12:17:32.069"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:50.172" level="INFO">Running command 'ozone sh bucket delete o3:///60089-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:52.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:52.117" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:17:52.117" starttime="20200401 12:17:50.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:52.118" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:17:52.118" starttime="20200401 12:17:52.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:52.118" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:52.119" starttime="20200401 12:17:52.118"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:52.119" starttime="20200401 12:17:50.170"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:52.121" level="INFO">Running command 'ozone sh volume delete o3:///60089-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:54.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:54.166" level="INFO">${output} = Volume 60089-rpcwport is deleted</msg>
<status status="PASS" endtime="20200401 12:17:54.166" starttime="20200401 12:17:52.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:54.167" level="INFO">Volume 60089-rpcwport is deleted</msg>
<status status="PASS" endtime="20200401 12:17:54.167" starttime="20200401 12:17:54.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:54.168" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:54.168" starttime="20200401 12:17:54.167"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:54.168" starttime="20200401 12:17:52.119"></status>
</kw>
<status status="PASS" endtime="20200401 12:17:54.168" starttime="20200401 12:17:12.760"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 12:17:54.169" critical="yes" starttime="20200401 12:17:12.758"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:54.171" starttime="20200401 12:17:54.170"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:54.173" level="INFO">Running command 'ozone sh volume info /60089-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:56.239" level="INFO">${rc} = 255</msg>
<msg timestamp="20200401 12:17:56.239" level="INFO">${output} = VOLUME_NOT_FOUND Volume 60089-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200401 12:17:56.239" starttime="20200401 12:17:54.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:56.240" level="INFO">VOLUME_NOT_FOUND Volume 60089-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200401 12:17:56.240" starttime="20200401 12:17:56.239"></status>
</kw>
<msg timestamp="20200401 12:17:56.240" level="INFO">${result} = VOLUME_NOT_FOUND Volume 60089-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200401 12:17:56.240" starttime="20200401 12:17:54.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:56.241" starttime="20200401 12:17:56.240"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:56.243" level="INFO">Running command 'ozone sh volume create /60089-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:17:58.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:17:58.357" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:17:58.357" starttime="20200401 12:17:56.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:17:58.359" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:17:58.359" starttime="20200401 12:17:58.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:17:58.359" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:17:58.360" starttime="20200401 12:17:58.359"></status>
</kw>
<msg timestamp="20200401 12:17:58.360" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200401 12:17:58.360" starttime="20200401 12:17:56.241"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200401 12:17:58.360" starttime="20200401 12:17:58.360"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:17:58.362" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="60089-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:00.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:00.479" level="INFO">${output} = {
  "metadata": {},
  "name": "60089-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:58.322Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200401 12:18:00.479" starttime="20200401 12:17:58.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:00.480" level="INFO">{
  "metadata": {},
  "name": "60089-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:58.322Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 12:18:00.480" starttime="20200401 12:18:00.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:00.481" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:00.481" starttime="20200401 12:18:00.480"></status>
</kw>
<msg timestamp="20200401 12:18:00.482" level="INFO">${result} = {
  "metadata": {},
  "name": "60089-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:58.322Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200401 12:18:00.482" starttime="20200401 12:17:58.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 12:18:00.482" starttime="20200401 12:18:00.482"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:00.485" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="60089-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:02.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:02.606" level="INFO">${output} = {
  "metadata": {},
  "name": "60089-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:58.322Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200401 12:18:02.606" starttime="20200401 12:18:00.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:02.607" level="INFO">{
  "metadata": {},
  "name": "60089-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:58.322Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200401 12:18:02.608" starttime="20200401 12:18:02.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:02.608" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:02.608" starttime="20200401 12:18:02.608"></status>
</kw>
<msg timestamp="20200401 12:18:02.608" level="INFO">${result} = {
  "metadata": {},
  "name": "60089-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-01T12:17:58.322Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200401 12:18:02.608" starttime="20200401 12:18:00.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 12:18:02.609" starttime="20200401 12:18:02.609"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:02.611" level="INFO">Running command 'ozone sh volume update /60089-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:04.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:04.709" level="INFO">${output} = {
  "metadata" : { },
  "name" : "60089-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T12:17:58.322Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" endtime="20200401 12:18:04.709" starttime="20200401 12:18:02.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:04.710" level="INFO">{
  "metadata" : { },
  "name" : "60089-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-01T12:17:58.322Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200401 12:18:04.710" starttime="20200401 12:18:04.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:04.711" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:04.711" starttime="20200401 12:18:04.710"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:04.711" starttime="20200401 12:18:02.609"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:04.713" level="INFO">Running command 'ozone sh volume info /60089-rpcwoscheme | jq -r '. | select(.name=="60089-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:06.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:06.804" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200401 12:18:06.804" starttime="20200401 12:18:04.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:06.805" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200401 12:18:06.805" starttime="20200401 12:18:06.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:06.806" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:06.806" starttime="20200401 12:18:06.806"></status>
</kw>
<msg timestamp="20200401 12:18:06.806" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200401 12:18:06.807" starttime="20200401 12:18:04.711"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200401 12:18:06.807" starttime="20200401 12:18:06.807"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:06.809" level="INFO">Running command 'ozone sh bucket create /60089-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:08.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:08.872" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:18:08.872" starttime="20200401 12:18:06.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:08.873" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:18:08.873" starttime="20200401 12:18:08.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:08.874" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:08.874" starttime="20200401 12:18:08.874"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:08.874" starttime="20200401 12:18:06.807"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:08.876" level="INFO">Running command 'ozone sh bucket info /60089-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:10.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:10.978" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200401 12:18:10.978" starttime="20200401 12:18:08.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:10.979" level="INFO">DISK</msg>
<status status="PASS" endtime="20200401 12:18:10.980" starttime="20200401 12:18:10.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:10.980" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:10.980" starttime="20200401 12:18:10.980"></status>
</kw>
<msg timestamp="20200401 12:18:10.981" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200401 12:18:10.981" starttime="20200401 12:18:08.875"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200401 12:18:10.981" starttime="20200401 12:18:10.981"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:10.984" level="INFO">Running command 'ozone sh bucket list /60089-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:13.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:13.005" level="INFO">${output} = 60089-rpcwoscheme</msg>
<status status="PASS" endtime="20200401 12:18:13.005" starttime="20200401 12:18:10.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:13.006" level="INFO">60089-rpcwoscheme</msg>
<status status="PASS" endtime="20200401 12:18:13.006" starttime="20200401 12:18:13.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:13.007" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:13.007" starttime="20200401 12:18:13.007"></status>
</kw>
<msg timestamp="20200401 12:18:13.007" level="INFO">${result} = 60089-rpcwoscheme</msg>
<status status="PASS" endtime="20200401 12:18:13.007" starttime="20200401 12:18:10.981"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200401 12:18:13.008" starttime="20200401 12:18:13.008"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:13.011" level="INFO">Running command 'ozone sh key put /60089-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:16.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:16.940" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:18:16.940" starttime="20200401 12:18:13.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:16.942" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:18:16.942" starttime="20200401 12:18:16.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:16.942" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:16.942" starttime="20200401 12:18:16.942"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:16.943" starttime="20200401 12:18:13.010"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:16.944" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:16.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:16.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:18:16.947" starttime="20200401 12:18:16.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:16.948" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:18:16.948" starttime="20200401 12:18:16.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:16.949" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:16.949" starttime="20200401 12:18:16.948"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:16.949" starttime="20200401 12:18:16.943"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:16.951" level="INFO">Running command 'ozone sh key get /60089-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:20.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:20.593" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:18:20.593" starttime="20200401 12:18:16.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:20.594" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:18:20.594" starttime="20200401 12:18:20.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:20.595" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:20.595" starttime="20200401 12:18:20.594"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:20.595" starttime="20200401 12:18:16.949"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:20.597" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:20.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:20.601" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Apr  1 12:18 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 12:18:20.601" starttime="20200401 12:18:20.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:20.602" level="INFO">-rw-r--r-- 1 hadoop users 17540 Apr  1 12:18 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200401 12:18:20.602" starttime="20200401 12:18:20.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:20.603" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:20.603" starttime="20200401 12:18:20.602"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:20.603" starttime="20200401 12:18:20.595"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:20.605" level="INFO">Running command 'ozone sh key info /60089-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:22.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:22.747" level="INFO">${output} = {
  "volumeName": "60089-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T12:18:15.010Z",
  "modificationTime": "2020-04-01T12:18:16.572Z",
  "...</msg>
<status status="PASS" endtime="20200401 12:18:22.747" starttime="20200401 12:18:20.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:22.748" level="INFO">{
  "volumeName": "60089-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T12:18:15.010Z",
  "modificationTime": "2020-04-01T12:18:16.572Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103923285688909950,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200401 12:18:22.748" starttime="20200401 12:18:22.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:22.749" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:22.749" starttime="20200401 12:18:22.748"></status>
</kw>
<msg timestamp="20200401 12:18:22.749" level="INFO">${result} = {
  "volumeName": "60089-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-01T12:18:15.010Z",
  "modificationTime": "2020-04-01T12:18:16.572Z",
  "...</msg>
<status status="PASS" endtime="20200401 12:18:22.749" starttime="20200401 12:18:20.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200401 12:18:22.750" starttime="20200401 12:18:22.749"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:22.753" level="INFO">Running command 'ozone sh key list /60089-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:24.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:24.928" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200401 12:18:24.928" starttime="20200401 12:18:22.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:24.929" level="INFO">key1</msg>
<status status="PASS" endtime="20200401 12:18:24.929" starttime="20200401 12:18:24.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:24.930" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:24.930" starttime="20200401 12:18:24.929"></status>
</kw>
<msg timestamp="20200401 12:18:24.930" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200401 12:18:24.930" starttime="20200401 12:18:22.750"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:18:24.931" starttime="20200401 12:18:24.930"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:24.933" level="INFO">Running command 'ozone sh key rename /60089-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:27.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:27.062" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:18:27.062" starttime="20200401 12:18:24.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:27.063" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:18:27.063" starttime="20200401 12:18:27.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:27.064" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:27.064" starttime="20200401 12:18:27.063"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:27.064" starttime="20200401 12:18:24.931"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:27.066" level="INFO">Running command 'ozone sh key list /60089-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:29.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:29.254" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200401 12:18:29.254" starttime="20200401 12:18:27.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:29.255" level="INFO">key2</msg>
<status status="PASS" endtime="20200401 12:18:29.255" starttime="20200401 12:18:29.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:29.256" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:29.256" starttime="20200401 12:18:29.255"></status>
</kw>
<msg timestamp="20200401 12:18:29.256" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200401 12:18:29.256" starttime="20200401 12:18:27.064"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200401 12:18:29.257" starttime="20200401 12:18:29.257"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:29.259" level="INFO">Running command 'ozone sh key delete /60089-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:31.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:31.275" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:18:31.275" starttime="20200401 12:18:29.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:31.276" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:18:31.276" starttime="20200401 12:18:31.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:31.277" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:31.277" starttime="20200401 12:18:31.276"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:31.277" starttime="20200401 12:18:29.257"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:31.278" starttime="20200401 12:18:13.009"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:31.278" starttime="20200401 12:18:13.008"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:31.280" level="INFO">Running command 'ozone sh bucket delete /60089-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:33.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:33.405" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200401 12:18:33.405" starttime="20200401 12:18:31.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:33.407" level="INFO"></msg>
<status status="PASS" endtime="20200401 12:18:33.407" starttime="20200401 12:18:33.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:33.407" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:33.407" starttime="20200401 12:18:33.407"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:33.408" starttime="20200401 12:18:31.278"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:18:33.409" level="INFO">Running command 'ozone sh volume delete /60089-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:18:35.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:18:35.393" level="INFO">${output} = Volume 60089-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20200401 12:18:35.394" starttime="20200401 12:18:33.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:18:35.395" level="INFO">Volume 60089-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20200401 12:18:35.395" starttime="20200401 12:18:35.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:18:35.395" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:18:35.396" starttime="20200401 12:18:35.395"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:35.396" starttime="20200401 12:18:33.408"></status>
</kw>
<status status="PASS" endtime="20200401 12:18:35.396" starttime="20200401 12:17:54.171"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200401 12:18:35.396" critical="yes" starttime="20200401 12:17:54.169"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200401 12:18:35.398" starttime="20200401 12:15:37.976"></status>
</suite>
<status status="PASS" endtime="20200401 12:18:35.402" starttime="20200401 12:14:39.511"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-basic" pass="8">ozone-basic</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-basic.Basic</stat>
<stat fail="0" id="s1-s2" name="Ozone-Shell" pass="6">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
