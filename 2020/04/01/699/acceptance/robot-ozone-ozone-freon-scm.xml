<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200401 12:24:36.795" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:24:36.844" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:24:44.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:24:44.502" level="INFO">${output} = 2020-04-01 12:24:37,813 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:38,012 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:24:44.502" starttime="20200401 12:24:36.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:24:44.503" level="INFO">2020-04-01 12:24:37,813 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:38,012 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:24:38,012 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:24:39,136 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-01 12:24:39,137 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-01 12:24:39,137 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-01 12:24:39,137 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-01 12:24:39,137 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-01 12:24:39,137 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-01 12:24:39,137 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-01 12:24:39,139 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-01 12:24:39,152 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:24:39,181 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-78769, with hadoop as owner.
2020-04-01 12:24:39,200 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-78769/bucket-0-34567, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:24:39,739 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-01 12:24:40,160 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,047
Average Time spent in bucket creation: 00:00:00,012
Average Time spent in key creation: 00:00:00,043
Average Time spent in key write: 00:00:00,689
Total bytes written: 10240
Total Execution time: 00:00:05,892
***************************************************</msg>
<status status="PASS" endtime="20200401 12:24:44.503" starttime="20200401 12:24:44.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:24:44.504" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:24:44.504" starttime="20200401 12:24:44.503"></status>
</kw>
<msg timestamp="20200401 12:24:44.504" level="INFO">${result} = 2020-04-01 12:24:37,813 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:38,012 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:24:44.504" starttime="20200401 12:24:36.842"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:24:44.505" starttime="20200401 12:24:44.505"></status>
</kw>
<status status="PASS" endtime="20200401 12:24:44.505" starttime="20200401 12:24:44.504"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:24:44.506" critical="yes" starttime="20200401 12:24:36.841"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:24:44.509" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:24:49.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:24:49.322" level="INFO">${output} = 2020-04-01 12:24:45,466 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:45,632 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:24:49.322" starttime="20200401 12:24:44.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:24:49.323" level="INFO">2020-04-01 12:24:45,466 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:45,632 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:24:45,632 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:24:45,933 [main] INFO freon.BaseFreonGenerator: Executing test with prefix NfH4mQ7QEo
2020-04-01 12:24:45,947 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:24:46,810 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-01 12:24:46,823 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:24:46,951 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:24:47,340 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-01 12:24:47,951 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:24:48,952 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 12:24:48,989 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1406.102183, max=1406.102183, mean=1406.102183, stddev=0.0, median=1406.102183, p75=1406.102183, p95=1406.102183, p98=1406.102183, p99=1406.102183, p999=1406.102183, mean_rate=0.4651552724953825, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 12:24:48,990 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-01 12:24:48,990 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 12:24:48,990 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 12:24:49.324" starttime="20200401 12:24:49.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:24:49.324" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:24:49.324" starttime="20200401 12:24:49.324"></status>
</kw>
<msg timestamp="20200401 12:24:49.325" level="INFO">${result} = 2020-04-01 12:24:45,466 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:45,632 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:24:49.325" starttime="20200401 12:24:44.507"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:24:49.326" starttime="20200401 12:24:49.326"></status>
</kw>
<status status="PASS" endtime="20200401 12:24:49.326" starttime="20200401 12:24:49.325"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:24:49.327" critical="yes" starttime="20200401 12:24:44.506"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:24:49.330" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:24:52.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:24:52.611" level="INFO">${output} = 2020-04-01 12:24:50,261 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:50,397 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:24:52.611" starttime="20200401 12:24:49.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:24:52.612" level="INFO">2020-04-01 12:24:50,261 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:50,397 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:24:50,397 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:24:50,727 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Sji1xmQllA
2020-04-01 12:24:50,746 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:24:51,749 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 12:24:52,585 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=27.232696, max=27.232696, mean=27.232696, stddev=0.0, median=27.232696, p75=27.232696, p95=27.232696, p98=27.232696, p99=27.232696, p999=27.232696, mean_rate=0.9825026650581289, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 12:24:52,588 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-01 12:24:52,588 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 12:24:52,588 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 12:24:52.612" starttime="20200401 12:24:52.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:24:52.612" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:24:52.612" starttime="20200401 12:24:52.612"></status>
</kw>
<msg timestamp="20200401 12:24:52.613" level="INFO">${result} = 2020-04-01 12:24:50,261 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:50,397 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:24:52.613" starttime="20200401 12:24:49.328"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:24:52.614" starttime="20200401 12:24:52.613"></status>
</kw>
<status status="PASS" endtime="20200401 12:24:52.614" starttime="20200401 12:24:52.613"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:24:52.614" critical="yes" starttime="20200401 12:24:49.327"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:24:52.618" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:24:55.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:24:55.860" level="INFO">${output} = 2020-04-01 12:24:53,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:53,744 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:24:55.860" starttime="20200401 12:24:52.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:24:55.861" level="INFO">2020-04-01 12:24:53,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:53,744 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:24:53,744 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:24:54,045 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7GgZZ2xv9U
2020-04-01 12:24:54,056 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:24:55,072 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 12:24:55,846 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=7.117599, max=7.117599, mean=7.117599, stddev=0.0, median=7.117599, p75=7.117599, p95=7.117599, p98=7.117599, p99=7.117599, p999=7.117599, mean_rate=0.9881317022960049, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 12:24:55,847 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-01 12:24:55,847 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 12:24:55,847 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 12:24:55.861" starttime="20200401 12:24:55.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:24:55.861" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:24:55.862" starttime="20200401 12:24:55.861"></status>
</kw>
<msg timestamp="20200401 12:24:55.862" level="INFO">${result} = 2020-04-01 12:24:53,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:24:53,744 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:24:55.862" starttime="20200401 12:24:52.616"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:24:55.863" starttime="20200401 12:24:55.862"></status>
</kw>
<status status="PASS" endtime="20200401 12:24:55.863" starttime="20200401 12:24:55.862"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:24:55.863" critical="yes" starttime="20200401 12:24:52.615"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200401 12:24:55.864" starttime="20200401 12:24:36.818"></status>
</suite>
<status status="PASS" endtime="20200401 12:24:55.867" starttime="20200401 12:24:36.796"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-freon" pass="4">ozone-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
