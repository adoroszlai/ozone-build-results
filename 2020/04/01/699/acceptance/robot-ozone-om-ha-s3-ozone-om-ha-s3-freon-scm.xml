<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200401 12:08:13.275" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-om-ha-s3-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:08:13.328" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:08:21.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:08:21.113" level="INFO">${output} = 2020-04-01 12:08:14,373 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:14,537 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:08:21.113" starttime="20200401 12:08:13.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:08:21.114" level="INFO">2020-04-01 12:08:14,373 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:14,537 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:08:14,537 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:08:15,751 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-01 12:08:15,752 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-01 12:08:15,752 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-01 12:08:15,752 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-01 12:08:15,752 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-01 12:08:15,752 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-01 12:08:15,752 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-01 12:08:15,754 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-01 12:08:15,762 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:08:15,790 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-83792, with hadoop as owner.
2020-04-01 12:08:15,830 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83792/bucket-0-34833, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:08:16,765 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:08:16,794 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-01 12:08:17,766 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,059
Average Time spent in bucket creation: 00:00:00,030
Average Time spent in key creation: 00:00:00,087
Average Time spent in key write: 00:00:01,033
Total bytes written: 10240
Total Execution time: 00:00:05,915
***************************************************</msg>
<status status="PASS" endtime="20200401 12:08:21.114" starttime="20200401 12:08:21.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:08:21.114" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:08:21.115" starttime="20200401 12:08:21.114"></status>
</kw>
<msg timestamp="20200401 12:08:21.115" level="INFO">${result} = 2020-04-01 12:08:14,373 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:14,537 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:08:21.115" starttime="20200401 12:08:13.326"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:08:21.116" starttime="20200401 12:08:21.116"></status>
</kw>
<status status="PASS" endtime="20200401 12:08:21.116" starttime="20200401 12:08:21.115"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:08:21.116" critical="yes" starttime="20200401 12:08:13.325"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:08:21.119" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:08:26.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:08:26.034" level="INFO">${output} = 2020-04-01 12:08:22,142 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:22,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:08:26.034" starttime="20200401 12:08:21.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:08:26.035" level="INFO">2020-04-01 12:08:22,142 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:22,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:08:22,316 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:08:22,624 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 9i6e4nYR0Q
2020-04-01 12:08:22,641 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:08:23,584 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-01 12:08:23,615 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-01 12:08:23,646 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:08:24,260 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-01 12:08:24,647 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:08:25,648 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 12:08:25,698 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1516.379511, max=1516.379511, mean=1516.379511, stddev=0.0, median=1516.379511, p75=1516.379511, p95=1516.379511, p98=1516.379511, p99=1516.379511, p999=1516.379511, mean_rate=0.48946455134556144, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 12:08:25,698 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-01 12:08:25,701 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 12:08:25,702 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 12:08:26.035" starttime="20200401 12:08:26.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:08:26.036" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:08:26.036" starttime="20200401 12:08:26.036"></status>
</kw>
<msg timestamp="20200401 12:08:26.036" level="INFO">${result} = 2020-04-01 12:08:22,142 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:22,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:08:26.036" starttime="20200401 12:08:21.117"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:08:26.037" starttime="20200401 12:08:26.037"></status>
</kw>
<status status="PASS" endtime="20200401 12:08:26.037" starttime="20200401 12:08:26.037"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:08:26.038" critical="yes" starttime="20200401 12:08:21.117"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:08:26.040" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:08:29.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:08:29.419" level="INFO">${output} = 2020-04-01 12:08:27,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:27,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:08:29.419" starttime="20200401 12:08:26.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:08:29.420" level="INFO">2020-04-01 12:08:27,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:27,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:08:27,240 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:08:27,529 [main] INFO freon.BaseFreonGenerator: Executing test with prefix IlGg4LvWG3
2020-04-01 12:08:27,546 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:08:28,556 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 12:08:29,406 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=102.666654, max=102.666654, mean=102.666654, stddev=0.0, median=102.666654, p75=102.666654, p95=102.666654, p98=102.666654, p99=102.666654, p999=102.666654, mean_rate=0.9850190976930939, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 12:08:29,407 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-01 12:08:29,407 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 12:08:29,407 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 12:08:29.420" starttime="20200401 12:08:29.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:08:29.421" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:08:29.421" starttime="20200401 12:08:29.420"></status>
</kw>
<msg timestamp="20200401 12:08:29.421" level="INFO">${result} = 2020-04-01 12:08:27,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:27,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:08:29.421" starttime="20200401 12:08:26.039"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:08:29.422" starttime="20200401 12:08:29.422"></status>
</kw>
<status status="PASS" endtime="20200401 12:08:29.422" starttime="20200401 12:08:29.421"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:08:29.422" critical="yes" starttime="20200401 12:08:26.038"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200401 12:08:29.426" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200401 12:08:32.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200401 12:08:32.739" level="INFO">${output} = 2020-04-01 12:08:30,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:30,566 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:08:32.739" starttime="20200401 12:08:29.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200401 12:08:32.740" level="INFO">2020-04-01 12:08:30,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:30,566 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-01 12:08:30,566 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-01 12:08:30,842 [main] INFO freon.BaseFreonGenerator: Executing test with prefix t803WqADAJ
2020-04-01 12:08:30,859 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-01 12:08:31,862 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-01 12:08:32,727 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=18.982291, max=18.982291, mean=18.982291, stddev=0.0, median=18.982291, p75=18.982291, p95=18.982291, p98=18.982291, p99=18.982291, p999=18.982291, mean_rate=0.9907372526484259, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-01 12:08:32,728 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-01 12:08:32,728 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-01 12:08:32,728 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200401 12:08:32.740" starttime="20200401 12:08:32.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200401 12:08:32.741" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200401 12:08:32.741" starttime="20200401 12:08:32.741"></status>
</kw>
<msg timestamp="20200401 12:08:32.741" level="INFO">${result} = 2020-04-01 12:08:30,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-01 12:08:30,566 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200401 12:08:32.742" starttime="20200401 12:08:29.424"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200401 12:08:32.743" starttime="20200401 12:08:32.742"></status>
</kw>
<status status="PASS" endtime="20200401 12:08:32.743" starttime="20200401 12:08:32.742"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200401 12:08:32.743" critical="yes" starttime="20200401 12:08:29.423"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200401 12:08:32.744" starttime="20200401 12:08:13.300"></status>
</suite>
<status status="PASS" endtime="20200401 12:08:32.748" starttime="20200401 12:08:13.275"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-om-ha-s3-freon" pass="4">ozone-om-ha-s3-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
