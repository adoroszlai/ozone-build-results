<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200423 13:09:20.965" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200423 13:09:21.027" endtime="20200423 13:09:21.028"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:09:21.032" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:09:21.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:09:21.126" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 23 Apr 2020 13:09:21 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 23 Apr 2020 12:45:52 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200423 13:09:21.028" endtime="20200423 13:09:21.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:09:21.127" level="INFO">HTTP/1.1 200 OK
Date: Thu, 23 Apr 2020 13:09:21 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 23 Apr 2020 12:45:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200423 13:09:21.127" endtime="20200423 13:09:21.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:09:21.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:09:21.128" endtime="20200423 13:09:21.128"></status>
</kw>
<msg timestamp="20200423 13:09:21.128" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 23 Apr 2020 13:09:21 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 23 Apr 2020 12:45:52 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200423 13:09:21.028" endtime="20200423 13:09:21.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200423 13:09:21.129" endtime="20200423 13:09:21.129"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200423 13:09:21.027" endtime="20200423 13:09:21.129" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200423 13:09:21.130" endtime="20200423 13:09:21.131"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:09:21.134" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:30.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:30.058" level="INFO">${output} = 2020-04-23 13:09:22,317 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:09:22,487 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:09:21.132" endtime="20200423 13:10:30.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:30.059" level="INFO">2020-04-23 13:09:22,317 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:09:22,487 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-23 13:09:22,487 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-23 13:09:24,008 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-23 13:09:24,009 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-23 13:09:24,009 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-23 13:09:24,009 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-23 13:09:24,009 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-23 13:09:24,009 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-23 13:09:24,009 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-23 13:09:24,018 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-23 13:09:24,022 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-23 13:09:24,032 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-23 13:09:24,056 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-88094, with hadoop as owner.
2020-04-23 13:09:24,224 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-90147, with hadoop as owner.
2020-04-23 13:09:24,236 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-17627, with hadoop as owner.
2020-04-23 13:09:24,244 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-71541, with hadoop as owner.
2020-04-23 13:09:24,252 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-05127, with hadoop as owner.
2020-04-23 13:09:24,268 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88094/bucket-0-63427, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,312 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-90147/bucket-0-85742, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,320 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-17627/bucket-0-73053, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,338 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-71541/bucket-0-75114, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,346 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-05127/bucket-0-99494, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,353 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88094/bucket-1-91765, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,359 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-90147/bucket-1-79358, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,365 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-17627/bucket-1-78244, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,372 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-71541/bucket-1-80381, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,379 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-05127/bucket-1-51233, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,385 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88094/bucket-2-81292, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,394 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-90147/bucket-2-13522, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,402 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-17627/bucket-2-80076, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,410 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-71541/bucket-2-36430, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,425 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-05127/bucket-2-97963, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,430 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88094/bucket-3-86395, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,438 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-90147/bucket-3-49305, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,443 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-17627/bucket-3-69313, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,449 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-71541/bucket-3-70522, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,454 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-05127/bucket-3-09867, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,460 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88094/bucket-4-39806, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,465 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-90147/bucket-4-12811, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,470 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-17627/bucket-4-16565, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,478 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-71541/bucket-4-09710, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:24,484 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-05127/bucket-4-23095, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:09:25,041 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-23 13:09:25,046 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-23 13:09:26,042 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-23 13:09:27,042 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-23 13:09:28,042 [Thread-8] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-04-23 13:09:29,043 [Thread-8] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-04-23 13:09:30,043 [Thread-8] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-04-23 13:09:31,047 [Thread-8] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-04-23 13:09:32,048 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-23 13:09:33,048 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-23 13:09:34,049 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-23 13:09:35,050 [Thread-8] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-04-23 13:09:36,050 [Thread-8] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-04-23 13:09:37,051 [Thread-8] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-04-23 13:09:38,051 [Thread-8] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-04-23 13:09:39,052 [Thread-8] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-04-23 13:09:40,052 [Thread-8] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-04-23 13:09:41,053 [Thread-8] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-04-23 13:09:42,053 [Thread-8] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-04-23 13:09:43,054 [Thread-8] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-04-23 13:09:44,054 [Thread-8] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-04-23 13:09:45,055 [Thread-8] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-04-23 13:09:46,055 [Thread-8] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-04-23 13:09:47,056 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-04-23 13:09:48,056 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-04-23 13:09:49,058 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-04-23 13:09:50,059 [Thread-8] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-04-23 13:09:51,059 [Thread-8] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-04-23 13:09:52,060 [Thread-8] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-04-23 13:09:53,060 [Thread-8] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-04-23 13:09:54,061 [Thread-8] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-04-23 13:09:55,067 [Thread-8] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-04-23 13:09:56,067 [Thread-8] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-04-23 13:09:57,068 [Thread-8] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-04-23 13:09:58,068 [Thread-8] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-04-23 13:09:59,069 [Thread-8] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-04-23 13:10:00,069 [Thread-8] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-04-23 13:10:01,070 [Thread-8] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-04-23 13:10:02,070 [Thread-8] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-04-23 13:10:03,071 [Thread-8] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-04-23 13:10:04,071 [Thread-8] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-04-23 13:10:05,071 [Thread-8] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-04-23 13:10:06,072 [Thread-8] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-04-23 13:10:07,073 [Thread-8] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-04-23 13:10:08,074 [Thread-8] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-04-23 13:10:09,074 [Thread-8] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-04-23 13:10:10,075 [Thread-8] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-04-23 13:10:11,075 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-04-23 13:10:12,076 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-04-23 13:10:13,076 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-04-23 13:10:14,077 [Thread-8] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-04-23 13:10:15,077 [Thread-8] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-04-23 13:10:16,077 [Thread-8] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-04-23 13:10:17,078 [Thread-8] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-04-23 13:10:18,078 [Thread-8] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-04-23 13:10:19,079 [Thread-8] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-04-23 13:10:20,079 [Thread-8] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-04-23 13:10:21,080 [Thread-8] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-04-23 13:10:22,080 [Thread-8] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-04-23 13:10:23,081 [Thread-8] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-04-23 13:10:24,081 [Thread-8] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-04-23 13:10:25,081 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,208
Average Time spent in bucket creation: 00:00:00,149
Average Time spent in key creation: 00:00:01,783
Average Time spent in key write: 00:00:00,700
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:06,941
***************************************************</msg>
<status status="PASS" starttime="20200423 13:10:30.058" endtime="20200423 13:10:30.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:30.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:30.059" endtime="20200423 13:10:30.060"></status>
</kw>
<msg timestamp="20200423 13:10:30.060" level="INFO">${result} = 2020-04-23 13:09:22,317 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:09:22,487 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:09:21.131" endtime="20200423 13:10:30.060"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200423 13:10:30.061" endtime="20200423 13:10:30.062"></status>
</kw>
<status status="PASS" starttime="20200423 13:10:30.060" endtime="20200423 13:10:30.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200423 13:10:30.062" endtime="20200423 13:10:30.062"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200423 13:09:21.130" endtime="20200423 13:10:30.063" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200423 13:09:20.999" endtime="20200423 13:10:30.064"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200423 13:10:30.073" level="INFO">${random} = 38878</msg>
<status status="PASS" starttime="20200423 13:10:30.072" endtime="20200423 13:10:30.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200423 13:10:30.073" level="INFO">${prefix} = 38878</msg>
<status status="PASS" starttime="20200423 13:10:30.073" endtime="20200423 13:10:30.074"></status>
</kw>
<status status="PASS" starttime="20200423 13:10:30.072" endtime="20200423 13:10:30.074"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200423 13:10:30.074" endtime="20200423 13:10:30.075"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:30.078" level="INFO">Running command 'ozone sh volume info o3://om:9862/38878-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:31.994" level="INFO">${rc} = 255</msg>
<msg timestamp="20200423 13:10:31.994" level="INFO">${output} = VOLUME_NOT_FOUND Volume 38878-rpcwoport is not found</msg>
<status status="PASS" starttime="20200423 13:10:30.076" endtime="20200423 13:10:31.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:31.996" level="INFO">VOLUME_NOT_FOUND Volume 38878-rpcwoport is not found</msg>
<status status="PASS" starttime="20200423 13:10:31.995" endtime="20200423 13:10:31.996"></status>
</kw>
<msg timestamp="20200423 13:10:31.996" level="INFO">${result} = VOLUME_NOT_FOUND Volume 38878-rpcwoport is not found</msg>
<status status="PASS" starttime="20200423 13:10:30.075" endtime="20200423 13:10:31.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200423 13:10:31.996" endtime="20200423 13:10:31.997"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:31.999" level="INFO">Running command 'ozone sh volume create o3://om:9862/38878-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:33.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:33.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:10:31.997" endtime="20200423 13:10:33.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:33.835" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:10:33.835" endtime="20200423 13:10:33.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:33.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:33.835" endtime="20200423 13:10:33.836"></status>
</kw>
<msg timestamp="20200423 13:10:33.836" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200423 13:10:31.997" endtime="20200423 13:10:33.836"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200423 13:10:33.837" endtime="20200423 13:10:33.837"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:33.841" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="38878-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:35.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:35.963" level="INFO">${output} = {
  "metadata": {},
  "name": "38878-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:10:33.820Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200423 13:10:33.838" endtime="20200423 13:10:35.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:35.965" level="INFO">{
  "metadata": {},
  "name": "38878-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:10:33.820Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200423 13:10:35.964" endtime="20200423 13:10:35.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:35.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:35.965" endtime="20200423 13:10:35.965"></status>
</kw>
<msg timestamp="20200423 13:10:35.966" level="INFO">${result} = {
  "metadata": {},
  "name": "38878-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:10:33.820Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200423 13:10:33.837" endtime="20200423 13:10:35.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200423 13:10:35.966" endtime="20200423 13:10:35.966"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:35.970" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="38878-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:38.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:38.254" level="INFO">${output} = {
  "metadata": {},
  "name": "38878-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:10:33.820Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200423 13:10:35.967" endtime="20200423 13:10:38.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:38.255" level="INFO">{
  "metadata": {},
  "name": "38878-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:10:33.820Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200423 13:10:38.255" endtime="20200423 13:10:38.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:38.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:38.256" endtime="20200423 13:10:38.256"></status>
</kw>
<msg timestamp="20200423 13:10:38.257" level="INFO">${result} = {
  "metadata": {},
  "name": "38878-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:10:33.820Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200423 13:10:35.966" endtime="20200423 13:10:38.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200423 13:10:38.257" endtime="20200423 13:10:38.258"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:38.261" level="INFO">Running command 'ozone sh volume update o3://om:9862/38878-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:40.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:40.463" level="INFO">${output} = {
  "metadata" : { },
  "name" : "38878-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-23T13:10:33.820Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200423 13:10:38.259" endtime="20200423 13:10:40.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:40.464" level="INFO">{
  "metadata" : { },
  "name" : "38878-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-23T13:10:33.820Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200423 13:10:40.463" endtime="20200423 13:10:40.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:40.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:40.464" endtime="20200423 13:10:40.465"></status>
</kw>
<status status="PASS" starttime="20200423 13:10:38.258" endtime="20200423 13:10:40.465"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:40.470" level="INFO">Running command 'ozone sh volume info o3://om:9862/38878-rpcwoport | jq -r '. | select(.name=="38878-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:42.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:42.739" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200423 13:10:40.466" endtime="20200423 13:10:42.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:42.740" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200423 13:10:42.739" endtime="20200423 13:10:42.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:42.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:42.740" endtime="20200423 13:10:42.741"></status>
</kw>
<msg timestamp="20200423 13:10:42.741" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200423 13:10:40.465" endtime="20200423 13:10:42.741"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200423 13:10:42.741" endtime="20200423 13:10:42.742"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:42.744" level="INFO">Running command 'ozone sh bucket create o3://om:9862/38878-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:44.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:44.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:10:42.742" endtime="20200423 13:10:44.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:44.737" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:10:44.736" endtime="20200423 13:10:44.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:44.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:44.737" endtime="20200423 13:10:44.738"></status>
</kw>
<status status="PASS" starttime="20200423 13:10:42.742" endtime="20200423 13:10:44.738"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:44.742" level="INFO">Running command 'ozone sh bucket info o3://om:9862/38878-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:47.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:47.054" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200423 13:10:44.739" endtime="20200423 13:10:47.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:47.056" level="INFO">DISK</msg>
<status status="PASS" starttime="20200423 13:10:47.055" endtime="20200423 13:10:47.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:47.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:47.057" endtime="20200423 13:10:47.057"></status>
</kw>
<msg timestamp="20200423 13:10:47.058" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200423 13:10:44.738" endtime="20200423 13:10:47.058"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200423 13:10:47.058" endtime="20200423 13:10:47.058"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:47.062" level="INFO">Running command 'ozone sh bucket list o3://om:9862/38878-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:49.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:49.213" level="INFO">${output} = 38878-rpcwoport</msg>
<status status="PASS" starttime="20200423 13:10:47.059" endtime="20200423 13:10:49.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:49.214" level="INFO">38878-rpcwoport</msg>
<status status="PASS" starttime="20200423 13:10:49.214" endtime="20200423 13:10:49.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:49.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:49.214" endtime="20200423 13:10:49.215"></status>
</kw>
<msg timestamp="20200423 13:10:49.215" level="INFO">${result} = 38878-rpcwoport</msg>
<status status="PASS" starttime="20200423 13:10:47.058" endtime="20200423 13:10:49.215"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200423 13:10:49.215" endtime="20200423 13:10:49.216"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:49.221" level="INFO">Running command 'ozone sh key put o3://om:9862/38878-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:53.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:53.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:10:49.218" endtime="20200423 13:10:53.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:53.161" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:10:53.160" endtime="20200423 13:10:53.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:53.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:53.162" endtime="20200423 13:10:53.162"></status>
</kw>
<status status="PASS" starttime="20200423 13:10:49.217" endtime="20200423 13:10:53.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:53.165" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:53.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:53.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:10:53.163" endtime="20200423 13:10:53.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:53.169" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:10:53.168" endtime="20200423 13:10:53.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:53.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:53.169" endtime="20200423 13:10:53.170"></status>
</kw>
<status status="PASS" starttime="20200423 13:10:53.163" endtime="20200423 13:10:53.170"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:53.174" level="INFO">Running command 'ozone sh key get o3://om:9862/38878-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:56.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:56.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:10:53.171" endtime="20200423 13:10:56.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:56.522" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:10:56.521" endtime="20200423 13:10:56.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:56.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:56.522" endtime="20200423 13:10:56.522"></status>
</kw>
<status status="PASS" starttime="20200423 13:10:53.170" endtime="20200423 13:10:56.523"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:56.525" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:56.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:10:56.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:10:56.523" endtime="20200423 13:10:56.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:56.530" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:10:56.529" endtime="20200423 13:10:56.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:10:56.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:10:56.530" endtime="20200423 13:10:56.531"></status>
</kw>
<status status="PASS" starttime="20200423 13:10:56.523" endtime="20200423 13:10:56.531"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:56.535" level="INFO">Running command 'ozone sh key get o3://om:9862/38878-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:10:58.417" level="INFO">${rc} = 255</msg>
<msg timestamp="20200423 13:10:58.417" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200423 13:10:56.532" endtime="20200423 13:10:58.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:10:58.418" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200423 13:10:58.417" endtime="20200423 13:10:58.418"></status>
</kw>
<msg timestamp="20200423 13:10:58.418" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200423 13:10:56.531" endtime="20200423 13:10:58.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200423 13:10:58.419" endtime="20200423 13:10:58.419"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:10:58.422" level="INFO">Running command 'ozone sh key get --force o3://om:9862/38878-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:01.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:01.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:10:58.420" endtime="20200423 13:11:01.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:01.899" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:11:01.898" endtime="20200423 13:11:01.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:01.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:01.899" endtime="20200423 13:11:01.899"></status>
</kw>
<msg timestamp="20200423 13:11:01.900" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200423 13:10:58.419" endtime="20200423 13:11:01.900"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:01.900" endtime="20200423 13:11:01.900"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:01.903" level="INFO">Running command 'ozone sh key info o3://om:9862/38878-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:04.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:04.092" level="INFO">${output} = {
  "volumeName": "38878-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-23T13:10:51.143Z",
  "modificationTime": "2020-04-23T13:10:52.796Z",
  "re...</msg>
<status status="PASS" starttime="20200423 13:11:01.901" endtime="20200423 13:11:04.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:04.093" level="INFO">{
  "volumeName": "38878-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-23T13:10:51.143Z",
  "modificationTime": "2020-04-23T13:10:52.796Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104048063358042240,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200423 13:11:04.092" endtime="20200423 13:11:04.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:04.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:04.094" endtime="20200423 13:11:04.095"></status>
</kw>
<msg timestamp="20200423 13:11:04.096" level="INFO">${result} = {
  "volumeName": "38878-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-23T13:10:51.143Z",
  "modificationTime": "2020-04-23T13:10:52.796Z",
  "re...</msg>
<status status="PASS" starttime="20200423 13:11:01.900" endtime="20200423 13:11:04.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:04.096" endtime="20200423 13:11:04.096"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:04.101" level="INFO">Running command 'ozone debug chunkinfo o3://om:9862/38878-rpcwoport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:07.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:07.807" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/6878818a-09ca-489c-b29e-1d224cceb47b/current/containerDir0/1/chunks/104048063358042237_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200423 13:11:04.097" endtime="20200423 13:11:07.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:07.808" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/6878818a-09ca-489c-b29e-1d224cceb47b/current/containerDir0/1/chunks/104048063358042237_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.3",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    }
  ],
  "pipelineID": "1049a209-37e6-4f8d-ad14-e8e068562229"
}</msg>
<status status="PASS" starttime="20200423 13:11:07.808" endtime="20200423 13:11:07.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:07.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:07.809" endtime="20200423 13:11:07.809"></status>
</kw>
<msg timestamp="20200423 13:11:07.810" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/6878818a-09ca-489c-b29e-1d224cceb47b/current/containerDir0/1/chunks/104048063358042237_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200423 13:11:04.097" endtime="20200423 13:11:07.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:07.810" endtime="20200423 13:11:07.810"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:07.813" level="INFO">Running command 'ozone sh key list o3://om:9862/38878-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:10.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:10.208" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200423 13:11:07.811" endtime="20200423 13:11:10.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:10.209" level="INFO">key1</msg>
<status status="PASS" starttime="20200423 13:11:10.208" endtime="20200423 13:11:10.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:10.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:10.209" endtime="20200423 13:11:10.210"></status>
</kw>
<msg timestamp="20200423 13:11:10.210" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200423 13:11:07.810" endtime="20200423 13:11:10.210"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:10.210" endtime="20200423 13:11:10.211"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:10.214" level="INFO">Running command 'ozone sh key rename o3://om:9862/38878-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:12.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:12.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:11:10.211" endtime="20200423 13:11:12.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:12.079" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:11:12.078" endtime="20200423 13:11:12.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:12.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:12.079" endtime="20200423 13:11:12.079"></status>
</kw>
<status status="PASS" starttime="20200423 13:11:10.211" endtime="20200423 13:11:12.080"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:12.082" level="INFO">Running command 'ozone sh key list o3://om:9862/38878-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:14.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:14.228" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200423 13:11:12.080" endtime="20200423 13:11:14.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:14.229" level="INFO">key2</msg>
<status status="PASS" starttime="20200423 13:11:14.229" endtime="20200423 13:11:14.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:14.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:14.230" endtime="20200423 13:11:14.230"></status>
</kw>
<msg timestamp="20200423 13:11:14.230" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200423 13:11:12.080" endtime="20200423 13:11:14.230"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:14.230" endtime="20200423 13:11:14.231"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:14.234" level="INFO">Running command 'ozone sh key delete o3://om:9862/38878-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:16.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:16.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:11:14.231" endtime="20200423 13:11:16.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:16.196" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:11:16.195" endtime="20200423 13:11:16.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:16.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:16.196" endtime="20200423 13:11:16.196"></status>
</kw>
<status status="PASS" starttime="20200423 13:11:14.231" endtime="20200423 13:11:16.197"></status>
</kw>
<status status="PASS" starttime="20200423 13:10:49.216" endtime="20200423 13:11:16.197"></status>
</kw>
<status status="PASS" starttime="20200423 13:10:49.216" endtime="20200423 13:11:16.197"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:16.201" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/38878-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:18.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:18.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:11:16.198" endtime="20200423 13:11:18.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:18.304" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:11:18.303" endtime="20200423 13:11:18.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:18.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:18.304" endtime="20200423 13:11:18.305"></status>
</kw>
<status status="PASS" starttime="20200423 13:11:16.197" endtime="20200423 13:11:18.305"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:18.308" level="INFO">Running command 'ozone sh volume delete o3://om:9862/38878-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:20.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:20.474" level="INFO">${output} = Volume 38878-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200423 13:11:18.306" endtime="20200423 13:11:20.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:20.475" level="INFO">Volume 38878-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200423 13:11:20.475" endtime="20200423 13:11:20.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:20.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:20.476" endtime="20200423 13:11:20.476"></status>
</kw>
<status status="PASS" starttime="20200423 13:11:18.305" endtime="20200423 13:11:20.476"></status>
</kw>
<status status="PASS" starttime="20200423 13:10:30.075" endtime="20200423 13:11:20.477"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200423 13:10:30.074" endtime="20200423 13:11:20.477" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:20.478" endtime="20200423 13:11:20.479"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:20.483" level="INFO">Running command 'ozone sh volume create o3://om:9862/38878-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:22.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:22.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:11:20.480" endtime="20200423 13:11:22.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:22.441" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:11:22.440" endtime="20200423 13:11:22.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:22.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:22.441" endtime="20200423 13:11:22.442"></status>
</kw>
<status status="PASS" starttime="20200423 13:11:20.479" endtime="20200423 13:11:22.442"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:22.446" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/38878-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:24.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:24.625" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:11:22.442" endtime="20200423 13:11:24.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:24.627" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:11:24.626" endtime="20200423 13:11:24.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:24.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:24.627" endtime="20200423 13:11:24.627"></status>
</kw>
<msg timestamp="20200423 13:11:24.628" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:11:22.442" endtime="20200423 13:11:24.628"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:24.628" endtime="20200423 13:11:24.629"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:24.633" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/38878-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:26.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:26.706" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200423 13:11:24.629" endtime="20200423 13:11:26.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:26.707" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200423 13:11:26.706" endtime="20200423 13:11:26.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:26.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:26.707" endtime="20200423 13:11:26.708"></status>
</kw>
<msg timestamp="20200423 13:11:26.708" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200423 13:11:24.629" endtime="20200423 13:11:26.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:26.711" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/38878-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:28.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:28.926" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:26.709" endtime="20200423 13:11:28.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:28.927" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:11:28.927" endtime="20200423 13:11:28.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:28.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:28.928" endtime="20200423 13:11:28.928"></status>
</kw>
<msg timestamp="20200423 13:11:28.928" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:26.709" endtime="20200423 13:11:28.928"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:28.929" endtime="20200423 13:11:28.930"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:28.933" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/38878-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:30.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:30.973" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200423 13:11:28.930" endtime="20200423 13:11:30.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:30.974" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200423 13:11:30.974" endtime="20200423 13:11:30.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:30.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:30.975" endtime="20200423 13:11:30.975"></status>
</kw>
<msg timestamp="20200423 13:11:30.975" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200423 13:11:28.930" endtime="20200423 13:11:30.976"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:30.979" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/38878-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:33.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:33.130" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:30.976" endtime="20200423 13:11:33.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:33.131" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:11:33.130" endtime="20200423 13:11:33.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:33.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:33.131" endtime="20200423 13:11:33.132"></status>
</kw>
<msg timestamp="20200423 13:11:33.132" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:30.976" endtime="20200423 13:11:33.132"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:33.132" endtime="20200423 13:11:33.133"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:33.137" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/38878-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:35.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:35.203" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200423 13:11:33.134" endtime="20200423 13:11:35.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:35.205" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200423 13:11:35.203" endtime="20200423 13:11:35.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:35.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:35.205" endtime="20200423 13:11:35.205"></status>
</kw>
<msg timestamp="20200423 13:11:35.206" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200423 13:11:33.133" endtime="20200423 13:11:35.206"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:35.210" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/38878-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:37.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:37.418" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200423 13:11:35.207" endtime="20200423 13:11:37.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:37.419" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:11:37.419" endtime="20200423 13:11:37.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:37.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:37.420" endtime="20200423 13:11:37.420"></status>
</kw>
<msg timestamp="20200423 13:11:37.420" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200423 13:11:35.206" endtime="20200423 13:11:37.421"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:37.421" endtime="20200423 13:11:37.422"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:37.422" endtime="20200423 13:11:37.423"></status>
</kw>
<status status="PASS" starttime="20200423 13:11:20.479" endtime="20200423 13:11:37.423"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200423 13:11:20.477" endtime="20200423 13:11:37.423" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:37.424" endtime="20200423 13:11:37.425"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:37.429" level="INFO">Running command 'ozone sh bucket create o3://om:9862/38878-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:39.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:39.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:11:37.426" endtime="20200423 13:11:39.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:39.460" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:11:39.459" endtime="20200423 13:11:39.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:39.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:39.460" endtime="20200423 13:11:39.460"></status>
</kw>
<status status="PASS" starttime="20200423 13:11:37.426" endtime="20200423 13:11:39.461"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:39.465" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/38878-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:41.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:41.580" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:39.462" endtime="20200423 13:11:41.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:41.582" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:11:41.581" endtime="20200423 13:11:41.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:41.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:41.582" endtime="20200423 13:11:41.583"></status>
</kw>
<msg timestamp="20200423 13:11:41.583" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:39.461" endtime="20200423 13:11:41.583"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:41.583" endtime="20200423 13:11:41.583"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:41.587" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/38878-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:43.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:43.542" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200423 13:11:41.584" endtime="20200423 13:11:43.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:43.544" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200423 13:11:43.543" endtime="20200423 13:11:43.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:43.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:43.544" endtime="20200423 13:11:43.545"></status>
</kw>
<msg timestamp="20200423 13:11:43.545" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200423 13:11:41.584" endtime="20200423 13:11:43.545"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:43.548" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/38878-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:45.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:45.683" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:43.546" endtime="20200423 13:11:45.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:45.684" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:11:45.683" endtime="20200423 13:11:45.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:45.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:45.684" endtime="20200423 13:11:45.684"></status>
</kw>
<msg timestamp="20200423 13:11:45.685" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:43.545" endtime="20200423 13:11:45.685"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:45.685" endtime="20200423 13:11:45.686"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:45.690" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/38878-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:47.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:47.545" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200423 13:11:45.687" endtime="20200423 13:11:47.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:47.547" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200423 13:11:47.546" endtime="20200423 13:11:47.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:47.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:47.547" endtime="20200423 13:11:47.547"></status>
</kw>
<msg timestamp="20200423 13:11:47.548" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200423 13:11:45.686" endtime="20200423 13:11:47.548"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:47.551" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/38878-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:49.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:49.659" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:47.548" endtime="20200423 13:11:49.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:49.660" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:11:49.659" endtime="20200423 13:11:49.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:49.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:49.660" endtime="20200423 13:11:49.661"></status>
</kw>
<msg timestamp="20200423 13:11:49.661" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:47.548" endtime="20200423 13:11:49.661"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:49.661" endtime="20200423 13:11:49.662"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:49.666" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/38878-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:51.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:51.689" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200423 13:11:49.663" endtime="20200423 13:11:51.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:51.690" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200423 13:11:51.689" endtime="20200423 13:11:51.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:51.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:51.690" endtime="20200423 13:11:51.691"></status>
</kw>
<msg timestamp="20200423 13:11:51.691" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200423 13:11:49.662" endtime="20200423 13:11:51.691"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:51.694" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/38878-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:53.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:53.859" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200423 13:11:51.692" endtime="20200423 13:11:53.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:53.860" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:11:53.859" endtime="20200423 13:11:53.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:53.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:53.860" endtime="20200423 13:11:53.861"></status>
</kw>
<msg timestamp="20200423 13:11:53.861" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200423 13:11:51.691" endtime="20200423 13:11:53.861"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:53.861" endtime="20200423 13:11:53.862"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:53.862" endtime="20200423 13:11:53.863"></status>
</kw>
<status status="PASS" starttime="20200423 13:11:37.425" endtime="20200423 13:11:53.863"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200423 13:11:37.424" endtime="20200423 13:11:53.863" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:53.864" endtime="20200423 13:11:53.865"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:53.868" level="INFO">Running command 'ozone sh key put o3://om:9862/38878-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:57.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:57.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:11:53.866" endtime="20200423 13:11:57.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:57.769" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:11:57.769" endtime="20200423 13:11:57.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:57.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:57.770" endtime="20200423 13:11:57.770"></status>
</kw>
<status status="PASS" starttime="20200423 13:11:53.865" endtime="20200423 13:11:57.771"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:57.776" level="INFO">Running command 'ozone sh key getacl o3://om:9862/38878-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:11:59.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:11:59.906" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:57.772" endtime="20200423 13:11:59.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:11:59.907" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:11:59.906" endtime="20200423 13:11:59.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:11:59.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:11:59.907" endtime="20200423 13:11:59.907"></status>
</kw>
<msg timestamp="20200423 13:11:59.908" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:11:57.771" endtime="20200423 13:11:59.908"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200423 13:11:59.908" endtime="20200423 13:11:59.908"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:11:59.911" level="INFO">Running command 'ozone sh key addacl o3://om:9862/38878-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:01.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:01.831" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200423 13:11:59.909" endtime="20200423 13:12:01.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:01.832" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200423 13:12:01.831" endtime="20200423 13:12:01.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:01.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:01.832" endtime="20200423 13:12:01.832"></status>
</kw>
<msg timestamp="20200423 13:12:01.833" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200423 13:11:59.908" endtime="20200423 13:12:01.833"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:01.837" level="INFO">Running command 'ozone sh key getacl o3://om:9862/38878-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:03.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:03.828" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:12:01.834" endtime="20200423 13:12:03.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:03.830" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:12:03.829" endtime="20200423 13:12:03.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:03.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:03.830" endtime="20200423 13:12:03.831"></status>
</kw>
<msg timestamp="20200423 13:12:03.831" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:12:01.833" endtime="20200423 13:12:03.831"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:03.831" endtime="20200423 13:12:03.832"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:03.835" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/38878-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:06.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:06.033" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200423 13:12:03.833" endtime="20200423 13:12:06.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:06.034" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200423 13:12:06.034" endtime="20200423 13:12:06.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:06.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:06.035" endtime="20200423 13:12:06.035"></status>
</kw>
<msg timestamp="20200423 13:12:06.036" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200423 13:12:03.833" endtime="20200423 13:12:06.036"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:06.040" level="INFO">Running command 'ozone sh key getacl o3://om:9862/38878-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:08.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:08.134" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:12:06.037" endtime="20200423 13:12:08.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:08.135" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:12:08.134" endtime="20200423 13:12:08.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:08.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:08.135" endtime="20200423 13:12:08.136"></status>
</kw>
<msg timestamp="20200423 13:12:08.136" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200423 13:12:06.036" endtime="20200423 13:12:08.136"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:08.136" endtime="20200423 13:12:08.137"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:08.141" level="INFO">Running command 'ozone sh key setacl o3://om:9862/38878-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:10.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:10.188" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200423 13:12:08.137" endtime="20200423 13:12:10.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:10.189" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200423 13:12:10.189" endtime="20200423 13:12:10.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:10.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:10.189" endtime="20200423 13:12:10.190"></status>
</kw>
<msg timestamp="20200423 13:12:10.190" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200423 13:12:08.137" endtime="20200423 13:12:10.190"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:10.194" level="INFO">Running command 'ozone sh key getacl o3://om:9862/38878-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:12.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:12.290" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200423 13:12:10.191" endtime="20200423 13:12:12.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:12.292" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200423 13:12:12.291" endtime="20200423 13:12:12.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:12.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:12.292" endtime="20200423 13:12:12.293"></status>
</kw>
<msg timestamp="20200423 13:12:12.293" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200423 13:12:10.190" endtime="20200423 13:12:12.293"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:12.293" endtime="20200423 13:12:12.294"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:12.294" endtime="20200423 13:12:12.295"></status>
</kw>
<status status="PASS" starttime="20200423 13:11:53.865" endtime="20200423 13:12:12.295"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200423 13:11:53.864" endtime="20200423 13:12:12.295" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:12.297" endtime="20200423 13:12:12.297"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:12.302" level="INFO">Running command 'ozone sh volume info o3:///38878-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:14.132" level="INFO">${rc} = 255</msg>
<msg timestamp="20200423 13:12:14.132" level="INFO">${output} = VOLUME_NOT_FOUND Volume 38878-rpcwport is not found</msg>
<status status="PASS" starttime="20200423 13:12:12.298" endtime="20200423 13:12:14.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:14.133" level="INFO">VOLUME_NOT_FOUND Volume 38878-rpcwport is not found</msg>
<status status="PASS" starttime="20200423 13:12:14.132" endtime="20200423 13:12:14.133"></status>
</kw>
<msg timestamp="20200423 13:12:14.133" level="INFO">${result} = VOLUME_NOT_FOUND Volume 38878-rpcwport is not found</msg>
<status status="PASS" starttime="20200423 13:12:12.298" endtime="20200423 13:12:14.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:14.133" endtime="20200423 13:12:14.134"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:14.137" level="INFO">Running command 'ozone sh volume create o3:///38878-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:16.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:16.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:12:14.135" endtime="20200423 13:12:16.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:16.127" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:12:16.126" endtime="20200423 13:12:16.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:16.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:16.127" endtime="20200423 13:12:16.128"></status>
</kw>
<msg timestamp="20200423 13:12:16.128" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200423 13:12:14.134" endtime="20200423 13:12:16.128"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:16.128" endtime="20200423 13:12:16.128"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:16.133" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="38878-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:18.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:18.306" level="INFO">${output} = {
  "metadata": {},
  "name": "38878-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:12:16.107Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200423 13:12:16.129" endtime="20200423 13:12:18.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:18.307" level="INFO">{
  "metadata": {},
  "name": "38878-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:12:16.107Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200423 13:12:18.306" endtime="20200423 13:12:18.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:18.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:18.307" endtime="20200423 13:12:18.308"></status>
</kw>
<msg timestamp="20200423 13:12:18.308" level="INFO">${result} = {
  "metadata": {},
  "name": "38878-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:12:16.107Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200423 13:12:16.129" endtime="20200423 13:12:18.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:18.308" endtime="20200423 13:12:18.308"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:18.311" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="38878-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:20.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:20.587" level="INFO">${output} = {
  "metadata": {},
  "name": "38878-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:12:16.107Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200423 13:12:18.309" endtime="20200423 13:12:20.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:20.589" level="INFO">{
  "metadata": {},
  "name": "38878-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:12:16.107Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200423 13:12:20.588" endtime="20200423 13:12:20.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:20.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:20.589" endtime="20200423 13:12:20.590"></status>
</kw>
<msg timestamp="20200423 13:12:20.590" level="INFO">${result} = {
  "metadata": {},
  "name": "38878-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:12:16.107Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200423 13:12:18.309" endtime="20200423 13:12:20.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:20.590" endtime="20200423 13:12:20.591"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:20.595" level="INFO">Running command 'ozone sh volume update o3:///38878-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:22.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:22.850" level="INFO">${output} = {
  "metadata" : { },
  "name" : "38878-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-23T13:12:16.107Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200423 13:12:20.591" endtime="20200423 13:12:22.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:22.851" level="INFO">{
  "metadata" : { },
  "name" : "38878-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-23T13:12:16.107Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200423 13:12:22.850" endtime="20200423 13:12:22.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:22.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:22.852" endtime="20200423 13:12:22.852"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:20.591" endtime="20200423 13:12:22.852"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:22.855" level="INFO">Running command 'ozone sh volume info o3:///38878-rpcwport | jq -r '. | select(.name=="38878-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:25.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:25.117" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200423 13:12:22.853" endtime="20200423 13:12:25.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:25.118" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200423 13:12:25.117" endtime="20200423 13:12:25.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:25.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:25.118" endtime="20200423 13:12:25.119"></status>
</kw>
<msg timestamp="20200423 13:12:25.119" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200423 13:12:22.852" endtime="20200423 13:12:25.119"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:25.119" endtime="20200423 13:12:25.120"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:25.124" level="INFO">Running command 'ozone sh bucket create o3:///38878-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:27.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:27.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:12:25.121" endtime="20200423 13:12:27.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:27.246" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:12:27.245" endtime="20200423 13:12:27.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:27.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:27.246" endtime="20200423 13:12:27.249"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:25.120" endtime="20200423 13:12:27.249"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:27.253" level="INFO">Running command 'ozone sh bucket info o3:///38878-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:29.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:29.468" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200423 13:12:27.250" endtime="20200423 13:12:29.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:29.470" level="INFO">DISK</msg>
<status status="PASS" starttime="20200423 13:12:29.469" endtime="20200423 13:12:29.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:29.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:29.470" endtime="20200423 13:12:29.471"></status>
</kw>
<msg timestamp="20200423 13:12:29.471" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200423 13:12:27.249" endtime="20200423 13:12:29.471"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:29.471" endtime="20200423 13:12:29.472"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:29.475" level="INFO">Running command 'ozone sh bucket list o3:///38878-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:31.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:31.689" level="INFO">${output} = 38878-rpcwport</msg>
<status status="PASS" starttime="20200423 13:12:29.472" endtime="20200423 13:12:31.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:31.690" level="INFO">38878-rpcwport</msg>
<status status="PASS" starttime="20200423 13:12:31.690" endtime="20200423 13:12:31.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:31.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:31.690" endtime="20200423 13:12:31.691"></status>
</kw>
<msg timestamp="20200423 13:12:31.691" level="INFO">${result} = 38878-rpcwport</msg>
<status status="PASS" starttime="20200423 13:12:29.472" endtime="20200423 13:12:31.691"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:31.692" endtime="20200423 13:12:31.692"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:31.697" level="INFO">Running command 'ozone sh key put o3:///38878-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:35.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:35.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:12:31.694" endtime="20200423 13:12:35.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:35.696" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:12:35.695" endtime="20200423 13:12:35.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:35.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:35.697" endtime="20200423 13:12:35.697"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:31.693" endtime="20200423 13:12:35.697"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:35.700" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:35.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:35.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:12:35.698" endtime="20200423 13:12:35.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:35.704" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:12:35.703" endtime="20200423 13:12:35.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:35.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:35.704" endtime="20200423 13:12:35.704"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:35.698" endtime="20200423 13:12:35.705"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:35.709" level="INFO">Running command 'ozone sh key get o3:///38878-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:39.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:39.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:12:35.706" endtime="20200423 13:12:39.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:39.448" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:12:39.447" endtime="20200423 13:12:39.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:39.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:39.448" endtime="20200423 13:12:39.449"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:35.705" endtime="20200423 13:12:39.449"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:39.452" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:39.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:39.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:12:39.450" endtime="20200423 13:12:39.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:39.456" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:12:39.456" endtime="20200423 13:12:39.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:39.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:39.457" endtime="20200423 13:12:39.457"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:39.449" endtime="20200423 13:12:39.458"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:39.461" level="INFO">Running command 'ozone sh key get o3:///38878-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:41.453" level="INFO">${rc} = 255</msg>
<msg timestamp="20200423 13:12:41.453" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200423 13:12:39.458" endtime="20200423 13:12:41.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:41.454" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200423 13:12:41.454" endtime="20200423 13:12:41.455"></status>
</kw>
<msg timestamp="20200423 13:12:41.455" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200423 13:12:39.458" endtime="20200423 13:12:41.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:41.455" endtime="20200423 13:12:41.456"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:41.459" level="INFO">Running command 'ozone sh key get --force o3:///38878-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:45.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:45.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:12:41.457" endtime="20200423 13:12:45.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:45.271" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:12:45.270" endtime="20200423 13:12:45.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:45.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:45.271" endtime="20200423 13:12:45.271"></status>
</kw>
<msg timestamp="20200423 13:12:45.272" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200423 13:12:41.456" endtime="20200423 13:12:45.272"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:45.272" endtime="20200423 13:12:45.272"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:45.277" level="INFO">Running command 'ozone sh key info o3:///38878-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:47.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:47.580" level="INFO">${output} = {
  "volumeName": "38878-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-23T13:12:33.652Z",
  "modificationTime": "2020-04-23T13:12:35.349Z",
  "rep...</msg>
<status status="PASS" starttime="20200423 13:12:45.273" endtime="20200423 13:12:47.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:47.581" level="INFO">{
  "volumeName": "38878-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-23T13:12:33.652Z",
  "modificationTime": "2020-04-23T13:12:35.349Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104048070076072060,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200423 13:12:47.580" endtime="20200423 13:12:47.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:47.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:47.581" endtime="20200423 13:12:47.582"></status>
</kw>
<msg timestamp="20200423 13:12:47.582" level="INFO">${result} = {
  "volumeName": "38878-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-23T13:12:33.652Z",
  "modificationTime": "2020-04-23T13:12:35.349Z",
  "rep...</msg>
<status status="PASS" starttime="20200423 13:12:45.273" endtime="20200423 13:12:47.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:47.582" endtime="20200423 13:12:47.583"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:47.587" level="INFO">Running command 'ozone debug chunkinfo o3:///38878-rpcwport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:51.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:51.337" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/6878818a-09ca-489c-b29e-1d224cceb47b/current/containerDir0/1/chunks/104048070076072063_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200423 13:12:47.584" endtime="20200423 13:12:51.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:51.338" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/6878818a-09ca-489c-b29e-1d224cceb47b/current/containerDir0/1/chunks/104048070076072063_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.3",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    }
  ],
  "pipelineID": "1049a209-37e6-4f8d-ad14-e8e068562229"
}</msg>
<status status="PASS" starttime="20200423 13:12:51.338" endtime="20200423 13:12:51.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:51.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:51.338" endtime="20200423 13:12:51.339"></status>
</kw>
<msg timestamp="20200423 13:12:51.339" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/6878818a-09ca-489c-b29e-1d224cceb47b/current/containerDir0/1/chunks/104048070076072063_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200423 13:12:47.583" endtime="20200423 13:12:51.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:51.339" endtime="20200423 13:12:51.340"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:51.343" level="INFO">Running command 'ozone sh key list o3:///38878-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:53.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:53.449" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200423 13:12:51.341" endtime="20200423 13:12:53.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:53.450" level="INFO">key1</msg>
<status status="PASS" starttime="20200423 13:12:53.449" endtime="20200423 13:12:53.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:53.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:53.450" endtime="20200423 13:12:53.451"></status>
</kw>
<msg timestamp="20200423 13:12:53.451" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200423 13:12:51.340" endtime="20200423 13:12:53.451"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:53.451" endtime="20200423 13:12:53.451"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:53.456" level="INFO">Running command 'ozone sh key rename o3:///38878-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:55.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:55.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:12:53.453" endtime="20200423 13:12:55.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:55.353" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:12:55.352" endtime="20200423 13:12:55.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:55.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:55.353" endtime="20200423 13:12:55.354"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:53.452" endtime="20200423 13:12:55.354"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:55.358" level="INFO">Running command 'ozone sh key list o3:///38878-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:57.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:57.546" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200423 13:12:55.354" endtime="20200423 13:12:57.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:57.547" level="INFO">key2</msg>
<status status="PASS" starttime="20200423 13:12:57.546" endtime="20200423 13:12:57.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:57.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:57.547" endtime="20200423 13:12:57.548"></status>
</kw>
<msg timestamp="20200423 13:12:57.548" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200423 13:12:55.354" endtime="20200423 13:12:57.548"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200423 13:12:57.548" endtime="20200423 13:12:57.549"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:57.552" level="INFO">Running command 'ozone sh key delete o3:///38878-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:12:59.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:12:59.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:12:57.550" endtime="20200423 13:12:59.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:12:59.434" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:12:59.433" endtime="20200423 13:12:59.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:12:59.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:12:59.434" endtime="20200423 13:12:59.435"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:57.549" endtime="20200423 13:12:59.435"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:31.693" endtime="20200423 13:12:59.435"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:31.692" endtime="20200423 13:12:59.435"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:12:59.439" level="INFO">Running command 'ozone sh bucket delete o3:///38878-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:01.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:01.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:12:59.436" endtime="20200423 13:13:01.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:01.430" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:13:01.430" endtime="20200423 13:13:01.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:01.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:01.431" endtime="20200423 13:13:01.431"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:59.436" endtime="20200423 13:13:01.431"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:01.436" level="INFO">Running command 'ozone sh volume delete o3:///38878-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:03.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:03.413" level="INFO">${output} = Volume 38878-rpcwport is deleted</msg>
<status status="PASS" starttime="20200423 13:13:01.432" endtime="20200423 13:13:03.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:03.414" level="INFO">Volume 38878-rpcwport is deleted</msg>
<status status="PASS" starttime="20200423 13:13:03.414" endtime="20200423 13:13:03.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:03.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:03.415" endtime="20200423 13:13:03.415"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:01.431" endtime="20200423 13:13:03.416"></status>
</kw>
<status status="PASS" starttime="20200423 13:12:12.297" endtime="20200423 13:13:03.416"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200423 13:12:12.296" endtime="20200423 13:13:03.416" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:03.417" endtime="20200423 13:13:03.418"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:03.423" level="INFO">Running command 'ozone sh volume info /38878-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:05.271" level="INFO">${rc} = 255</msg>
<msg timestamp="20200423 13:13:05.271" level="INFO">${output} = VOLUME_NOT_FOUND Volume 38878-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200423 13:13:03.419" endtime="20200423 13:13:05.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:05.272" level="INFO">VOLUME_NOT_FOUND Volume 38878-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200423 13:13:05.272" endtime="20200423 13:13:05.272"></status>
</kw>
<msg timestamp="20200423 13:13:05.273" level="INFO">${result} = VOLUME_NOT_FOUND Volume 38878-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200423 13:13:03.419" endtime="20200423 13:13:05.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:05.273" endtime="20200423 13:13:05.273"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:05.278" level="INFO">Running command 'ozone sh volume create /38878-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:07.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:07.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:13:05.274" endtime="20200423 13:13:07.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:07.292" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:13:07.292" endtime="20200423 13:13:07.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:07.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:07.293" endtime="20200423 13:13:07.293"></status>
</kw>
<msg timestamp="20200423 13:13:07.294" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200423 13:13:05.274" endtime="20200423 13:13:07.294"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:07.294" endtime="20200423 13:13:07.294"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:07.299" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="38878-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:09.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:09.590" level="INFO">${output} = {
  "metadata": {},
  "name": "38878-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:13:07.258Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200423 13:13:07.295" endtime="20200423 13:13:09.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:09.591" level="INFO">{
  "metadata": {},
  "name": "38878-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:13:07.258Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200423 13:13:09.590" endtime="20200423 13:13:09.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:09.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:09.592" endtime="20200423 13:13:09.592"></status>
</kw>
<msg timestamp="20200423 13:13:09.593" level="INFO">${result} = {
  "metadata": {},
  "name": "38878-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:13:07.258Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200423 13:13:07.294" endtime="20200423 13:13:09.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:09.593" endtime="20200423 13:13:09.594"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:09.597" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="38878-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:11.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:11.838" level="INFO">${output} = {
  "metadata": {},
  "name": "38878-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:13:07.258Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200423 13:13:09.594" endtime="20200423 13:13:11.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:11.839" level="INFO">{
  "metadata": {},
  "name": "38878-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:13:07.258Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200423 13:13:11.838" endtime="20200423 13:13:11.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:11.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:11.839" endtime="20200423 13:13:11.839"></status>
</kw>
<msg timestamp="20200423 13:13:11.840" level="INFO">${result} = {
  "metadata": {},
  "name": "38878-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-23T13:13:07.258Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200423 13:13:09.594" endtime="20200423 13:13:11.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:11.840" endtime="20200423 13:13:11.840"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:11.843" level="INFO">Running command 'ozone sh volume update /38878-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:13.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:13.901" level="INFO">${output} = {
  "metadata" : { },
  "name" : "38878-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-23T13:13:07.258Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200423 13:13:11.841" endtime="20200423 13:13:13.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:13.902" level="INFO">{
  "metadata" : { },
  "name" : "38878-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-23T13:13:07.258Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200423 13:13:13.901" endtime="20200423 13:13:13.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:13.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:13.902" endtime="20200423 13:13:13.903"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:11.840" endtime="20200423 13:13:13.903"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:13.907" level="INFO">Running command 'ozone sh volume info /38878-rpcwoscheme | jq -r '. | select(.name=="38878-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:16.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:16.131" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200423 13:13:13.904" endtime="20200423 13:13:16.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:16.132" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200423 13:13:16.132" endtime="20200423 13:13:16.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:16.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:16.133" endtime="20200423 13:13:16.133"></status>
</kw>
<msg timestamp="20200423 13:13:16.134" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200423 13:13:13.903" endtime="20200423 13:13:16.134"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:16.134" endtime="20200423 13:13:16.134"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:16.138" level="INFO">Running command 'ozone sh bucket create /38878-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:18.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:18.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:13:16.135" endtime="20200423 13:13:18.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:18.265" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:13:18.264" endtime="20200423 13:13:18.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:18.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:18.266" endtime="20200423 13:13:18.266"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:16.134" endtime="20200423 13:13:18.266"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:18.270" level="INFO">Running command 'ozone sh bucket info /38878-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:20.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:20.334" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200423 13:13:18.267" endtime="20200423 13:13:20.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:20.335" level="INFO">DISK</msg>
<status status="PASS" starttime="20200423 13:13:20.335" endtime="20200423 13:13:20.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:20.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:20.336" endtime="20200423 13:13:20.336"></status>
</kw>
<msg timestamp="20200423 13:13:20.336" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200423 13:13:18.266" endtime="20200423 13:13:20.336"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:20.337" endtime="20200423 13:13:20.337"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:20.343" level="INFO">Running command 'ozone sh bucket list /38878-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:22.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:22.498" level="INFO">${output} = 38878-rpcwoscheme</msg>
<status status="PASS" starttime="20200423 13:13:20.339" endtime="20200423 13:13:22.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:22.499" level="INFO">38878-rpcwoscheme</msg>
<status status="PASS" starttime="20200423 13:13:22.498" endtime="20200423 13:13:22.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:22.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:22.500" endtime="20200423 13:13:22.500"></status>
</kw>
<msg timestamp="20200423 13:13:22.501" level="INFO">${result} = 38878-rpcwoscheme</msg>
<status status="PASS" starttime="20200423 13:13:20.338" endtime="20200423 13:13:22.501"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:22.501" endtime="20200423 13:13:22.502"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:22.507" level="INFO">Running command 'ozone sh key put /38878-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:26.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:26.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:13:22.503" endtime="20200423 13:13:26.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:26.290" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:13:26.289" endtime="20200423 13:13:26.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:26.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:26.290" endtime="20200423 13:13:26.291"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:22.503" endtime="20200423 13:13:26.291"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:26.294" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:26.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:26.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:13:26.291" endtime="20200423 13:13:26.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:26.299" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:13:26.298" endtime="20200423 13:13:26.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:26.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:26.299" endtime="20200423 13:13:26.300"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:26.291" endtime="20200423 13:13:26.300"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:26.303" level="INFO">Running command 'ozone sh key get /38878-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:29.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:29.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:13:26.301" endtime="20200423 13:13:29.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:29.877" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:13:29.877" endtime="20200423 13:13:29.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:29.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:29.878" endtime="20200423 13:13:29.878"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:26.300" endtime="20200423 13:13:29.878"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:29.881" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:29.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:29.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:13:29.879" endtime="20200423 13:13:29.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:29.885" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:13:29.884" endtime="20200423 13:13:29.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:29.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:29.885" endtime="20200423 13:13:29.886"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:29.878" endtime="20200423 13:13:29.886"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:29.889" level="INFO">Running command 'ozone sh key get /38878-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:31.984" level="INFO">${rc} = 255</msg>
<msg timestamp="20200423 13:13:31.984" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200423 13:13:29.887" endtime="20200423 13:13:31.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:31.986" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200423 13:13:31.985" endtime="20200423 13:13:31.986"></status>
</kw>
<msg timestamp="20200423 13:13:31.986" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200423 13:13:29.886" endtime="20200423 13:13:31.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:31.986" endtime="20200423 13:13:31.986"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:31.989" level="INFO">Running command 'ozone sh key get --force /38878-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:35.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:35.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:13:31.987" endtime="20200423 13:13:35.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:35.467" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:13:35.465" endtime="20200423 13:13:35.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:35.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:35.467" endtime="20200423 13:13:35.468"></status>
</kw>
<msg timestamp="20200423 13:13:35.468" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200423 13:13:31.987" endtime="20200423 13:13:35.468"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:35.469" endtime="20200423 13:13:35.469"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:35.473" level="INFO">Running command 'ozone sh key info /38878-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:37.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:37.620" level="INFO">${output} = {
  "volumeName": "38878-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-23T13:13:24.412Z",
  "modificationTime": "2020-04-23T13:13:25.937Z",
  "...</msg>
<status status="PASS" starttime="20200423 13:13:35.471" endtime="20200423 13:13:37.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:37.621" level="INFO">{
  "volumeName": "38878-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-23T13:13:24.412Z",
  "modificationTime": "2020-04-23T13:13:25.937Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104048073402679420,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200423 13:13:37.621" endtime="20200423 13:13:37.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:37.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:37.622" endtime="20200423 13:13:37.622"></status>
</kw>
<msg timestamp="20200423 13:13:37.623" level="INFO">${result} = {
  "volumeName": "38878-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-23T13:13:24.412Z",
  "modificationTime": "2020-04-23T13:13:25.937Z",
  "...</msg>
<status status="PASS" starttime="20200423 13:13:35.469" endtime="20200423 13:13:37.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:37.623" endtime="20200423 13:13:37.624"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:37.627" level="INFO">Running command 'ozone debug chunkinfo /38878-rpcwoscheme/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:41.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:41.096" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/6878818a-09ca-489c-b29e-1d224cceb47b/current/containerDir0/1/chunks/104048073402679424_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200423 13:13:37.625" endtime="20200423 13:13:41.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:41.097" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/6878818a-09ca-489c-b29e-1d224cceb47b/current/containerDir0/1/chunks/104048073402679424_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.3",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    }
  ],
  "pipelineID": "1049a209-37e6-4f8d-ad14-e8e068562229"
}</msg>
<status status="PASS" starttime="20200423 13:13:41.096" endtime="20200423 13:13:41.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:41.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:41.097" endtime="20200423 13:13:41.098"></status>
</kw>
<msg timestamp="20200423 13:13:41.098" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/6878818a-09ca-489c-b29e-1d224cceb47b/current/containerDir0/1/chunks/104048073402679424_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200423 13:13:37.624" endtime="20200423 13:13:41.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:41.098" endtime="20200423 13:13:41.098"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:41.101" level="INFO">Running command 'ozone sh key list /38878-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:43.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:43.221" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200423 13:13:41.099" endtime="20200423 13:13:43.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:43.222" level="INFO">key1</msg>
<status status="PASS" starttime="20200423 13:13:43.221" endtime="20200423 13:13:43.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:43.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:43.222" endtime="20200423 13:13:43.223"></status>
</kw>
<msg timestamp="20200423 13:13:43.223" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200423 13:13:41.098" endtime="20200423 13:13:43.223"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:43.224" endtime="20200423 13:13:43.224"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:43.227" level="INFO">Running command 'ozone sh key rename /38878-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:45.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:45.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:13:43.225" endtime="20200423 13:13:45.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:45.071" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:13:45.071" endtime="20200423 13:13:45.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:45.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:45.072" endtime="20200423 13:13:45.072"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:43.224" endtime="20200423 13:13:45.072"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:45.076" level="INFO">Running command 'ozone sh key list /38878-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:47.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:47.160" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200423 13:13:45.073" endtime="20200423 13:13:47.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:47.162" level="INFO">key2</msg>
<status status="PASS" starttime="20200423 13:13:47.161" endtime="20200423 13:13:47.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:47.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:47.162" endtime="20200423 13:13:47.162"></status>
</kw>
<msg timestamp="20200423 13:13:47.163" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200423 13:13:45.072" endtime="20200423 13:13:47.163"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200423 13:13:47.163" endtime="20200423 13:13:47.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:47.167" level="INFO">Running command 'ozone sh key delete /38878-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:48.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:48.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:13:47.164" endtime="20200423 13:13:48.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:48.970" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:13:48.970" endtime="20200423 13:13:48.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:48.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:48.971" endtime="20200423 13:13:48.971"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:47.163" endtime="20200423 13:13:48.971"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:22.502" endtime="20200423 13:13:48.971"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:22.502" endtime="20200423 13:13:48.972"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:48.974" level="INFO">Running command 'ozone sh bucket delete /38878-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:50.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:50.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200423 13:13:48.972" endtime="20200423 13:13:50.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:50.772" level="INFO"></msg>
<status status="PASS" starttime="20200423 13:13:50.770" endtime="20200423 13:13:50.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:50.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:50.772" endtime="20200423 13:13:50.773"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:48.972" endtime="20200423 13:13:50.773"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:13:50.777" level="INFO">Running command 'ozone sh volume delete /38878-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:13:52.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:13:52.678" level="INFO">${output} = Volume 38878-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200423 13:13:50.774" endtime="20200423 13:13:52.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:13:52.679" level="INFO">Volume 38878-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200423 13:13:52.679" endtime="20200423 13:13:52.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:13:52.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:13:52.680" endtime="20200423 13:13:52.680"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:50.773" endtime="20200423 13:13:52.681"></status>
</kw>
<status status="PASS" starttime="20200423 13:13:03.418" endtime="20200423 13:13:52.681"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200423 13:13:03.417" endtime="20200423 13:13:52.681" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200423 13:10:30.065" endtime="20200423 13:13:52.683"></status>
</suite>
<status status="PASS" starttime="20200423 13:09:20.966" endtime="20200423 13:13:52.687"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
