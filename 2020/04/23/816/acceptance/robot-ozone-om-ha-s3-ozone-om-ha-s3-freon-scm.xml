<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200423 13:04:44.218" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:04:44.291" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:04:51.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:04:51.915" level="INFO">${output} = 2020-04-23 13:04:45,358 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:04:45,568 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:04:44.284" endtime="20200423 13:04:51.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:04:51.916" level="INFO">2020-04-23 13:04:45,358 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:04:45,568 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-23 13:04:45,569 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-23 13:04:46,543 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-23 13:04:46,544 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-23 13:04:46,544 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-23 13:04:46,544 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-23 13:04:46,544 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-23 13:04:46,544 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-23 13:04:46,544 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-23 13:04:46,546 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-23 13:04:46,555 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:04:46,584 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-46091, with hadoop as owner.
2020-04-23 13:04:46,624 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-46091/bucket-0-72584, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:04:47,246 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-23 13:04:47,555 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,059
Average Time spent in bucket creation: 00:00:00,054
Average Time spent in key creation: 00:00:00,069
Average Time spent in key write: 00:00:00,704
Total bytes written: 10240
Total Execution time: 00:00:05,669
***************************************************</msg>
<status status="PASS" starttime="20200423 13:04:51.916" endtime="20200423 13:04:51.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:04:51.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:04:51.917" endtime="20200423 13:04:51.917"></status>
</kw>
<msg timestamp="20200423 13:04:51.917" level="INFO">${result} = 2020-04-23 13:04:45,358 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:04:45,568 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:04:44.284" endtime="20200423 13:04:51.918"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200423 13:04:51.918" endtime="20200423 13:04:51.919"></status>
</kw>
<status status="PASS" starttime="20200423 13:04:51.918" endtime="20200423 13:04:51.919"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200423 13:04:44.283" endtime="20200423 13:04:51.919" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:04:51.924" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:04:56.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:04:56.919" level="INFO">${output} = 2020-04-23 13:04:53,002 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:04:53,183 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:04:51.921" endtime="20200423 13:04:56.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:04:56.920" level="INFO">2020-04-23 13:04:53,002 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:04:53,183 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-23 13:04:53,183 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-23 13:04:53,536 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zoulgnbjie
2020-04-23 13:04:53,560 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:04:54,257 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-23 13:04:54,301 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:04:54,561 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:04:54,880 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-23 13:04:55,561 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:04:56,562 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-23 13:04:56,593 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1479.848834, max=1479.848834, mean=1479.848834, stddev=0.0, median=1479.848834, p75=1479.848834, p95=1479.848834, p98=1479.848834, p99=1479.848834, p999=1479.848834, mean_rate=0.44459234352142324, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-23 13:04:56,593 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-23 13:04:56,594 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-23 13:04:56,594 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200423 13:04:56.919" endtime="20200423 13:04:56.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:04:56.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:04:56.921" endtime="20200423 13:04:56.921"></status>
</kw>
<msg timestamp="20200423 13:04:56.921" level="INFO">${result} = 2020-04-23 13:04:53,002 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:04:53,183 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:04:51.920" endtime="20200423 13:04:56.922"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200423 13:04:56.922" endtime="20200423 13:04:56.923"></status>
</kw>
<status status="PASS" starttime="20200423 13:04:56.922" endtime="20200423 13:04:56.923"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200423 13:04:51.920" endtime="20200423 13:04:56.923" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:04:56.927" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:05:00.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:05:00.281" level="INFO">${output} = 2020-04-23 13:04:58,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:04:58,272 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:04:56.925" endtime="20200423 13:05:00.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:05:00.283" level="INFO">2020-04-23 13:04:58,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:04:58,272 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-23 13:04:58,273 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-23 13:04:58,557 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xgkblslbgh
2020-04-23 13:04:58,573 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:04:59,576 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-23 13:05:00,253 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=71.669746, max=71.669746, mean=71.669746, stddev=0.0, median=71.669746, p75=71.669746, p95=71.669746, p98=71.669746, p99=71.669746, p999=71.669746, mean_rate=0.975227284325385, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-23 13:05:00,254 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-23 13:05:00,255 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-23 13:05:00,255 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200423 13:05:00.281" endtime="20200423 13:05:00.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:05:00.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:05:00.283" endtime="20200423 13:05:00.284"></status>
</kw>
<msg timestamp="20200423 13:05:00.284" level="INFO">${result} = 2020-04-23 13:04:58,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:04:58,272 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:04:56.924" endtime="20200423 13:05:00.284"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200423 13:05:00.285" endtime="20200423 13:05:00.285"></status>
</kw>
<status status="PASS" starttime="20200423 13:05:00.284" endtime="20200423 13:05:00.285"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200423 13:04:56.924" endtime="20200423 13:05:00.285" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:05:00.290" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:05:03.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:05:03.484" level="INFO">${output} = 2020-04-23 13:05:01,276 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:05:01,483 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:05:00.288" endtime="20200423 13:05:03.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:05:03.485" level="INFO">2020-04-23 13:05:01,276 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:05:01,483 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-23 13:05:01,484 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-23 13:05:01,768 [main] INFO freon.BaseFreonGenerator: Executing test with prefix fanxgalptf
2020-04-23 13:05:01,782 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:05:02,790 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-23 13:05:03,473 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=24.48375, max=24.48375, mean=24.48375, stddev=0.0, median=24.48375, p75=24.48375, p95=24.48375, p98=24.48375, p99=24.48375, p999=24.48375, mean_rate=0.9899788862550027, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-23 13:05:03,474 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-23 13:05:03,474 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-23 13:05:03,474 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200423 13:05:03.484" endtime="20200423 13:05:03.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:05:03.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:05:03.485" endtime="20200423 13:05:03.486"></status>
</kw>
<msg timestamp="20200423 13:05:03.486" level="INFO">${result} = 2020-04-23 13:05:01,276 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:05:01,483 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:05:00.287" endtime="20200423 13:05:03.486"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200423 13:05:03.487" endtime="20200423 13:05:03.488"></status>
</kw>
<status status="PASS" starttime="20200423 13:05:03.486" endtime="20200423 13:05:03.488"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200423 13:05:00.286" endtime="20200423 13:05:03.489" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200423 13:04:44.255" endtime="20200423 13:05:03.496"></status>
</suite>
<status status="PASS" starttime="20200423 13:04:44.219" endtime="20200423 13:05:03.499"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
