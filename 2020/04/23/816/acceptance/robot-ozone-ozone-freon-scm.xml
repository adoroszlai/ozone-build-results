<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200423 13:19:25.975" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:19:26.040" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:19:33.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:19:33.576" level="INFO">${output} = 2020-04-23 13:19:27,105 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:27,308 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:19:26.034" endtime="20200423 13:19:33.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:19:33.577" level="INFO">2020-04-23 13:19:27,105 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:27,308 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-23 13:19:27,309 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-23 13:19:28,211 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-23 13:19:28,212 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-23 13:19:28,213 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-23 13:19:28,213 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-23 13:19:28,213 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-23 13:19:28,213 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-23 13:19:28,213 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-23 13:19:28,215 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-23 13:19:28,225 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:19:28,265 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-36702, with hadoop as owner.
2020-04-23 13:19:28,283 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-36702/bucket-0-09774, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:19:28,818 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-23 13:19:29,227 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,050
Average Time spent in bucket creation: 00:00:00,032
Average Time spent in key creation: 00:00:00,045
Average Time spent in key write: 00:00:00,629
Total bytes written: 10240
Total Execution time: 00:00:05,661
***************************************************</msg>
<status status="PASS" starttime="20200423 13:19:33.576" endtime="20200423 13:19:33.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:19:33.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:19:33.578" endtime="20200423 13:19:33.578"></status>
</kw>
<msg timestamp="20200423 13:19:33.579" level="INFO">${result} = 2020-04-23 13:19:27,105 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:27,308 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:19:26.034" endtime="20200423 13:19:33.579"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200423 13:19:33.580" endtime="20200423 13:19:33.580"></status>
</kw>
<status status="PASS" starttime="20200423 13:19:33.579" endtime="20200423 13:19:33.580"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200423 13:19:26.033" endtime="20200423 13:19:33.580" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:19:33.585" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:19:38.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:19:38.469" level="INFO">${output} = 2020-04-23 13:19:34,571 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:34,747 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:19:33.582" endtime="20200423 13:19:38.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:19:38.470" level="INFO">2020-04-23 13:19:34,571 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:34,747 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-23 13:19:34,747 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-23 13:19:35,081 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7jkwzprk1x
2020-04-23 13:19:35,093 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:19:35,714 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-23 13:19:35,730 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-23 13:19:36,101 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:19:36,208 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-23 13:19:37,107 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:19:38,108 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-23 13:19:38,140 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1369.370314, max=1369.370314, mean=1369.370314, stddev=0.0, median=1369.370314, p75=1369.370314, p95=1369.370314, p98=1369.370314, p99=1369.370314, p999=1369.370314, mean_rate=0.417670093658417, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-23 13:19:38,141 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-23 13:19:38,144 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-23 13:19:38,145 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200423 13:19:38.470" endtime="20200423 13:19:38.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:19:38.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:19:38.471" endtime="20200423 13:19:38.471"></status>
</kw>
<msg timestamp="20200423 13:19:38.472" level="INFO">${result} = 2020-04-23 13:19:34,571 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:34,747 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:19:33.582" endtime="20200423 13:19:38.472"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200423 13:19:38.472" endtime="20200423 13:19:38.473"></status>
</kw>
<status status="PASS" starttime="20200423 13:19:38.472" endtime="20200423 13:19:38.473"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200423 13:19:33.581" endtime="20200423 13:19:38.473" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:19:38.477" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:19:41.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:19:41.758" level="INFO">${output} = 2020-04-23 13:19:39,483 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:39,669 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:19:38.475" endtime="20200423 13:19:41.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:19:41.759" level="INFO">2020-04-23 13:19:39,483 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:39,669 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-23 13:19:39,669 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-23 13:19:40,017 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hwnfbehx16
2020-04-23 13:19:40,033 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:19:41,045 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-23 13:19:41,747 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=31.024934, max=31.024934, mean=31.024934, stddev=0.0, median=31.024934, p75=31.024934, p95=31.024934, p98=31.024934, p99=31.024934, p999=31.024934, mean_rate=0.9647545785332434, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-23 13:19:41,749 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-23 13:19:41,749 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-23 13:19:41,749 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200423 13:19:41.758" endtime="20200423 13:19:41.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:19:41.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:19:41.759" endtime="20200423 13:19:41.760"></status>
</kw>
<msg timestamp="20200423 13:19:41.760" level="INFO">${result} = 2020-04-23 13:19:39,483 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:39,669 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:19:38.474" endtime="20200423 13:19:41.760"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200423 13:19:41.761" endtime="20200423 13:19:41.761"></status>
</kw>
<status status="PASS" starttime="20200423 13:19:41.761" endtime="20200423 13:19:41.762"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200423 13:19:38.474" endtime="20200423 13:19:41.762" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200423 13:19:41.766" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200423 13:19:44.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200423 13:19:44.896" level="INFO">${output} = 2020-04-23 13:19:42,813 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:42,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:19:41.763" endtime="20200423 13:19:44.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200423 13:19:44.897" level="INFO">2020-04-23 13:19:42,813 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:42,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-23 13:19:42,976 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-23 13:19:43,282 [main] INFO freon.BaseFreonGenerator: Executing test with prefix p1tb5gr6ax
2020-04-23 13:19:43,303 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-23 13:19:44,305 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-23 13:19:44,872 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=6.643507, max=6.643507, mean=6.643507, stddev=0.0, median=6.643507, p75=6.643507, p95=6.643507, p98=6.643507, p99=6.643507, p999=6.643507, mean_rate=0.9909635893300539, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-23 13:19:44,877 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-23 13:19:44,877 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-23 13:19:44,877 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200423 13:19:44.896" endtime="20200423 13:19:44.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200423 13:19:44.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200423 13:19:44.898" endtime="20200423 13:19:44.898"></status>
</kw>
<msg timestamp="20200423 13:19:44.899" level="INFO">${result} = 2020-04-23 13:19:42,813 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-23 13:19:42,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200423 13:19:41.763" endtime="20200423 13:19:44.899"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200423 13:19:44.899" endtime="20200423 13:19:44.900"></status>
</kw>
<status status="PASS" starttime="20200423 13:19:44.899" endtime="20200423 13:19:44.900"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200423 13:19:41.762" endtime="20200423 13:19:44.900" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200423 13:19:26.008" endtime="20200423 13:19:44.901"></status>
</suite>
<status status="PASS" starttime="20200423 13:19:25.975" endtime="20200423 13:19:44.904"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
