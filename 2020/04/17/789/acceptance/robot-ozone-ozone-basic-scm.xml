<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200417 18:07:27.975" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200417 18:07:28.041" endtime="20200417 18:07:28.041"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:07:28.046" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:07:28.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:07:28.126" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 17 Apr 2020 18:07:28 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Apr 2020 16:44:44 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200417 18:07:28.042" endtime="20200417 18:07:28.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:07:28.127" level="INFO">HTTP/1.1 200 OK
Date: Fri, 17 Apr 2020 18:07:28 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Apr 2020 16:44:44 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200417 18:07:28.126" endtime="20200417 18:07:28.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:07:28.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:07:28.127" endtime="20200417 18:07:28.128"></status>
</kw>
<msg timestamp="20200417 18:07:28.128" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 17 Apr 2020 18:07:28 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Apr 2020 16:44:44 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200417 18:07:28.041" endtime="20200417 18:07:28.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200417 18:07:28.128" endtime="20200417 18:07:28.129"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200417 18:07:28.040" endtime="20200417 18:07:28.129" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 18:07:28.130" endtime="20200417 18:07:28.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:07:28.134" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:09:05.849" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 18:09:05.849" level="INFO">${output} = 2020-04-17 18:07:29,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 18:07:29,210 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200417 18:07:28.131" endtime="20200417 18:09:05.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:09:05.850" level="INFO">2020-04-17 18:07:29,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 18:07:29,210 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-17 18:07:29,210 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-17 18:07:30,416 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-17 18:07:30,417 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-17 18:07:30,417 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-17 18:07:30,417 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-17 18:07:30,417 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-17 18:07:30,417 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-17 18:07:30,417 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-17 18:07:30,423 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-17 18:07:30,427 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-17 18:07:30,429 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-17 18:07:30,451 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-83726, with hadoop as owner.
2020-04-17 18:07:30,557 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-35564, with hadoop as owner.
2020-04-17 18:07:30,563 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-98374, with hadoop as owner.
2020-04-17 18:07:30,568 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-75024, with hadoop as owner.
2020-04-17 18:07:30,573 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-42070, with hadoop as owner.
2020-04-17 18:07:30,580 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83726/bucket-0-62164, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,608 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-35564/bucket-0-77327, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,619 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-98374/bucket-0-97498, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,633 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-75024/bucket-0-63337, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,640 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-42070/bucket-0-23244, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,647 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83726/bucket-1-13549, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,652 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-35564/bucket-1-03373, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,657 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-98374/bucket-1-31929, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,662 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-75024/bucket-1-92958, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,689 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-42070/bucket-1-41152, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,707 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83726/bucket-2-99125, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,720 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-35564/bucket-2-23324, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,727 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-98374/bucket-2-21934, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,734 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-75024/bucket-2-60712, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,744 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-42070/bucket-2-81936, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,755 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83726/bucket-3-03480, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,763 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-35564/bucket-3-57609, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,769 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-98374/bucket-3-19633, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,773 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-75024/bucket-3-46529, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,780 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-42070/bucket-3-62749, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,784 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83726/bucket-4-38717, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,788 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-35564/bucket-4-90935, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,792 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-98374/bucket-4-69491, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,796 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-75024/bucket-4-12700, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:30,801 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-42070/bucket-4-23853, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:07:31,259 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-17 18:07:31,433 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:32,439 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:33,440 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:34,441 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:35,441 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:36,442 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:37,442 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:38,443 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:39,443 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:40,444 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:41,445 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:42,445 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:43,446 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:44,446 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:45,447 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:46,448 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:47,448 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:48,449 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:49,450 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:50,450 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:51,451 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:52,451 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:53,452 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:54,452 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:55,453 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:56,453 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:57,454 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:58,454 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:07:59,455 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:00,455 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:01,456 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:02,456 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:03,457 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:04,457 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:05,458 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:06,459 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:07,459 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:08,460 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:09,460 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:10,461 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:11,461 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:12,462 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:13,462 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:14,463 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:15,463 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:16,464 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:17,464 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:18,465 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:19,465 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:20,466 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:21,466 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:22,467 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:23,467 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:24,468 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:25,468 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:26,469 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:27,469 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:28,470 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:29,470 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:30,471 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:31,471 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:32,472 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:33,472 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:34,472 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:35,473 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:36,474 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:37,474 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:38,475 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:39,475 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:40,476 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:41,476 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:42,477 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:43,477 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:44,478 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:45,478 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:46,479 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:47,479 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:48,480 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:49,480 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:50,481 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:51,481 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:52,486 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:53,490 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:54,491 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:55,491 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:56,492 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:57,492 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:58,493 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:08:59,493 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:09:00,494 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:09:01,494 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:09:02,495 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:09:03,495 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:09:04,496 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:09:04,681 [pool-2-thread-1] WARN io.KeyOutputStream: Encountered exception java.io.IOException: Unexpected Storage Container Exception: java.util.concurrent.CompletionException: java.util.concurrent.CompletionException: org.apache.ratis.protocol.GroupMismatchException: ff4cc633-8b62-41a9-9863-323a85cb2c99: group-E8485256D51E not found. on the pipeline Pipeline[ Id: 10d4b37a-804a-48b1-9b2f-e8485256d51e, Nodes: ff4cc633-8b62-41a9-9863-323a85cb2c99{ip: 172.21.0.5, host: ozone_datanode_3.ozone_default, networkLocation: /default-rack, certSerialId: null}98d34236-67d9-42a2-9b5b-4178e93fc9b2{ip: 172.21.0.4, host: ozone_datanode_1.ozone_default, networkLocation: /default-rack, certSerialId: null}a94ad4e5-5dd1-4fa2-b699-6499fcd1c010{ip: 172.21.0.8, host: ozone_datanode_2.ozone_default, networkLocation: /default-rack, certSerialId: null}, Type:RATIS, Factor:THREE, State:OPEN, leaderId:98d34236-67d9-42a2-9b5b-4178e93fc9b2, CreationTimestamp2020-04-17T18:07:13.777Z]. The last committed block length is 0, uncommitted data length is 10240 retry count 0
2020-04-17 18:09:04,682 [pool-2-thread-1] INFO io.BlockOutputStreamEntryPool: Allocating block with ExcludeList {datanodes = [], containerIds = [], pipelineIds = [PipelineID=10d4b37a-804a-48b1-9b2f-e8485256d51e]}
2020-04-17 18:09:04,713 [pool-2-thread-1] ERROR freon.RandomKeyGenerator: Exception while adding key: key-0-83149 in bucket: bucket-0-62164 of volume: vol-0-83726.
java.io.IOException: INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleWrite(KeyOutputStream.java:229)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleRetry(KeyOutputStream.java:402)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleException(KeyOutputStream.java:347)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleFlushOrClose(KeyOutputStream.java:458)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.close(KeyOutputStream.java:509)
	at org.apache.hadoop.ozone.client.io.OzoneOutputStream.close(OzoneOutputStream.java:60)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.createKey(RandomKeyGenerator.java:720)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.access$1100(RandomKeyGenerator.java:88)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator$ObjectCreator.run(RandomKeyGenerator.java:615)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.handleError(OzoneManagerProtocolClientSideTranslatorPB.java:816)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.allocateBlock(OzoneManagerProtocolClientSideTranslatorPB.java:848)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.hdds.tracing.TraceAllMethod.invoke(TraceAllMethod.java:71)
	at com.sun.proxy.$Proxy22.allocateBlock(Unknown Source)
	at org.apache.hadoop.ozone.client.io.BlockOutputStreamEntryPool.allocateNewBlock(BlockOutputStreamEntryPool.java:281)
	at org.apache.hadoop.ozone.client.io.BlockOutputStreamEntryPool.allocateBlockIfNeeded(BlockOutputStreamEntryPool.java:327)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleWrite(KeyOutputStream.java:208)
	... 11 more
2020-04-17 18:09:05,496 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)
java.io.IOException: INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks

***************************************************
Status: Failed
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 1
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,125
Average Time spent in bucket creation: 00:00:00,140
Average Time spent in key creation: 00:00:00,098
Average Time spent in key write: 00:00:00,506
Total bytes written: 10240
Total number of writes validated: 0
Writes validated: 0.0 %
Successful validation: 0
Unsuccessful validation: 0
Total Execution time: 00:01:36,056
***************************************************</msg>
<status status="PASS" starttime="20200417 18:09:05.849" endtime="20200417 18:09:05.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:09:05.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200417 18:09:05.852" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200417 18:09:05.851" endtime="20200417 18:09:05.852"></status>
</kw>
<status status="FAIL" starttime="20200417 18:07:28.130" endtime="20200417 18:09:05.852"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" starttime="20200417 18:07:28.129" endtime="20200417 18:09:05.852" critical="yes">255 != 0</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20200417 18:07:28.008" endtime="20200417 18:09:05.854"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200417 18:09:05.863" level="INFO">${random} = 62190</msg>
<status status="PASS" starttime="20200417 18:09:05.862" endtime="20200417 18:09:05.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200417 18:09:05.864" level="INFO">${prefix} = 62190</msg>
<status status="PASS" starttime="20200417 18:09:05.863" endtime="20200417 18:09:05.864"></status>
</kw>
<status status="PASS" starttime="20200417 18:09:05.862" endtime="20200417 18:09:05.864"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 18:09:05.864" endtime="20200417 18:09:05.865"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:09:05.868" level="INFO">Running command 'ozone sh volume info o3://om:9862/62190-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:09:07.634" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 18:09:07.634" level="INFO">${output} = VOLUME_NOT_FOUND Volume 62190-rpcwoport is not found</msg>
<status status="PASS" starttime="20200417 18:09:05.866" endtime="20200417 18:09:07.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:09:07.635" level="INFO">VOLUME_NOT_FOUND Volume 62190-rpcwoport is not found</msg>
<status status="PASS" starttime="20200417 18:09:07.634" endtime="20200417 18:09:07.635"></status>
</kw>
<msg timestamp="20200417 18:09:07.635" level="INFO">${result} = VOLUME_NOT_FOUND Volume 62190-rpcwoport is not found</msg>
<status status="PASS" starttime="20200417 18:09:05.865" endtime="20200417 18:09:07.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200417 18:09:07.636" endtime="20200417 18:09:07.636"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:09:07.640" level="INFO">Running command 'ozone sh volume create o3://om:9862/62190-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:09:09.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:09:09.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 18:09:07.637" endtime="20200417 18:09:09.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:09:09.498" level="INFO"></msg>
<status status="PASS" starttime="20200417 18:09:09.497" endtime="20200417 18:09:09.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:09:09.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:09:09.498" endtime="20200417 18:09:09.499"></status>
</kw>
<msg timestamp="20200417 18:09:09.499" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200417 18:09:07.636" endtime="20200417 18:09:09.499"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200417 18:09:09.499" endtime="20200417 18:09:09.500"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:09:09.503" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="62190-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:09:11.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:09:11.883" level="INFO">${output} = {
  "metadata": {},
  "name": "62190-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:09:09.455Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 18:09:09.500" endtime="20200417 18:09:11.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:09:11.884" level="INFO">{
  "metadata": {},
  "name": "62190-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:09:09.455Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 18:09:11.883" endtime="20200417 18:09:11.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:09:11.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:09:11.884" endtime="20200417 18:09:11.885"></status>
</kw>
<msg timestamp="20200417 18:09:11.885" level="INFO">${result} = {
  "metadata": {},
  "name": "62190-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:09:09.455Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 18:09:09.500" endtime="20200417 18:09:11.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 18:09:11.885" endtime="20200417 18:09:11.886"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:09:11.888" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="62190-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:09:14.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:09:14.042" level="INFO">${output} = {
  "metadata": {},
  "name": "62190-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:09:09.455Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 18:09:11.886" endtime="20200417 18:09:14.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:09:14.044" level="INFO">{
  "metadata": {},
  "name": "62190-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:09:09.455Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 18:09:14.043" endtime="20200417 18:09:14.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:09:14.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:09:14.044" endtime="20200417 18:09:14.044"></status>
</kw>
<msg timestamp="20200417 18:09:14.045" level="INFO">${result} = {
  "metadata": {},
  "name": "62190-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:09:09.455Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 18:09:11.886" endtime="20200417 18:09:14.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 18:09:14.045" endtime="20200417 18:09:14.045"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:09:14.050" level="INFO">Running command 'ozone sh volume update o3://om:9862/62190-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:09:16.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:09:16.010" level="INFO">${output} = {
  "metadata" : { },
  "name" : "62190-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T18:09:09.455Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200417 18:09:14.048" endtime="20200417 18:09:16.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:09:16.011" level="INFO">{
  "metadata" : { },
  "name" : "62190-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T18:09:09.455Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200417 18:09:16.010" endtime="20200417 18:09:16.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:09:16.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:09:16.011" endtime="20200417 18:09:16.012"></status>
</kw>
<status status="PASS" starttime="20200417 18:09:14.045" endtime="20200417 18:09:16.012"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:09:16.015" level="INFO">Running command 'ozone sh volume info o3://om:9862/62190-rpcwoport | jq -r '. | select(.name=="62190-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:09:17.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:09:17.976" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200417 18:09:16.013" endtime="20200417 18:09:17.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:09:17.977" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200417 18:09:17.976" endtime="20200417 18:09:17.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:09:17.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:09:17.977" endtime="20200417 18:09:17.978"></status>
</kw>
<msg timestamp="20200417 18:09:17.978" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200417 18:09:16.012" endtime="20200417 18:09:17.978"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200417 18:09:17.978" endtime="20200417 18:09:17.978"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:09:17.981" level="INFO">Running command 'ozone sh bucket create o3://om:9862/62190-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:09:19.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:09:19.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 18:09:17.979" endtime="20200417 18:09:19.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:09:19.783" level="INFO"></msg>
<status status="PASS" starttime="20200417 18:09:19.782" endtime="20200417 18:09:19.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:09:19.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:09:19.783" endtime="20200417 18:09:19.783"></status>
</kw>
<status status="PASS" starttime="20200417 18:09:17.979" endtime="20200417 18:09:19.784"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:09:19.787" level="INFO">Running command 'ozone sh bucket info o3://om:9862/62190-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:09:21.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:09:21.744" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200417 18:09:19.784" endtime="20200417 18:09:21.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:09:21.745" level="INFO">DISK</msg>
<status status="PASS" starttime="20200417 18:09:21.744" endtime="20200417 18:09:21.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:09:21.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:09:21.746" endtime="20200417 18:09:21.746"></status>
</kw>
<msg timestamp="20200417 18:09:21.747" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200417 18:09:19.784" endtime="20200417 18:09:21.747"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200417 18:09:21.747" endtime="20200417 18:09:21.747"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:09:21.751" level="INFO">Running command 'ozone sh bucket list o3://om:9862/62190-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:09:23.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:09:23.891" level="INFO">${output} = 62190-rpcwoport</msg>
<status status="PASS" starttime="20200417 18:09:21.748" endtime="20200417 18:09:23.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:09:23.892" level="INFO">62190-rpcwoport</msg>
<status status="PASS" starttime="20200417 18:09:23.891" endtime="20200417 18:09:23.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:09:23.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:09:23.892" endtime="20200417 18:09:23.893"></status>
</kw>
<msg timestamp="20200417 18:09:23.893" level="INFO">${result} = 62190-rpcwoport</msg>
<status status="PASS" starttime="20200417 18:09:21.747" endtime="20200417 18:09:23.893"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200417 18:09:23.893" endtime="20200417 18:09:23.894"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:09:23.897" level="INFO">Running command 'ozone sh key put o3://om:9862/62190-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:10:59.504" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 18:10:59.504" level="INFO">${output} = INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 18:09:23.895" endtime="20200417 18:10:59.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:10:59.505" level="INFO">INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 18:10:59.504" endtime="20200417 18:10:59.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:10:59.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200417 18:10:59.506" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200417 18:10:59.505" endtime="20200417 18:10:59.506"></status>
</kw>
<status status="FAIL" starttime="20200417 18:09:23.895" endtime="20200417 18:10:59.507"></status>
</kw>
<status status="FAIL" starttime="20200417 18:09:23.894" endtime="20200417 18:10:59.507"></status>
</kw>
<status status="FAIL" starttime="20200417 18:09:23.894" endtime="20200417 18:10:59.507"></status>
</kw>
<status status="FAIL" starttime="20200417 18:09:05.865" endtime="20200417 18:10:59.508"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 18:09:05.864" endtime="20200417 18:10:59.508" critical="yes">255 != 0</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 18:10:59.510" endtime="20200417 18:10:59.510"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:10:59.514" level="INFO">Running command 'ozone sh volume create o3://om:9862/62190-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:01.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:01.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 18:10:59.511" endtime="20200417 18:11:01.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:01.261" level="INFO"></msg>
<status status="PASS" starttime="20200417 18:11:01.260" endtime="20200417 18:11:01.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:01.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:01.261" endtime="20200417 18:11:01.262"></status>
</kw>
<status status="PASS" starttime="20200417 18:10:59.511" endtime="20200417 18:11:01.262"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:01.265" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62190-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:03.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:03.180" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 18:11:01.262" endtime="20200417 18:11:03.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:03.181" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 18:11:03.181" endtime="20200417 18:11:03.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:03.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:03.182" endtime="20200417 18:11:03.182"></status>
</kw>
<msg timestamp="20200417 18:11:03.182" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 18:11:01.262" endtime="20200417 18:11:03.183"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:03.183" endtime="20200417 18:11:03.184"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:03.186" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/62190-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:05.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:05.149" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200417 18:11:03.184" endtime="20200417 18:11:05.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:05.150" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200417 18:11:05.150" endtime="20200417 18:11:05.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:05.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:05.150" endtime="20200417 18:11:05.151"></status>
</kw>
<msg timestamp="20200417 18:11:05.151" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200417 18:11:03.184" endtime="20200417 18:11:05.151"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:05.155" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62190-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:07.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:07.138" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 18:11:05.152" endtime="20200417 18:11:07.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:07.139" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200417 18:11:07.138" endtime="20200417 18:11:07.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:07.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:07.140" endtime="20200417 18:11:07.140"></status>
</kw>
<msg timestamp="20200417 18:11:07.140" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 18:11:05.151" endtime="20200417 18:11:07.140"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:07.141" endtime="20200417 18:11:07.142"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:07.144" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/62190-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:09.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:09.193" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200417 18:11:07.142" endtime="20200417 18:11:09.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:09.194" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200417 18:11:09.194" endtime="20200417 18:11:09.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:09.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:09.195" endtime="20200417 18:11:09.195"></status>
</kw>
<msg timestamp="20200417 18:11:09.195" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200417 18:11:07.142" endtime="20200417 18:11:09.195"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:09.198" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62190-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:11.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:11.136" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 18:11:09.196" endtime="20200417 18:11:11.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:11.137" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200417 18:11:11.137" endtime="20200417 18:11:11.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:11.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:11.138" endtime="20200417 18:11:11.138"></status>
</kw>
<msg timestamp="20200417 18:11:11.138" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 18:11:09.196" endtime="20200417 18:11:11.138"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:11.139" endtime="20200417 18:11:11.140"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:11.143" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/62190-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:13.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:13.017" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 18:11:11.140" endtime="20200417 18:11:13.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:13.018" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 18:11:13.018" endtime="20200417 18:11:13.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:13.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:13.019" endtime="20200417 18:11:13.019"></status>
</kw>
<msg timestamp="20200417 18:11:13.020" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 18:11:11.140" endtime="20200417 18:11:13.020"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:13.023" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/62190-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:14.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:14.929" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200417 18:11:13.020" endtime="20200417 18:11:14.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:14.930" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 18:11:14.929" endtime="20200417 18:11:14.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:14.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:14.930" endtime="20200417 18:11:14.931"></status>
</kw>
<msg timestamp="20200417 18:11:14.931" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200417 18:11:13.020" endtime="20200417 18:11:14.931"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:14.931" endtime="20200417 18:11:14.932"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:14.932" endtime="20200417 18:11:14.933"></status>
</kw>
<status status="PASS" starttime="20200417 18:10:59.510" endtime="20200417 18:11:14.933"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200417 18:10:59.509" endtime="20200417 18:11:14.933" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:14.934" endtime="20200417 18:11:14.935"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:14.938" level="INFO">Running command 'ozone sh bucket create o3://om:9862/62190-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:16.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:16.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 18:11:14.936" endtime="20200417 18:11:16.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:16.760" level="INFO"></msg>
<status status="PASS" starttime="20200417 18:11:16.759" endtime="20200417 18:11:16.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:16.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:16.760" endtime="20200417 18:11:16.761"></status>
</kw>
<status status="PASS" starttime="20200417 18:11:14.935" endtime="20200417 18:11:16.761"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:16.765" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62190-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:18.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:18.719" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 18:11:16.762" endtime="20200417 18:11:18.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:18.720" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 18:11:18.720" endtime="20200417 18:11:18.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:18.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:18.721" endtime="20200417 18:11:18.721"></status>
</kw>
<msg timestamp="20200417 18:11:18.721" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 18:11:16.761" endtime="20200417 18:11:18.722"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:18.722" endtime="20200417 18:11:18.722"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:18.726" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/62190-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:20.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:20.479" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200417 18:11:18.723" endtime="20200417 18:11:20.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:20.480" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200417 18:11:20.479" endtime="20200417 18:11:20.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:20.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:20.480" endtime="20200417 18:11:20.481"></status>
</kw>
<msg timestamp="20200417 18:11:20.481" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200417 18:11:18.722" endtime="20200417 18:11:20.481"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:20.484" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62190-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:22.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:22.452" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 18:11:20.482" endtime="20200417 18:11:22.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:22.453" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 18:11:22.452" endtime="20200417 18:11:22.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:22.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:22.453" endtime="20200417 18:11:22.454"></status>
</kw>
<msg timestamp="20200417 18:11:22.454" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 18:11:20.481" endtime="20200417 18:11:22.454"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:22.454" endtime="20200417 18:11:22.455"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:22.459" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/62190-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:24.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:24.219" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200417 18:11:22.456" endtime="20200417 18:11:24.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:24.221" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200417 18:11:24.219" endtime="20200417 18:11:24.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:24.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:24.222" endtime="20200417 18:11:24.222"></status>
</kw>
<msg timestamp="20200417 18:11:24.222" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200417 18:11:22.456" endtime="20200417 18:11:24.222"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:24.225" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62190-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:26.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:26.177" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 18:11:24.223" endtime="20200417 18:11:26.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:26.178" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 18:11:26.178" endtime="20200417 18:11:26.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:26.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:26.179" endtime="20200417 18:11:26.179"></status>
</kw>
<msg timestamp="20200417 18:11:26.179" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 18:11:24.223" endtime="20200417 18:11:26.180"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:26.180" endtime="20200417 18:11:26.181"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:26.184" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/62190-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:27.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:27.977" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 18:11:26.181" endtime="20200417 18:11:27.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:27.978" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 18:11:27.977" endtime="20200417 18:11:27.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:27.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:27.978" endtime="20200417 18:11:27.979"></status>
</kw>
<msg timestamp="20200417 18:11:27.979" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 18:11:26.181" endtime="20200417 18:11:27.979"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:27.981" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/62190-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:11:29.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:11:29.925" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200417 18:11:27.980" endtime="20200417 18:11:29.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:11:29.927" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 18:11:29.926" endtime="20200417 18:11:29.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:11:29.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:11:29.927" endtime="20200417 18:11:29.927"></status>
</kw>
<msg timestamp="20200417 18:11:29.928" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200417 18:11:27.979" endtime="20200417 18:11:29.928"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:29.928" endtime="20200417 18:11:29.928"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:29.929" endtime="20200417 18:11:29.929"></status>
</kw>
<status status="PASS" starttime="20200417 18:11:14.935" endtime="20200417 18:11:29.929"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200417 18:11:14.934" endtime="20200417 18:11:29.929" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 18:11:29.931" endtime="20200417 18:11:29.931"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:11:29.935" level="INFO">Running command 'ozone sh key put o3://om:9862/62190-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:13:05.567" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 18:13:05.567" level="INFO">${output} = INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 18:11:29.933" endtime="20200417 18:13:05.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:13:05.569" level="INFO">INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 18:13:05.568" endtime="20200417 18:13:05.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:13:05.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200417 18:13:05.571" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200417 18:13:05.569" endtime="20200417 18:13:05.571"></status>
</kw>
<status status="FAIL" starttime="20200417 18:11:29.932" endtime="20200417 18:13:05.571"></status>
</kw>
<status status="FAIL" starttime="20200417 18:11:29.931" endtime="20200417 18:13:05.571"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 18:11:29.930" endtime="20200417 18:13:05.572" critical="yes">255 != 0</status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 18:13:05.573" endtime="20200417 18:13:05.574"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:13:05.578" level="INFO">Running command 'ozone sh volume info o3:///62190-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:13:07.385" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 18:13:07.385" level="INFO">${output} = VOLUME_NOT_FOUND Volume 62190-rpcwport is not found</msg>
<status status="PASS" starttime="20200417 18:13:05.575" endtime="20200417 18:13:07.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:13:07.386" level="INFO">VOLUME_NOT_FOUND Volume 62190-rpcwport is not found</msg>
<status status="PASS" starttime="20200417 18:13:07.386" endtime="20200417 18:13:07.387"></status>
</kw>
<msg timestamp="20200417 18:13:07.387" level="INFO">${result} = VOLUME_NOT_FOUND Volume 62190-rpcwport is not found</msg>
<status status="PASS" starttime="20200417 18:13:05.575" endtime="20200417 18:13:07.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200417 18:13:07.387" endtime="20200417 18:13:07.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:13:07.390" level="INFO">Running command 'ozone sh volume create o3:///62190-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:13:09.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:13:09.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 18:13:07.388" endtime="20200417 18:13:09.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:13:09.094" level="INFO"></msg>
<status status="PASS" starttime="20200417 18:13:09.093" endtime="20200417 18:13:09.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:13:09.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:13:09.094" endtime="20200417 18:13:09.095"></status>
</kw>
<msg timestamp="20200417 18:13:09.095" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200417 18:13:07.388" endtime="20200417 18:13:09.095"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200417 18:13:09.096" endtime="20200417 18:13:09.096"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:13:09.099" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="62190-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:13:11.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:13:11.165" level="INFO">${output} = {
  "metadata": {},
  "name": "62190-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:13:09.064Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 18:13:09.097" endtime="20200417 18:13:11.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:13:11.166" level="INFO">{
  "metadata": {},
  "name": "62190-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:13:09.064Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 18:13:11.165" endtime="20200417 18:13:11.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:13:11.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:13:11.166" endtime="20200417 18:13:11.167"></status>
</kw>
<msg timestamp="20200417 18:13:11.167" level="INFO">${result} = {
  "metadata": {},
  "name": "62190-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:13:09.064Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 18:13:09.096" endtime="20200417 18:13:11.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 18:13:11.167" endtime="20200417 18:13:11.168"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:13:11.171" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="62190-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:13:13.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:13:13.185" level="INFO">${output} = {
  "metadata": {},
  "name": "62190-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:13:09.064Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 18:13:11.169" endtime="20200417 18:13:13.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:13:13.186" level="INFO">{
  "metadata": {},
  "name": "62190-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:13:09.064Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 18:13:13.186" endtime="20200417 18:13:13.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:13:13.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:13:13.187" endtime="20200417 18:13:13.187"></status>
</kw>
<msg timestamp="20200417 18:13:13.187" level="INFO">${result} = {
  "metadata": {},
  "name": "62190-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:13:09.064Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 18:13:11.168" endtime="20200417 18:13:13.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 18:13:13.188" endtime="20200417 18:13:13.188"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:13:13.191" level="INFO">Running command 'ozone sh volume update o3:///62190-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:13:15.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:13:15.185" level="INFO">${output} = {
  "metadata" : { },
  "name" : "62190-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T18:13:09.064Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200417 18:13:13.189" endtime="20200417 18:13:15.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:13:15.186" level="INFO">{
  "metadata" : { },
  "name" : "62190-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T18:13:09.064Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200417 18:13:15.185" endtime="20200417 18:13:15.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:13:15.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:13:15.186" endtime="20200417 18:13:15.187"></status>
</kw>
<status status="PASS" starttime="20200417 18:13:13.188" endtime="20200417 18:13:15.187"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:13:15.191" level="INFO">Running command 'ozone sh volume info o3:///62190-rpcwport | jq -r '. | select(.name=="62190-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:13:17.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:13:17.147" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200417 18:13:15.188" endtime="20200417 18:13:17.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:13:17.148" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200417 18:13:17.148" endtime="20200417 18:13:17.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:13:17.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:13:17.149" endtime="20200417 18:13:17.149"></status>
</kw>
<msg timestamp="20200417 18:13:17.149" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200417 18:13:15.187" endtime="20200417 18:13:17.149"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200417 18:13:17.149" endtime="20200417 18:13:17.150"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:13:17.154" level="INFO">Running command 'ozone sh bucket create o3:///62190-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:13:18.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:13:18.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 18:13:17.151" endtime="20200417 18:13:18.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:13:18.990" level="INFO"></msg>
<status status="PASS" starttime="20200417 18:13:18.989" endtime="20200417 18:13:18.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:13:18.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:13:18.990" endtime="20200417 18:13:18.990"></status>
</kw>
<status status="PASS" starttime="20200417 18:13:17.150" endtime="20200417 18:13:18.991"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:13:18.996" level="INFO">Running command 'ozone sh bucket info o3:///62190-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:13:21.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:13:21.062" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200417 18:13:18.991" endtime="20200417 18:13:21.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:13:21.063" level="INFO">DISK</msg>
<status status="PASS" starttime="20200417 18:13:21.062" endtime="20200417 18:13:21.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:13:21.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:13:21.064" endtime="20200417 18:13:21.064"></status>
</kw>
<msg timestamp="20200417 18:13:21.064" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200417 18:13:18.991" endtime="20200417 18:13:21.064"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200417 18:13:21.065" endtime="20200417 18:13:21.065"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:13:21.068" level="INFO">Running command 'ozone sh bucket list o3:///62190-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:13:23.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:13:23.062" level="INFO">${output} = 62190-rpcwport</msg>
<status status="PASS" starttime="20200417 18:13:21.066" endtime="20200417 18:13:23.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:13:23.063" level="INFO">62190-rpcwport</msg>
<status status="PASS" starttime="20200417 18:13:23.062" endtime="20200417 18:13:23.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:13:23.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:13:23.063" endtime="20200417 18:13:23.064"></status>
</kw>
<msg timestamp="20200417 18:13:23.064" level="INFO">${result} = 62190-rpcwport</msg>
<status status="PASS" starttime="20200417 18:13:21.065" endtime="20200417 18:13:23.064"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200417 18:13:23.064" endtime="20200417 18:13:23.066"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:13:23.070" level="INFO">Running command 'ozone sh key put o3:///62190-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:14:58.625" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 18:14:58.625" level="INFO">${output} = INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 18:13:23.067" endtime="20200417 18:14:58.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:14:58.627" level="INFO">INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 18:14:58.626" endtime="20200417 18:14:58.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:14:58.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200417 18:14:58.628" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200417 18:14:58.627" endtime="20200417 18:14:58.628"></status>
</kw>
<status status="FAIL" starttime="20200417 18:13:23.067" endtime="20200417 18:14:58.628"></status>
</kw>
<status status="FAIL" starttime="20200417 18:13:23.066" endtime="20200417 18:14:58.629"></status>
</kw>
<status status="FAIL" starttime="20200417 18:13:23.066" endtime="20200417 18:14:58.629"></status>
</kw>
<status status="FAIL" starttime="20200417 18:13:05.574" endtime="20200417 18:14:58.629"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 18:13:05.572" endtime="20200417 18:14:58.629" critical="yes">255 != 0</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 18:14:58.631" endtime="20200417 18:14:58.631"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:14:58.635" level="INFO">Running command 'ozone sh volume info /62190-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:15:00.341" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 18:15:00.341" level="INFO">${output} = VOLUME_NOT_FOUND Volume 62190-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200417 18:14:58.633" endtime="20200417 18:15:00.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:15:00.343" level="INFO">VOLUME_NOT_FOUND Volume 62190-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200417 18:15:00.342" endtime="20200417 18:15:00.343"></status>
</kw>
<msg timestamp="20200417 18:15:00.343" level="INFO">${result} = VOLUME_NOT_FOUND Volume 62190-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200417 18:14:58.632" endtime="20200417 18:15:00.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200417 18:15:00.343" endtime="20200417 18:15:00.344"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:15:00.347" level="INFO">Running command 'ozone sh volume create /62190-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:15:02.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:15:02.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 18:15:00.344" endtime="20200417 18:15:02.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:15:02.107" level="INFO"></msg>
<status status="PASS" starttime="20200417 18:15:02.107" endtime="20200417 18:15:02.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:15:02.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:15:02.108" endtime="20200417 18:15:02.108"></status>
</kw>
<msg timestamp="20200417 18:15:02.108" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200417 18:15:00.344" endtime="20200417 18:15:02.108"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200417 18:15:02.109" endtime="20200417 18:15:02.109"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:15:02.113" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="62190-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:15:04.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:15:04.173" level="INFO">${output} = {
  "metadata": {},
  "name": "62190-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:15:02.089Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 18:15:02.110" endtime="20200417 18:15:04.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:15:04.174" level="INFO">{
  "metadata": {},
  "name": "62190-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:15:02.089Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 18:15:04.174" endtime="20200417 18:15:04.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:15:04.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:15:04.175" endtime="20200417 18:15:04.176"></status>
</kw>
<msg timestamp="20200417 18:15:04.176" level="INFO">${result} = {
  "metadata": {},
  "name": "62190-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:15:02.089Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 18:15:02.109" endtime="20200417 18:15:04.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 18:15:04.176" endtime="20200417 18:15:04.176"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:15:04.179" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="62190-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:15:06.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:15:06.209" level="INFO">${output} = {
  "metadata": {},
  "name": "62190-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:15:02.089Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 18:15:04.177" endtime="20200417 18:15:06.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:15:06.210" level="INFO">{
  "metadata": {},
  "name": "62190-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:15:02.089Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 18:15:06.209" endtime="20200417 18:15:06.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:15:06.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:15:06.210" endtime="20200417 18:15:06.210"></status>
</kw>
<msg timestamp="20200417 18:15:06.211" level="INFO">${result} = {
  "metadata": {},
  "name": "62190-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:15:02.089Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 18:15:04.177" endtime="20200417 18:15:06.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 18:15:06.211" endtime="20200417 18:15:06.211"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:15:06.215" level="INFO">Running command 'ozone sh volume update /62190-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:15:08.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:15:08.309" level="INFO">${output} = {
  "metadata" : { },
  "name" : "62190-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T18:15:02.089Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200417 18:15:06.212" endtime="20200417 18:15:08.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:15:08.310" level="INFO">{
  "metadata" : { },
  "name" : "62190-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T18:15:02.089Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200417 18:15:08.309" endtime="20200417 18:15:08.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:15:08.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:15:08.310" endtime="20200417 18:15:08.311"></status>
</kw>
<status status="PASS" starttime="20200417 18:15:06.211" endtime="20200417 18:15:08.311"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:15:08.315" level="INFO">Running command 'ozone sh volume info /62190-rpcwoscheme | jq -r '. | select(.name=="62190-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:15:10.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:15:10.314" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200417 18:15:08.312" endtime="20200417 18:15:10.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:15:10.315" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200417 18:15:10.314" endtime="20200417 18:15:10.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:15:10.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:15:10.315" endtime="20200417 18:15:10.316"></status>
</kw>
<msg timestamp="20200417 18:15:10.317" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200417 18:15:08.311" endtime="20200417 18:15:10.317"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200417 18:15:10.317" endtime="20200417 18:15:10.317"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:15:10.321" level="INFO">Running command 'ozone sh bucket create /62190-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:15:12.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:15:12.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 18:15:10.318" endtime="20200417 18:15:12.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:15:12.094" level="INFO"></msg>
<status status="PASS" starttime="20200417 18:15:12.094" endtime="20200417 18:15:12.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:15:12.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:15:12.095" endtime="20200417 18:15:12.095"></status>
</kw>
<status status="PASS" starttime="20200417 18:15:10.317" endtime="20200417 18:15:12.095"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:15:12.099" level="INFO">Running command 'ozone sh bucket info /62190-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:15:14.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:15:14.163" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200417 18:15:12.096" endtime="20200417 18:15:14.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:15:14.164" level="INFO">DISK</msg>
<status status="PASS" starttime="20200417 18:15:14.163" endtime="20200417 18:15:14.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:15:14.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:15:14.164" endtime="20200417 18:15:14.165"></status>
</kw>
<msg timestamp="20200417 18:15:14.165" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200417 18:15:12.096" endtime="20200417 18:15:14.165"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200417 18:15:14.165" endtime="20200417 18:15:14.166"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:15:14.170" level="INFO">Running command 'ozone sh bucket list /62190-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:15:16.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:15:16.168" level="INFO">${output} = 62190-rpcwoscheme</msg>
<status status="PASS" starttime="20200417 18:15:14.167" endtime="20200417 18:15:16.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:15:16.169" level="INFO">62190-rpcwoscheme</msg>
<status status="PASS" starttime="20200417 18:15:16.169" endtime="20200417 18:15:16.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:15:16.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:15:16.169" endtime="20200417 18:15:16.170"></status>
</kw>
<msg timestamp="20200417 18:15:16.170" level="INFO">${result} = 62190-rpcwoscheme</msg>
<status status="PASS" starttime="20200417 18:15:14.166" endtime="20200417 18:15:16.170"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200417 18:15:16.170" endtime="20200417 18:15:16.171"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:15:16.175" level="INFO">Running command 'ozone sh key put /62190-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:16:51.824" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 18:16:51.824" level="INFO">${output} = INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 18:15:16.172" endtime="20200417 18:16:51.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:16:51.825" level="INFO">INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 18:16:51.824" endtime="20200417 18:16:51.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:16:51.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200417 18:16:51.826" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200417 18:16:51.825" endtime="20200417 18:16:51.826"></status>
</kw>
<status status="FAIL" starttime="20200417 18:15:16.172" endtime="20200417 18:16:51.827"></status>
</kw>
<status status="FAIL" starttime="20200417 18:15:16.171" endtime="20200417 18:16:51.827"></status>
</kw>
<status status="FAIL" starttime="20200417 18:15:16.171" endtime="20200417 18:16:51.827"></status>
</kw>
<status status="FAIL" starttime="20200417 18:14:58.631" endtime="20200417 18:16:51.827"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 18:14:58.630" endtime="20200417 18:16:51.827" critical="yes">255 != 0</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20200417 18:09:05.856" endtime="20200417 18:16:51.830"></status>
</suite>
<status status="FAIL" starttime="20200417 18:07:27.976" endtime="20200417 18:16:51.835"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="5">Critical Tests</stat>
<stat pass="3" fail="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="5" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="1" fail="1" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="2" fail="4" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
