<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200417 04:34:46.722" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:34:46.773" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:34:53.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:34:53.745" level="INFO">${output} = 2020-04-17 04:34:47,540 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:34:47,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200417 04:34:46.763" endtime="20200417 04:34:53.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:34:53.746" level="INFO">2020-04-17 04:34:47,540 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:34:47,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-17 04:34:47,670 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-17 04:34:48,389 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-17 04:34:48,389 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-17 04:34:48,389 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-17 04:34:48,389 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-17 04:34:48,389 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-17 04:34:48,389 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-17 04:34:48,390 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-17 04:34:48,391 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-17 04:34:48,400 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-17 04:34:48,419 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-01589, with hadoop as owner.
2020-04-17 04:34:48,446 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-01589/bucket-0-03595, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 04:34:48,896 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-17 04:34:49,401 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,046
Average Time spent in bucket creation: 00:00:00,059
Average Time spent in key creation: 00:00:00,052
Average Time spent in key write: 00:00:00,493
Total bytes written: 10240
Total Execution time: 00:00:05,526
***************************************************</msg>
<status status="PASS" starttime="20200417 04:34:53.745" endtime="20200417 04:34:53.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:34:53.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:34:53.746" endtime="20200417 04:34:53.746"></status>
</kw>
<msg timestamp="20200417 04:34:53.746" level="INFO">${result} = 2020-04-17 04:34:47,540 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:34:47,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200417 04:34:46.762" endtime="20200417 04:34:53.746"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200417 04:34:53.747" endtime="20200417 04:34:53.747"></status>
</kw>
<status status="PASS" starttime="20200417 04:34:53.746" endtime="20200417 04:34:53.747"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200417 04:34:46.762" endtime="20200417 04:34:53.747" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:34:53.750" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:34:57.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:34:57.678" level="INFO">${output} = 2020-04-17 04:34:54,440 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:34:54,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200417 04:34:53.749" endtime="20200417 04:34:57.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:34:57.679" level="INFO">2020-04-17 04:34:54,440 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:34:54,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-17 04:34:54,551 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-17 04:34:54,778 [main] INFO freon.BaseFreonGenerator: Executing test with prefix fzmvz4kpch
2020-04-17 04:34:54,787 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-17 04:34:55,265 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-17 04:34:55,289 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 04:34:55,682 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-17 04:34:55,791 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-17 04:34:56,791 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-17 04:34:57,348 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1053.038882, max=1053.038882, mean=1053.038882, stddev=0.0, median=1053.038882, p75=1053.038882, p95=1053.038882, p98=1053.038882, p99=1053.038882, p999=1053.038882, mean_rate=0.4921120544777807, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-17 04:34:57,349 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-17 04:34:57,349 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-17 04:34:57,349 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200417 04:34:57.678" endtime="20200417 04:34:57.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:34:57.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:34:57.679" endtime="20200417 04:34:57.679"></status>
</kw>
<msg timestamp="20200417 04:34:57.679" level="INFO">${result} = 2020-04-17 04:34:54,440 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:34:54,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200417 04:34:53.748" endtime="20200417 04:34:57.679"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200417 04:34:57.680" endtime="20200417 04:34:57.680"></status>
</kw>
<status status="PASS" starttime="20200417 04:34:57.680" endtime="20200417 04:34:57.680"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200417 04:34:53.748" endtime="20200417 04:34:57.680" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:34:57.683" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:35:00.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:35:00.276" level="INFO">${output} = 2020-04-17 04:34:58,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:34:58,530 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200417 04:34:57.682" endtime="20200417 04:35:00.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:35:00.277" level="INFO">2020-04-17 04:34:58,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:34:58,530 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-17 04:34:58,530 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-17 04:34:58,748 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zwp6c1bocf
2020-04-17 04:34:58,763 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-17 04:34:59,766 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-17 04:35:00,266 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=47.962232, max=47.962232, mean=47.962232, stddev=0.0, median=47.962232, p75=47.962232, p95=47.962232, p98=47.962232, p99=47.962232, p999=47.962232, mean_rate=0.9866042077272427, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-17 04:35:00,267 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-17 04:35:00,267 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-17 04:35:00,267 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200417 04:35:00.276" endtime="20200417 04:35:00.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:35:00.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:35:00.277" endtime="20200417 04:35:00.277"></status>
</kw>
<msg timestamp="20200417 04:35:00.277" level="INFO">${result} = 2020-04-17 04:34:58,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:34:58,530 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200417 04:34:57.681" endtime="20200417 04:35:00.277"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200417 04:35:00.278" endtime="20200417 04:35:00.278"></status>
</kw>
<status status="PASS" starttime="20200417 04:35:00.278" endtime="20200417 04:35:00.278"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200417 04:34:57.681" endtime="20200417 04:35:00.278" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:35:00.282" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:35:02.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:35:02.843" level="INFO">${output} = 2020-04-17 04:35:00,961 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:35:01,096 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200417 04:35:00.279" endtime="20200417 04:35:02.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:35:02.844" level="INFO">2020-04-17 04:35:00,961 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:35:01,096 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-17 04:35:01,096 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-17 04:35:01,325 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ewpeqsen8c
2020-04-17 04:35:01,342 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-17 04:35:02,346 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-17 04:35:02,832 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=14.270022, max=14.270022, mean=14.270022, stddev=0.0, median=14.270022, p75=14.270022, p95=14.270022, p98=14.270022, p99=14.270022, p999=14.270022, mean_rate=0.9905556658704382, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-17 04:35:02,833 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2020-04-17 04:35:02,833 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-17 04:35:02,833 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200417 04:35:02.843" endtime="20200417 04:35:02.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:35:02.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:35:02.844" endtime="20200417 04:35:02.844"></status>
</kw>
<msg timestamp="20200417 04:35:02.844" level="INFO">${result} = 2020-04-17 04:35:00,961 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 04:35:01,096 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200417 04:35:00.279" endtime="20200417 04:35:02.844"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200417 04:35:02.845" endtime="20200417 04:35:02.845"></status>
</kw>
<status status="PASS" starttime="20200417 04:35:02.845" endtime="20200417 04:35:02.845"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200417 04:35:00.279" endtime="20200417 04:35:02.845" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200417 04:34:46.746" endtime="20200417 04:35:02.847"></status>
</suite>
<status status="PASS" starttime="20200417 04:34:46.723" endtime="20200417 04:35:02.850"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
