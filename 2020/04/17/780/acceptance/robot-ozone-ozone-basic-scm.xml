<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200417 04:38:45.675" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200417 04:38:45.710" endtime="20200417 04:38:45.710"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:38:45.713" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:38:45.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:38:45.781" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 17 Apr 2020 04:38:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Apr 2020 04:20:30 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200417 04:38:45.710" endtime="20200417 04:38:45.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:38:45.782" level="INFO">HTTP/1.1 200 OK
Date: Fri, 17 Apr 2020 04:38:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Apr 2020 04:20:30 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200417 04:38:45.781" endtime="20200417 04:38:45.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:38:45.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:38:45.782" endtime="20200417 04:38:45.782"></status>
</kw>
<msg timestamp="20200417 04:38:45.782" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 17 Apr 2020 04:38:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Apr 2020 04:20:30 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200417 04:38:45.710" endtime="20200417 04:38:45.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200417 04:38:45.782" endtime="20200417 04:38:45.783"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200417 04:38:45.709" endtime="20200417 04:38:45.783" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 04:38:45.784" endtime="20200417 04:38:45.785"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:38:45.787" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:43:45.786" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20200417 04:38:45.785" endtime="20200417 04:43:45.786"></status>
</kw>
<status status="FAIL" starttime="20200417 04:38:45.785" endtime="20200417 04:43:45.786"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" starttime="20200417 04:38:45.784" endtime="20200417 04:43:45.787" critical="yes">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20200417 04:38:45.693" endtime="20200417 04:43:45.788"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200417 04:43:45.795" level="INFO">${random} = 81344</msg>
<status status="PASS" starttime="20200417 04:43:45.795" endtime="20200417 04:43:45.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200417 04:43:45.796" level="INFO">${prefix} = 81344</msg>
<status status="PASS" starttime="20200417 04:43:45.796" endtime="20200417 04:43:45.796"></status>
</kw>
<status status="PASS" starttime="20200417 04:43:45.795" endtime="20200417 04:43:45.796"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 04:43:45.796" endtime="20200417 04:43:45.797"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:43:45.799" level="INFO">Running command 'ozone sh volume info o3://om:9862/81344-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:43:47.163" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 04:43:47.163" level="INFO">${output} = VOLUME_NOT_FOUND Volume 81344-rpcwoport is not found</msg>
<status status="PASS" starttime="20200417 04:43:45.797" endtime="20200417 04:43:47.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:43:47.164" level="INFO">VOLUME_NOT_FOUND Volume 81344-rpcwoport is not found</msg>
<status status="PASS" starttime="20200417 04:43:47.164" endtime="20200417 04:43:47.164"></status>
</kw>
<msg timestamp="20200417 04:43:47.165" level="INFO">${result} = VOLUME_NOT_FOUND Volume 81344-rpcwoport is not found</msg>
<status status="PASS" starttime="20200417 04:43:45.797" endtime="20200417 04:43:47.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200417 04:43:47.165" endtime="20200417 04:43:47.165"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:43:47.167" level="INFO">Running command 'ozone sh volume create o3://om:9862/81344-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:43:48.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:43:48.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 04:43:47.166" endtime="20200417 04:43:48.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:43:48.582" level="INFO"></msg>
<status status="PASS" starttime="20200417 04:43:48.581" endtime="20200417 04:43:48.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:43:48.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:43:48.582" endtime="20200417 04:43:48.583"></status>
</kw>
<msg timestamp="20200417 04:43:48.583" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200417 04:43:47.165" endtime="20200417 04:43:48.583"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200417 04:43:48.583" endtime="20200417 04:43:48.583"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:43:48.587" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="81344-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:43:50.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:43:50.150" level="INFO">${output} = {
  "metadata": {},
  "name": "81344-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:43:48.550Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 04:43:48.584" endtime="20200417 04:43:50.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:43:50.151" level="INFO">{
  "metadata": {},
  "name": "81344-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:43:48.550Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 04:43:50.150" endtime="20200417 04:43:50.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:43:50.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:43:50.152" endtime="20200417 04:43:50.152"></status>
</kw>
<msg timestamp="20200417 04:43:50.152" level="INFO">${result} = {
  "metadata": {},
  "name": "81344-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:43:48.550Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 04:43:48.583" endtime="20200417 04:43:50.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 04:43:50.152" endtime="20200417 04:43:50.153"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:43:50.155" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="81344-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:43:51.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:43:51.692" level="INFO">${output} = {
  "metadata": {},
  "name": "81344-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:43:48.550Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 04:43:50.153" endtime="20200417 04:43:51.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:43:51.693" level="INFO">{
  "metadata": {},
  "name": "81344-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:43:48.550Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 04:43:51.692" endtime="20200417 04:43:51.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:43:51.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:43:51.693" endtime="20200417 04:43:51.693"></status>
</kw>
<msg timestamp="20200417 04:43:51.694" level="INFO">${result} = {
  "metadata": {},
  "name": "81344-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:43:48.550Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 04:43:50.153" endtime="20200417 04:43:51.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 04:43:51.694" endtime="20200417 04:43:51.694"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:43:51.697" level="INFO">Running command 'ozone sh volume update o3://om:9862/81344-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:43:53.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:43:53.179" level="INFO">${output} = {
  "metadata" : { },
  "name" : "81344-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T04:43:48.550Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200417 04:43:51.695" endtime="20200417 04:43:53.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:43:53.180" level="INFO">{
  "metadata" : { },
  "name" : "81344-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T04:43:48.550Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200417 04:43:53.179" endtime="20200417 04:43:53.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:43:53.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:43:53.180" endtime="20200417 04:43:53.180"></status>
</kw>
<status status="PASS" starttime="20200417 04:43:51.694" endtime="20200417 04:43:53.181"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:43:53.183" level="INFO">Running command 'ozone sh volume info o3://om:9862/81344-rpcwoport | jq -r '. | select(.name=="81344-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:43:54.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:43:54.760" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200417 04:43:53.181" endtime="20200417 04:43:54.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:43:54.761" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200417 04:43:54.760" endtime="20200417 04:43:54.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:43:54.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:43:54.761" endtime="20200417 04:43:54.762"></status>
</kw>
<msg timestamp="20200417 04:43:54.762" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200417 04:43:53.181" endtime="20200417 04:43:54.762"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200417 04:43:54.762" endtime="20200417 04:43:54.762"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:43:54.766" level="INFO">Running command 'ozone sh bucket create o3://om:9862/81344-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:43:56.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:43:56.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 04:43:54.763" endtime="20200417 04:43:56.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:43:56.121" level="INFO"></msg>
<status status="PASS" starttime="20200417 04:43:56.120" endtime="20200417 04:43:56.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:43:56.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:43:56.121" endtime="20200417 04:43:56.122"></status>
</kw>
<status status="PASS" starttime="20200417 04:43:54.762" endtime="20200417 04:43:56.122"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:43:56.125" level="INFO">Running command 'ozone sh bucket info o3://om:9862/81344-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:43:57.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:43:57.694" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200417 04:43:56.122" endtime="20200417 04:43:57.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:43:57.695" level="INFO">DISK</msg>
<status status="PASS" starttime="20200417 04:43:57.695" endtime="20200417 04:43:57.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:43:57.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:43:57.696" endtime="20200417 04:43:57.696"></status>
</kw>
<msg timestamp="20200417 04:43:57.696" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200417 04:43:56.122" endtime="20200417 04:43:57.696"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200417 04:43:57.696" endtime="20200417 04:43:57.696"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:43:57.700" level="INFO">Running command 'ozone sh bucket list o3://om:9862/81344-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:43:59.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:43:59.172" level="INFO">${output} = 81344-rpcwoport</msg>
<status status="PASS" starttime="20200417 04:43:57.697" endtime="20200417 04:43:59.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:43:59.173" level="INFO">81344-rpcwoport</msg>
<status status="PASS" starttime="20200417 04:43:59.172" endtime="20200417 04:43:59.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:43:59.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:43:59.173" endtime="20200417 04:43:59.173"></status>
</kw>
<msg timestamp="20200417 04:43:59.173" level="INFO">${result} = 81344-rpcwoport</msg>
<status status="PASS" starttime="20200417 04:43:57.697" endtime="20200417 04:43:59.173"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200417 04:43:59.174" endtime="20200417 04:43:59.174"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:43:59.176" level="INFO">Running command 'ozone sh key put o3://om:9862/81344-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:46:45.797" level="FAIL">Test timeout 3 minutes exceeded.</msg>
<status status="FAIL" starttime="20200417 04:43:59.175" endtime="20200417 04:46:45.797"></status>
</kw>
<status status="FAIL" starttime="20200417 04:43:59.175" endtime="20200417 04:46:45.797"></status>
</kw>
<status status="FAIL" starttime="20200417 04:43:59.174" endtime="20200417 04:46:45.797"></status>
</kw>
<status status="FAIL" starttime="20200417 04:43:59.174" endtime="20200417 04:46:45.797"></status>
</kw>
<status status="FAIL" starttime="20200417 04:43:45.797" endtime="20200417 04:46:45.798"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 04:43:45.796" endtime="20200417 04:46:45.798" critical="yes">Test timeout 3 minutes exceeded.</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 04:46:45.799" endtime="20200417 04:46:45.799"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:46:45.803" level="INFO">Running command 'ozone sh volume create o3://om:9862/81344-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:46:47.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:46:47.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 04:46:45.800" endtime="20200417 04:46:47.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:46:47.150" level="INFO"></msg>
<status status="PASS" starttime="20200417 04:46:47.150" endtime="20200417 04:46:47.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:46:47.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:46:47.151" endtime="20200417 04:46:47.151"></status>
</kw>
<status status="PASS" starttime="20200417 04:46:45.800" endtime="20200417 04:46:47.151"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:46:47.154" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81344-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:46:48.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:46:48.684" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 04:46:47.152" endtime="20200417 04:46:48.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:46:48.685" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 04:46:48.684" endtime="20200417 04:46:48.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:46:48.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:46:48.685" endtime="20200417 04:46:48.685"></status>
</kw>
<msg timestamp="20200417 04:46:48.685" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 04:46:47.151" endtime="20200417 04:46:48.685"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 04:46:48.685" endtime="20200417 04:46:48.686"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:46:48.688" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/81344-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:46:49.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:46:49.990" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200417 04:46:48.687" endtime="20200417 04:46:49.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:46:49.991" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200417 04:46:49.990" endtime="20200417 04:46:49.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:46:49.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:46:49.991" endtime="20200417 04:46:49.991"></status>
</kw>
<msg timestamp="20200417 04:46:49.992" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200417 04:46:48.686" endtime="20200417 04:46:49.992"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:46:49.994" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81344-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:46:51.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:46:51.554" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 04:46:49.992" endtime="20200417 04:46:51.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:46:51.555" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200417 04:46:51.554" endtime="20200417 04:46:51.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:46:51.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:46:51.555" endtime="20200417 04:46:51.555"></status>
</kw>
<msg timestamp="20200417 04:46:51.555" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 04:46:49.992" endtime="20200417 04:46:51.555"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 04:46:51.555" endtime="20200417 04:46:51.556"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:46:51.560" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/81344-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:46:52.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:46:52.989" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200417 04:46:51.557" endtime="20200417 04:46:52.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:46:52.990" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200417 04:46:52.989" endtime="20200417 04:46:52.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:46:52.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:46:52.990" endtime="20200417 04:46:52.991"></status>
</kw>
<msg timestamp="20200417 04:46:52.991" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200417 04:46:51.556" endtime="20200417 04:46:52.991"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:46:52.993" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81344-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:46:54.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:46:54.428" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 04:46:52.991" endtime="20200417 04:46:54.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:46:54.429" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200417 04:46:54.428" endtime="20200417 04:46:54.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:46:54.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:46:54.429" endtime="20200417 04:46:54.430"></status>
</kw>
<msg timestamp="20200417 04:46:54.430" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 04:46:52.991" endtime="20200417 04:46:54.430"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 04:46:54.430" endtime="20200417 04:46:54.431"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:46:54.434" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/81344-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:46:55.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:46:55.813" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 04:46:54.432" endtime="20200417 04:46:55.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:46:55.814" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 04:46:55.814" endtime="20200417 04:46:55.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:46:55.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:46:55.814" endtime="20200417 04:46:55.815"></status>
</kw>
<msg timestamp="20200417 04:46:55.815" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 04:46:54.431" endtime="20200417 04:46:55.815"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:46:55.817" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81344-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:46:57.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:46:57.418" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200417 04:46:55.815" endtime="20200417 04:46:57.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:46:57.419" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 04:46:57.418" endtime="20200417 04:46:57.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:46:57.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:46:57.419" endtime="20200417 04:46:57.420"></status>
</kw>
<msg timestamp="20200417 04:46:57.420" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200417 04:46:55.815" endtime="20200417 04:46:57.420"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 04:46:57.420" endtime="20200417 04:46:57.420"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 04:46:57.421" endtime="20200417 04:46:57.421"></status>
</kw>
<status status="PASS" starttime="20200417 04:46:45.800" endtime="20200417 04:46:57.421"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200417 04:46:45.798" endtime="20200417 04:46:57.421" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 04:46:57.423" endtime="20200417 04:46:57.423"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:46:57.426" level="INFO">Running command 'ozone sh bucket create o3://om:9862/81344-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:46:58.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:46:58.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 04:46:57.424" endtime="20200417 04:46:58.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:46:58.929" level="INFO"></msg>
<status status="PASS" starttime="20200417 04:46:58.928" endtime="20200417 04:46:58.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:46:58.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:46:58.929" endtime="20200417 04:46:58.929"></status>
</kw>
<status status="PASS" starttime="20200417 04:46:57.423" endtime="20200417 04:46:58.929"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:46:58.933" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81344-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:47:00.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:47:00.500" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 04:46:58.930" endtime="20200417 04:47:00.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:47:00.501" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 04:47:00.501" endtime="20200417 04:47:00.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:47:00.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:47:00.501" endtime="20200417 04:47:00.502"></status>
</kw>
<msg timestamp="20200417 04:47:00.502" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 04:46:58.930" endtime="20200417 04:47:00.502"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 04:47:00.502" endtime="20200417 04:47:00.502"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:47:00.505" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/81344-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:47:01.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:47:01.913" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200417 04:47:00.503" endtime="20200417 04:47:01.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:47:01.914" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200417 04:47:01.913" endtime="20200417 04:47:01.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:47:01.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:47:01.914" endtime="20200417 04:47:01.914"></status>
</kw>
<msg timestamp="20200417 04:47:01.914" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200417 04:47:00.503" endtime="20200417 04:47:01.914"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:47:01.917" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81344-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:47:03.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:47:03.352" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 04:47:01.915" endtime="20200417 04:47:03.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:47:03.353" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 04:47:03.352" endtime="20200417 04:47:03.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:47:03.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:47:03.353" endtime="20200417 04:47:03.353"></status>
</kw>
<msg timestamp="20200417 04:47:03.354" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 04:47:01.914" endtime="20200417 04:47:03.354"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200417 04:47:03.354" endtime="20200417 04:47:03.355"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:47:03.357" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/81344-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:47:04.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:47:04.740" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200417 04:47:03.355" endtime="20200417 04:47:04.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:47:04.741" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200417 04:47:04.741" endtime="20200417 04:47:04.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:47:04.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:47:04.741" endtime="20200417 04:47:04.742"></status>
</kw>
<msg timestamp="20200417 04:47:04.742" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200417 04:47:03.355" endtime="20200417 04:47:04.742"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:47:04.744" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81344-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:47:06.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:47:06.190" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 04:47:04.742" endtime="20200417 04:47:06.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:47:06.191" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 04:47:06.190" endtime="20200417 04:47:06.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:47:06.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:47:06.191" endtime="20200417 04:47:06.192"></status>
</kw>
<msg timestamp="20200417 04:47:06.192" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 04:47:04.742" endtime="20200417 04:47:06.192"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200417 04:47:06.192" endtime="20200417 04:47:06.193"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:47:06.196" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/81344-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:47:07.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:47:07.534" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 04:47:06.193" endtime="20200417 04:47:07.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:47:07.535" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 04:47:07.534" endtime="20200417 04:47:07.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:47:07.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:47:07.535" endtime="20200417 04:47:07.535"></status>
</kw>
<msg timestamp="20200417 04:47:07.535" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 04:47:06.193" endtime="20200417 04:47:07.535"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:47:07.538" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81344-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:47:09.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:47:09.008" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200417 04:47:07.536" endtime="20200417 04:47:09.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:47:09.008" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 04:47:09.008" endtime="20200417 04:47:09.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:47:09.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:47:09.009" endtime="20200417 04:47:09.009"></status>
</kw>
<msg timestamp="20200417 04:47:09.009" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200417 04:47:07.536" endtime="20200417 04:47:09.009"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200417 04:47:09.009" endtime="20200417 04:47:09.010"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 04:47:09.010" endtime="20200417 04:47:09.010"></status>
</kw>
<status status="PASS" starttime="20200417 04:46:57.423" endtime="20200417 04:47:09.010"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200417 04:46:57.422" endtime="20200417 04:47:09.010" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 04:47:09.012" endtime="20200417 04:47:09.012"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:47:09.015" level="INFO">Running command 'ozone sh key put o3://om:9862/81344-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:50:09.013" level="FAIL">Test timeout 3 minutes exceeded.</msg>
<status status="FAIL" starttime="20200417 04:47:09.013" endtime="20200417 04:50:09.013"></status>
</kw>
<status status="FAIL" starttime="20200417 04:47:09.013" endtime="20200417 04:50:09.013"></status>
</kw>
<status status="FAIL" starttime="20200417 04:47:09.012" endtime="20200417 04:50:09.014"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 04:47:09.011" endtime="20200417 04:50:09.014" critical="yes">Test timeout 3 minutes exceeded.</status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 04:50:09.017" endtime="20200417 04:50:09.017"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:50:09.020" level="INFO">Running command 'ozone sh volume info o3:///81344-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:50:10.378" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 04:50:10.378" level="INFO">${output} = VOLUME_NOT_FOUND Volume 81344-rpcwport is not found</msg>
<status status="PASS" starttime="20200417 04:50:09.018" endtime="20200417 04:50:10.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:50:10.379" level="INFO">VOLUME_NOT_FOUND Volume 81344-rpcwport is not found</msg>
<status status="PASS" starttime="20200417 04:50:10.378" endtime="20200417 04:50:10.379"></status>
</kw>
<msg timestamp="20200417 04:50:10.379" level="INFO">${result} = VOLUME_NOT_FOUND Volume 81344-rpcwport is not found</msg>
<status status="PASS" starttime="20200417 04:50:09.018" endtime="20200417 04:50:10.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200417 04:50:10.379" endtime="20200417 04:50:10.380"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:50:10.383" level="INFO">Running command 'ozone sh volume create o3:///81344-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:50:11.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:50:11.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 04:50:10.380" endtime="20200417 04:50:11.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:50:11.847" level="INFO"></msg>
<status status="PASS" starttime="20200417 04:50:11.847" endtime="20200417 04:50:11.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:50:11.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:50:11.847" endtime="20200417 04:50:11.848"></status>
</kw>
<msg timestamp="20200417 04:50:11.848" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200417 04:50:10.380" endtime="20200417 04:50:11.848"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200417 04:50:11.848" endtime="20200417 04:50:11.848"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:50:11.851" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="81344-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:50:13.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:50:13.377" level="INFO">${output} = {
  "metadata": {},
  "name": "81344-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:50:11.814Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 04:50:11.849" endtime="20200417 04:50:13.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:50:13.377" level="INFO">{
  "metadata": {},
  "name": "81344-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:50:11.814Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 04:50:13.377" endtime="20200417 04:50:13.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:50:13.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:50:13.378" endtime="20200417 04:50:13.378"></status>
</kw>
<msg timestamp="20200417 04:50:13.378" level="INFO">${result} = {
  "metadata": {},
  "name": "81344-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:50:11.814Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 04:50:11.848" endtime="20200417 04:50:13.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 04:50:13.378" endtime="20200417 04:50:13.378"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:50:13.382" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="81344-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:50:14.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:50:14.874" level="INFO">${output} = {
  "metadata": {},
  "name": "81344-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:50:11.814Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 04:50:13.379" endtime="20200417 04:50:14.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:50:14.875" level="INFO">{
  "metadata": {},
  "name": "81344-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:50:11.814Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 04:50:14.874" endtime="20200417 04:50:14.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:50:14.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:50:14.875" endtime="20200417 04:50:14.875"></status>
</kw>
<msg timestamp="20200417 04:50:14.875" level="INFO">${result} = {
  "metadata": {},
  "name": "81344-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:50:11.814Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 04:50:13.379" endtime="20200417 04:50:14.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 04:50:14.876" endtime="20200417 04:50:14.876"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:50:14.878" level="INFO">Running command 'ozone sh volume update o3:///81344-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:50:16.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:50:16.449" level="INFO">${output} = {
  "metadata" : { },
  "name" : "81344-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T04:50:11.814Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200417 04:50:14.876" endtime="20200417 04:50:16.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:50:16.449" level="INFO">{
  "metadata" : { },
  "name" : "81344-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T04:50:11.814Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200417 04:50:16.449" endtime="20200417 04:50:16.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:50:16.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:50:16.450" endtime="20200417 04:50:16.450"></status>
</kw>
<status status="PASS" starttime="20200417 04:50:14.876" endtime="20200417 04:50:16.450"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:50:16.454" level="INFO">Running command 'ozone sh volume info o3:///81344-rpcwport | jq -r '. | select(.name=="81344-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:50:18.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:50:18.059" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200417 04:50:16.451" endtime="20200417 04:50:18.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:50:18.060" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200417 04:50:18.060" endtime="20200417 04:50:18.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:50:18.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:50:18.060" endtime="20200417 04:50:18.061"></status>
</kw>
<msg timestamp="20200417 04:50:18.061" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200417 04:50:16.450" endtime="20200417 04:50:18.061"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200417 04:50:18.061" endtime="20200417 04:50:18.062"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:50:18.064" level="INFO">Running command 'ozone sh bucket create o3:///81344-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:50:19.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:50:19.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 04:50:18.062" endtime="20200417 04:50:19.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:50:19.482" level="INFO"></msg>
<status status="PASS" starttime="20200417 04:50:19.481" endtime="20200417 04:50:19.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:50:19.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:50:19.482" endtime="20200417 04:50:19.482"></status>
</kw>
<status status="PASS" starttime="20200417 04:50:18.062" endtime="20200417 04:50:19.482"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:50:19.486" level="INFO">Running command 'ozone sh bucket info o3:///81344-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:50:21.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:50:21.012" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200417 04:50:19.483" endtime="20200417 04:50:21.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:50:21.013" level="INFO">DISK</msg>
<status status="PASS" starttime="20200417 04:50:21.012" endtime="20200417 04:50:21.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:50:21.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:50:21.013" endtime="20200417 04:50:21.014"></status>
</kw>
<msg timestamp="20200417 04:50:21.014" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200417 04:50:19.482" endtime="20200417 04:50:21.014"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200417 04:50:21.014" endtime="20200417 04:50:21.014"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:50:21.017" level="INFO">Running command 'ozone sh bucket list o3:///81344-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:50:22.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:50:22.479" level="INFO">${output} = 81344-rpcwport</msg>
<status status="PASS" starttime="20200417 04:50:21.015" endtime="20200417 04:50:22.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:50:22.480" level="INFO">81344-rpcwport</msg>
<status status="PASS" starttime="20200417 04:50:22.480" endtime="20200417 04:50:22.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:50:22.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:50:22.480" endtime="20200417 04:50:22.481"></status>
</kw>
<msg timestamp="20200417 04:50:22.481" level="INFO">${result} = 81344-rpcwport</msg>
<status status="PASS" starttime="20200417 04:50:21.014" endtime="20200417 04:50:22.481"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200417 04:50:22.481" endtime="20200417 04:50:22.481"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:50:22.485" level="INFO">Running command 'ozone sh key put o3:///81344-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:53:09.016" level="FAIL">Test timeout 3 minutes exceeded.</msg>
<status status="FAIL" starttime="20200417 04:50:22.484" endtime="20200417 04:53:09.017"></status>
</kw>
<status status="FAIL" starttime="20200417 04:50:22.483" endtime="20200417 04:53:09.017"></status>
</kw>
<status status="FAIL" starttime="20200417 04:50:22.483" endtime="20200417 04:53:09.018"></status>
</kw>
<status status="FAIL" starttime="20200417 04:50:22.482" endtime="20200417 04:53:09.018"></status>
</kw>
<status status="FAIL" starttime="20200417 04:50:09.017" endtime="20200417 04:53:09.018"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 04:50:09.015" endtime="20200417 04:53:09.018" critical="yes">Test timeout 3 minutes exceeded.</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 04:53:09.021" endtime="20200417 04:53:09.021"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:53:09.025" level="INFO">Running command 'ozone sh volume info /81344-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:53:10.374" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 04:53:10.374" level="INFO">${output} = VOLUME_NOT_FOUND Volume 81344-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200417 04:53:09.023" endtime="20200417 04:53:10.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:53:10.375" level="INFO">VOLUME_NOT_FOUND Volume 81344-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200417 04:53:10.374" endtime="20200417 04:53:10.375"></status>
</kw>
<msg timestamp="20200417 04:53:10.375" level="INFO">${result} = VOLUME_NOT_FOUND Volume 81344-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200417 04:53:09.022" endtime="20200417 04:53:10.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200417 04:53:10.375" endtime="20200417 04:53:10.375"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:53:10.378" level="INFO">Running command 'ozone sh volume create /81344-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:53:11.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:53:11.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 04:53:10.376" endtime="20200417 04:53:11.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:53:11.712" level="INFO"></msg>
<status status="PASS" starttime="20200417 04:53:11.712" endtime="20200417 04:53:11.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:53:11.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:53:11.712" endtime="20200417 04:53:11.713"></status>
</kw>
<msg timestamp="20200417 04:53:11.713" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200417 04:53:10.375" endtime="20200417 04:53:11.713"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200417 04:53:11.713" endtime="20200417 04:53:11.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:53:11.716" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="81344-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:53:13.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:53:13.286" level="INFO">${output} = {
  "metadata": {},
  "name": "81344-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:53:11.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 04:53:11.714" endtime="20200417 04:53:13.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:53:13.288" level="INFO">{
  "metadata": {},
  "name": "81344-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:53:11.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 04:53:13.287" endtime="20200417 04:53:13.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:53:13.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:53:13.288" endtime="20200417 04:53:13.288"></status>
</kw>
<msg timestamp="20200417 04:53:13.289" level="INFO">${result} = {
  "metadata": {},
  "name": "81344-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:53:11.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 04:53:11.713" endtime="20200417 04:53:13.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 04:53:13.289" endtime="20200417 04:53:13.289"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:53:13.292" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="81344-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:53:14.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:53:14.846" level="INFO">${output} = {
  "metadata": {},
  "name": "81344-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:53:11.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 04:53:13.290" endtime="20200417 04:53:14.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:53:14.847" level="INFO">{
  "metadata": {},
  "name": "81344-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:53:11.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 04:53:14.847" endtime="20200417 04:53:14.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:53:14.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:53:14.848" endtime="20200417 04:53:14.848"></status>
</kw>
<msg timestamp="20200417 04:53:14.848" level="INFO">${result} = {
  "metadata": {},
  "name": "81344-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T04:53:11.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 04:53:13.289" endtime="20200417 04:53:14.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 04:53:14.848" endtime="20200417 04:53:14.849"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:53:14.851" level="INFO">Running command 'ozone sh volume update /81344-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:53:16.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:53:16.424" level="INFO">${output} = {
  "metadata" : { },
  "name" : "81344-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T04:53:11.694Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200417 04:53:14.849" endtime="20200417 04:53:16.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:53:16.425" level="INFO">{
  "metadata" : { },
  "name" : "81344-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T04:53:11.694Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200417 04:53:16.425" endtime="20200417 04:53:16.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:53:16.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:53:16.426" endtime="20200417 04:53:16.426"></status>
</kw>
<status status="PASS" starttime="20200417 04:53:14.849" endtime="20200417 04:53:16.426"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:53:16.429" level="INFO">Running command 'ozone sh volume info /81344-rpcwoscheme | jq -r '. | select(.name=="81344-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:53:17.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:53:17.967" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200417 04:53:16.427" endtime="20200417 04:53:17.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:53:17.968" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200417 04:53:17.968" endtime="20200417 04:53:17.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:53:17.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:53:17.969" endtime="20200417 04:53:17.969"></status>
</kw>
<msg timestamp="20200417 04:53:17.969" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200417 04:53:16.426" endtime="20200417 04:53:17.969"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200417 04:53:17.969" endtime="20200417 04:53:17.970"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:53:17.973" level="INFO">Running command 'ozone sh bucket create /81344-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:53:19.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:53:19.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 04:53:17.970" endtime="20200417 04:53:19.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:53:19.360" level="INFO"></msg>
<status status="PASS" starttime="20200417 04:53:19.360" endtime="20200417 04:53:19.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:53:19.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:53:19.360" endtime="20200417 04:53:19.361"></status>
</kw>
<status status="PASS" starttime="20200417 04:53:17.970" endtime="20200417 04:53:19.361"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:53:19.364" level="INFO">Running command 'ozone sh bucket info /81344-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:53:20.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:53:20.908" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200417 04:53:19.362" endtime="20200417 04:53:20.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:53:20.909" level="INFO">DISK</msg>
<status status="PASS" starttime="20200417 04:53:20.908" endtime="20200417 04:53:20.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:53:20.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:53:20.909" endtime="20200417 04:53:20.910"></status>
</kw>
<msg timestamp="20200417 04:53:20.910" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200417 04:53:19.361" endtime="20200417 04:53:20.910"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200417 04:53:20.910" endtime="20200417 04:53:20.910"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:53:20.913" level="INFO">Running command 'ozone sh bucket list /81344-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:53:22.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 04:53:22.504" level="INFO">${output} = 81344-rpcwoscheme</msg>
<status status="PASS" starttime="20200417 04:53:20.911" endtime="20200417 04:53:22.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 04:53:22.505" level="INFO">81344-rpcwoscheme</msg>
<status status="PASS" starttime="20200417 04:53:22.504" endtime="20200417 04:53:22.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 04:53:22.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 04:53:22.505" endtime="20200417 04:53:22.506"></status>
</kw>
<msg timestamp="20200417 04:53:22.506" level="INFO">${result} = 81344-rpcwoscheme</msg>
<status status="PASS" starttime="20200417 04:53:20.910" endtime="20200417 04:53:22.506"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200417 04:53:22.506" endtime="20200417 04:53:22.506"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 04:53:22.509" level="INFO">Running command 'ozone sh key put /81344-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 04:56:09.021" level="FAIL">Test timeout 3 minutes exceeded.</msg>
<status status="FAIL" starttime="20200417 04:53:22.507" endtime="20200417 04:56:09.021"></status>
</kw>
<status status="FAIL" starttime="20200417 04:53:22.507" endtime="20200417 04:56:09.022"></status>
</kw>
<status status="FAIL" starttime="20200417 04:53:22.507" endtime="20200417 04:56:09.022"></status>
</kw>
<status status="FAIL" starttime="20200417 04:53:22.506" endtime="20200417 04:56:09.022"></status>
</kw>
<status status="FAIL" starttime="20200417 04:53:09.022" endtime="20200417 04:56:09.022"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 04:53:09.019" endtime="20200417 04:56:09.023" critical="yes">Test timeout 3 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20200417 04:43:45.791" endtime="20200417 04:56:09.025"></status>
</suite>
<status status="FAIL" starttime="20200417 04:38:45.675" endtime="20200417 04:56:09.031"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="5">Critical Tests</stat>
<stat pass="3" fail="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="5" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="1" fail="1" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="2" fail="4" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
