<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200417 18:56:47.901" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200417 18:56:47.953" endtime="20200417 18:56:47.953"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:56:47.957" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:56:48.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:56:48.031" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 17 Apr 2020 18:56:48 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Apr 2020 17:38:12 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200417 18:56:47.954" endtime="20200417 18:56:48.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:56:48.032" level="INFO">HTTP/1.1 200 OK
Date: Fri, 17 Apr 2020 18:56:48 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Apr 2020 17:38:12 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200417 18:56:48.031" endtime="20200417 18:56:48.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:56:48.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:56:48.032" endtime="20200417 18:56:48.033"></status>
</kw>
<msg timestamp="20200417 18:56:48.033" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 17 Apr 2020 18:56:48 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Apr 2020 17:38:12 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200417 18:56:47.953" endtime="20200417 18:56:48.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200417 18:56:48.033" endtime="20200417 18:56:48.034"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200417 18:56:47.952" endtime="20200417 18:56:48.034" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 18:56:48.035" endtime="20200417 18:56:48.035"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:56:48.041" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:58:25.898" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 18:58:25.898" level="INFO">${output} = 2020-04-17 18:56:48,973 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 18:56:49,169 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200417 18:56:48.036" endtime="20200417 18:58:25.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:58:25.899" level="INFO">2020-04-17 18:56:48,973 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-17 18:56:49,169 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-17 18:56:49,169 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-17 18:56:50,453 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-17 18:56:50,454 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-17 18:56:50,454 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-17 18:56:50,455 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-17 18:56:50,455 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-17 18:56:50,455 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-17 18:56:50,455 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-17 18:56:50,465 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-17 18:56:50,467 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-17 18:56:50,494 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-17 18:56:50,534 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-54540, with hadoop as owner.
2020-04-17 18:56:50,655 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-35197, with hadoop as owner.
2020-04-17 18:56:50,677 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-45345, with hadoop as owner.
2020-04-17 18:56:50,683 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-54252, with hadoop as owner.
2020-04-17 18:56:50,689 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-91709, with hadoop as owner.
2020-04-17 18:56:50,697 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-54540/bucket-0-51192, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,725 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-35197/bucket-0-92303, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,731 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45345/bucket-0-35457, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,743 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54252/bucket-0-32439, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,750 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-91709/bucket-0-54913, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,756 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-54540/bucket-1-99912, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,762 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-35197/bucket-1-23325, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,767 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45345/bucket-1-97768, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,773 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54252/bucket-1-49724, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,780 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-91709/bucket-1-18508, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,785 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-54540/bucket-2-58964, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,790 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-35197/bucket-2-49890, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,795 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45345/bucket-2-11375, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,801 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54252/bucket-2-86344, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,809 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-91709/bucket-2-49438, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,816 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-54540/bucket-3-11102, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,823 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-35197/bucket-3-52933, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,828 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45345/bucket-3-78660, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,832 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54252/bucket-3-29883, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,836 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-91709/bucket-3-29711, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,844 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-54540/bucket-4-80754, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,849 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-35197/bucket-4-73926, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,857 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45345/bucket-4-29649, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,861 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54252/bucket-4-80948, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:50,866 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-91709/bucket-4-33529, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-17 18:56:51,448 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-17 18:56:51,504 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-17 18:56:52,504 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:56:53,505 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:56:54,505 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:56:55,506 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:56:56,507 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:56:57,507 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:56:58,508 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:56:59,508 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:00,513 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:01,514 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:02,514 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:03,515 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:04,515 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:05,516 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:06,516 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:07,517 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:08,517 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:09,518 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:10,518 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:11,519 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:12,519 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:13,520 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:14,520 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:15,521 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:16,521 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:17,522 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:18,522 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:19,523 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:20,523 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:21,524 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:22,524 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:23,525 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:24,525 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:25,525 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:26,526 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:27,526 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:28,527 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:29,527 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:30,528 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:31,528 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:32,528 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:33,529 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:34,529 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:35,530 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:36,530 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:37,531 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:38,531 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:39,532 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:40,532 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:41,532 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:42,533 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:43,533 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:44,533 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:45,534 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:46,534 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:47,535 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:48,535 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:49,536 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:50,536 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:51,537 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:52,537 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:53,537 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:54,538 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:55,538 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:56,538 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:57,539 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:58,539 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:57:59,540 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:00,540 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:01,541 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:02,541 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:03,542 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:04,542 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:05,542 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:06,543 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:07,543 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:08,544 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:09,544 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:10,545 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:11,545 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:12,546 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:13,546 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:14,546 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:15,547 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:16,547 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:17,548 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:18,548 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:19,549 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:20,549 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:21,549 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:22,550 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:23,550 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:24,551 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-17 18:58:24,896 [pool-2-thread-1] WARN io.KeyOutputStream: Encountered exception java.io.IOException: Unexpected Storage Container Exception: java.util.concurrent.CompletionException: java.util.concurrent.CompletionException: org.apache.ratis.protocol.GroupMismatchException: 17657af0-51d7-4e42-b6e4-57fe0f8fcb33: group-F059344F4482 not found. on the pipeline Pipeline[ Id: 7a26211b-4187-4a6b-a448-f059344f4482, Nodes: 93be616a-c76c-44df-8d1f-dc41a9218677{ip: 172.21.0.3, host: ozone_datanode_3.ozone_default, networkLocation: /default-rack, certSerialId: null}a604709a-9287-4181-99c1-3c9890242625{ip: 172.21.0.5, host: ozone_datanode_1.ozone_default, networkLocation: /default-rack, certSerialId: null}17657af0-51d7-4e42-b6e4-57fe0f8fcb33{ip: 172.21.0.6, host: ozone_datanode_2.ozone_default, networkLocation: /default-rack, certSerialId: null}, Type:RATIS, Factor:THREE, State:OPEN, leaderId:93be616a-c76c-44df-8d1f-dc41a9218677, CreationTimestamp2020-04-17T18:56:33.267Z]. The last committed block length is 0, uncommitted data length is 10240 retry count 0
2020-04-17 18:58:24,900 [pool-2-thread-1] INFO io.BlockOutputStreamEntryPool: Allocating block with ExcludeList {datanodes = [], containerIds = [], pipelineIds = [PipelineID=7a26211b-4187-4a6b-a448-f059344f4482]}
2020-04-17 18:58:24,943 [pool-2-thread-1] ERROR freon.RandomKeyGenerator: Exception while adding key: key-0-83643 in bucket: bucket-0-51192 of volume: vol-0-54540.
java.io.IOException: INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleWrite(KeyOutputStream.java:229)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleRetry(KeyOutputStream.java:402)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleException(KeyOutputStream.java:347)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleFlushOrClose(KeyOutputStream.java:458)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.close(KeyOutputStream.java:509)
	at org.apache.hadoop.ozone.client.io.OzoneOutputStream.close(OzoneOutputStream.java:60)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.createKey(RandomKeyGenerator.java:720)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.access$1100(RandomKeyGenerator.java:88)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator$ObjectCreator.run(RandomKeyGenerator.java:615)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.handleError(OzoneManagerProtocolClientSideTranslatorPB.java:816)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.allocateBlock(OzoneManagerProtocolClientSideTranslatorPB.java:848)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.hdds.tracing.TraceAllMethod.invoke(TraceAllMethod.java:71)
	at com.sun.proxy.$Proxy22.allocateBlock(Unknown Source)
	at org.apache.hadoop.ozone.client.io.BlockOutputStreamEntryPool.allocateNewBlock(BlockOutputStreamEntryPool.java:281)
	at org.apache.hadoop.ozone.client.io.BlockOutputStreamEntryPool.allocateBlockIfNeeded(BlockOutputStreamEntryPool.java:327)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleWrite(KeyOutputStream.java:208)
	... 11 more
2020-04-17 18:58:25,551 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)
java.io.IOException: INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks

***************************************************
Status: Failed
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 1
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,191
Average Time spent in bucket creation: 00:00:00,115
Average Time spent in key creation: 00:00:00,115
Average Time spent in key write: 00:00:00,577
Total bytes written: 10240
Total number of writes validated: 0
Writes validated: 0.0 %
Successful validation: 0
Unsuccessful validation: 0
Total Execution time: 00:01:36,093
***************************************************</msg>
<status status="PASS" starttime="20200417 18:58:25.898" endtime="20200417 18:58:25.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:58:25.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200417 18:58:25.900" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200417 18:58:25.900" endtime="20200417 18:58:25.900"></status>
</kw>
<status status="FAIL" starttime="20200417 18:56:48.035" endtime="20200417 18:58:25.901"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" starttime="20200417 18:56:48.034" endtime="20200417 18:58:25.901" critical="yes">255 != 0</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20200417 18:56:47.927" endtime="20200417 18:58:25.902"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200417 18:58:25.909" level="INFO">${random} = 87647</msg>
<status status="PASS" starttime="20200417 18:58:25.909" endtime="20200417 18:58:25.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200417 18:58:25.910" level="INFO">${prefix} = 87647</msg>
<status status="PASS" starttime="20200417 18:58:25.910" endtime="20200417 18:58:25.910"></status>
</kw>
<status status="PASS" starttime="20200417 18:58:25.909" endtime="20200417 18:58:25.910"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 18:58:25.911" endtime="20200417 18:58:25.911"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:58:25.914" level="INFO">Running command 'ozone sh volume info o3://om:9862/87647-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:58:27.662" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 18:58:27.662" level="INFO">${output} = VOLUME_NOT_FOUND Volume 87647-rpcwoport is not found</msg>
<status status="PASS" starttime="20200417 18:58:25.912" endtime="20200417 18:58:27.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:58:27.664" level="INFO">VOLUME_NOT_FOUND Volume 87647-rpcwoport is not found</msg>
<status status="PASS" starttime="20200417 18:58:27.663" endtime="20200417 18:58:27.664"></status>
</kw>
<msg timestamp="20200417 18:58:27.664" level="INFO">${result} = VOLUME_NOT_FOUND Volume 87647-rpcwoport is not found</msg>
<status status="PASS" starttime="20200417 18:58:25.912" endtime="20200417 18:58:27.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200417 18:58:27.664" endtime="20200417 18:58:27.665"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:58:27.668" level="INFO">Running command 'ozone sh volume create o3://om:9862/87647-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:58:29.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:58:29.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 18:58:27.666" endtime="20200417 18:58:29.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:58:29.618" level="INFO"></msg>
<status status="PASS" starttime="20200417 18:58:29.617" endtime="20200417 18:58:29.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:58:29.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:58:29.618" endtime="20200417 18:58:29.618"></status>
</kw>
<msg timestamp="20200417 18:58:29.619" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200417 18:58:27.665" endtime="20200417 18:58:29.619"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200417 18:58:29.619" endtime="20200417 18:58:29.619"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:58:29.622" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="87647-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:58:31.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:58:31.718" level="INFO">${output} = {
  "metadata": {},
  "name": "87647-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:58:29.588Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 18:58:29.620" endtime="20200417 18:58:31.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:58:31.719" level="INFO">{
  "metadata": {},
  "name": "87647-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:58:29.588Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 18:58:31.718" endtime="20200417 18:58:31.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:58:31.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:58:31.719" endtime="20200417 18:58:31.720"></status>
</kw>
<msg timestamp="20200417 18:58:31.720" level="INFO">${result} = {
  "metadata": {},
  "name": "87647-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:58:29.588Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 18:58:29.619" endtime="20200417 18:58:31.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 18:58:31.720" endtime="20200417 18:58:31.720"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:58:31.723" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="87647-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:58:34.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:58:34.031" level="INFO">${output} = {
  "metadata": {},
  "name": "87647-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:58:29.588Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 18:58:31.721" endtime="20200417 18:58:34.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:58:34.032" level="INFO">{
  "metadata": {},
  "name": "87647-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:58:29.588Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 18:58:34.031" endtime="20200417 18:58:34.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:58:34.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:58:34.032" endtime="20200417 18:58:34.033"></status>
</kw>
<msg timestamp="20200417 18:58:34.033" level="INFO">${result} = {
  "metadata": {},
  "name": "87647-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T18:58:29.588Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200417 18:58:31.720" endtime="20200417 18:58:34.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 18:58:34.033" endtime="20200417 18:58:34.034"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:58:34.037" level="INFO">Running command 'ozone sh volume update o3://om:9862/87647-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:58:36.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:58:36.029" level="INFO">${output} = {
  "metadata" : { },
  "name" : "87647-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T18:58:29.588Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200417 18:58:34.034" endtime="20200417 18:58:36.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:58:36.030" level="INFO">{
  "metadata" : { },
  "name" : "87647-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T18:58:29.588Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200417 18:58:36.029" endtime="20200417 18:58:36.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:58:36.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:58:36.030" endtime="20200417 18:58:36.031"></status>
</kw>
<status status="PASS" starttime="20200417 18:58:34.034" endtime="20200417 18:58:36.031"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:58:36.035" level="INFO">Running command 'ozone sh volume info o3://om:9862/87647-rpcwoport | jq -r '. | select(.name=="87647-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:58:38.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:58:38.067" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200417 18:58:36.032" endtime="20200417 18:58:38.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:58:38.069" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200417 18:58:38.068" endtime="20200417 18:58:38.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:58:38.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:58:38.069" endtime="20200417 18:58:38.069"></status>
</kw>
<msg timestamp="20200417 18:58:38.070" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200417 18:58:36.031" endtime="20200417 18:58:38.070"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200417 18:58:38.070" endtime="20200417 18:58:38.070"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:58:38.076" level="INFO">Running command 'ozone sh bucket create o3://om:9862/87647-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:58:39.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:58:39.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 18:58:38.071" endtime="20200417 18:58:39.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:58:39.982" level="INFO"></msg>
<status status="PASS" starttime="20200417 18:58:39.981" endtime="20200417 18:58:39.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:58:39.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:58:39.983" endtime="20200417 18:58:39.985"></status>
</kw>
<status status="PASS" starttime="20200417 18:58:38.070" endtime="20200417 18:58:39.985"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:58:39.988" level="INFO">Running command 'ozone sh bucket info o3://om:9862/87647-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:58:41.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:58:41.981" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200417 18:58:39.986" endtime="20200417 18:58:41.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:58:41.982" level="INFO">DISK</msg>
<status status="PASS" starttime="20200417 18:58:41.982" endtime="20200417 18:58:41.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:58:41.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:58:41.983" endtime="20200417 18:58:41.983"></status>
</kw>
<msg timestamp="20200417 18:58:41.984" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200417 18:58:39.985" endtime="20200417 18:58:41.984"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200417 18:58:41.984" endtime="20200417 18:58:41.984"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:58:41.988" level="INFO">Running command 'ozone sh bucket list o3://om:9862/87647-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 18:58:44.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 18:58:44.010" level="INFO">${output} = 87647-rpcwoport</msg>
<status status="PASS" starttime="20200417 18:58:41.985" endtime="20200417 18:58:44.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 18:58:44.011" level="INFO">87647-rpcwoport</msg>
<status status="PASS" starttime="20200417 18:58:44.010" endtime="20200417 18:58:44.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 18:58:44.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 18:58:44.011" endtime="20200417 18:58:44.011"></status>
</kw>
<msg timestamp="20200417 18:58:44.012" level="INFO">${result} = 87647-rpcwoport</msg>
<status status="PASS" starttime="20200417 18:58:41.984" endtime="20200417 18:58:44.012"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200417 18:58:44.012" endtime="20200417 18:58:44.012"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 18:58:44.016" level="INFO">Running command 'ozone sh key put o3://om:9862/87647-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:19.798" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 19:00:19.798" level="INFO">${output} = INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 18:58:44.013" endtime="20200417 19:00:19.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:19.799" level="INFO">INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 19:00:19.798" endtime="20200417 19:00:19.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:19.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200417 19:00:19.800" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200417 19:00:19.799" endtime="20200417 19:00:19.800"></status>
</kw>
<status status="FAIL" starttime="20200417 18:58:44.013" endtime="20200417 19:00:19.800"></status>
</kw>
<status status="FAIL" starttime="20200417 18:58:44.013" endtime="20200417 19:00:19.800"></status>
</kw>
<status status="FAIL" starttime="20200417 18:58:44.012" endtime="20200417 19:00:19.800"></status>
</kw>
<status status="FAIL" starttime="20200417 18:58:25.911" endtime="20200417 19:00:19.800"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 18:58:25.910" endtime="20200417 19:00:19.801" critical="yes">255 != 0</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:19.802" endtime="20200417 19:00:19.802"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:19.806" level="INFO">Running command 'ozone sh volume create o3://om:9862/87647-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:21.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:21.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 19:00:19.803" endtime="20200417 19:00:21.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:21.604" level="INFO"></msg>
<status status="PASS" starttime="20200417 19:00:21.604" endtime="20200417 19:00:21.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:21.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:21.605" endtime="20200417 19:00:21.605"></status>
</kw>
<status status="PASS" starttime="20200417 19:00:19.803" endtime="20200417 19:00:21.605"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:21.609" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/87647-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:23.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:23.894" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 19:00:21.606" endtime="20200417 19:00:23.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:23.895" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 19:00:23.895" endtime="20200417 19:00:23.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:23.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:23.896" endtime="20200417 19:00:23.896"></status>
</kw>
<msg timestamp="20200417 19:00:23.896" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 19:00:21.606" endtime="20200417 19:00:23.896"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:23.896" endtime="20200417 19:00:23.897"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:23.900" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/87647-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:25.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:25.608" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200417 19:00:23.898" endtime="20200417 19:00:25.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:25.609" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200417 19:00:25.609" endtime="20200417 19:00:25.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:25.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:25.609" endtime="20200417 19:00:25.610"></status>
</kw>
<msg timestamp="20200417 19:00:25.610" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200417 19:00:23.897" endtime="20200417 19:00:25.610"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:25.614" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/87647-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:27.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:27.655" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 19:00:25.611" endtime="20200417 19:00:27.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:27.656" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200417 19:00:27.655" endtime="20200417 19:00:27.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:27.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:27.656" endtime="20200417 19:00:27.657"></status>
</kw>
<msg timestamp="20200417 19:00:27.657" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 19:00:25.610" endtime="20200417 19:00:27.657"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:27.657" endtime="20200417 19:00:27.658"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:27.661" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/87647-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:29.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:29.424" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200417 19:00:27.659" endtime="20200417 19:00:29.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:29.426" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200417 19:00:29.425" endtime="20200417 19:00:29.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:29.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:29.426" endtime="20200417 19:00:29.426"></status>
</kw>
<msg timestamp="20200417 19:00:29.426" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200417 19:00:27.659" endtime="20200417 19:00:29.427"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:29.431" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/87647-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:31.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:31.504" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 19:00:29.427" endtime="20200417 19:00:31.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:31.505" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200417 19:00:31.505" endtime="20200417 19:00:31.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:31.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:31.506" endtime="20200417 19:00:31.506"></status>
</kw>
<msg timestamp="20200417 19:00:31.507" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 19:00:29.427" endtime="20200417 19:00:31.507"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:31.507" endtime="20200417 19:00:31.508"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:31.511" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/87647-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:33.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:33.304" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 19:00:31.509" endtime="20200417 19:00:33.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:33.305" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 19:00:33.305" endtime="20200417 19:00:33.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:33.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:33.306" endtime="20200417 19:00:33.306"></status>
</kw>
<msg timestamp="20200417 19:00:33.306" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 19:00:31.508" endtime="20200417 19:00:33.306"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:33.309" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/87647-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:35.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:35.211" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200417 19:00:33.307" endtime="20200417 19:00:35.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:35.212" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 19:00:35.211" endtime="20200417 19:00:35.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:35.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:35.212" endtime="20200417 19:00:35.212"></status>
</kw>
<msg timestamp="20200417 19:00:35.213" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200417 19:00:33.307" endtime="20200417 19:00:35.213"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:35.213" endtime="20200417 19:00:35.213"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:35.213" endtime="20200417 19:00:35.214"></status>
</kw>
<status status="PASS" starttime="20200417 19:00:19.803" endtime="20200417 19:00:35.214"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200417 19:00:19.801" endtime="20200417 19:00:35.214" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:35.216" endtime="20200417 19:00:35.216"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:35.220" level="INFO">Running command 'ozone sh bucket create o3://om:9862/87647-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:36.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:36.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 19:00:35.217" endtime="20200417 19:00:36.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:36.998" level="INFO"></msg>
<status status="PASS" starttime="20200417 19:00:36.997" endtime="20200417 19:00:36.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:36.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:36.998" endtime="20200417 19:00:36.999"></status>
</kw>
<status status="PASS" starttime="20200417 19:00:35.217" endtime="20200417 19:00:36.999"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:37.002" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/87647-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:38.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:38.975" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 19:00:37.000" endtime="20200417 19:00:38.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:38.976" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 19:00:38.975" endtime="20200417 19:00:38.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:38.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:38.976" endtime="20200417 19:00:38.977"></status>
</kw>
<msg timestamp="20200417 19:00:38.977" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 19:00:36.999" endtime="20200417 19:00:38.977"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:38.977" endtime="20200417 19:00:38.977"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:38.980" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/87647-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:40.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:40.894" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200417 19:00:38.978" endtime="20200417 19:00:40.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:40.895" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200417 19:00:40.894" endtime="20200417 19:00:40.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:40.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:40.895" endtime="20200417 19:00:40.896"></status>
</kw>
<msg timestamp="20200417 19:00:40.896" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200417 19:00:38.978" endtime="20200417 19:00:40.896"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:40.899" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/87647-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:42.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:42.827" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 19:00:40.897" endtime="20200417 19:00:42.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:42.828" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 19:00:42.827" endtime="20200417 19:00:42.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:42.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:42.828" endtime="20200417 19:00:42.829"></status>
</kw>
<msg timestamp="20200417 19:00:42.829" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 19:00:40.896" endtime="20200417 19:00:42.829"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:42.829" endtime="20200417 19:00:42.830"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:42.834" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/87647-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:44.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:44.484" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200417 19:00:42.831" endtime="20200417 19:00:44.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:44.486" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200417 19:00:44.485" endtime="20200417 19:00:44.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:44.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:44.486" endtime="20200417 19:00:44.486"></status>
</kw>
<msg timestamp="20200417 19:00:44.486" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200417 19:00:42.830" endtime="20200417 19:00:44.487"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:44.490" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/87647-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:46.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:46.577" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 19:00:44.487" endtime="20200417 19:00:46.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:46.578" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 19:00:46.578" endtime="20200417 19:00:46.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:46.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:46.579" endtime="20200417 19:00:46.579"></status>
</kw>
<msg timestamp="20200417 19:00:46.579" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200417 19:00:44.487" endtime="20200417 19:00:46.579"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:46.580" endtime="20200417 19:00:46.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:46.583" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/87647-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:48.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:48.326" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 19:00:46.581" endtime="20200417 19:00:48.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:48.327" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 19:00:48.327" endtime="20200417 19:00:48.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:48.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:48.328" endtime="20200417 19:00:48.328"></status>
</kw>
<msg timestamp="20200417 19:00:48.329" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200417 19:00:46.581" endtime="20200417 19:00:48.329"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:48.332" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/87647-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:00:50.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:00:50.238" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200417 19:00:48.329" endtime="20200417 19:00:50.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:00:50.239" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200417 19:00:50.238" endtime="20200417 19:00:50.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:00:50.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:00:50.239" endtime="20200417 19:00:50.240"></status>
</kw>
<msg timestamp="20200417 19:00:50.240" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200417 19:00:48.329" endtime="20200417 19:00:50.240"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:50.240" endtime="20200417 19:00:50.241"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:50.241" endtime="20200417 19:00:50.241"></status>
</kw>
<status status="PASS" starttime="20200417 19:00:35.216" endtime="20200417 19:00:50.241"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200417 19:00:35.215" endtime="20200417 19:00:50.242" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 19:00:50.243" endtime="20200417 19:00:50.243"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:00:50.247" level="INFO">Running command 'ozone sh key put o3://om:9862/87647-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:02:26.060" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 19:02:26.060" level="INFO">${output} = INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 19:00:50.244" endtime="20200417 19:02:26.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:02:26.061" level="INFO">INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 19:02:26.060" endtime="20200417 19:02:26.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:02:26.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200417 19:02:26.062" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200417 19:02:26.061" endtime="20200417 19:02:26.062"></status>
</kw>
<status status="FAIL" starttime="20200417 19:00:50.244" endtime="20200417 19:02:26.062"></status>
</kw>
<status status="FAIL" starttime="20200417 19:00:50.243" endtime="20200417 19:02:26.062"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 19:00:50.242" endtime="20200417 19:02:26.062" critical="yes">255 != 0</status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 19:02:26.064" endtime="20200417 19:02:26.064"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:02:26.067" level="INFO">Running command 'ozone sh volume info o3:///87647-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:02:27.817" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 19:02:27.817" level="INFO">${output} = VOLUME_NOT_FOUND Volume 87647-rpcwport is not found</msg>
<status status="PASS" starttime="20200417 19:02:26.065" endtime="20200417 19:02:27.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:02:27.818" level="INFO">VOLUME_NOT_FOUND Volume 87647-rpcwport is not found</msg>
<status status="PASS" starttime="20200417 19:02:27.817" endtime="20200417 19:02:27.818"></status>
</kw>
<msg timestamp="20200417 19:02:27.818" level="INFO">${result} = VOLUME_NOT_FOUND Volume 87647-rpcwport is not found</msg>
<status status="PASS" starttime="20200417 19:02:26.065" endtime="20200417 19:02:27.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200417 19:02:27.819" endtime="20200417 19:02:27.819"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:02:27.822" level="INFO">Running command 'ozone sh volume create o3:///87647-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:02:29.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:02:29.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 19:02:27.820" endtime="20200417 19:02:29.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:02:29.678" level="INFO"></msg>
<status status="PASS" starttime="20200417 19:02:29.677" endtime="20200417 19:02:29.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:02:29.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:02:29.678" endtime="20200417 19:02:29.679"></status>
</kw>
<msg timestamp="20200417 19:02:29.679" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200417 19:02:27.819" endtime="20200417 19:02:29.679"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200417 19:02:29.679" endtime="20200417 19:02:29.680"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:02:29.683" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="87647-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:02:31.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:02:31.814" level="INFO">${output} = {
  "metadata": {},
  "name": "87647-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:02:29.659Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 19:02:29.681" endtime="20200417 19:02:31.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:02:31.815" level="INFO">{
  "metadata": {},
  "name": "87647-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:02:29.659Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 19:02:31.815" endtime="20200417 19:02:31.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:02:31.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:02:31.816" endtime="20200417 19:02:31.816"></status>
</kw>
<msg timestamp="20200417 19:02:31.816" level="INFO">${result} = {
  "metadata": {},
  "name": "87647-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:02:29.659Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 19:02:29.680" endtime="20200417 19:02:31.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 19:02:31.817" endtime="20200417 19:02:31.817"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:02:31.820" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="87647-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:02:33.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:02:33.859" level="INFO">${output} = {
  "metadata": {},
  "name": "87647-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:02:29.659Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 19:02:31.818" endtime="20200417 19:02:33.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:02:33.861" level="INFO">{
  "metadata": {},
  "name": "87647-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:02:29.659Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 19:02:33.860" endtime="20200417 19:02:33.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:02:33.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:02:33.861" endtime="20200417 19:02:33.862"></status>
</kw>
<msg timestamp="20200417 19:02:33.862" level="INFO">${result} = {
  "metadata": {},
  "name": "87647-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:02:29.659Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200417 19:02:31.817" endtime="20200417 19:02:33.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 19:02:33.862" endtime="20200417 19:02:33.862"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:02:33.866" level="INFO">Running command 'ozone sh volume update o3:///87647-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:02:35.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:02:35.879" level="INFO">${output} = {
  "metadata" : { },
  "name" : "87647-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T19:02:29.659Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200417 19:02:33.863" endtime="20200417 19:02:35.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:02:35.880" level="INFO">{
  "metadata" : { },
  "name" : "87647-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T19:02:29.659Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200417 19:02:35.879" endtime="20200417 19:02:35.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:02:35.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:02:35.880" endtime="20200417 19:02:35.881"></status>
</kw>
<status status="PASS" starttime="20200417 19:02:33.862" endtime="20200417 19:02:35.881"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:02:35.885" level="INFO">Running command 'ozone sh volume info o3:///87647-rpcwport | jq -r '. | select(.name=="87647-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:02:37.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:02:37.917" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200417 19:02:35.882" endtime="20200417 19:02:37.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:02:37.918" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200417 19:02:37.917" endtime="20200417 19:02:37.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:02:37.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:02:37.918" endtime="20200417 19:02:37.919"></status>
</kw>
<msg timestamp="20200417 19:02:37.919" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200417 19:02:35.881" endtime="20200417 19:02:37.919"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200417 19:02:37.919" endtime="20200417 19:02:37.920"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:02:37.923" level="INFO">Running command 'ozone sh bucket create o3:///87647-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:02:39.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:02:39.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 19:02:37.921" endtime="20200417 19:02:39.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:02:39.866" level="INFO"></msg>
<status status="PASS" starttime="20200417 19:02:39.866" endtime="20200417 19:02:39.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:02:39.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:02:39.866" endtime="20200417 19:02:39.867"></status>
</kw>
<status status="PASS" starttime="20200417 19:02:37.920" endtime="20200417 19:02:39.867"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:02:39.872" level="INFO">Running command 'ozone sh bucket info o3:///87647-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:02:41.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:02:41.876" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200417 19:02:39.868" endtime="20200417 19:02:41.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:02:41.877" level="INFO">DISK</msg>
<status status="PASS" starttime="20200417 19:02:41.877" endtime="20200417 19:02:41.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:02:41.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:02:41.878" endtime="20200417 19:02:41.878"></status>
</kw>
<msg timestamp="20200417 19:02:41.878" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200417 19:02:39.868" endtime="20200417 19:02:41.878"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200417 19:02:41.879" endtime="20200417 19:02:41.879"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:02:41.883" level="INFO">Running command 'ozone sh bucket list o3:///87647-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:02:43.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:02:43.883" level="INFO">${output} = 87647-rpcwport</msg>
<status status="PASS" starttime="20200417 19:02:41.880" endtime="20200417 19:02:43.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:02:43.884" level="INFO">87647-rpcwport</msg>
<status status="PASS" starttime="20200417 19:02:43.884" endtime="20200417 19:02:43.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:02:43.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:02:43.885" endtime="20200417 19:02:43.885"></status>
</kw>
<msg timestamp="20200417 19:02:43.885" level="INFO">${result} = 87647-rpcwport</msg>
<status status="PASS" starttime="20200417 19:02:41.879" endtime="20200417 19:02:43.885"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200417 19:02:43.885" endtime="20200417 19:02:43.887"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:02:43.891" level="INFO">Running command 'ozone sh key put o3:///87647-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:04:19.644" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 19:04:19.644" level="INFO">${output} = INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 19:02:43.888" endtime="20200417 19:04:19.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:04:19.645" level="INFO">INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 19:04:19.644" endtime="20200417 19:04:19.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:04:19.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200417 19:04:19.646" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200417 19:04:19.645" endtime="20200417 19:04:19.646"></status>
</kw>
<status status="FAIL" starttime="20200417 19:02:43.888" endtime="20200417 19:04:19.646"></status>
</kw>
<status status="FAIL" starttime="20200417 19:02:43.887" endtime="20200417 19:04:19.646"></status>
</kw>
<status status="FAIL" starttime="20200417 19:02:43.887" endtime="20200417 19:04:19.647"></status>
</kw>
<status status="FAIL" starttime="20200417 19:02:26.064" endtime="20200417 19:04:19.647"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 19:02:26.063" endtime="20200417 19:04:19.647" critical="yes">255 != 0</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200417 19:04:19.649" endtime="20200417 19:04:19.649"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:04:19.652" level="INFO">Running command 'ozone sh volume info /87647-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:04:21.402" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 19:04:21.402" level="INFO">${output} = VOLUME_NOT_FOUND Volume 87647-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200417 19:04:19.650" endtime="20200417 19:04:21.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:04:21.403" level="INFO">VOLUME_NOT_FOUND Volume 87647-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200417 19:04:21.402" endtime="20200417 19:04:21.403"></status>
</kw>
<msg timestamp="20200417 19:04:21.403" level="INFO">${result} = VOLUME_NOT_FOUND Volume 87647-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200417 19:04:19.650" endtime="20200417 19:04:21.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200417 19:04:21.404" endtime="20200417 19:04:21.404"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:04:21.407" level="INFO">Running command 'ozone sh volume create /87647-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:04:23.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:04:23.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 19:04:21.405" endtime="20200417 19:04:23.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:04:23.198" level="INFO"></msg>
<status status="PASS" starttime="20200417 19:04:23.197" endtime="20200417 19:04:23.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:04:23.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:04:23.198" endtime="20200417 19:04:23.199"></status>
</kw>
<msg timestamp="20200417 19:04:23.199" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200417 19:04:21.404" endtime="20200417 19:04:23.199"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200417 19:04:23.199" endtime="20200417 19:04:23.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:04:23.203" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="87647-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:04:25.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:04:25.443" level="INFO">${output} = {
  "metadata": {},
  "name": "87647-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:04:23.180Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 19:04:23.200" endtime="20200417 19:04:25.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:04:25.444" level="INFO">{
  "metadata": {},
  "name": "87647-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:04:23.180Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 19:04:25.443" endtime="20200417 19:04:25.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:04:25.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:04:25.444" endtime="20200417 19:04:25.445"></status>
</kw>
<msg timestamp="20200417 19:04:25.445" level="INFO">${result} = {
  "metadata": {},
  "name": "87647-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:04:23.180Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 19:04:23.200" endtime="20200417 19:04:25.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 19:04:25.445" endtime="20200417 19:04:25.446"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:04:25.449" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="87647-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:04:27.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:04:27.366" level="INFO">${output} = {
  "metadata": {},
  "name": "87647-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:04:23.180Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 19:04:25.446" endtime="20200417 19:04:27.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:04:27.368" level="INFO">{
  "metadata": {},
  "name": "87647-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:04:23.180Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200417 19:04:27.367" endtime="20200417 19:04:27.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:04:27.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:04:27.368" endtime="20200417 19:04:27.368"></status>
</kw>
<msg timestamp="20200417 19:04:27.369" level="INFO">${result} = {
  "metadata": {},
  "name": "87647-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-17T19:04:23.180Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200417 19:04:25.446" endtime="20200417 19:04:27.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200417 19:04:27.369" endtime="20200417 19:04:27.369"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:04:27.373" level="INFO">Running command 'ozone sh volume update /87647-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:04:29.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:04:29.393" level="INFO">${output} = {
  "metadata" : { },
  "name" : "87647-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T19:04:23.180Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200417 19:04:27.370" endtime="20200417 19:04:29.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:04:29.394" level="INFO">{
  "metadata" : { },
  "name" : "87647-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-17T19:04:23.180Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200417 19:04:29.393" endtime="20200417 19:04:29.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:04:29.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:04:29.394" endtime="20200417 19:04:29.395"></status>
</kw>
<status status="PASS" starttime="20200417 19:04:27.369" endtime="20200417 19:04:29.395"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:04:29.398" level="INFO">Running command 'ozone sh volume info /87647-rpcwoscheme | jq -r '. | select(.name=="87647-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:04:31.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:04:31.470" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200417 19:04:29.396" endtime="20200417 19:04:31.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:04:31.472" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200417 19:04:31.471" endtime="20200417 19:04:31.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:04:31.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:04:31.472" endtime="20200417 19:04:31.472"></status>
</kw>
<msg timestamp="20200417 19:04:31.473" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200417 19:04:29.395" endtime="20200417 19:04:31.473"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200417 19:04:31.473" endtime="20200417 19:04:31.473"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:04:31.476" level="INFO">Running command 'ozone sh bucket create /87647-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:04:33.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:04:33.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200417 19:04:31.474" endtime="20200417 19:04:33.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:04:33.263" level="INFO"></msg>
<status status="PASS" starttime="20200417 19:04:33.262" endtime="20200417 19:04:33.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:04:33.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:04:33.263" endtime="20200417 19:04:33.264"></status>
</kw>
<status status="PASS" starttime="20200417 19:04:31.473" endtime="20200417 19:04:33.264"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:04:33.268" level="INFO">Running command 'ozone sh bucket info /87647-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:04:35.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:04:35.264" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200417 19:04:33.265" endtime="20200417 19:04:35.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:04:35.265" level="INFO">DISK</msg>
<status status="PASS" starttime="20200417 19:04:35.264" endtime="20200417 19:04:35.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:04:35.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:04:35.265" endtime="20200417 19:04:35.266"></status>
</kw>
<msg timestamp="20200417 19:04:35.266" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200417 19:04:33.264" endtime="20200417 19:04:35.266"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200417 19:04:35.266" endtime="20200417 19:04:35.267"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:04:35.271" level="INFO">Running command 'ozone sh bucket list /87647-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:04:37.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200417 19:04:37.349" level="INFO">${output} = 87647-rpcwoscheme</msg>
<status status="PASS" starttime="20200417 19:04:35.267" endtime="20200417 19:04:37.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:04:37.351" level="INFO">87647-rpcwoscheme</msg>
<status status="PASS" starttime="20200417 19:04:37.350" endtime="20200417 19:04:37.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:04:37.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200417 19:04:37.351" endtime="20200417 19:04:37.351"></status>
</kw>
<msg timestamp="20200417 19:04:37.351" level="INFO">${result} = 87647-rpcwoscheme</msg>
<status status="PASS" starttime="20200417 19:04:35.267" endtime="20200417 19:04:37.351"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200417 19:04:37.352" endtime="20200417 19:04:37.352"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200417 19:04:37.356" level="INFO">Running command 'ozone sh key put /87647-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200417 19:06:13.144" level="INFO">${rc} = 255</msg>
<msg timestamp="20200417 19:06:13.144" level="INFO">${output} = INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 19:04:37.354" endtime="20200417 19:06:13.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200417 19:06:13.145" level="INFO">INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200417 19:06:13.145" endtime="20200417 19:06:13.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200417 19:06:13.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200417 19:06:13.146" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200417 19:06:13.146" endtime="20200417 19:06:13.146"></status>
</kw>
<status status="FAIL" starttime="20200417 19:04:37.353" endtime="20200417 19:06:13.147"></status>
</kw>
<status status="FAIL" starttime="20200417 19:04:37.353" endtime="20200417 19:06:13.147"></status>
</kw>
<status status="FAIL" starttime="20200417 19:04:37.352" endtime="20200417 19:06:13.147"></status>
</kw>
<status status="FAIL" starttime="20200417 19:04:19.649" endtime="20200417 19:06:13.147"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200417 19:04:19.648" endtime="20200417 19:06:13.147" critical="yes">255 != 0</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20200417 18:58:25.903" endtime="20200417 19:06:13.149"></status>
</suite>
<status status="FAIL" starttime="20200417 18:56:47.902" endtime="20200417 19:06:13.153"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="5">Critical Tests</stat>
<stat pass="3" fail="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="5" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="1" fail="1" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="2" fail="4" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
