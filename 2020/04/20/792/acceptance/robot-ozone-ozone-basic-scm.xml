<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200420 12:17:38.220" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200420 12:17:38.272" endtime="20200420 12:17:38.272"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:17:38.277" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:17:38.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:17:38.355" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 20 Apr 2020 12:17:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 20 Apr 2020 10:51:40 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200420 12:17:38.273" endtime="20200420 12:17:38.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:17:38.356" level="INFO">HTTP/1.1 200 OK
Date: Mon, 20 Apr 2020 12:17:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 20 Apr 2020 10:51:40 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200420 12:17:38.355" endtime="20200420 12:17:38.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:17:38.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:17:38.356" endtime="20200420 12:17:38.357"></status>
</kw>
<msg timestamp="20200420 12:17:38.357" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 20 Apr 2020 12:17:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 20 Apr 2020 10:51:40 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200420 12:17:38.273" endtime="20200420 12:17:38.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200420 12:17:38.357" endtime="20200420 12:17:38.357"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200420 12:17:38.271" endtime="20200420 12:17:38.358" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200420 12:17:38.360" endtime="20200420 12:17:38.360"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:17:38.364" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:19:15.968" level="INFO">${rc} = 255</msg>
<msg timestamp="20200420 12:19:15.968" level="INFO">${output} = 2020-04-20 12:17:39,251 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-20 12:17:39,408 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200420 12:17:38.361" endtime="20200420 12:19:15.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:19:15.969" level="INFO">2020-04-20 12:17:39,251 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-20 12:17:39,408 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-20 12:17:39,408 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-20 12:17:40,520 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-20 12:17:40,521 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-20 12:17:40,521 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-20 12:17:40,521 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-20 12:17:40,521 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-20 12:17:40,521 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-20 12:17:40,521 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-20 12:17:40,525 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-20 12:17:40,526 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-20 12:17:40,539 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-20 12:17:40,566 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-57086, with hadoop as owner.
2020-04-20 12:17:40,659 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-31314, with hadoop as owner.
2020-04-20 12:17:40,679 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-25315, with hadoop as owner.
2020-04-20 12:17:40,686 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-43351, with hadoop as owner.
2020-04-20 12:17:40,692 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-15276, with hadoop as owner.
2020-04-20 12:17:40,715 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-57086/bucket-0-41356, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,750 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-31314/bucket-0-79729, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,755 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-25315/bucket-0-38357, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,761 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-43351/bucket-0-33676, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,767 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-15276/bucket-0-59120, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,771 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-57086/bucket-1-69377, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,776 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-31314/bucket-1-33907, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,783 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-25315/bucket-1-08490, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,788 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-43351/bucket-1-67924, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,795 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-15276/bucket-1-80908, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,801 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-57086/bucket-2-60845, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,806 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-31314/bucket-2-39326, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,811 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-25315/bucket-2-79157, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,817 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-43351/bucket-2-48206, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,822 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-15276/bucket-2-31999, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,830 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-57086/bucket-3-86413, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,837 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-31314/bucket-3-73182, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,842 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-25315/bucket-3-68493, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,847 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-43351/bucket-3-82514, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,851 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-15276/bucket-3-53018, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,856 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-57086/bucket-4-90055, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,860 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-31314/bucket-4-11523, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,864 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-25315/bucket-4-22810, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,871 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-43351/bucket-4-04509, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:40,874 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-15276/bucket-4-49805, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-20 12:17:41,376 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-20 12:17:41,542 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:42,542 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:43,543 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:44,543 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:45,544 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:46,545 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:47,545 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:48,546 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:49,547 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:50,547 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:51,548 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:52,548 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:53,549 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:54,549 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:55,550 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:56,550 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:57,551 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:58,552 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:17:59,552 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:00,552 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:01,553 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:02,554 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:03,554 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:04,555 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:05,555 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:06,555 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:07,556 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:08,556 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:09,557 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:10,557 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:11,558 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:12,558 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:13,558 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:14,559 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:15,559 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:16,560 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:17,560 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:18,561 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:19,562 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:20,562 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:21,563 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:22,563 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:23,564 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:24,564 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:25,565 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:26,565 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:27,565 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:28,566 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:29,566 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:30,567 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:31,568 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:32,568 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:33,569 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:34,569 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:35,570 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:36,570 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:37,571 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:38,571 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:39,571 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:40,572 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:41,572 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:42,573 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:43,573 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:44,574 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:45,574 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:46,575 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:47,575 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:48,575 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:49,576 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:50,576 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:51,577 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:52,577 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:53,577 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:54,578 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:55,578 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:56,579 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:57,579 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:58,580 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:18:59,580 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:00,580 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:01,581 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:02,581 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:03,582 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:04,582 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:05,583 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:06,583 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:07,584 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:08,584 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:09,585 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:10,585 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:11,585 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:12,586 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:13,586 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:14,554 [pool-2-thread-1] WARN io.KeyOutputStream: Encountered exception java.io.IOException: Unexpected Storage Container Exception: java.util.concurrent.CompletionException: java.util.concurrent.CompletionException: org.apache.ratis.protocol.GroupMismatchException: 175c1ce4-a4bc-4858-9a69-a6ac92762c21: group-59C4E3B5DF2B not found. on the pipeline Pipeline[ Id: 99e9249b-6272-4da5-81f6-59c4e3b5df2b, Nodes: 258ceeb5-4c9c-49bf-b393-79534db322e4{ip: 172.21.0.2, host: ozone_datanode_3.ozone_default, networkLocation: /default-rack, certSerialId: null}175c1ce4-a4bc-4858-9a69-a6ac92762c21{ip: 172.21.0.3, host: ozone_datanode_2.ozone_default, networkLocation: /default-rack, certSerialId: null}bb3db77a-6a57-4c4e-bdc7-ea39008446e6{ip: 172.21.0.8, host: ozone_datanode_1.ozone_default, networkLocation: /default-rack, certSerialId: null}, Type:RATIS, Factor:THREE, State:OPEN, leaderId:258ceeb5-4c9c-49bf-b393-79534db322e4, CreationTimestamp2020-04-20T12:17:25.891Z]. The last committed block length is 0, uncommitted data length is 10240 retry count 0
2020-04-20 12:19:14,556 [pool-2-thread-1] INFO io.BlockOutputStreamEntryPool: Allocating block with ExcludeList {datanodes = [], containerIds = [], pipelineIds = [PipelineID=99e9249b-6272-4da5-81f6-59c4e3b5df2b]}
2020-04-20 12:19:14,582 [pool-2-thread-1] ERROR freon.RandomKeyGenerator: Exception while adding key: key-0-05249 in bucket: bucket-0-41356 of volume: vol-0-57086.
java.io.IOException: INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleWrite(KeyOutputStream.java:229)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleRetry(KeyOutputStream.java:402)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleException(KeyOutputStream.java:347)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleFlushOrClose(KeyOutputStream.java:458)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.close(KeyOutputStream.java:509)
	at org.apache.hadoop.ozone.client.io.OzoneOutputStream.close(OzoneOutputStream.java:60)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.createKey(RandomKeyGenerator.java:720)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.access$1100(RandomKeyGenerator.java:88)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator$ObjectCreator.run(RandomKeyGenerator.java:615)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.handleError(OzoneManagerProtocolClientSideTranslatorPB.java:816)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.allocateBlock(OzoneManagerProtocolClientSideTranslatorPB.java:848)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.hdds.tracing.TraceAllMethod.invoke(TraceAllMethod.java:71)
	at com.sun.proxy.$Proxy22.allocateBlock(Unknown Source)
	at org.apache.hadoop.ozone.client.io.BlockOutputStreamEntryPool.allocateNewBlock(BlockOutputStreamEntryPool.java:281)
	at org.apache.hadoop.ozone.client.io.BlockOutputStreamEntryPool.allocateBlockIfNeeded(BlockOutputStreamEntryPool.java:327)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleWrite(KeyOutputStream.java:208)
	... 11 more
2020-04-20 12:19:14,587 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-20 12:19:15,587 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)
java.io.IOException: INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks

***************************************************
Status: Failed
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 1
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,141
Average Time spent in bucket creation: 00:00:00,125
Average Time spent in key creation: 00:00:00,089
Average Time spent in key write: 00:00:00,492
Total bytes written: 10240
Total number of writes validated: 0
Writes validated: 0.0 %
Successful validation: 0
Unsuccessful validation: 0
Total Execution time: 00:01:35,954
***************************************************</msg>
<status status="PASS" starttime="20200420 12:19:15.968" endtime="20200420 12:19:15.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:19:15.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200420 12:19:15.970" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200420 12:19:15.969" endtime="20200420 12:19:15.970"></status>
</kw>
<status status="FAIL" starttime="20200420 12:17:38.360" endtime="20200420 12:19:15.970"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" starttime="20200420 12:17:38.359" endtime="20200420 12:19:15.970" critical="yes">255 != 0</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20200420 12:17:38.248" endtime="20200420 12:19:15.971"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200420 12:19:15.978" level="INFO">${random} = 03092</msg>
<status status="PASS" starttime="20200420 12:19:15.978" endtime="20200420 12:19:15.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200420 12:19:15.979" level="INFO">${prefix} = 03092</msg>
<status status="PASS" starttime="20200420 12:19:15.978" endtime="20200420 12:19:15.979"></status>
</kw>
<status status="PASS" starttime="20200420 12:19:15.978" endtime="20200420 12:19:15.979"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200420 12:19:15.980" endtime="20200420 12:19:15.981"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:19:15.983" level="INFO">Running command 'ozone sh volume info o3://om:9862/03092-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:19:17.598" level="INFO">${rc} = 255</msg>
<msg timestamp="20200420 12:19:17.598" level="INFO">${output} = VOLUME_NOT_FOUND Volume 03092-rpcwoport is not found</msg>
<status status="PASS" starttime="20200420 12:19:15.982" endtime="20200420 12:19:17.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:19:17.599" level="INFO">VOLUME_NOT_FOUND Volume 03092-rpcwoport is not found</msg>
<status status="PASS" starttime="20200420 12:19:17.598" endtime="20200420 12:19:17.599"></status>
</kw>
<msg timestamp="20200420 12:19:17.599" level="INFO">${result} = VOLUME_NOT_FOUND Volume 03092-rpcwoport is not found</msg>
<status status="PASS" starttime="20200420 12:19:15.981" endtime="20200420 12:19:17.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200420 12:19:17.600" endtime="20200420 12:19:17.600"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:19:17.604" level="INFO">Running command 'ozone sh volume create o3://om:9862/03092-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:19:19.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:19:19.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200420 12:19:17.601" endtime="20200420 12:19:19.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:19:19.353" level="INFO"></msg>
<status status="PASS" starttime="20200420 12:19:19.352" endtime="20200420 12:19:19.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:19:19.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:19:19.353" endtime="20200420 12:19:19.354"></status>
</kw>
<msg timestamp="20200420 12:19:19.354" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200420 12:19:17.600" endtime="20200420 12:19:19.354"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200420 12:19:19.354" endtime="20200420 12:19:19.354"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:19:19.358" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="03092-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:19:21.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:19:21.276" level="INFO">${output} = {
  "metadata": {},
  "name": "03092-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:19:19.308Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200420 12:19:19.355" endtime="20200420 12:19:21.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:19:21.277" level="INFO">{
  "metadata": {},
  "name": "03092-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:19:19.308Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200420 12:19:21.276" endtime="20200420 12:19:21.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:19:21.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:19:21.277" endtime="20200420 12:19:21.278"></status>
</kw>
<msg timestamp="20200420 12:19:21.278" level="INFO">${result} = {
  "metadata": {},
  "name": "03092-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:19:19.308Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200420 12:19:19.355" endtime="20200420 12:19:21.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200420 12:19:21.278" endtime="20200420 12:19:21.279"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:19:21.282" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="03092-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:19:23.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:19:23.113" level="INFO">${output} = {
  "metadata": {},
  "name": "03092-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:19:19.308Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200420 12:19:21.279" endtime="20200420 12:19:23.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:19:23.114" level="INFO">{
  "metadata": {},
  "name": "03092-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:19:19.308Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200420 12:19:23.114" endtime="20200420 12:19:23.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:19:23.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:19:23.115" endtime="20200420 12:19:23.115"></status>
</kw>
<msg timestamp="20200420 12:19:23.115" level="INFO">${result} = {
  "metadata": {},
  "name": "03092-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:19:19.308Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200420 12:19:21.279" endtime="20200420 12:19:23.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200420 12:19:23.116" endtime="20200420 12:19:23.116"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:19:23.125" level="INFO">Running command 'ozone sh volume update o3://om:9862/03092-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:19:25.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:19:25.032" level="INFO">${output} = {
  "metadata" : { },
  "name" : "03092-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-20T12:19:19.308Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200420 12:19:23.119" endtime="20200420 12:19:25.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:19:25.033" level="INFO">{
  "metadata" : { },
  "name" : "03092-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-20T12:19:19.308Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200420 12:19:25.033" endtime="20200420 12:19:25.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:19:25.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:19:25.034" endtime="20200420 12:19:25.034"></status>
</kw>
<status status="PASS" starttime="20200420 12:19:23.116" endtime="20200420 12:19:25.034"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:19:25.037" level="INFO">Running command 'ozone sh volume info o3://om:9862/03092-rpcwoport | jq -r '. | select(.name=="03092-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:19:26.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:19:26.882" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200420 12:19:25.035" endtime="20200420 12:19:26.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:19:26.883" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200420 12:19:26.882" endtime="20200420 12:19:26.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:19:26.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:19:26.883" endtime="20200420 12:19:26.883"></status>
</kw>
<msg timestamp="20200420 12:19:26.883" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200420 12:19:25.034" endtime="20200420 12:19:26.883"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200420 12:19:26.884" endtime="20200420 12:19:26.884"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:19:26.886" level="INFO">Running command 'ozone sh bucket create o3://om:9862/03092-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:19:28.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:19:28.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200420 12:19:26.885" endtime="20200420 12:19:28.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:19:28.555" level="INFO"></msg>
<status status="PASS" starttime="20200420 12:19:28.554" endtime="20200420 12:19:28.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:19:28.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:19:28.555" endtime="20200420 12:19:28.555"></status>
</kw>
<status status="PASS" starttime="20200420 12:19:26.884" endtime="20200420 12:19:28.556"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:19:28.559" level="INFO">Running command 'ozone sh bucket info o3://om:9862/03092-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:19:30.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:19:30.420" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200420 12:19:28.556" endtime="20200420 12:19:30.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:19:30.421" level="INFO">DISK</msg>
<status status="PASS" starttime="20200420 12:19:30.420" endtime="20200420 12:19:30.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:19:30.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:19:30.421" endtime="20200420 12:19:30.422"></status>
</kw>
<msg timestamp="20200420 12:19:30.422" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200420 12:19:28.556" endtime="20200420 12:19:30.422"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200420 12:19:30.422" endtime="20200420 12:19:30.423"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:19:30.425" level="INFO">Running command 'ozone sh bucket list o3://om:9862/03092-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:19:32.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:19:32.217" level="INFO">${output} = 03092-rpcwoport</msg>
<status status="PASS" starttime="20200420 12:19:30.423" endtime="20200420 12:19:32.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:19:32.218" level="INFO">03092-rpcwoport</msg>
<status status="PASS" starttime="20200420 12:19:32.218" endtime="20200420 12:19:32.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:19:32.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:19:32.218" endtime="20200420 12:19:32.219"></status>
</kw>
<msg timestamp="20200420 12:19:32.219" level="INFO">${result} = 03092-rpcwoport</msg>
<status status="PASS" starttime="20200420 12:19:30.423" endtime="20200420 12:19:32.219"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200420 12:19:32.219" endtime="20200420 12:19:32.220"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:19:32.224" level="INFO">Running command 'ozone sh key put o3://om:9862/03092-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:07.475" level="INFO">${rc} = 255</msg>
<msg timestamp="20200420 12:21:07.475" level="INFO">${output} = INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200420 12:19:32.221" endtime="20200420 12:21:07.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:07.476" level="INFO">INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200420 12:21:07.475" endtime="20200420 12:21:07.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:07.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200420 12:21:07.477" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200420 12:21:07.476" endtime="20200420 12:21:07.477"></status>
</kw>
<status status="FAIL" starttime="20200420 12:19:32.221" endtime="20200420 12:21:07.478"></status>
</kw>
<status status="FAIL" starttime="20200420 12:19:32.220" endtime="20200420 12:21:07.478"></status>
</kw>
<status status="FAIL" starttime="20200420 12:19:32.220" endtime="20200420 12:21:07.478"></status>
</kw>
<status status="FAIL" starttime="20200420 12:19:15.981" endtime="20200420 12:21:07.478"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200420 12:19:15.979" endtime="20200420 12:21:07.478" critical="yes">255 != 0</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:07.480" endtime="20200420 12:21:07.480"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:07.483" level="INFO">Running command 'ozone sh volume create o3://om:9862/03092-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:09.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:09.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200420 12:21:07.481" endtime="20200420 12:21:09.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:09.079" level="INFO"></msg>
<status status="PASS" starttime="20200420 12:21:09.079" endtime="20200420 12:21:09.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:09.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:09.079" endtime="20200420 12:21:09.080"></status>
</kw>
<status status="PASS" starttime="20200420 12:21:07.480" endtime="20200420 12:21:09.080"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:09.083" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/03092-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:10.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:10.894" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200420 12:21:09.081" endtime="20200420 12:21:10.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:10.895" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200420 12:21:10.894" endtime="20200420 12:21:10.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:10.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:10.895" endtime="20200420 12:21:10.896"></status>
</kw>
<msg timestamp="20200420 12:21:10.896" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200420 12:21:09.080" endtime="20200420 12:21:10.896"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:10.896" endtime="20200420 12:21:10.897"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:10.902" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/03092-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:12.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:12.530" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200420 12:21:10.898" endtime="20200420 12:21:12.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:12.531" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200420 12:21:12.531" endtime="20200420 12:21:12.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:12.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:12.531" endtime="20200420 12:21:12.532"></status>
</kw>
<msg timestamp="20200420 12:21:12.532" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200420 12:21:10.897" endtime="20200420 12:21:12.532"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:12.535" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/03092-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:14.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:14.310" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200420 12:21:12.533" endtime="20200420 12:21:14.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:14.311" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200420 12:21:14.310" endtime="20200420 12:21:14.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:14.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:14.311" endtime="20200420 12:21:14.312"></status>
</kw>
<msg timestamp="20200420 12:21:14.312" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200420 12:21:12.532" endtime="20200420 12:21:14.312"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:14.312" endtime="20200420 12:21:14.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:14.316" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/03092-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:15.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:15.839" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200420 12:21:14.314" endtime="20200420 12:21:15.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:15.840" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200420 12:21:15.840" endtime="20200420 12:21:15.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:15.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:15.841" endtime="20200420 12:21:15.841"></status>
</kw>
<msg timestamp="20200420 12:21:15.841" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200420 12:21:14.313" endtime="20200420 12:21:15.841"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:15.844" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/03092-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:17.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:17.718" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200420 12:21:15.842" endtime="20200420 12:21:17.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:17.719" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200420 12:21:17.719" endtime="20200420 12:21:17.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:17.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:17.720" endtime="20200420 12:21:17.720"></status>
</kw>
<msg timestamp="20200420 12:21:17.720" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200420 12:21:15.841" endtime="20200420 12:21:17.720"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:17.720" endtime="20200420 12:21:17.721"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:17.724" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/03092-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:19.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:19.323" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200420 12:21:17.722" endtime="20200420 12:21:19.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:19.324" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200420 12:21:19.324" endtime="20200420 12:21:19.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:19.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:19.325" endtime="20200420 12:21:19.325"></status>
</kw>
<msg timestamp="20200420 12:21:19.326" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200420 12:21:17.721" endtime="20200420 12:21:19.326"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:19.328" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/03092-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:21.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:21.135" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200420 12:21:19.326" endtime="20200420 12:21:21.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:21.136" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200420 12:21:21.135" endtime="20200420 12:21:21.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:21.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:21.136" endtime="20200420 12:21:21.136"></status>
</kw>
<msg timestamp="20200420 12:21:21.137" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200420 12:21:19.326" endtime="20200420 12:21:21.137"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:21.137" endtime="20200420 12:21:21.137"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:21.137" endtime="20200420 12:21:21.138"></status>
</kw>
<status status="PASS" starttime="20200420 12:21:07.480" endtime="20200420 12:21:21.138"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200420 12:21:07.479" endtime="20200420 12:21:21.138" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:21.140" endtime="20200420 12:21:21.140"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:21.144" level="INFO">Running command 'ozone sh bucket create o3://om:9862/03092-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:22.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:22.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200420 12:21:21.141" endtime="20200420 12:21:22.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:22.770" level="INFO"></msg>
<status status="PASS" starttime="20200420 12:21:22.769" endtime="20200420 12:21:22.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:22.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:22.770" endtime="20200420 12:21:22.771"></status>
</kw>
<status status="PASS" starttime="20200420 12:21:21.141" endtime="20200420 12:21:22.771"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:22.774" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/03092-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:24.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:24.543" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200420 12:21:22.771" endtime="20200420 12:21:24.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:24.544" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200420 12:21:24.543" endtime="20200420 12:21:24.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:24.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:24.544" endtime="20200420 12:21:24.544"></status>
</kw>
<msg timestamp="20200420 12:21:24.545" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200420 12:21:22.771" endtime="20200420 12:21:24.545"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:24.545" endtime="20200420 12:21:24.546"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:24.549" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/03092-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:26.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:26.136" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200420 12:21:24.546" endtime="20200420 12:21:26.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:26.137" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200420 12:21:26.137" endtime="20200420 12:21:26.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:26.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:26.137" endtime="20200420 12:21:26.138"></status>
</kw>
<msg timestamp="20200420 12:21:26.138" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200420 12:21:24.546" endtime="20200420 12:21:26.138"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:26.141" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/03092-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:27.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:27.904" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200420 12:21:26.139" endtime="20200420 12:21:27.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:27.905" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200420 12:21:27.905" endtime="20200420 12:21:27.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:27.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:27.906" endtime="20200420 12:21:27.906"></status>
</kw>
<msg timestamp="20200420 12:21:27.907" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200420 12:21:26.138" endtime="20200420 12:21:27.907"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:27.907" endtime="20200420 12:21:27.908"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:27.911" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/03092-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:29.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:29.864" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200420 12:21:27.909" endtime="20200420 12:21:29.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:29.865" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200420 12:21:29.865" endtime="20200420 12:21:29.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:29.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:29.866" endtime="20200420 12:21:29.866"></status>
</kw>
<msg timestamp="20200420 12:21:29.866" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200420 12:21:27.908" endtime="20200420 12:21:29.866"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:29.869" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/03092-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:31.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:31.645" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200420 12:21:29.867" endtime="20200420 12:21:31.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:31.646" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200420 12:21:31.645" endtime="20200420 12:21:31.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:31.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:31.646" endtime="20200420 12:21:31.647"></status>
</kw>
<msg timestamp="20200420 12:21:31.647" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200420 12:21:29.866" endtime="20200420 12:21:31.647"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:31.647" endtime="20200420 12:21:31.648"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:31.650" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/03092-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:33.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:33.197" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200420 12:21:31.648" endtime="20200420 12:21:33.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:33.198" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200420 12:21:33.198" endtime="20200420 12:21:33.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:33.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:33.199" endtime="20200420 12:21:33.199"></status>
</kw>
<msg timestamp="20200420 12:21:33.199" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200420 12:21:31.648" endtime="20200420 12:21:33.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:33.203" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/03092-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:21:34.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:21:34.949" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200420 12:21:33.200" endtime="20200420 12:21:34.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:21:34.950" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200420 12:21:34.949" endtime="20200420 12:21:34.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:21:34.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:21:34.950" endtime="20200420 12:21:34.951"></status>
</kw>
<msg timestamp="20200420 12:21:34.951" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200420 12:21:33.200" endtime="20200420 12:21:34.951"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:34.951" endtime="20200420 12:21:34.951"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:34.951" endtime="20200420 12:21:34.952"></status>
</kw>
<status status="PASS" starttime="20200420 12:21:21.141" endtime="20200420 12:21:34.952"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200420 12:21:21.139" endtime="20200420 12:21:34.952" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200420 12:21:34.953" endtime="20200420 12:21:34.954"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:21:34.958" level="INFO">Running command 'ozone sh key put o3://om:9862/03092-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:23:10.296" level="INFO">${rc} = 255</msg>
<msg timestamp="20200420 12:23:10.296" level="INFO">${output} = INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200420 12:21:34.955" endtime="20200420 12:23:10.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:23:10.297" level="INFO">INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200420 12:23:10.296" endtime="20200420 12:23:10.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:23:10.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200420 12:23:10.298" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200420 12:23:10.298" endtime="20200420 12:23:10.298"></status>
</kw>
<status status="FAIL" starttime="20200420 12:21:34.955" endtime="20200420 12:23:10.299"></status>
</kw>
<status status="FAIL" starttime="20200420 12:21:34.954" endtime="20200420 12:23:10.299"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200420 12:21:34.953" endtime="20200420 12:23:10.299" critical="yes">255 != 0</status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200420 12:23:10.301" endtime="20200420 12:23:10.301"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:23:10.304" level="INFO">Running command 'ozone sh volume info o3:///03092-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:23:11.877" level="INFO">${rc} = 255</msg>
<msg timestamp="20200420 12:23:11.878" level="INFO">${output} = VOLUME_NOT_FOUND Volume 03092-rpcwport is not found</msg>
<status status="PASS" starttime="20200420 12:23:10.302" endtime="20200420 12:23:11.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:23:11.879" level="INFO">VOLUME_NOT_FOUND Volume 03092-rpcwport is not found</msg>
<status status="PASS" starttime="20200420 12:23:11.878" endtime="20200420 12:23:11.879"></status>
</kw>
<msg timestamp="20200420 12:23:11.879" level="INFO">${result} = VOLUME_NOT_FOUND Volume 03092-rpcwport is not found</msg>
<status status="PASS" starttime="20200420 12:23:10.302" endtime="20200420 12:23:11.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200420 12:23:11.879" endtime="20200420 12:23:11.879"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:23:11.882" level="INFO">Running command 'ozone sh volume create o3:///03092-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:23:13.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:23:13.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200420 12:23:11.880" endtime="20200420 12:23:13.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:23:13.444" level="INFO"></msg>
<status status="PASS" starttime="20200420 12:23:13.444" endtime="20200420 12:23:13.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:23:13.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:23:13.445" endtime="20200420 12:23:13.445"></status>
</kw>
<msg timestamp="20200420 12:23:13.445" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200420 12:23:11.880" endtime="20200420 12:23:13.445"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200420 12:23:13.445" endtime="20200420 12:23:13.446"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:23:13.449" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="03092-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:23:15.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:23:15.299" level="INFO">${output} = {
  "metadata": {},
  "name": "03092-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:23:13.424Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200420 12:23:13.446" endtime="20200420 12:23:15.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:23:15.301" level="INFO">{
  "metadata": {},
  "name": "03092-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:23:13.424Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200420 12:23:15.300" endtime="20200420 12:23:15.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:23:15.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:23:15.302" endtime="20200420 12:23:15.302"></status>
</kw>
<msg timestamp="20200420 12:23:15.303" level="INFO">${result} = {
  "metadata": {},
  "name": "03092-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:23:13.424Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200420 12:23:13.446" endtime="20200420 12:23:15.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200420 12:23:15.303" endtime="20200420 12:23:15.303"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:23:15.306" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="03092-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:23:17.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:23:17.165" level="INFO">${output} = {
  "metadata": {},
  "name": "03092-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:23:13.424Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200420 12:23:15.304" endtime="20200420 12:23:17.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:23:17.166" level="INFO">{
  "metadata": {},
  "name": "03092-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:23:13.424Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200420 12:23:17.165" endtime="20200420 12:23:17.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:23:17.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:23:17.166" endtime="20200420 12:23:17.167"></status>
</kw>
<msg timestamp="20200420 12:23:17.167" level="INFO">${result} = {
  "metadata": {},
  "name": "03092-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:23:13.424Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200420 12:23:15.303" endtime="20200420 12:23:17.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200420 12:23:17.167" endtime="20200420 12:23:17.168"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:23:17.171" level="INFO">Running command 'ozone sh volume update o3:///03092-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:23:18.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:23:18.980" level="INFO">${output} = {
  "metadata" : { },
  "name" : "03092-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-20T12:23:13.424Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200420 12:23:17.168" endtime="20200420 12:23:18.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:23:18.981" level="INFO">{
  "metadata" : { },
  "name" : "03092-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-20T12:23:13.424Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200420 12:23:18.980" endtime="20200420 12:23:18.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:23:18.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:23:18.981" endtime="20200420 12:23:18.982"></status>
</kw>
<status status="PASS" starttime="20200420 12:23:17.168" endtime="20200420 12:23:18.982"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:23:18.985" level="INFO">Running command 'ozone sh volume info o3:///03092-rpcwport | jq -r '. | select(.name=="03092-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:23:20.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:23:20.751" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200420 12:23:18.983" endtime="20200420 12:23:20.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:23:20.752" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200420 12:23:20.752" endtime="20200420 12:23:20.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:23:20.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:23:20.752" endtime="20200420 12:23:20.753"></status>
</kw>
<msg timestamp="20200420 12:23:20.753" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200420 12:23:18.982" endtime="20200420 12:23:20.753"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200420 12:23:20.753" endtime="20200420 12:23:20.754"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:23:20.756" level="INFO">Running command 'ozone sh bucket create o3:///03092-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:23:22.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:23:22.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200420 12:23:20.754" endtime="20200420 12:23:22.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:23:22.423" level="INFO"></msg>
<status status="PASS" starttime="20200420 12:23:22.422" endtime="20200420 12:23:22.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:23:22.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:23:22.423" endtime="20200420 12:23:22.424"></status>
</kw>
<status status="PASS" starttime="20200420 12:23:20.754" endtime="20200420 12:23:22.424"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:23:22.428" level="INFO">Running command 'ozone sh bucket info o3:///03092-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:23:24.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:23:24.283" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200420 12:23:22.426" endtime="20200420 12:23:24.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:23:24.284" level="INFO">DISK</msg>
<status status="PASS" starttime="20200420 12:23:24.284" endtime="20200420 12:23:24.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:23:24.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:23:24.285" endtime="20200420 12:23:24.285"></status>
</kw>
<msg timestamp="20200420 12:23:24.285" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200420 12:23:22.424" endtime="20200420 12:23:24.286"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200420 12:23:24.286" endtime="20200420 12:23:24.286"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:23:24.289" level="INFO">Running command 'ozone sh bucket list o3:///03092-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:23:26.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:23:26.045" level="INFO">${output} = 03092-rpcwport</msg>
<status status="PASS" starttime="20200420 12:23:24.287" endtime="20200420 12:23:26.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:23:26.046" level="INFO">03092-rpcwport</msg>
<status status="PASS" starttime="20200420 12:23:26.046" endtime="20200420 12:23:26.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:23:26.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:23:26.047" endtime="20200420 12:23:26.047"></status>
</kw>
<msg timestamp="20200420 12:23:26.047" level="INFO">${result} = 03092-rpcwport</msg>
<status status="PASS" starttime="20200420 12:23:24.286" endtime="20200420 12:23:26.047"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200420 12:23:26.047" endtime="20200420 12:23:26.049"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:23:26.052" level="INFO">Running command 'ozone sh key put o3:///03092-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:25:01.377" level="INFO">${rc} = 255</msg>
<msg timestamp="20200420 12:25:01.377" level="INFO">${output} = INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200420 12:23:26.050" endtime="20200420 12:25:01.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:25:01.379" level="INFO">INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20200420 12:25:01.378" endtime="20200420 12:25:01.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:25:01.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200420 12:25:01.379" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20200420 12:25:01.379" endtime="20200420 12:25:01.380"></status>
</kw>
<status status="FAIL" starttime="20200420 12:23:26.050" endtime="20200420 12:25:01.380"></status>
</kw>
<status status="FAIL" starttime="20200420 12:23:26.049" endtime="20200420 12:25:01.380"></status>
</kw>
<status status="FAIL" starttime="20200420 12:23:26.049" endtime="20200420 12:25:01.380"></status>
</kw>
<status status="FAIL" starttime="20200420 12:23:10.301" endtime="20200420 12:25:01.380"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200420 12:23:10.300" endtime="20200420 12:25:01.380" critical="yes">255 != 0</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200420 12:25:01.382" endtime="20200420 12:25:01.382"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:25:01.385" level="INFO">Running command 'ozone sh volume info /03092-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:25:03.002" level="INFO">${rc} = 255</msg>
<msg timestamp="20200420 12:25:03.002" level="INFO">${output} = VOLUME_NOT_FOUND Volume 03092-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200420 12:25:01.383" endtime="20200420 12:25:03.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:25:03.003" level="INFO">VOLUME_NOT_FOUND Volume 03092-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200420 12:25:03.003" endtime="20200420 12:25:03.003"></status>
</kw>
<msg timestamp="20200420 12:25:03.004" level="INFO">${result} = VOLUME_NOT_FOUND Volume 03092-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200420 12:25:01.383" endtime="20200420 12:25:03.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200420 12:25:03.004" endtime="20200420 12:25:03.004"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:25:03.007" level="INFO">Running command 'ozone sh volume create /03092-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:25:04.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:25:04.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200420 12:25:03.005" endtime="20200420 12:25:04.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:25:04.690" level="INFO"></msg>
<status status="PASS" starttime="20200420 12:25:04.689" endtime="20200420 12:25:04.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:25:04.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:25:04.691" endtime="20200420 12:25:04.691"></status>
</kw>
<msg timestamp="20200420 12:25:04.691" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200420 12:25:03.004" endtime="20200420 12:25:04.691"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200420 12:25:04.692" endtime="20200420 12:25:04.692"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:25:04.696" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="03092-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:25:06.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:25:06.593" level="INFO">${output} = {
  "metadata": {},
  "name": "03092-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:25:04.667Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200420 12:25:04.693" endtime="20200420 12:25:06.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:25:06.594" level="INFO">{
  "metadata": {},
  "name": "03092-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:25:04.667Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200420 12:25:06.593" endtime="20200420 12:25:06.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:25:06.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:25:06.594" endtime="20200420 12:25:06.595"></status>
</kw>
<msg timestamp="20200420 12:25:06.596" level="INFO">${result} = {
  "metadata": {},
  "name": "03092-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:25:04.667Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200420 12:25:04.692" endtime="20200420 12:25:06.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200420 12:25:06.596" endtime="20200420 12:25:06.596"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:25:06.599" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="03092-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:25:08.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:25:08.354" level="INFO">${output} = {
  "metadata": {},
  "name": "03092-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:25:04.667Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200420 12:25:06.597" endtime="20200420 12:25:08.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:25:08.356" level="INFO">{
  "metadata": {},
  "name": "03092-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:25:04.667Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200420 12:25:08.355" endtime="20200420 12:25:08.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:25:08.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:25:08.356" endtime="20200420 12:25:08.356"></status>
</kw>
<msg timestamp="20200420 12:25:08.357" level="INFO">${result} = {
  "metadata": {},
  "name": "03092-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-20T12:25:04.667Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200420 12:25:06.596" endtime="20200420 12:25:08.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200420 12:25:08.357" endtime="20200420 12:25:08.357"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:25:08.359" level="INFO">Running command 'ozone sh volume update /03092-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:25:10.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:25:10.171" level="INFO">${output} = {
  "metadata" : { },
  "name" : "03092-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-20T12:25:04.667Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200420 12:25:08.358" endtime="20200420 12:25:10.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:25:10.172" level="INFO">{
  "metadata" : { },
  "name" : "03092-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-20T12:25:04.667Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200420 12:25:10.172" endtime="20200420 12:25:10.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:25:10.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:25:10.172" endtime="20200420 12:25:10.173"></status>
</kw>
<status status="PASS" starttime="20200420 12:25:08.357" endtime="20200420 12:25:10.173"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:25:10.176" level="INFO">Running command 'ozone sh volume info /03092-rpcwoscheme | jq -r '. | select(.name=="03092-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:25:11.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:25:11.961" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200420 12:25:10.174" endtime="20200420 12:25:11.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:25:11.962" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200420 12:25:11.961" endtime="20200420 12:25:11.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:25:11.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:25:11.962" endtime="20200420 12:25:11.963"></status>
</kw>
<msg timestamp="20200420 12:25:11.963" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200420 12:25:10.173" endtime="20200420 12:25:11.963"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200420 12:25:11.963" endtime="20200420 12:25:11.963"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:25:11.967" level="INFO">Running command 'ozone sh bucket create /03092-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:25:13.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:25:13.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200420 12:25:11.964" endtime="20200420 12:25:13.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:25:13.620" level="INFO"></msg>
<status status="PASS" starttime="20200420 12:25:13.619" endtime="20200420 12:25:13.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:25:13.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:25:13.620" endtime="20200420 12:25:13.621"></status>
</kw>
<status status="PASS" starttime="20200420 12:25:11.964" endtime="20200420 12:25:13.621"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:25:13.625" level="INFO">Running command 'ozone sh bucket info /03092-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:25:15.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:25:15.488" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200420 12:25:13.622" endtime="20200420 12:25:15.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:25:15.489" level="INFO">DISK</msg>
<status status="PASS" starttime="20200420 12:25:15.489" endtime="20200420 12:25:15.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:25:15.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:25:15.489" endtime="20200420 12:25:15.490"></status>
</kw>
<msg timestamp="20200420 12:25:15.490" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200420 12:25:13.621" endtime="20200420 12:25:15.490"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200420 12:25:15.491" endtime="20200420 12:25:15.491"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:25:15.494" level="INFO">Running command 'ozone sh bucket list /03092-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:25:17.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20200420 12:25:17.275" level="INFO">${output} = 03092-rpcwoscheme</msg>
<status status="PASS" starttime="20200420 12:25:15.492" endtime="20200420 12:25:17.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200420 12:25:17.276" level="INFO">03092-rpcwoscheme</msg>
<status status="PASS" starttime="20200420 12:25:17.276" endtime="20200420 12:25:17.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200420 12:25:17.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200420 12:25:17.277" endtime="20200420 12:25:17.277"></status>
</kw>
<msg timestamp="20200420 12:25:17.278" level="INFO">${result} = 03092-rpcwoscheme</msg>
<status status="PASS" starttime="20200420 12:25:15.491" endtime="20200420 12:25:17.278"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200420 12:25:17.278" endtime="20200420 12:25:17.278"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200420 12:25:17.283" level="INFO">Running command 'ozone sh key put /03092-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200420 12:28:01.383" level="FAIL">Test timeout 3 minutes exceeded.</msg>
<status status="FAIL" starttime="20200420 12:25:17.280" endtime="20200420 12:28:01.384"></status>
</kw>
<status status="FAIL" starttime="20200420 12:25:17.279" endtime="20200420 12:28:01.392"></status>
</kw>
<status status="FAIL" starttime="20200420 12:25:17.279" endtime="20200420 12:28:01.392"></status>
</kw>
<status status="FAIL" starttime="20200420 12:25:17.278" endtime="20200420 12:28:01.393"></status>
</kw>
<status status="FAIL" starttime="20200420 12:25:01.382" endtime="20200420 12:28:01.393"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="FAIL" starttime="20200420 12:25:01.381" endtime="20200420 12:28:01.393" critical="yes">Test timeout 3 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20200420 12:19:15.973" endtime="20200420 12:28:01.399"></status>
</suite>
<status status="FAIL" starttime="20200420 12:17:38.221" endtime="20200420 12:28:01.412"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="5">Critical Tests</stat>
<stat pass="3" fail="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="5" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="1" fail="1" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="2" fail="4" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
