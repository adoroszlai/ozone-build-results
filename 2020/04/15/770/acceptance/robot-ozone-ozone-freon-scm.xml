<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200416 00:27:15.958" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:27:16.008" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:27:23.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:27:23.000" level="INFO">${output} = 2020-04-16 00:27:16,772 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:16,907 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:27:16.005" endtime="20200416 00:27:23.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:27:23.001" level="INFO">2020-04-16 00:27:16,772 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:16,907 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-16 00:27:16,907 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-16 00:27:17,631 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-16 00:27:17,632 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-16 00:27:17,632 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-16 00:27:17,632 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-16 00:27:17,632 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-16 00:27:17,632 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-16 00:27:17,632 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-16 00:27:17,637 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-16 00:27:17,643 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-16 00:27:17,675 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-95990, with hadoop as owner.
2020-04-16 00:27:17,690 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-95990/bucket-0-65051, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:27:18,056 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-16 00:27:18,650 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,045
Average Time spent in bucket creation: 00:00:00,007
Average Time spent in key creation: 00:00:00,035
Average Time spent in key write: 00:00:00,454
Total bytes written: 10240
Total Execution time: 00:00:05,494
***************************************************</msg>
<status status="PASS" starttime="20200416 00:27:23.000" endtime="20200416 00:27:23.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:27:23.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:27:23.001" endtime="20200416 00:27:23.002"></status>
</kw>
<msg timestamp="20200416 00:27:23.002" level="INFO">${result} = 2020-04-16 00:27:16,772 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:16,907 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:27:16.004" endtime="20200416 00:27:23.002"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200416 00:27:23.002" endtime="20200416 00:27:23.003"></status>
</kw>
<status status="PASS" starttime="20200416 00:27:23.002" endtime="20200416 00:27:23.003"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200416 00:27:16.004" endtime="20200416 00:27:23.003" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:27:23.008" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:27:27.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:27:27.089" level="INFO">${output} = 2020-04-16 00:27:23,803 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:23,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:27:23.005" endtime="20200416 00:27:27.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:27:27.090" level="INFO">2020-04-16 00:27:23,803 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:23,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-16 00:27:23,947 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-16 00:27:24,204 [main] INFO freon.BaseFreonGenerator: Executing test with prefix uaq7tt0pa3
2020-04-16 00:27:24,217 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-16 00:27:24,711 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-16 00:27:24,723 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:27:25,145 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-16 00:27:25,230 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-16 00:27:26,231 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-16 00:27:26,762 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1116.844485, max=1116.844485, mean=1116.844485, stddev=0.0, median=1116.844485, p75=1116.844485, p95=1116.844485, p98=1116.844485, p99=1116.844485, p999=1116.844485, mean_rate=0.4931363480662784, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-16 00:27:26,763 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-16 00:27:26,763 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-16 00:27:26,763 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200416 00:27:27.089" endtime="20200416 00:27:27.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:27:27.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:27:27.090" endtime="20200416 00:27:27.091"></status>
</kw>
<msg timestamp="20200416 00:27:27.091" level="INFO">${result} = 2020-04-16 00:27:23,803 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:23,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:27:23.005" endtime="20200416 00:27:27.091"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200416 00:27:27.091" endtime="20200416 00:27:27.092"></status>
</kw>
<status status="PASS" starttime="20200416 00:27:27.091" endtime="20200416 00:27:27.092"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200416 00:27:23.004" endtime="20200416 00:27:27.092" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:27:27.095" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:27:29.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:27:29.876" level="INFO">${output} = 2020-04-16 00:27:27,904 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:28,068 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:27:27.093" endtime="20200416 00:27:29.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:27:29.877" level="INFO">2020-04-16 00:27:27,904 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:28,068 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-16 00:27:28,068 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-16 00:27:28,329 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 3fnsghrav5
2020-04-16 00:27:28,335 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-16 00:27:29,337 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-16 00:27:29,867 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=22.526103, max=22.526103, mean=22.526103, stddev=0.0, median=22.526103, p75=22.526103, p95=22.526103, p98=22.526103, p99=22.526103, p999=22.526103, mean_rate=0.9882867268842945, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-16 00:27:29,867 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-16 00:27:29,867 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-16 00:27:29,867 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200416 00:27:29.876" endtime="20200416 00:27:29.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:27:29.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:27:29.877" endtime="20200416 00:27:29.878"></status>
</kw>
<msg timestamp="20200416 00:27:29.878" level="INFO">${result} = 2020-04-16 00:27:27,904 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:28,068 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:27:27.093" endtime="20200416 00:27:29.878"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200416 00:27:29.879" endtime="20200416 00:27:29.879"></status>
</kw>
<status status="PASS" starttime="20200416 00:27:29.879" endtime="20200416 00:27:29.879"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200416 00:27:27.092" endtime="20200416 00:27:29.880" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:27:29.884" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:27:32.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:27:32.643" level="INFO">${output} = 2020-04-16 00:27:30,652 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:30,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:27:29.881" endtime="20200416 00:27:32.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:27:32.645" level="INFO">2020-04-16 00:27:30,652 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:30,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-16 00:27:30,831 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-16 00:27:31,093 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 0xgofto172
2020-04-16 00:27:31,110 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-16 00:27:32,118 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-16 00:27:32,634 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.071537, max=8.071537, mean=8.071537, stddev=0.0, median=8.071537, p75=8.071537, p95=8.071537, p98=8.071537, p99=8.071537, p999=8.071537, mean_rate=0.9816357286121058, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-16 00:27:32,635 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-16 00:27:32,635 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-16 00:27:32,635 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200416 00:27:32.644" endtime="20200416 00:27:32.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:27:32.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:27:32.645" endtime="20200416 00:27:32.645"></status>
</kw>
<msg timestamp="20200416 00:27:32.646" level="INFO">${result} = 2020-04-16 00:27:30,652 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:27:30,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:27:29.881" endtime="20200416 00:27:32.646"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200416 00:27:32.646" endtime="20200416 00:27:32.646"></status>
</kw>
<status status="PASS" starttime="20200416 00:27:32.646" endtime="20200416 00:27:32.647"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200416 00:27:29.880" endtime="20200416 00:27:32.647" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200416 00:27:15.983" endtime="20200416 00:27:32.648"></status>
</suite>
<status status="PASS" starttime="20200416 00:27:15.959" endtime="20200416 00:27:32.651"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
