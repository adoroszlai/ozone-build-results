<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200416 00:13:43.856" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:13:43.908" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:13:50.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:13:50.996" level="INFO">${output} = 2020-04-16 00:13:44,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:44,865 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:13:43.904" endtime="20200416 00:13:50.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:13:50.997" level="INFO">2020-04-16 00:13:44,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:44,865 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-16 00:13:44,865 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-16 00:13:45,625 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-16 00:13:45,628 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-16 00:13:45,628 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-16 00:13:45,628 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-16 00:13:45,628 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-16 00:13:45,628 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-16 00:13:45,628 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-16 00:13:45,631 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-16 00:13:45,647 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-16 00:13:45,664 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-24145, with hadoop as owner.
2020-04-16 00:13:45,709 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24145/bucket-0-51399, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:13:46,145 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-16 00:13:46,649 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,058
Average Time spent in bucket creation: 00:00:00,069
Average Time spent in key creation: 00:00:00,044
Average Time spent in key write: 00:00:00,471
Total bytes written: 10240
Total Execution time: 00:00:05,541
***************************************************</msg>
<status status="PASS" starttime="20200416 00:13:50.996" endtime="20200416 00:13:50.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:13:50.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:13:50.997" endtime="20200416 00:13:50.997"></status>
</kw>
<msg timestamp="20200416 00:13:50.998" level="INFO">${result} = 2020-04-16 00:13:44,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:44,865 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:13:43.904" endtime="20200416 00:13:50.998"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200416 00:13:50.998" endtime="20200416 00:13:50.999"></status>
</kw>
<status status="PASS" starttime="20200416 00:13:50.998" endtime="20200416 00:13:50.999"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200416 00:13:43.903" endtime="20200416 00:13:50.999" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:13:51.002" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:13:55.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:13:55.627" level="INFO">${output} = 2020-04-16 00:13:51,849 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:51,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:13:51.001" endtime="20200416 00:13:55.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:13:55.628" level="INFO">2020-04-16 00:13:51,849 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:51,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-16 00:13:51,978 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-16 00:13:52,236 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xm1u58rxja
2020-04-16 00:13:52,256 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-16 00:13:52,766 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-16 00:13:52,790 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:13:53,260 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-16 00:13:53,266 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-16 00:13:54,260 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-16 00:13:55,260 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-16 00:13:55,300 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1622.05254, max=1622.05254, mean=1622.05254, stddev=0.0, median=1622.05254, p75=1622.05254, p95=1622.05254, p98=1622.05254, p99=1622.05254, p999=1622.05254, mean_rate=0.40392468720640745, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-16 00:13:55,301 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-16 00:13:55,301 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-16 00:13:55,301 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200416 00:13:55.628" endtime="20200416 00:13:55.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:13:55.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:13:55.628" endtime="20200416 00:13:55.629"></status>
</kw>
<msg timestamp="20200416 00:13:55.629" level="INFO">${result} = 2020-04-16 00:13:51,849 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:51,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:13:51.000" endtime="20200416 00:13:55.629"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200416 00:13:55.630" endtime="20200416 00:13:55.630"></status>
</kw>
<status status="PASS" starttime="20200416 00:13:55.629" endtime="20200416 00:13:55.630"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200416 00:13:51.000" endtime="20200416 00:13:55.630" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:13:55.634" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:13:58.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:13:58.365" level="INFO">${output} = 2020-04-16 00:13:56,434 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:56,567 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:13:55.632" endtime="20200416 00:13:58.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:13:58.366" level="INFO">2020-04-16 00:13:56,434 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:56,567 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-16 00:13:56,567 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-16 00:13:56,823 [main] INFO freon.BaseFreonGenerator: Executing test with prefix r7zctegoxm
2020-04-16 00:13:56,833 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-16 00:13:57,837 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-16 00:13:58,355 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=42.78784, max=42.78784, mean=42.78784, stddev=0.0, median=42.78784, p75=42.78784, p95=42.78784, p98=42.78784, p99=42.78784, p999=42.78784, mean_rate=0.9874992051001712, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-16 00:13:58,356 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-16 00:13:58,356 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-16 00:13:58,356 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200416 00:13:58.366" endtime="20200416 00:13:58.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:13:58.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:13:58.367" endtime="20200416 00:13:58.367"></status>
</kw>
<msg timestamp="20200416 00:13:58.367" level="INFO">${result} = 2020-04-16 00:13:56,434 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:56,567 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:13:55.632" endtime="20200416 00:13:58.367"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200416 00:13:58.368" endtime="20200416 00:13:58.368"></status>
</kw>
<status status="PASS" starttime="20200416 00:13:58.367" endtime="20200416 00:13:58.368"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200416 00:13:55.630" endtime="20200416 00:13:58.368" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:13:58.372" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:14:01.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:14:01.140" level="INFO">${output} = 2020-04-16 00:13:59,169 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:59,323 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:13:58.370" endtime="20200416 00:14:01.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:14:01.141" level="INFO">2020-04-16 00:13:59,169 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:59,323 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-16 00:13:59,323 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-16 00:13:59,596 [main] INFO freon.BaseFreonGenerator: Executing test with prefix etqpsdbxxj
2020-04-16 00:13:59,605 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-16 00:14:00,612 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-16 00:14:01,127 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=13.468907, max=13.468907, mean=13.468907, stddev=0.0, median=13.468907, p75=13.468907, p95=13.468907, p98=13.468907, p99=13.468907, p999=13.468907, mean_rate=0.9907502624195267, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-16 00:14:01,130 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-16 00:14:01,130 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-16 00:14:01,130 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200416 00:14:01.141" endtime="20200416 00:14:01.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:14:01.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:14:01.141" endtime="20200416 00:14:01.142"></status>
</kw>
<msg timestamp="20200416 00:14:01.142" level="INFO">${result} = 2020-04-16 00:13:59,169 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:13:59,323 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:13:58.369" endtime="20200416 00:14:01.142"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200416 00:14:01.143" endtime="20200416 00:14:01.143"></status>
</kw>
<status status="PASS" starttime="20200416 00:14:01.142" endtime="20200416 00:14:01.143"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200416 00:13:58.369" endtime="20200416 00:14:01.143" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200416 00:13:43.883" endtime="20200416 00:14:01.145"></status>
</suite>
<status status="PASS" starttime="20200416 00:13:43.857" endtime="20200416 00:14:01.148"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
