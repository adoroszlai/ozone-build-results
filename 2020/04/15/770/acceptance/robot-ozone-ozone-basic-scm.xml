<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200416 00:18:16.958" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200416 00:18:17.005" endtime="20200416 00:18:17.006"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:18:17.009" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:18:17.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:18:17.071" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 16 Apr 2020 00:18:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 15 Apr 2020 23:54:54 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200416 00:18:17.006" endtime="20200416 00:18:17.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:18:17.072" level="INFO">HTTP/1.1 200 OK
Date: Thu, 16 Apr 2020 00:18:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 15 Apr 2020 23:54:54 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200416 00:18:17.071" endtime="20200416 00:18:17.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:18:17.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:18:17.072" endtime="20200416 00:18:17.072"></status>
</kw>
<msg timestamp="20200416 00:18:17.072" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 16 Apr 2020 00:18:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 15 Apr 2020 23:54:54 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200416 00:18:17.006" endtime="20200416 00:18:17.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200416 00:18:17.073" endtime="20200416 00:18:17.073"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200416 00:18:17.005" endtime="20200416 00:18:17.073" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200416 00:18:17.074" endtime="20200416 00:18:17.075"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:18:17.080" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:18.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:18.854" level="INFO">${output} = 2020-04-16 00:18:17,884 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:18:18,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:18:17.075" endtime="20200416 00:19:18.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:18.855" level="INFO">2020-04-16 00:18:17,884 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:18:18,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-16 00:18:18,027 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-16 00:18:19,103 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-16 00:18:19,104 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-16 00:18:19,105 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-16 00:18:19,105 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-16 00:18:19,105 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-16 00:18:19,105 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-16 00:18:19,105 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-16 00:18:19,112 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-16 00:18:19,113 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-16 00:18:19,125 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-16 00:18:19,143 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-86394, with hadoop as owner.
2020-04-16 00:18:19,251 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-12977, with hadoop as owner.
2020-04-16 00:18:19,262 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-10901, with hadoop as owner.
2020-04-16 00:18:19,273 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-68856, with hadoop as owner.
2020-04-16 00:18:19,279 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-01441, with hadoop as owner.
2020-04-16 00:18:19,286 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86394/bucket-0-10658, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,308 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-12977/bucket-0-22102, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,312 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-10901/bucket-0-99332, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,327 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-68856/bucket-0-69416, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,332 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-01441/bucket-0-25399, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,336 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86394/bucket-1-80472, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,340 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-12977/bucket-1-78290, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,346 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-10901/bucket-1-32040, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,351 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-68856/bucket-1-18503, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,355 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-01441/bucket-1-13913, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,366 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86394/bucket-2-48130, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,371 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-12977/bucket-2-32231, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,375 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-10901/bucket-2-16061, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,383 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-68856/bucket-2-35551, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,393 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-01441/bucket-2-51424, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,398 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86394/bucket-3-62870, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,408 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-12977/bucket-3-54049, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,412 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-10901/bucket-3-27216, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,418 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-68856/bucket-3-87364, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,422 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-01441/bucket-3-23913, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,426 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86394/bucket-4-91607, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,431 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-12977/bucket-4-04019, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,434 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-10901/bucket-4-69514, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,438 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-68856/bucket-4-53084, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,441 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-01441/bucket-4-94378, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-16 00:18:19,870 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-16 00:18:20,129 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-16 00:18:21,129 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-16 00:18:22,130 [Thread-8] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-04-16 00:18:23,134 [Thread-8] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-04-16 00:18:24,134 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-04-16 00:18:25,135 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-04-16 00:18:26,138 [Thread-8] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-04-16 00:18:27,139 [Thread-8] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-04-16 00:18:28,139 [Thread-8] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-04-16 00:18:29,139 [Thread-8] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-04-16 00:18:30,140 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-04-16 00:18:31,141 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-04-16 00:18:32,152 [Thread-8] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-04-16 00:18:33,152 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-16 00:18:34,153 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-16 00:18:35,154 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-16 00:18:36,154 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-04-16 00:18:37,154 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-04-16 00:18:38,155 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-04-16 00:18:39,155 [Thread-8] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-04-16 00:18:40,156 [Thread-8] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-04-16 00:18:41,157 [Thread-8] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-04-16 00:18:42,158 [Thread-8] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-04-16 00:18:43,158 [Thread-8] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-04-16 00:18:44,159 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-04-16 00:18:45,159 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-04-16 00:18:46,159 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-04-16 00:18:47,160 [Thread-8] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-04-16 00:18:48,160 [Thread-8] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-04-16 00:18:49,161 [Thread-8] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-04-16 00:18:50,161 [Thread-8] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-04-16 00:18:51,161 [Thread-8] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-04-16 00:18:52,162 [Thread-8] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-04-16 00:18:53,162 [Thread-8] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-04-16 00:18:54,163 [Thread-8] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-04-16 00:18:55,163 [Thread-8] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-04-16 00:18:56,164 [Thread-8] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-04-16 00:18:57,164 [Thread-8] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-04-16 00:18:58,164 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-04-16 00:18:59,165 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-04-16 00:19:00,165 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-04-16 00:19:01,166 [Thread-8] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-04-16 00:19:02,167 [Thread-8] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-04-16 00:19:03,167 [Thread-8] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-04-16 00:19:04,167 [Thread-8] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-04-16 00:19:05,168 [Thread-8] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-04-16 00:19:06,168 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-04-16 00:19:07,169 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-04-16 00:19:08,169 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-04-16 00:19:09,169 [Thread-8] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-04-16 00:19:10,170 [Thread-8] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-04-16 00:19:11,170 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,125
Average Time spent in bucket creation: 00:00:00,108
Average Time spent in key creation: 00:00:01,334
Average Time spent in key write: 00:00:00,558
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:00,219
***************************************************</msg>
<status status="PASS" starttime="20200416 00:19:18.854" endtime="20200416 00:19:18.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:18.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:18.855" endtime="20200416 00:19:18.856"></status>
</kw>
<msg timestamp="20200416 00:19:18.856" level="INFO">${result} = 2020-04-16 00:18:17,884 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-16 00:18:18,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200416 00:18:17.075" endtime="20200416 00:19:18.856"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:18.856" endtime="20200416 00:19:18.857"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:18.856" endtime="20200416 00:19:18.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:18.857" endtime="20200416 00:19:18.857"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200416 00:18:17.073" endtime="20200416 00:19:18.857" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200416 00:18:16.984" endtime="20200416 00:19:18.858"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200416 00:19:18.866" level="INFO">${random} = 16301</msg>
<status status="PASS" starttime="20200416 00:19:18.866" endtime="20200416 00:19:18.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200416 00:19:18.867" level="INFO">${prefix} = 16301</msg>
<status status="PASS" starttime="20200416 00:19:18.866" endtime="20200416 00:19:18.867"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:18.866" endtime="20200416 00:19:18.867"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:18.868" endtime="20200416 00:19:18.868"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:18.871" level="INFO">Running command 'ozone sh volume info o3://om:9862/16301-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:20.367" level="INFO">${rc} = 255</msg>
<msg timestamp="20200416 00:19:20.367" level="INFO">${output} = VOLUME_NOT_FOUND Volume 16301-rpcwoport is not found</msg>
<status status="PASS" starttime="20200416 00:19:18.869" endtime="20200416 00:19:20.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:20.368" level="INFO">VOLUME_NOT_FOUND Volume 16301-rpcwoport is not found</msg>
<status status="PASS" starttime="20200416 00:19:20.367" endtime="20200416 00:19:20.368"></status>
</kw>
<msg timestamp="20200416 00:19:20.368" level="INFO">${result} = VOLUME_NOT_FOUND Volume 16301-rpcwoport is not found</msg>
<status status="PASS" starttime="20200416 00:19:18.869" endtime="20200416 00:19:20.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:20.368" endtime="20200416 00:19:20.369"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:20.372" level="INFO">Running command 'ozone sh volume create o3://om:9862/16301-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:21.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:21.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:19:20.369" endtime="20200416 00:19:21.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:21.954" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:19:21.953" endtime="20200416 00:19:21.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:21.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:21.954" endtime="20200416 00:19:21.955"></status>
</kw>
<msg timestamp="20200416 00:19:21.955" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200416 00:19:20.369" endtime="20200416 00:19:21.955"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:21.955" endtime="20200416 00:19:21.955"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:21.958" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="16301-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:23.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:23.710" level="INFO">${output} = {
  "metadata": {},
  "name": "16301-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:19:21.905Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200416 00:19:21.956" endtime="20200416 00:19:23.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:23.711" level="INFO">{
  "metadata": {},
  "name": "16301-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:19:21.905Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200416 00:19:23.711" endtime="20200416 00:19:23.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:23.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:23.712" endtime="20200416 00:19:23.712"></status>
</kw>
<msg timestamp="20200416 00:19:23.712" level="INFO">${result} = {
  "metadata": {},
  "name": "16301-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:19:21.905Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200416 00:19:21.956" endtime="20200416 00:19:23.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:23.712" endtime="20200416 00:19:23.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:23.715" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="16301-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:25.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:25.387" level="INFO">${output} = {
  "metadata": {},
  "name": "16301-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:19:21.905Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200416 00:19:23.713" endtime="20200416 00:19:25.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:25.388" level="INFO">{
  "metadata": {},
  "name": "16301-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:19:21.905Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200416 00:19:25.387" endtime="20200416 00:19:25.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:25.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:25.388" endtime="20200416 00:19:25.388"></status>
</kw>
<msg timestamp="20200416 00:19:25.388" level="INFO">${result} = {
  "metadata": {},
  "name": "16301-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:19:21.905Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200416 00:19:23.713" endtime="20200416 00:19:25.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:25.389" endtime="20200416 00:19:25.389"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:25.392" level="INFO">Running command 'ozone sh volume update o3://om:9862/16301-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:27.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:27.082" level="INFO">${output} = {
  "metadata" : { },
  "name" : "16301-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-16T00:19:21.905Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200416 00:19:25.390" endtime="20200416 00:19:27.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:27.083" level="INFO">{
  "metadata" : { },
  "name" : "16301-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-16T00:19:21.905Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200416 00:19:27.082" endtime="20200416 00:19:27.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:27.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:27.083" endtime="20200416 00:19:27.084"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:25.389" endtime="20200416 00:19:27.084"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:27.086" level="INFO">Running command 'ozone sh volume info o3://om:9862/16301-rpcwoport | jq -r '. | select(.name=="16301-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:28.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:28.799" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200416 00:19:27.085" endtime="20200416 00:19:28.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:28.800" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200416 00:19:28.800" endtime="20200416 00:19:28.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:28.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:28.800" endtime="20200416 00:19:28.801"></status>
</kw>
<msg timestamp="20200416 00:19:28.801" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200416 00:19:27.084" endtime="20200416 00:19:28.801"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:28.801" endtime="20200416 00:19:28.802"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:28.805" level="INFO">Running command 'ozone sh bucket create o3://om:9862/16301-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:30.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:30.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:19:28.802" endtime="20200416 00:19:30.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:30.386" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:19:30.386" endtime="20200416 00:19:30.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:30.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:30.386" endtime="20200416 00:19:30.387"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:28.802" endtime="20200416 00:19:30.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:30.390" level="INFO">Running command 'ozone sh bucket info o3://om:9862/16301-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:32.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:32.054" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200416 00:19:30.388" endtime="20200416 00:19:32.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:32.055" level="INFO">DISK</msg>
<status status="PASS" starttime="20200416 00:19:32.054" endtime="20200416 00:19:32.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:32.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:32.056" endtime="20200416 00:19:32.056"></status>
</kw>
<msg timestamp="20200416 00:19:32.057" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200416 00:19:30.387" endtime="20200416 00:19:32.057"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:32.057" endtime="20200416 00:19:32.057"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:32.060" level="INFO">Running command 'ozone sh bucket list o3://om:9862/16301-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:33.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:33.760" level="INFO">${output} = 16301-rpcwoport</msg>
<status status="PASS" starttime="20200416 00:19:32.058" endtime="20200416 00:19:33.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:33.761" level="INFO">16301-rpcwoport</msg>
<status status="PASS" starttime="20200416 00:19:33.760" endtime="20200416 00:19:33.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:33.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:33.761" endtime="20200416 00:19:33.761"></status>
</kw>
<msg timestamp="20200416 00:19:33.761" level="INFO">${result} = 16301-rpcwoport</msg>
<status status="PASS" starttime="20200416 00:19:32.057" endtime="20200416 00:19:33.762"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:33.762" endtime="20200416 00:19:33.762"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:33.765" level="INFO">Running command 'ozone sh key put o3://om:9862/16301-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:36.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:36.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:19:33.763" endtime="20200416 00:19:36.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:36.836" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:19:36.835" endtime="20200416 00:19:36.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:36.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:36.836" endtime="20200416 00:19:36.836"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:33.763" endtime="20200416 00:19:36.837"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:36.839" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:36.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:36.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:19:36.837" endtime="20200416 00:19:36.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:36.841" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:19:36.841" endtime="20200416 00:19:36.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:36.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:36.841" endtime="20200416 00:19:36.842"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:36.837" endtime="20200416 00:19:36.842"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:36.844" level="INFO">Running command 'ozone sh key get o3://om:9862/16301-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:39.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:39.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:19:36.843" endtime="20200416 00:19:39.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:39.822" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:19:39.822" endtime="20200416 00:19:39.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:39.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:39.822" endtime="20200416 00:19:39.823"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:36.842" endtime="20200416 00:19:39.823"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:39.825" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:39.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:39.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:19:39.824" endtime="20200416 00:19:39.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:39.830" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:19:39.829" endtime="20200416 00:19:39.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:39.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:39.830" endtime="20200416 00:19:39.831"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:39.823" endtime="20200416 00:19:39.831"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:39.833" level="INFO">Running command 'ozone sh key get o3://om:9862/16301-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:41.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20200416 00:19:41.316" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200416 00:19:39.832" endtime="20200416 00:19:41.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:41.317" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200416 00:19:41.316" endtime="20200416 00:19:41.317"></status>
</kw>
<msg timestamp="20200416 00:19:41.317" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200416 00:19:39.831" endtime="20200416 00:19:41.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:41.317" endtime="20200416 00:19:41.317"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:41.321" level="INFO">Running command 'ozone sh key get --force o3://om:9862/16301-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:44.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:44.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:19:41.318" endtime="20200416 00:19:44.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:44.366" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:19:44.365" endtime="20200416 00:19:44.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:44.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:44.366" endtime="20200416 00:19:44.367"></status>
</kw>
<msg timestamp="20200416 00:19:44.367" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200416 00:19:41.318" endtime="20200416 00:19:44.367"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:44.367" endtime="20200416 00:19:44.368"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:44.370" level="INFO">Running command 'ozone sh key info o3://om:9862/16301-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:46.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:46.247" level="INFO">${output} = {
  "volumeName": "16301-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-16T00:19:35.260Z",
  "modificationTime": "2020-04-16T00:19:36.477Z",
  "re...</msg>
<status status="PASS" starttime="20200416 00:19:44.368" endtime="20200416 00:19:46.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:46.248" level="INFO">{
  "volumeName": "16301-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-16T00:19:35.260Z",
  "modificationTime": "2020-04-16T00:19:36.477Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104005394448973950,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200416 00:19:46.248" endtime="20200416 00:19:46.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:46.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:46.249" endtime="20200416 00:19:46.249"></status>
</kw>
<msg timestamp="20200416 00:19:46.249" level="INFO">${result} = {
  "volumeName": "16301-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-16T00:19:35.260Z",
  "modificationTime": "2020-04-16T00:19:36.477Z",
  "re...</msg>
<status status="PASS" starttime="20200416 00:19:44.368" endtime="20200416 00:19:46.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:46.249" endtime="20200416 00:19:46.250"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:46.253" level="INFO">Running command 'ozone debug chunkinfo o3://om:9862/16301-rpcwoport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:49.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:49.130" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/a2e8aaec-f374-47d8-ada6-94abd23983ab/current/containerDir0/1/chunks/104005394448973949_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200416 00:19:46.250" endtime="20200416 00:19:49.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:49.132" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/a2e8aaec-f374-47d8-ada6-94abd23983ab/current/containerDir0/1/chunks/104005394448973949_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.3",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.7",
      "hostName": "ozone_datanode_3.ozone_default"
    }
  ],
  "pipelineID": "b4b55ac5-3b9f-43fd-9ca8-d5bababeda4c"
}</msg>
<status status="PASS" starttime="20200416 00:19:49.131" endtime="20200416 00:19:49.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:49.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:49.132" endtime="20200416 00:19:49.132"></status>
</kw>
<msg timestamp="20200416 00:19:49.133" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/a2e8aaec-f374-47d8-ada6-94abd23983ab/current/containerDir0/1/chunks/104005394448973949_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200416 00:19:46.250" endtime="20200416 00:19:49.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:49.133" endtime="20200416 00:19:49.133"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:49.136" level="INFO">Running command 'ozone sh key list o3://om:9862/16301-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:50.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:50.878" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200416 00:19:49.134" endtime="20200416 00:19:50.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:50.879" level="INFO">key1</msg>
<status status="PASS" starttime="20200416 00:19:50.878" endtime="20200416 00:19:50.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:50.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:50.879" endtime="20200416 00:19:50.880"></status>
</kw>
<msg timestamp="20200416 00:19:50.880" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200416 00:19:49.133" endtime="20200416 00:19:50.880"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:50.880" endtime="20200416 00:19:50.881"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:50.884" level="INFO">Running command 'ozone sh key rename o3://om:9862/16301-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:52.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:52.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:19:50.881" endtime="20200416 00:19:52.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:52.402" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:19:52.401" endtime="20200416 00:19:52.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:52.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:52.402" endtime="20200416 00:19:52.403"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:50.881" endtime="20200416 00:19:52.403"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:52.406" level="INFO">Running command 'ozone sh key list o3://om:9862/16301-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:54.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:54.241" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200416 00:19:52.404" endtime="20200416 00:19:54.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:54.242" level="INFO">key2</msg>
<status status="PASS" starttime="20200416 00:19:54.241" endtime="20200416 00:19:54.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:54.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:54.242" endtime="20200416 00:19:54.243"></status>
</kw>
<msg timestamp="20200416 00:19:54.243" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200416 00:19:52.403" endtime="20200416 00:19:54.243"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:54.243" endtime="20200416 00:19:54.243"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:54.247" level="INFO">Running command 'ozone sh key delete o3://om:9862/16301-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:55.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:55.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:19:54.244" endtime="20200416 00:19:55.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:55.873" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:19:55.872" endtime="20200416 00:19:55.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:55.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:55.873" endtime="20200416 00:19:55.874"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:54.244" endtime="20200416 00:19:55.874"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:33.762" endtime="20200416 00:19:55.874"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:33.762" endtime="20200416 00:19:55.874"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:55.878" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/16301-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:57.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:57.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:19:55.875" endtime="20200416 00:19:57.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:57.374" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:19:57.373" endtime="20200416 00:19:57.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:57.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:57.374" endtime="20200416 00:19:57.374"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:55.874" endtime="20200416 00:19:57.375"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:57.377" level="INFO">Running command 'ozone sh volume delete o3://om:9862/16301-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:19:58.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:19:58.995" level="INFO">${output} = Volume 16301-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200416 00:19:57.375" endtime="20200416 00:19:58.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:19:58.996" level="INFO">Volume 16301-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200416 00:19:58.995" endtime="20200416 00:19:58.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:19:58.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:19:58.996" endtime="20200416 00:19:58.996"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:57.375" endtime="20200416 00:19:58.996"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:18.868" endtime="20200416 00:19:58.997"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200416 00:19:18.867" endtime="20200416 00:19:58.997" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200416 00:19:58.998" endtime="20200416 00:19:58.998"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:19:59.001" level="INFO">Running command 'ozone sh volume create o3://om:9862/16301-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:00.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:00.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:19:58.999" endtime="20200416 00:20:00.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:00.597" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:20:00.596" endtime="20200416 00:20:00.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:00.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:00.597" endtime="20200416 00:20:00.598"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:58.999" endtime="20200416 00:20:00.598"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:00.601" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/16301-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:02.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:02.360" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:00.598" endtime="20200416 00:20:02.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:02.361" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:02.360" endtime="20200416 00:20:02.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:02.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:02.361" endtime="20200416 00:20:02.362"></status>
</kw>
<msg timestamp="20200416 00:20:02.362" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:00.598" endtime="20200416 00:20:02.362"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:02.362" endtime="20200416 00:20:02.363"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:02.367" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/16301-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:04.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:04.198" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200416 00:20:02.364" endtime="20200416 00:20:04.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:04.199" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200416 00:20:04.198" endtime="20200416 00:20:04.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:04.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:04.199" endtime="20200416 00:20:04.199"></status>
</kw>
<msg timestamp="20200416 00:20:04.200" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200416 00:20:02.363" endtime="20200416 00:20:04.200"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:04.202" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/16301-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:05.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:05.877" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:04.200" endtime="20200416 00:20:05.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:05.878" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:05.877" endtime="20200416 00:20:05.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:05.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:05.878" endtime="20200416 00:20:05.879"></status>
</kw>
<msg timestamp="20200416 00:20:05.879" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:04.200" endtime="20200416 00:20:05.879"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:05.879" endtime="20200416 00:20:05.880"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:05.883" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/16301-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:07.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:07.365" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200416 00:20:05.881" endtime="20200416 00:20:07.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:07.366" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200416 00:20:07.365" endtime="20200416 00:20:07.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:07.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:07.366" endtime="20200416 00:20:07.366"></status>
</kw>
<msg timestamp="20200416 00:20:07.367" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200416 00:20:05.880" endtime="20200416 00:20:07.367"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:07.371" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/16301-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:09.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:09.174" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:07.368" endtime="20200416 00:20:09.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:09.175" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:09.174" endtime="20200416 00:20:09.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:09.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:09.175" endtime="20200416 00:20:09.175"></status>
</kw>
<msg timestamp="20200416 00:20:09.176" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:07.367" endtime="20200416 00:20:09.176"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:09.176" endtime="20200416 00:20:09.177"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:09.180" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/16301-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:10.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:10.706" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200416 00:20:09.177" endtime="20200416 00:20:10.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:10.707" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200416 00:20:10.706" endtime="20200416 00:20:10.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:10.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:10.707" endtime="20200416 00:20:10.708"></status>
</kw>
<msg timestamp="20200416 00:20:10.708" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200416 00:20:09.177" endtime="20200416 00:20:10.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:10.710" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/16301-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:12.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:12.395" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200416 00:20:10.709" endtime="20200416 00:20:12.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:12.396" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:12.395" endtime="20200416 00:20:12.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:12.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:12.396" endtime="20200416 00:20:12.397"></status>
</kw>
<msg timestamp="20200416 00:20:12.397" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200416 00:20:10.708" endtime="20200416 00:20:12.397"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:12.397" endtime="20200416 00:20:12.398"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:12.398" endtime="20200416 00:20:12.399"></status>
</kw>
<status status="PASS" starttime="20200416 00:19:58.998" endtime="20200416 00:20:12.399"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200416 00:19:58.997" endtime="20200416 00:20:12.399" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:12.400" endtime="20200416 00:20:12.401"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:12.403" level="INFO">Running command 'ozone sh bucket create o3://om:9862/16301-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:13.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:13.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:20:12.402" endtime="20200416 00:20:13.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:13.881" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:20:13.881" endtime="20200416 00:20:13.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:13.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:13.881" endtime="20200416 00:20:13.882"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:12.401" endtime="20200416 00:20:13.882"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:13.884" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/16301-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:15.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:15.564" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:13.882" endtime="20200416 00:20:15.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:15.565" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:15.564" endtime="20200416 00:20:15.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:15.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:15.565" endtime="20200416 00:20:15.565"></status>
</kw>
<msg timestamp="20200416 00:20:15.566" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:13.882" endtime="20200416 00:20:15.566"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:15.566" endtime="20200416 00:20:15.566"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:15.569" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/16301-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:17.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:17.135" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200416 00:20:15.567" endtime="20200416 00:20:17.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:17.136" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200416 00:20:17.135" endtime="20200416 00:20:17.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:17.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:17.136" endtime="20200416 00:20:17.136"></status>
</kw>
<msg timestamp="20200416 00:20:17.137" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200416 00:20:15.566" endtime="20200416 00:20:17.137"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:17.139" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/16301-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:18.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:18.859" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:17.137" endtime="20200416 00:20:18.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:18.860" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:18.859" endtime="20200416 00:20:18.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:18.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:18.860" endtime="20200416 00:20:18.861"></status>
</kw>
<msg timestamp="20200416 00:20:18.861" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:17.137" endtime="20200416 00:20:18.861"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:18.861" endtime="20200416 00:20:18.862"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:18.865" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/16301-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:20.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:20.478" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200416 00:20:18.863" endtime="20200416 00:20:20.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:20.479" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200416 00:20:20.478" endtime="20200416 00:20:20.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:20.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:20.479" endtime="20200416 00:20:20.480"></status>
</kw>
<msg timestamp="20200416 00:20:20.480" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200416 00:20:18.862" endtime="20200416 00:20:20.480"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:20.483" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/16301-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:22.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:22.153" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:20.480" endtime="20200416 00:20:22.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:22.154" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:22.153" endtime="20200416 00:20:22.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:22.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:22.154" endtime="20200416 00:20:22.154"></status>
</kw>
<msg timestamp="20200416 00:20:22.154" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:20.480" endtime="20200416 00:20:22.154"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:22.155" endtime="20200416 00:20:22.155"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:22.158" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/16301-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:23.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:23.754" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200416 00:20:22.156" endtime="20200416 00:20:23.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:23.755" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200416 00:20:23.755" endtime="20200416 00:20:23.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:23.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:23.756" endtime="20200416 00:20:23.756"></status>
</kw>
<msg timestamp="20200416 00:20:23.756" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200416 00:20:22.156" endtime="20200416 00:20:23.756"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:23.758" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/16301-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:25.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:25.463" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200416 00:20:23.757" endtime="20200416 00:20:25.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:25.464" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:25.464" endtime="20200416 00:20:25.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:25.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:25.464" endtime="20200416 00:20:25.465"></status>
</kw>
<msg timestamp="20200416 00:20:25.465" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200416 00:20:23.756" endtime="20200416 00:20:25.465"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:25.465" endtime="20200416 00:20:25.466"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:25.466" endtime="20200416 00:20:25.466"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:12.401" endtime="20200416 00:20:25.466"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200416 00:20:12.400" endtime="20200416 00:20:25.467" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:25.468" endtime="20200416 00:20:25.468"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:25.471" level="INFO">Running command 'ozone sh key put o3://om:9862/16301-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:28.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:28.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:20:25.469" endtime="20200416 00:20:28.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:28.624" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:20:28.623" endtime="20200416 00:20:28.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:28.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:28.624" endtime="20200416 00:20:28.624"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:25.469" endtime="20200416 00:20:28.624"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:28.627" level="INFO">Running command 'ozone sh key getacl o3://om:9862/16301-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:30.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:30.339" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:28.626" endtime="20200416 00:20:30.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:30.340" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:30.339" endtime="20200416 00:20:30.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:30.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:30.340" endtime="20200416 00:20:30.341"></status>
</kw>
<msg timestamp="20200416 00:20:30.341" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:28.624" endtime="20200416 00:20:30.341"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:30.341" endtime="20200416 00:20:30.341"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:30.344" level="INFO">Running command 'ozone sh key addacl o3://om:9862/16301-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:31.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:31.786" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200416 00:20:30.342" endtime="20200416 00:20:31.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:31.787" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200416 00:20:31.787" endtime="20200416 00:20:31.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:31.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:31.788" endtime="20200416 00:20:31.788"></status>
</kw>
<msg timestamp="20200416 00:20:31.788" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200416 00:20:30.341" endtime="20200416 00:20:31.788"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:31.790" level="INFO">Running command 'ozone sh key getacl o3://om:9862/16301-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:33.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:33.467" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:31.789" endtime="20200416 00:20:33.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:33.468" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:33.468" endtime="20200416 00:20:33.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:33.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:33.469" endtime="20200416 00:20:33.469"></status>
</kw>
<msg timestamp="20200416 00:20:33.469" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:31.788" endtime="20200416 00:20:33.469"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:33.470" endtime="20200416 00:20:33.471"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:33.473" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/16301-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:34.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:34.907" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200416 00:20:33.471" endtime="20200416 00:20:34.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:34.908" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200416 00:20:34.908" endtime="20200416 00:20:34.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:34.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:34.909" endtime="20200416 00:20:34.909"></status>
</kw>
<msg timestamp="20200416 00:20:34.910" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200416 00:20:33.471" endtime="20200416 00:20:34.910"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:34.912" level="INFO">Running command 'ozone sh key getacl o3://om:9862/16301-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:36.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:36.618" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:34.910" endtime="20200416 00:20:36.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:36.619" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:36.618" endtime="20200416 00:20:36.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:36.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:36.619" endtime="20200416 00:20:36.619"></status>
</kw>
<msg timestamp="20200416 00:20:36.620" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200416 00:20:34.910" endtime="20200416 00:20:36.620"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:36.620" endtime="20200416 00:20:36.620"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:36.623" level="INFO">Running command 'ozone sh key setacl o3://om:9862/16301-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:38.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:38.111" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200416 00:20:36.621" endtime="20200416 00:20:38.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:38.112" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200416 00:20:38.111" endtime="20200416 00:20:38.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:38.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:38.112" endtime="20200416 00:20:38.113"></status>
</kw>
<msg timestamp="20200416 00:20:38.113" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200416 00:20:36.620" endtime="20200416 00:20:38.113"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:38.116" level="INFO">Running command 'ozone sh key getacl o3://om:9862/16301-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:39.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:39.791" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200416 00:20:38.114" endtime="20200416 00:20:39.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:39.792" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200416 00:20:39.792" endtime="20200416 00:20:39.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:39.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:39.792" endtime="20200416 00:20:39.793"></status>
</kw>
<msg timestamp="20200416 00:20:39.793" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200416 00:20:38.113" endtime="20200416 00:20:39.793"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:39.793" endtime="20200416 00:20:39.794"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:39.794" endtime="20200416 00:20:39.794"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:25.468" endtime="20200416 00:20:39.795"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200416 00:20:25.467" endtime="20200416 00:20:39.795" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:39.796" endtime="20200416 00:20:39.796"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:39.799" level="INFO">Running command 'ozone sh volume info o3:///16301-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:41.331" level="INFO">${rc} = 255</msg>
<msg timestamp="20200416 00:20:41.331" level="INFO">${output} = VOLUME_NOT_FOUND Volume 16301-rpcwport is not found</msg>
<status status="PASS" starttime="20200416 00:20:39.797" endtime="20200416 00:20:41.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:41.332" level="INFO">VOLUME_NOT_FOUND Volume 16301-rpcwport is not found</msg>
<status status="PASS" starttime="20200416 00:20:41.331" endtime="20200416 00:20:41.332"></status>
</kw>
<msg timestamp="20200416 00:20:41.332" level="INFO">${result} = VOLUME_NOT_FOUND Volume 16301-rpcwport is not found</msg>
<status status="PASS" starttime="20200416 00:20:39.797" endtime="20200416 00:20:41.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:41.333" endtime="20200416 00:20:41.333"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:41.336" level="INFO">Running command 'ozone sh volume create o3:///16301-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:42.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:42.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:20:41.333" endtime="20200416 00:20:42.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:42.912" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:20:42.912" endtime="20200416 00:20:42.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:42.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:42.913" endtime="20200416 00:20:42.913"></status>
</kw>
<msg timestamp="20200416 00:20:42.913" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200416 00:20:41.333" endtime="20200416 00:20:42.913"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:42.913" endtime="20200416 00:20:42.914"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:42.917" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="16301-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:44.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:44.578" level="INFO">${output} = {
  "metadata": {},
  "name": "16301-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:20:42.891Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200416 00:20:42.914" endtime="20200416 00:20:44.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:44.579" level="INFO">{
  "metadata": {},
  "name": "16301-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:20:42.891Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200416 00:20:44.578" endtime="20200416 00:20:44.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:44.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:44.579" endtime="20200416 00:20:44.580"></status>
</kw>
<msg timestamp="20200416 00:20:44.580" level="INFO">${result} = {
  "metadata": {},
  "name": "16301-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:20:42.891Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200416 00:20:42.914" endtime="20200416 00:20:44.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:44.580" endtime="20200416 00:20:44.581"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:44.584" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="16301-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:46.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:46.197" level="INFO">${output} = {
  "metadata": {},
  "name": "16301-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:20:42.891Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200416 00:20:44.581" endtime="20200416 00:20:46.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:46.197" level="INFO">{
  "metadata": {},
  "name": "16301-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:20:42.891Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200416 00:20:46.197" endtime="20200416 00:20:46.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:46.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:46.198" endtime="20200416 00:20:46.198"></status>
</kw>
<msg timestamp="20200416 00:20:46.198" level="INFO">${result} = {
  "metadata": {},
  "name": "16301-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:20:42.891Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200416 00:20:44.581" endtime="20200416 00:20:46.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:46.198" endtime="20200416 00:20:46.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:46.201" level="INFO">Running command 'ozone sh volume update o3:///16301-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:47.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:47.841" level="INFO">${output} = {
  "metadata" : { },
  "name" : "16301-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-16T00:20:42.891Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200416 00:20:46.199" endtime="20200416 00:20:47.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:47.842" level="INFO">{
  "metadata" : { },
  "name" : "16301-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-16T00:20:42.891Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200416 00:20:47.841" endtime="20200416 00:20:47.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:47.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:47.842" endtime="20200416 00:20:47.842"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:46.199" endtime="20200416 00:20:47.843"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:47.846" level="INFO">Running command 'ozone sh volume info o3:///16301-rpcwport | jq -r '. | select(.name=="16301-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:49.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:49.500" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200416 00:20:47.843" endtime="20200416 00:20:49.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:49.501" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200416 00:20:49.500" endtime="20200416 00:20:49.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:49.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:49.501" endtime="20200416 00:20:49.502"></status>
</kw>
<msg timestamp="20200416 00:20:49.502" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200416 00:20:47.843" endtime="20200416 00:20:49.502"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:49.502" endtime="20200416 00:20:49.502"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:49.505" level="INFO">Running command 'ozone sh bucket create o3:///16301-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:51.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:51.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:20:49.503" endtime="20200416 00:20:51.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:51.047" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:20:51.047" endtime="20200416 00:20:51.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:51.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:51.047" endtime="20200416 00:20:51.048"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:49.502" endtime="20200416 00:20:51.048"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:51.054" level="INFO">Running command 'ozone sh bucket info o3:///16301-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:52.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:52.715" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200416 00:20:51.049" endtime="20200416 00:20:52.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:52.716" level="INFO">DISK</msg>
<status status="PASS" starttime="20200416 00:20:52.715" endtime="20200416 00:20:52.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:52.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:52.716" endtime="20200416 00:20:52.716"></status>
</kw>
<msg timestamp="20200416 00:20:52.716" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200416 00:20:51.048" endtime="20200416 00:20:52.716"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:52.717" endtime="20200416 00:20:52.717"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:52.720" level="INFO">Running command 'ozone sh bucket list o3:///16301-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:54.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:54.400" level="INFO">${output} = 16301-rpcwport</msg>
<status status="PASS" starttime="20200416 00:20:52.718" endtime="20200416 00:20:54.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:54.401" level="INFO">16301-rpcwport</msg>
<status status="PASS" starttime="20200416 00:20:54.400" endtime="20200416 00:20:54.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:54.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:54.401" endtime="20200416 00:20:54.401"></status>
</kw>
<msg timestamp="20200416 00:20:54.402" level="INFO">${result} = 16301-rpcwport</msg>
<status status="PASS" starttime="20200416 00:20:52.717" endtime="20200416 00:20:54.402"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200416 00:20:54.402" endtime="20200416 00:20:54.402"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:54.405" level="INFO">Running command 'ozone sh key put o3:///16301-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:59.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:59.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:20:54.404" endtime="20200416 00:20:59.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:59.822" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:20:59.821" endtime="20200416 00:20:59.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:59.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:59.822" endtime="20200416 00:20:59.822"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:54.403" endtime="20200416 00:20:59.822"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:59.825" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:20:59.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:20:59.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:20:59.823" endtime="20200416 00:20:59.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:20:59.827" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:20:59.827" endtime="20200416 00:20:59.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:20:59.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:20:59.827" endtime="20200416 00:20:59.828"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:59.823" endtime="20200416 00:20:59.828"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:20:59.830" level="INFO">Running command 'ozone sh key get o3:///16301-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:02.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:02.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:20:59.828" endtime="20200416 00:21:02.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:02.741" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:02.741" endtime="20200416 00:21:02.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:02.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:02.742" endtime="20200416 00:21:02.742"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:59.828" endtime="20200416 00:21:02.742"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:02.744" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:02.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:02.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:02.743" endtime="20200416 00:21:02.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:02.747" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:02.747" endtime="20200416 00:21:02.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:02.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:02.747" endtime="20200416 00:21:02.748"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:02.742" endtime="20200416 00:21:02.748"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:02.750" level="INFO">Running command 'ozone sh key get o3:///16301-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:04.376" level="INFO">${rc} = 255</msg>
<msg timestamp="20200416 00:21:04.376" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200416 00:21:02.749" endtime="20200416 00:21:04.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:04.377" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200416 00:21:04.376" endtime="20200416 00:21:04.377"></status>
</kw>
<msg timestamp="20200416 00:21:04.377" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200416 00:21:02.748" endtime="20200416 00:21:04.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:04.377" endtime="20200416 00:21:04.378"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:04.380" level="INFO">Running command 'ozone sh key get --force o3:///16301-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:07.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:07.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:04.378" endtime="20200416 00:21:07.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:07.410" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:07.409" endtime="20200416 00:21:07.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:07.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:07.410" endtime="20200416 00:21:07.410"></status>
</kw>
<msg timestamp="20200416 00:21:07.411" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200416 00:21:04.378" endtime="20200416 00:21:07.411"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:07.411" endtime="20200416 00:21:07.411"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:07.414" level="INFO">Running command 'ozone sh key info o3:///16301-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:09.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:09.281" level="INFO">${output} = {
  "volumeName": "16301-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-16T00:20:55.863Z",
  "modificationTime": "2020-04-16T00:20:59.454Z",
  "rep...</msg>
<status status="PASS" starttime="20200416 00:21:07.412" endtime="20200416 00:21:09.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:09.282" level="INFO">{
  "volumeName": "16301-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-16T00:20:55.863Z",
  "modificationTime": "2020-04-16T00:20:59.454Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104005399731372160,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200416 00:21:09.282" endtime="20200416 00:21:09.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:09.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:09.283" endtime="20200416 00:21:09.283"></status>
</kw>
<msg timestamp="20200416 00:21:09.283" level="INFO">${result} = {
  "volumeName": "16301-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-16T00:20:55.863Z",
  "modificationTime": "2020-04-16T00:20:59.454Z",
  "rep...</msg>
<status status="PASS" starttime="20200416 00:21:07.412" endtime="20200416 00:21:09.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:09.284" endtime="20200416 00:21:09.284"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:09.287" level="INFO">Running command 'ozone debug chunkinfo o3:///16301-rpcwport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:12.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:12.311" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/a2e8aaec-f374-47d8-ada6-94abd23983ab/current/containerDir0/1/chunks/104005399731372159_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200416 00:21:09.285" endtime="20200416 00:21:12.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:12.312" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/a2e8aaec-f374-47d8-ada6-94abd23983ab/current/containerDir0/1/chunks/104005399731372159_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.3",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.7",
      "hostName": "ozone_datanode_3.ozone_default"
    }
  ],
  "pipelineID": "b4b55ac5-3b9f-43fd-9ca8-d5bababeda4c"
}</msg>
<status status="PASS" starttime="20200416 00:21:12.312" endtime="20200416 00:21:12.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:12.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:12.312" endtime="20200416 00:21:12.313"></status>
</kw>
<msg timestamp="20200416 00:21:12.313" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/a2e8aaec-f374-47d8-ada6-94abd23983ab/current/containerDir0/1/chunks/104005399731372159_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200416 00:21:09.284" endtime="20200416 00:21:12.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:12.313" endtime="20200416 00:21:12.314"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:12.318" level="INFO">Running command 'ozone sh key list o3:///16301-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:14.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:14.099" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200416 00:21:12.315" endtime="20200416 00:21:14.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:14.100" level="INFO">key1</msg>
<status status="PASS" starttime="20200416 00:21:14.100" endtime="20200416 00:21:14.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:14.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:14.101" endtime="20200416 00:21:14.101"></status>
</kw>
<msg timestamp="20200416 00:21:14.101" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200416 00:21:12.314" endtime="20200416 00:21:14.101"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:14.101" endtime="20200416 00:21:14.102"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:14.104" level="INFO">Running command 'ozone sh key rename o3:///16301-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:15.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:15.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:14.102" endtime="20200416 00:21:15.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:15.665" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:15.664" endtime="20200416 00:21:15.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:15.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:15.665" endtime="20200416 00:21:15.665"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:14.102" endtime="20200416 00:21:15.666"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:15.669" level="INFO">Running command 'ozone sh key list o3:///16301-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:17.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:17.371" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200416 00:21:15.666" endtime="20200416 00:21:17.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:17.372" level="INFO">key2</msg>
<status status="PASS" starttime="20200416 00:21:17.371" endtime="20200416 00:21:17.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:17.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:17.372" endtime="20200416 00:21:17.372"></status>
</kw>
<msg timestamp="20200416 00:21:17.373" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200416 00:21:15.666" endtime="20200416 00:21:17.373"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:17.373" endtime="20200416 00:21:17.373"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:17.377" level="INFO">Running command 'ozone sh key delete o3:///16301-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:18.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:18.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:17.374" endtime="20200416 00:21:18.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:18.864" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:18.864" endtime="20200416 00:21:18.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:18.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:18.865" endtime="20200416 00:21:18.865"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:17.373" endtime="20200416 00:21:18.865"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:54.403" endtime="20200416 00:21:18.865"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:54.402" endtime="20200416 00:21:18.865"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:18.869" level="INFO">Running command 'ozone sh bucket delete o3:///16301-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:20.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:20.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:18.866" endtime="20200416 00:21:20.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:20.326" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:20.325" endtime="20200416 00:21:20.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:20.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:20.326" endtime="20200416 00:21:20.326"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:18.866" endtime="20200416 00:21:20.326"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:20.330" level="INFO">Running command 'ozone sh volume delete o3:///16301-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:21.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:21.894" level="INFO">${output} = Volume 16301-rpcwport is deleted</msg>
<status status="PASS" starttime="20200416 00:21:20.327" endtime="20200416 00:21:21.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:21.895" level="INFO">Volume 16301-rpcwport is deleted</msg>
<status status="PASS" starttime="20200416 00:21:21.894" endtime="20200416 00:21:21.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:21.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:21.896" endtime="20200416 00:21:21.896"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:20.327" endtime="20200416 00:21:21.896"></status>
</kw>
<status status="PASS" starttime="20200416 00:20:39.796" endtime="20200416 00:21:21.896"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200416 00:20:39.795" endtime="20200416 00:21:21.896" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:21.898" endtime="20200416 00:21:21.898"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:21.903" level="INFO">Running command 'ozone sh volume info /16301-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:23.393" level="INFO">${rc} = 255</msg>
<msg timestamp="20200416 00:21:23.393" level="INFO">${output} = VOLUME_NOT_FOUND Volume 16301-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200416 00:21:21.900" endtime="20200416 00:21:23.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:23.394" level="INFO">VOLUME_NOT_FOUND Volume 16301-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200416 00:21:23.393" endtime="20200416 00:21:23.394"></status>
</kw>
<msg timestamp="20200416 00:21:23.394" level="INFO">${result} = VOLUME_NOT_FOUND Volume 16301-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200416 00:21:21.899" endtime="20200416 00:21:23.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:23.394" endtime="20200416 00:21:23.395"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:23.397" level="INFO">Running command 'ozone sh volume create /16301-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:24.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:24.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:23.395" endtime="20200416 00:21:24.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:24.938" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:24.937" endtime="20200416 00:21:24.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:24.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:24.938" endtime="20200416 00:21:24.939"></status>
</kw>
<msg timestamp="20200416 00:21:24.939" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200416 00:21:23.395" endtime="20200416 00:21:24.939"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:24.939" endtime="20200416 00:21:24.940"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:24.942" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="16301-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:26.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:26.631" level="INFO">${output} = {
  "metadata": {},
  "name": "16301-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:21:24.909Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200416 00:21:24.940" endtime="20200416 00:21:26.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:26.632" level="INFO">{
  "metadata": {},
  "name": "16301-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:21:24.909Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200416 00:21:26.631" endtime="20200416 00:21:26.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:26.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:26.632" endtime="20200416 00:21:26.633"></status>
</kw>
<msg timestamp="20200416 00:21:26.633" level="INFO">${result} = {
  "metadata": {},
  "name": "16301-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:21:24.909Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200416 00:21:24.940" endtime="20200416 00:21:26.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:26.633" endtime="20200416 00:21:26.633"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:26.636" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="16301-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:28.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:28.349" level="INFO">${output} = {
  "metadata": {},
  "name": "16301-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:21:24.909Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200416 00:21:26.634" endtime="20200416 00:21:28.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:28.350" level="INFO">{
  "metadata": {},
  "name": "16301-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:21:24.909Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200416 00:21:28.349" endtime="20200416 00:21:28.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:28.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:28.350" endtime="20200416 00:21:28.351"></status>
</kw>
<msg timestamp="20200416 00:21:28.351" level="INFO">${result} = {
  "metadata": {},
  "name": "16301-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-16T00:21:24.909Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200416 00:21:26.633" endtime="20200416 00:21:28.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:28.351" endtime="20200416 00:21:28.351"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:28.355" level="INFO">Running command 'ozone sh volume update /16301-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:30.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:30.069" level="INFO">${output} = {
  "metadata" : { },
  "name" : "16301-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-16T00:21:24.909Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200416 00:21:28.352" endtime="20200416 00:21:30.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:30.070" level="INFO">{
  "metadata" : { },
  "name" : "16301-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-16T00:21:24.909Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200416 00:21:30.069" endtime="20200416 00:21:30.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:30.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:30.070" endtime="20200416 00:21:30.070"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:28.351" endtime="20200416 00:21:30.070"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:30.074" level="INFO">Running command 'ozone sh volume info /16301-rpcwoscheme | jq -r '. | select(.name=="16301-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:31.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:31.779" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200416 00:21:30.071" endtime="20200416 00:21:31.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:31.780" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200416 00:21:31.779" endtime="20200416 00:21:31.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:31.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:31.780" endtime="20200416 00:21:31.781"></status>
</kw>
<msg timestamp="20200416 00:21:31.781" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200416 00:21:30.070" endtime="20200416 00:21:31.781"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:31.781" endtime="20200416 00:21:31.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:31.784" level="INFO">Running command 'ozone sh bucket create /16301-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:33.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:33.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:31.782" endtime="20200416 00:21:33.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:33.332" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:33.332" endtime="20200416 00:21:33.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:33.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:33.332" endtime="20200416 00:21:33.333"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:31.781" endtime="20200416 00:21:33.333"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:33.336" level="INFO">Running command 'ozone sh bucket info /16301-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:35.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:35.018" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200416 00:21:33.334" endtime="20200416 00:21:35.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:35.019" level="INFO">DISK</msg>
<status status="PASS" starttime="20200416 00:21:35.018" endtime="20200416 00:21:35.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:35.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:35.019" endtime="20200416 00:21:35.019"></status>
</kw>
<msg timestamp="20200416 00:21:35.020" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200416 00:21:33.333" endtime="20200416 00:21:35.020"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:35.020" endtime="20200416 00:21:35.020"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:35.022" level="INFO">Running command 'ozone sh bucket list /16301-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:36.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:36.718" level="INFO">${output} = 16301-rpcwoscheme</msg>
<status status="PASS" starttime="20200416 00:21:35.021" endtime="20200416 00:21:36.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:36.719" level="INFO">16301-rpcwoscheme</msg>
<status status="PASS" starttime="20200416 00:21:36.718" endtime="20200416 00:21:36.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:36.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:36.719" endtime="20200416 00:21:36.719"></status>
</kw>
<msg timestamp="20200416 00:21:36.719" level="INFO">${result} = 16301-rpcwoscheme</msg>
<status status="PASS" starttime="20200416 00:21:35.020" endtime="20200416 00:21:36.719"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:36.720" endtime="20200416 00:21:36.720"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:36.723" level="INFO">Running command 'ozone sh key put /16301-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:39.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:39.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:36.721" endtime="20200416 00:21:39.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:39.844" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:39.843" endtime="20200416 00:21:39.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:39.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:39.844" endtime="20200416 00:21:39.845"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:36.721" endtime="20200416 00:21:39.845"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:39.847" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:39.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:39.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:39.846" endtime="20200416 00:21:39.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:39.850" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:39.849" endtime="20200416 00:21:39.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:39.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:39.850" endtime="20200416 00:21:39.851"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:39.845" endtime="20200416 00:21:39.851"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:39.853" level="INFO">Running command 'ozone sh key get /16301-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:42.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:42.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:39.851" endtime="20200416 00:21:42.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:42.738" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:42.737" endtime="20200416 00:21:42.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:42.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:42.738" endtime="20200416 00:21:42.738"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:39.851" endtime="20200416 00:21:42.739"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:42.741" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:42.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:42.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:42.739" endtime="20200416 00:21:42.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:42.743" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:42.743" endtime="20200416 00:21:42.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:42.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:42.744" endtime="20200416 00:21:42.744"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:42.739" endtime="20200416 00:21:42.744"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:42.746" level="INFO">Running command 'ozone sh key get /16301-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:44.275" level="INFO">${rc} = 255</msg>
<msg timestamp="20200416 00:21:44.276" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200416 00:21:42.745" endtime="20200416 00:21:44.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:44.277" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200416 00:21:44.276" endtime="20200416 00:21:44.277"></status>
</kw>
<msg timestamp="20200416 00:21:44.277" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200416 00:21:42.744" endtime="20200416 00:21:44.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:44.277" endtime="20200416 00:21:44.277"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:44.280" level="INFO">Running command 'ozone sh key get --force /16301-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:47.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:47.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:44.278" endtime="20200416 00:21:47.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:47.117" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:47.117" endtime="20200416 00:21:47.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:47.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:47.118" endtime="20200416 00:21:47.118"></status>
</kw>
<msg timestamp="20200416 00:21:47.118" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200416 00:21:44.278" endtime="20200416 00:21:47.118"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:47.119" endtime="20200416 00:21:47.119"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:47.122" level="INFO">Running command 'ozone sh key info /16301-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:48.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:48.743" level="INFO">${output} = {
  "volumeName": "16301-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-16T00:21:38.234Z",
  "modificationTime": "2020-04-16T00:21:39.480Z",
  "...</msg>
<status status="PASS" starttime="20200416 00:21:47.119" endtime="20200416 00:21:48.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:48.744" level="INFO">{
  "volumeName": "16301-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-16T00:21:38.234Z",
  "modificationTime": "2020-04-16T00:21:39.480Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104005402508198020,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200416 00:21:48.743" endtime="20200416 00:21:48.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:48.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:48.744" endtime="20200416 00:21:48.744"></status>
</kw>
<msg timestamp="20200416 00:21:48.745" level="INFO">${result} = {
  "volumeName": "16301-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-16T00:21:38.234Z",
  "modificationTime": "2020-04-16T00:21:39.480Z",
  "...</msg>
<status status="PASS" starttime="20200416 00:21:47.119" endtime="20200416 00:21:48.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:48.745" endtime="20200416 00:21:48.745"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:48.748" level="INFO">Running command 'ozone debug chunkinfo /16301-rpcwoscheme/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:51.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:51.598" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/a2e8aaec-f374-47d8-ada6-94abd23983ab/current/containerDir0/1/chunks/104005402508198016_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200416 00:21:48.746" endtime="20200416 00:21:51.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:51.599" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/a2e8aaec-f374-47d8-ada6-94abd23983ab/current/containerDir0/1/chunks/104005402508198016_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.3",
      "hostName": "ozone_datanode_2.ozone_default"
    },
    {
      "ipAddress": "172.21.0.7",
      "hostName": "ozone_datanode_3.ozone_default"
    }
  ],
  "pipelineID": "b4b55ac5-3b9f-43fd-9ca8-d5bababeda4c"
}</msg>
<status status="PASS" starttime="20200416 00:21:51.599" endtime="20200416 00:21:51.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:51.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:51.599" endtime="20200416 00:21:51.600"></status>
</kw>
<msg timestamp="20200416 00:21:51.600" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/a2e8aaec-f374-47d8-ada6-94abd23983ab/current/containerDir0/1/chunks/104005402508198016_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200416 00:21:48.746" endtime="20200416 00:21:51.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:51.600" endtime="20200416 00:21:51.601"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:51.603" level="INFO">Running command 'ozone sh key list /16301-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:53.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:53.327" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200416 00:21:51.601" endtime="20200416 00:21:53.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:53.328" level="INFO">key1</msg>
<status status="PASS" starttime="20200416 00:21:53.328" endtime="20200416 00:21:53.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:53.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:53.329" endtime="20200416 00:21:53.329"></status>
</kw>
<msg timestamp="20200416 00:21:53.329" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200416 00:21:51.601" endtime="20200416 00:21:53.329"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:53.330" endtime="20200416 00:21:53.330"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:53.332" level="INFO">Running command 'ozone sh key rename /16301-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:54.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:54.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:53.331" endtime="20200416 00:21:54.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:54.847" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:54.846" endtime="20200416 00:21:54.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:54.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:54.847" endtime="20200416 00:21:54.848"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:53.330" endtime="20200416 00:21:54.848"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:54.851" level="INFO">Running command 'ozone sh key list /16301-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:56.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:56.592" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200416 00:21:54.848" endtime="20200416 00:21:56.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:56.593" level="INFO">key2</msg>
<status status="PASS" starttime="20200416 00:21:56.592" endtime="20200416 00:21:56.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:56.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:56.593" endtime="20200416 00:21:56.593"></status>
</kw>
<msg timestamp="20200416 00:21:56.594" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200416 00:21:54.848" endtime="20200416 00:21:56.594"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200416 00:21:56.594" endtime="20200416 00:21:56.594"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:56.598" level="INFO">Running command 'ozone sh key delete /16301-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:58.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:58.118" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:56.595" endtime="20200416 00:21:58.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:58.120" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:58.119" endtime="20200416 00:21:58.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:58.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:58.120" endtime="20200416 00:21:58.120"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:56.594" endtime="20200416 00:21:58.120"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:36.721" endtime="20200416 00:21:58.121"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:36.720" endtime="20200416 00:21:58.121"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:58.123" level="INFO">Running command 'ozone sh bucket delete /16301-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:21:59.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:21:59.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200416 00:21:58.121" endtime="20200416 00:21:59.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:21:59.862" level="INFO"></msg>
<status status="PASS" starttime="20200416 00:21:59.861" endtime="20200416 00:21:59.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:21:59.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:21:59.862" endtime="20200416 00:21:59.863"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:58.121" endtime="20200416 00:21:59.863"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200416 00:21:59.865" level="INFO">Running command 'ozone sh volume delete /16301-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200416 00:22:01.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20200416 00:22:01.379" level="INFO">${output} = Volume 16301-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200416 00:21:59.864" endtime="20200416 00:22:01.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200416 00:22:01.380" level="INFO">Volume 16301-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200416 00:22:01.380" endtime="20200416 00:22:01.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200416 00:22:01.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200416 00:22:01.381" endtime="20200416 00:22:01.381"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:59.863" endtime="20200416 00:22:01.381"></status>
</kw>
<status status="PASS" starttime="20200416 00:21:21.898" endtime="20200416 00:22:01.381"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200416 00:21:21.897" endtime="20200416 00:22:01.382" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200416 00:19:18.859" endtime="20200416 00:22:01.383"></status>
</suite>
<status status="PASS" starttime="20200416 00:18:16.959" endtime="20200416 00:22:01.386"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
