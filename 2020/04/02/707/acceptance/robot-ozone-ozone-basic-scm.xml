<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200402 12:07:58.585" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozone-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20200402 12:07:58.630" starttime="20200402 12:07:58.630"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:07:58.632" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:07:58.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:07:58.728" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 02 Apr 2020 12:07:58 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 02 Apr 2020 11:39:18 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200402 12:07:58.728" starttime="20200402 12:07:58.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:07:58.729" level="INFO">HTTP/1.1 200 OK
Date: Thu, 02 Apr 2020 12:07:58 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 02 Apr 2020 11:39:18 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200402 12:07:58.729" starttime="20200402 12:07:58.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:07:58.729" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:07:58.729" starttime="20200402 12:07:58.729"></status>
</kw>
<msg timestamp="20200402 12:07:58.730" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 02 Apr 2020 12:07:58 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 02 Apr 2020 11:39:18 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200402 12:07:58.730" starttime="20200402 12:07:58.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200402 12:07:58.730" starttime="20200402 12:07:58.730"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200402 12:07:58.730" critical="yes" starttime="20200402 12:07:58.629"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200402 12:07:58.732" starttime="20200402 12:07:58.732"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:07:58.734" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:08:43.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:08:43.931" level="INFO">${output} = 2020-04-02 12:07:59,682 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:07:59,842 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:08:43.931" starttime="20200402 12:07:58.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:08:43.932" level="INFO">2020-04-02 12:07:59,682 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:07:59,842 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-02 12:07:59,842 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-02 12:08:01,360 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-02 12:08:01,361 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-02 12:08:01,361 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-02 12:08:01,361 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-02 12:08:01,361 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-02 12:08:01,361 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-02 12:08:01,361 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-02 12:08:01,362 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-02 12:08:01,366 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-02 12:08:01,371 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-02 12:08:01,392 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-89662, with hadoop as owner.
2020-04-02 12:08:01,507 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-29359, with hadoop as owner.
2020-04-02 12:08:01,517 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-72404, with hadoop as owner.
2020-04-02 12:08:01,522 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-64487, with hadoop as owner.
2020-04-02 12:08:01,527 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-23316, with hadoop as owner.
2020-04-02 12:08:01,541 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-89662/bucket-0-97087, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,567 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-29359/bucket-0-81880, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,571 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72404/bucket-0-53920, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,579 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-64487/bucket-0-87864, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,586 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-23316/bucket-0-52862, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,590 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-89662/bucket-1-30922, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,596 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-29359/bucket-1-64249, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,600 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72404/bucket-1-12114, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,607 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-64487/bucket-1-98397, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-23316/bucket-1-45562, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,619 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-89662/bucket-2-06633, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,627 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-29359/bucket-2-96666, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,634 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72404/bucket-2-04843, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,640 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-64487/bucket-2-15196, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,645 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-23316/bucket-2-85299, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,649 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-89662/bucket-3-92956, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,656 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-29359/bucket-3-43108, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,660 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72404/bucket-3-53597, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,665 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-64487/bucket-3-25068, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,672 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-23316/bucket-3-49322, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,676 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-89662/bucket-4-13334, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,680 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-29359/bucket-4-44766, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,683 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72404/bucket-4-59054, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,687 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-64487/bucket-4-81129, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:01,699 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-23316/bucket-4-34160, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:08:02,271 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-02 12:08:02,375 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-02 12:08:03,376 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-02 12:08:04,377 [Thread-8] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-04-02 12:08:05,379 [Thread-8] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-04-02 12:08:06,380 [Thread-8] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-04-02 12:08:07,380 [Thread-8] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-04-02 12:08:08,381 [Thread-8] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-04-02 12:08:09,381 [Thread-8] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-04-02 12:08:10,382 [Thread-8] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-04-02 12:08:11,382 [Thread-8] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-04-02 12:08:12,383 [Thread-8] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-04-02 12:08:13,384 [Thread-8] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-04-02 12:08:14,384 [Thread-8] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-04-02 12:08:15,384 [Thread-8] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-04-02 12:08:16,385 [Thread-8] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-04-02 12:08:17,385 [Thread-8] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-04-02 12:08:18,386 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-04-02 12:08:19,386 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-04-02 12:08:20,388 [Thread-8] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-04-02 12:08:21,388 [Thread-8] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-04-02 12:08:22,389 [Thread-8] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-04-02 12:08:23,390 [Thread-8] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-04-02 12:08:24,390 [Thread-8] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-04-02 12:08:25,391 [Thread-8] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-04-02 12:08:26,391 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-04-02 12:08:27,392 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-04-02 12:08:28,392 [Thread-8] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-04-02 12:08:29,393 [Thread-8] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-04-02 12:08:30,393 [Thread-8] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-04-02 12:08:31,393 [Thread-8] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-04-02 12:08:32,394 [Thread-8] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-04-02 12:08:33,394 [Thread-8] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-04-02 12:08:34,395 [Thread-8] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-04-02 12:08:35,395 [Thread-8] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-04-02 12:08:36,396 [Thread-8] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-04-02 12:08:37,403 [Thread-8] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-04-02 12:08:38,403 [Thread-8] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-04-02 12:08:39,404 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,138
Average Time spent in bucket creation: 00:00:00,111
Average Time spent in key creation: 00:00:01,766
Average Time spent in key write: 00:00:00,737
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:43,432
***************************************************</msg>
<status status="PASS" endtime="20200402 12:08:43.932" starttime="20200402 12:08:43.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:08:43.932" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:08:43.933" starttime="20200402 12:08:43.932"></status>
</kw>
<msg timestamp="20200402 12:08:43.933" level="INFO">${result} = 2020-04-02 12:07:59,682 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:07:59,842 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:08:43.933" starttime="20200402 12:07:58.732"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200402 12:08:43.934" starttime="20200402 12:08:43.934"></status>
</kw>
<status status="PASS" endtime="20200402 12:08:43.934" starttime="20200402 12:08:43.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200402 12:08:43.939" starttime="20200402 12:08:43.934"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200402 12:08:43.939" critical="yes" starttime="20200402 12:07:58.731"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200402 12:08:43.940" starttime="20200402 12:07:58.608"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200402 12:08:43.950" level="INFO">${random} = 05288</msg>
<status status="PASS" endtime="20200402 12:08:43.950" starttime="20200402 12:08:43.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200402 12:08:43.951" level="INFO">${prefix} = 05288</msg>
<status status="PASS" endtime="20200402 12:08:43.951" starttime="20200402 12:08:43.951"></status>
</kw>
<status status="PASS" endtime="20200402 12:08:43.951" starttime="20200402 12:08:43.949"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200402 12:08:43.954" starttime="20200402 12:08:43.953"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:08:43.961" level="INFO">Running command 'ozone sh volume info o3://om:9862/05288-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:08:45.971" level="INFO">${rc} = 255</msg>
<msg timestamp="20200402 12:08:45.971" level="INFO">${output} = VOLUME_NOT_FOUND Volume 05288-rpcwoport is not found</msg>
<status status="PASS" endtime="20200402 12:08:45.971" starttime="20200402 12:08:43.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:08:45.972" level="INFO">VOLUME_NOT_FOUND Volume 05288-rpcwoport is not found</msg>
<status status="PASS" endtime="20200402 12:08:45.972" starttime="20200402 12:08:45.972"></status>
</kw>
<msg timestamp="20200402 12:08:45.973" level="INFO">${result} = VOLUME_NOT_FOUND Volume 05288-rpcwoport is not found</msg>
<status status="PASS" endtime="20200402 12:08:45.973" starttime="20200402 12:08:43.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200402 12:08:45.973" starttime="20200402 12:08:45.973"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:08:45.975" level="INFO">Running command 'ozone sh volume create o3://om:9862/05288-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:08:47.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:08:47.910" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:08:47.910" starttime="20200402 12:08:45.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:08:47.911" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:08:47.911" starttime="20200402 12:08:47.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:08:47.912" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:08:47.912" starttime="20200402 12:08:47.912"></status>
</kw>
<msg timestamp="20200402 12:08:47.912" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200402 12:08:47.912" starttime="20200402 12:08:45.973"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200402 12:08:47.913" starttime="20200402 12:08:47.912"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:08:47.915" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="05288-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:08:50.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:08:50.015" level="INFO">${output} = {
  "metadata": {},
  "name": "05288-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:08:47.890Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200402 12:08:50.015" starttime="20200402 12:08:47.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:08:50.016" level="INFO">{
  "metadata": {},
  "name": "05288-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:08:47.890Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200402 12:08:50.016" starttime="20200402 12:08:50.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:08:50.017" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:08:50.017" starttime="20200402 12:08:50.016"></status>
</kw>
<msg timestamp="20200402 12:08:50.017" level="INFO">${result} = {
  "metadata": {},
  "name": "05288-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:08:47.890Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200402 12:08:50.017" starttime="20200402 12:08:47.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200402 12:08:50.018" starttime="20200402 12:08:50.017"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:08:50.019" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="05288-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:08:52.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:08:52.104" level="INFO">${output} = {
  "metadata": {},
  "name": "05288-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:08:47.890Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200402 12:08:52.104" starttime="20200402 12:08:50.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:08:52.105" level="INFO">{
  "metadata": {},
  "name": "05288-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:08:47.890Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200402 12:08:52.105" starttime="20200402 12:08:52.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:08:52.106" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:08:52.106" starttime="20200402 12:08:52.105"></status>
</kw>
<msg timestamp="20200402 12:08:52.106" level="INFO">${result} = {
  "metadata": {},
  "name": "05288-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:08:47.890Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" endtime="20200402 12:08:52.106" starttime="20200402 12:08:50.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200402 12:08:52.107" starttime="20200402 12:08:52.106"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:08:52.109" level="INFO">Running command 'ozone sh volume update o3://om:9862/05288-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:08:54.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:08:54.123" level="INFO">${output} = {
  "metadata" : { },
  "name" : "05288-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-02T12:08:47.890Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" endtime="20200402 12:08:54.123" starttime="20200402 12:08:52.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:08:54.124" level="INFO">{
  "metadata" : { },
  "name" : "05288-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-02T12:08:47.890Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200402 12:08:54.124" starttime="20200402 12:08:54.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:08:54.125" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:08:54.125" starttime="20200402 12:08:54.124"></status>
</kw>
<status status="PASS" endtime="20200402 12:08:54.125" starttime="20200402 12:08:52.107"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:08:54.127" level="INFO">Running command 'ozone sh volume info o3://om:9862/05288-rpcwoport | jq -r '. | select(.name=="05288-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:08:56.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:08:56.116" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200402 12:08:56.116" starttime="20200402 12:08:54.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:08:56.117" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200402 12:08:56.117" starttime="20200402 12:08:56.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:08:56.117" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:08:56.118" starttime="20200402 12:08:56.117"></status>
</kw>
<msg timestamp="20200402 12:08:56.118" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200402 12:08:56.118" starttime="20200402 12:08:54.125"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200402 12:08:56.118" starttime="20200402 12:08:56.118"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:08:56.120" level="INFO">Running command 'ozone sh bucket create o3://om:9862/05288-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:08:58.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:08:58.169" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:08:58.169" starttime="20200402 12:08:56.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:08:58.170" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:08:58.170" starttime="20200402 12:08:58.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:08:58.170" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:08:58.171" starttime="20200402 12:08:58.170"></status>
</kw>
<status status="PASS" endtime="20200402 12:08:58.171" starttime="20200402 12:08:56.119"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:08:58.173" level="INFO">Running command 'ozone sh bucket info o3://om:9862/05288-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:00.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:00.155" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200402 12:09:00.155" starttime="20200402 12:08:58.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:00.156" level="INFO">DISK</msg>
<status status="PASS" endtime="20200402 12:09:00.156" starttime="20200402 12:09:00.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:00.156" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:00.156" starttime="20200402 12:09:00.156"></status>
</kw>
<msg timestamp="20200402 12:09:00.157" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200402 12:09:00.157" starttime="20200402 12:08:58.171"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:00.157" starttime="20200402 12:09:00.157"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:00.159" level="INFO">Running command 'ozone sh bucket list o3://om:9862/05288-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:02.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:02.262" level="INFO">${output} = 05288-rpcwoport</msg>
<status status="PASS" endtime="20200402 12:09:02.262" starttime="20200402 12:09:00.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:02.263" level="INFO">05288-rpcwoport</msg>
<status status="PASS" endtime="20200402 12:09:02.263" starttime="20200402 12:09:02.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:02.263" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:02.264" starttime="20200402 12:09:02.263"></status>
</kw>
<msg timestamp="20200402 12:09:02.264" level="INFO">${result} = 05288-rpcwoport</msg>
<status status="PASS" endtime="20200402 12:09:02.264" starttime="20200402 12:09:00.157"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:02.264" starttime="20200402 12:09:02.264"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:02.267" level="INFO">Running command 'ozone sh key put o3://om:9862/05288-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:06.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:06.459" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:09:06.459" starttime="20200402 12:09:02.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:06.460" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:09:06.460" starttime="20200402 12:09:06.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:06.460" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:06.461" starttime="20200402 12:09:06.460"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:06.461" starttime="20200402 12:09:02.265"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:06.463" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:06.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:06.467" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:09:06.467" starttime="20200402 12:09:06.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:06.467" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:09:06.468" starttime="20200402 12:09:06.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:06.468" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:06.468" starttime="20200402 12:09:06.468"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:06.468" starttime="20200402 12:09:06.461"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:06.471" level="INFO">Running command 'ozone sh key get o3://om:9862/05288-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:09.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:09.952" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:09:09.952" starttime="20200402 12:09:06.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:09.953" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:09:09.953" starttime="20200402 12:09:09.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:09.954" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:09.954" starttime="20200402 12:09:09.953"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:09.954" starttime="20200402 12:09:06.468"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:09.956" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:09.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:09.960" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Apr  2 12:09 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200402 12:09:09.960" starttime="20200402 12:09:09.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:09.961" level="INFO">-rw-r--r-- 1 hadoop users 17540 Apr  2 12:09 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200402 12:09:09.961" starttime="20200402 12:09:09.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:09.962" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:09.962" starttime="20200402 12:09:09.961"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:09.962" starttime="20200402 12:09:09.954"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:09.964" level="INFO">Running command 'ozone sh key info o3://om:9862/05288-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:12.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:12.084" level="INFO">${output} = {
  "volumeName": "05288-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-02T12:09:04.267Z",
  "modificationTime": "2020-04-02T12:09:06.097Z",
  "re...</msg>
<status status="PASS" endtime="20200402 12:09:12.084" starttime="20200402 12:09:09.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:12.085" level="INFO">{
  "volumeName": "05288-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-02T12:09:04.267Z",
  "modificationTime": "2020-04-02T12:09:06.097Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103928911905816700,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200402 12:09:12.085" starttime="20200402 12:09:12.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:12.086" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:12.086" starttime="20200402 12:09:12.085"></status>
</kw>
<msg timestamp="20200402 12:09:12.086" level="INFO">${result} = {
  "volumeName": "05288-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-02T12:09:04.267Z",
  "modificationTime": "2020-04-02T12:09:06.097Z",
  "re...</msg>
<status status="PASS" endtime="20200402 12:09:12.086" starttime="20200402 12:09:09.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:12.087" starttime="20200402 12:09:12.086"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:12.089" level="INFO">Running command 'ozone sh key list o3://om:9862/05288-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:14.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:14.110" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200402 12:09:14.110" starttime="20200402 12:09:12.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:14.111" level="INFO">key1</msg>
<status status="PASS" endtime="20200402 12:09:14.111" starttime="20200402 12:09:14.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:14.112" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:14.112" starttime="20200402 12:09:14.112"></status>
</kw>
<msg timestamp="20200402 12:09:14.112" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200402 12:09:14.112" starttime="20200402 12:09:12.087"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:14.113" starttime="20200402 12:09:14.112"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:14.115" level="INFO">Running command 'ozone sh key rename o3://om:9862/05288-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:16.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:16.066" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:09:16.066" starttime="20200402 12:09:14.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:16.067" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:09:16.067" starttime="20200402 12:09:16.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:16.068" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:16.068" starttime="20200402 12:09:16.068"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:16.068" starttime="20200402 12:09:14.113"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:16.072" level="INFO">Running command 'ozone sh key list o3://om:9862/05288-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:18.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:18.035" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200402 12:09:18.035" starttime="20200402 12:09:16.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:18.036" level="INFO">key2</msg>
<status status="PASS" endtime="20200402 12:09:18.036" starttime="20200402 12:09:18.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:18.037" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:18.037" starttime="20200402 12:09:18.036"></status>
</kw>
<msg timestamp="20200402 12:09:18.037" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200402 12:09:18.037" starttime="20200402 12:09:16.068"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:18.038" starttime="20200402 12:09:18.037"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:18.040" level="INFO">Running command 'ozone sh key delete o3://om:9862/05288-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:19.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:19.924" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:09:19.924" starttime="20200402 12:09:18.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:19.926" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:09:19.926" starttime="20200402 12:09:19.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:19.926" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:19.926" starttime="20200402 12:09:19.926"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:19.927" starttime="20200402 12:09:18.038"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:19.927" starttime="20200402 12:09:02.265"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:19.927" starttime="20200402 12:09:02.264"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:19.929" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/05288-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:21.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:21.848" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:09:21.848" starttime="20200402 12:09:19.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:21.849" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:09:21.849" starttime="20200402 12:09:21.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:21.850" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:21.850" starttime="20200402 12:09:21.850"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:21.850" starttime="20200402 12:09:19.927"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:21.852" level="INFO">Running command 'ozone sh volume delete o3://om:9862/05288-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:23.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:23.855" level="INFO">${output} = Volume 05288-rpcwoport is deleted</msg>
<status status="PASS" endtime="20200402 12:09:23.855" starttime="20200402 12:09:21.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:23.856" level="INFO">Volume 05288-rpcwoport is deleted</msg>
<status status="PASS" endtime="20200402 12:09:23.856" starttime="20200402 12:09:23.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:23.857" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:23.857" starttime="20200402 12:09:23.857"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:23.857" starttime="20200402 12:09:21.850"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:23.857" starttime="20200402 12:08:43.954"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200402 12:09:23.858" critical="yes" starttime="20200402 12:08:43.951"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:23.859" starttime="20200402 12:09:23.859"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:23.862" level="INFO">Running command 'ozone sh volume create o3://om:9862/05288-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:25.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:25.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:09:25.835" starttime="20200402 12:09:23.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:25.836" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:09:25.836" starttime="20200402 12:09:25.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:25.837" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:25.837" starttime="20200402 12:09:25.836"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:25.837" starttime="20200402 12:09:23.860"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:25.839" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/05288-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:27.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:27.738" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:09:27.738" starttime="20200402 12:09:25.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:27.739" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:09:27.739" starttime="20200402 12:09:27.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:27.740" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:27.740" starttime="20200402 12:09:27.739"></status>
</kw>
<msg timestamp="20200402 12:09:27.740" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:09:27.740" starttime="20200402 12:09:25.837"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:27.741" starttime="20200402 12:09:27.740"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:27.743" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/05288-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:29.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:29.684" level="INFO">${output} = ACL added successfully.</msg>
<status status="PASS" endtime="20200402 12:09:29.685" starttime="20200402 12:09:27.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:29.685" level="INFO">ACL added successfully.</msg>
<status status="PASS" endtime="20200402 12:09:29.686" starttime="20200402 12:09:29.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:29.686" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:29.686" starttime="20200402 12:09:29.686"></status>
</kw>
<msg timestamp="20200402 12:09:29.686" level="INFO">${result} = ACL added successfully.</msg>
<status status="PASS" endtime="20200402 12:09:29.686" starttime="20200402 12:09:27.741"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:29.688" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/05288-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:31.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:31.676" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:09:31.676" starttime="20200402 12:09:29.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:31.678" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:09:31.678" starttime="20200402 12:09:31.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:31.678" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:31.678" starttime="20200402 12:09:31.678"></status>
</kw>
<msg timestamp="20200402 12:09:31.679" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:09:31.679" starttime="20200402 12:09:29.687"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:31.680" starttime="20200402 12:09:31.679"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:31.682" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/05288-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:33.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:33.589" level="INFO">${output} = ACL doesn't exist.</msg>
<status status="PASS" endtime="20200402 12:09:33.589" starttime="20200402 12:09:31.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:33.590" level="INFO">ACL doesn't exist.</msg>
<status status="PASS" endtime="20200402 12:09:33.590" starttime="20200402 12:09:33.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:33.591" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:33.591" starttime="20200402 12:09:33.591"></status>
</kw>
<msg timestamp="20200402 12:09:33.591" level="INFO">${result} = ACL doesn't exist.</msg>
<status status="PASS" endtime="20200402 12:09:33.592" starttime="20200402 12:09:31.680"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:33.594" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/05288-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:35.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:35.596" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:09:35.596" starttime="20200402 12:09:33.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:35.597" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:09:35.597" starttime="20200402 12:09:35.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:35.598" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:35.598" starttime="20200402 12:09:35.597"></status>
</kw>
<msg timestamp="20200402 12:09:35.598" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:09:35.598" starttime="20200402 12:09:33.592"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:35.600" starttime="20200402 12:09:35.598"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:35.601" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/05288-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:37.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:37.523" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200402 12:09:37.523" starttime="20200402 12:09:35.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:37.524" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200402 12:09:37.524" starttime="20200402 12:09:37.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:37.525" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:37.525" starttime="20200402 12:09:37.524"></status>
</kw>
<msg timestamp="20200402 12:09:37.525" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200402 12:09:37.525" starttime="20200402 12:09:35.600"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:37.527" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/05288-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:39.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:39.611" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20200402 12:09:39.611" starttime="20200402 12:09:37.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:39.612" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:09:39.612" starttime="20200402 12:09:39.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:39.613" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:39.613" starttime="20200402 12:09:39.612"></status>
</kw>
<msg timestamp="20200402 12:09:39.613" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20200402 12:09:39.613" starttime="20200402 12:09:37.525"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:39.614" starttime="20200402 12:09:39.614"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:39.615" starttime="20200402 12:09:39.614"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:39.615" starttime="20200402 12:09:23.860"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200402 12:09:39.616" critical="yes" starttime="20200402 12:09:23.858"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:39.617" starttime="20200402 12:09:39.617"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:39.620" level="INFO">Running command 'ozone sh bucket create o3://om:9862/05288-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:41.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:41.657" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:09:41.657" starttime="20200402 12:09:39.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:41.658" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:09:41.658" starttime="20200402 12:09:41.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:41.658" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:41.658" starttime="20200402 12:09:41.658"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:41.659" starttime="20200402 12:09:39.618"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:41.661" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/05288-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:43.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:43.648" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:09:43.648" starttime="20200402 12:09:41.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:43.649" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:09:43.649" starttime="20200402 12:09:43.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:43.649" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:43.649" starttime="20200402 12:09:43.649"></status>
</kw>
<msg timestamp="20200402 12:09:43.650" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:09:43.650" starttime="20200402 12:09:41.659"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:43.650" starttime="20200402 12:09:43.650"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:43.652" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/05288-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:45.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:45.748" level="INFO">${output} = ACL already exists.</msg>
<status status="PASS" endtime="20200402 12:09:45.748" starttime="20200402 12:09:43.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:45.749" level="INFO">ACL already exists.</msg>
<status status="PASS" endtime="20200402 12:09:45.749" starttime="20200402 12:09:45.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:45.750" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:45.750" starttime="20200402 12:09:45.749"></status>
</kw>
<msg timestamp="20200402 12:09:45.750" level="INFO">${result} = ACL already exists.</msg>
<status status="PASS" endtime="20200402 12:09:45.750" starttime="20200402 12:09:43.650"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:45.753" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/05288-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:47.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:47.813" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:09:47.813" starttime="20200402 12:09:45.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:47.814" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:09:47.814" starttime="20200402 12:09:47.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:47.815" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:47.815" starttime="20200402 12:09:47.814"></status>
</kw>
<msg timestamp="20200402 12:09:47.815" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:09:47.815" starttime="20200402 12:09:45.750"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:47.816" starttime="20200402 12:09:47.815"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:47.818" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/05288-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:49.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:49.837" level="INFO">${output} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200402 12:09:49.837" starttime="20200402 12:09:47.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:49.838" level="INFO">ACL removed successfully.</msg>
<status status="PASS" endtime="20200402 12:09:49.838" starttime="20200402 12:09:49.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:49.839" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:49.839" starttime="20200402 12:09:49.838"></status>
</kw>
<msg timestamp="20200402 12:09:49.839" level="INFO">${result} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200402 12:09:49.839" starttime="20200402 12:09:47.817"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:49.841" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/05288-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:51.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:51.780" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:09:51.780" starttime="20200402 12:09:49.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:51.781" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:09:51.781" starttime="20200402 12:09:51.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:51.781" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:51.782" starttime="20200402 12:09:51.781"></status>
</kw>
<msg timestamp="20200402 12:09:51.782" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:09:51.782" starttime="20200402 12:09:49.839"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:51.783" starttime="20200402 12:09:51.782"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:51.785" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/05288-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:53.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:53.728" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200402 12:09:53.728" starttime="20200402 12:09:51.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:53.729" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200402 12:09:53.729" starttime="20200402 12:09:53.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:53.730" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:53.730" starttime="20200402 12:09:53.730"></status>
</kw>
<msg timestamp="20200402 12:09:53.730" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200402 12:09:53.730" starttime="20200402 12:09:51.783"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:53.732" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/05288-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:55.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:55.610" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200402 12:09:55.610" starttime="20200402 12:09:53.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:55.611" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:09:55.611" starttime="20200402 12:09:55.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:55.612" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:55.612" starttime="20200402 12:09:55.611"></status>
</kw>
<msg timestamp="20200402 12:09:55.612" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200402 12:09:55.612" starttime="20200402 12:09:53.730"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:55.613" starttime="20200402 12:09:55.612"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:55.613" starttime="20200402 12:09:55.613"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:55.613" starttime="20200402 12:09:39.618"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200402 12:09:55.614" critical="yes" starttime="20200402 12:09:39.616"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200402 12:09:55.616" starttime="20200402 12:09:55.615"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:55.618" level="INFO">Running command 'ozone sh key put o3://om:9862/05288-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:09:59.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:09:59.590" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:09:59.590" starttime="20200402 12:09:55.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:09:59.591" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:09:59.592" starttime="20200402 12:09:59.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:09:59.592" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:09:59.592" starttime="20200402 12:09:59.592"></status>
</kw>
<status status="PASS" endtime="20200402 12:09:59.592" starttime="20200402 12:09:55.616"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:09:59.594" level="INFO">Running command 'ozone sh key getacl o3://om:9862/05288-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:01.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:01.584" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:10:01.584" starttime="20200402 12:09:59.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:01.586" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:10:01.586" starttime="20200402 12:10:01.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:01.586" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:01.587" starttime="20200402 12:10:01.586"></status>
</kw>
<msg timestamp="20200402 12:10:01.587" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:10:01.587" starttime="20200402 12:09:59.592"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:01.588" starttime="20200402 12:10:01.587"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:01.589" level="INFO">Running command 'ozone sh key addacl o3://om:9862/05288-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:03.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:03.442" level="INFO">${output} = ACL added successfully.</msg>
<status status="PASS" endtime="20200402 12:10:03.442" starttime="20200402 12:10:01.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:03.443" level="INFO">ACL added successfully.</msg>
<status status="PASS" endtime="20200402 12:10:03.443" starttime="20200402 12:10:03.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:03.444" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:03.444" starttime="20200402 12:10:03.443"></status>
</kw>
<msg timestamp="20200402 12:10:03.444" level="INFO">${result} = ACL added successfully.</msg>
<status status="PASS" endtime="20200402 12:10:03.444" starttime="20200402 12:10:01.588"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:03.446" level="INFO">Running command 'ozone sh key getacl o3://om:9862/05288-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:05.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:05.456" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:10:05.456" starttime="20200402 12:10:03.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:05.457" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:10:05.457" starttime="20200402 12:10:05.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:05.458" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:05.458" starttime="20200402 12:10:05.457"></status>
</kw>
<msg timestamp="20200402 12:10:05.458" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:10:05.458" starttime="20200402 12:10:03.444"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:05.460" starttime="20200402 12:10:05.458"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:05.461" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/05288-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:07.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:07.352" level="INFO">${output} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200402 12:10:07.352" starttime="20200402 12:10:05.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:07.353" level="INFO">ACL removed successfully.</msg>
<status status="PASS" endtime="20200402 12:10:07.353" starttime="20200402 12:10:07.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:07.353" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:07.353" starttime="20200402 12:10:07.353"></status>
</kw>
<msg timestamp="20200402 12:10:07.354" level="INFO">${result} = ACL removed successfully.</msg>
<status status="PASS" endtime="20200402 12:10:07.354" starttime="20200402 12:10:05.460"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:07.356" level="INFO">Running command 'ozone sh key getacl o3://om:9862/05288-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:09.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:09.385" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:10:09.385" starttime="20200402 12:10:07.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:09.386" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:10:09.386" starttime="20200402 12:10:09.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:09.387" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:09.387" starttime="20200402 12:10:09.386"></status>
</kw>
<msg timestamp="20200402 12:10:09.387" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20200402 12:10:09.387" starttime="20200402 12:10:07.354"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:09.388" starttime="20200402 12:10:09.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:09.390" level="INFO">Running command 'ozone sh key setacl o3://om:9862/05288-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:11.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:11.300" level="INFO">${output} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200402 12:10:11.300" starttime="20200402 12:10:09.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:11.301" level="INFO">ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200402 12:10:11.301" starttime="20200402 12:10:11.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:11.301" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:11.302" starttime="20200402 12:10:11.301"></status>
</kw>
<msg timestamp="20200402 12:10:11.302" level="INFO">${result} = ACL(s) set successfully.</msg>
<status status="PASS" endtime="20200402 12:10:11.302" starttime="20200402 12:10:09.388"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:11.304" level="INFO">Running command 'ozone sh key getacl o3://om:9862/05288-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:13.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:13.270" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200402 12:10:13.271" starttime="20200402 12:10:11.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:13.272" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200402 12:10:13.272" starttime="20200402 12:10:13.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:13.273" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:13.273" starttime="20200402 12:10:13.272"></status>
</kw>
<msg timestamp="20200402 12:10:13.273" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20200402 12:10:13.273" starttime="20200402 12:10:11.302"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:13.274" starttime="20200402 12:10:13.274"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:13.275" starttime="20200402 12:10:13.274"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:13.275" starttime="20200402 12:09:55.616"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200402 12:10:13.276" critical="yes" starttime="20200402 12:09:55.615"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:13.277" starttime="20200402 12:10:13.277"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:13.280" level="INFO">Running command 'ozone sh volume info o3:///05288-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:15.159" level="INFO">${rc} = 255</msg>
<msg timestamp="20200402 12:10:15.159" level="INFO">${output} = VOLUME_NOT_FOUND Volume 05288-rpcwport is not found</msg>
<status status="PASS" endtime="20200402 12:10:15.159" starttime="20200402 12:10:13.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:15.161" level="INFO">VOLUME_NOT_FOUND Volume 05288-rpcwport is not found</msg>
<status status="PASS" endtime="20200402 12:10:15.161" starttime="20200402 12:10:15.159"></status>
</kw>
<msg timestamp="20200402 12:10:15.161" level="INFO">${result} = VOLUME_NOT_FOUND Volume 05288-rpcwport is not found</msg>
<status status="PASS" endtime="20200402 12:10:15.161" starttime="20200402 12:10:13.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:15.162" starttime="20200402 12:10:15.162"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:15.165" level="INFO">Running command 'ozone sh volume create o3:///05288-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:17.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:17.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:10:17.050" starttime="20200402 12:10:15.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:17.051" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:10:17.051" starttime="20200402 12:10:17.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:17.051" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:17.052" starttime="20200402 12:10:17.051"></status>
</kw>
<msg timestamp="20200402 12:10:17.052" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200402 12:10:17.052" starttime="20200402 12:10:15.162"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:17.052" starttime="20200402 12:10:17.052"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:17.054" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="05288-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:19.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:19.119" level="INFO">${output} = {
  "metadata": {},
  "name": "05288-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:17.023Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200402 12:10:19.119" starttime="20200402 12:10:17.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:19.120" level="INFO">{
  "metadata": {},
  "name": "05288-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:17.023Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200402 12:10:19.120" starttime="20200402 12:10:19.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:19.120" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:19.120" starttime="20200402 12:10:19.120"></status>
</kw>
<msg timestamp="20200402 12:10:19.121" level="INFO">${result} = {
  "metadata": {},
  "name": "05288-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:17.023Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200402 12:10:19.121" starttime="20200402 12:10:17.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:19.121" starttime="20200402 12:10:19.121"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:19.123" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="05288-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:21.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:21.211" level="INFO">${output} = {
  "metadata": {},
  "name": "05288-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:17.023Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200402 12:10:21.211" starttime="20200402 12:10:19.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:21.213" level="INFO">{
  "metadata": {},
  "name": "05288-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:17.023Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200402 12:10:21.213" starttime="20200402 12:10:21.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:21.213" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:21.213" starttime="20200402 12:10:21.213"></status>
</kw>
<msg timestamp="20200402 12:10:21.214" level="INFO">${result} = {
  "metadata": {},
  "name": "05288-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:17.023Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" endtime="20200402 12:10:21.214" starttime="20200402 12:10:19.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:21.214" starttime="20200402 12:10:21.214"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:21.216" level="INFO">Running command 'ozone sh volume update o3:///05288-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:23.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:23.353" level="INFO">${output} = {
  "metadata" : { },
  "name" : "05288-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-02T12:10:17.023Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" endtime="20200402 12:10:23.353" starttime="20200402 12:10:21.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:23.354" level="INFO">{
  "metadata" : { },
  "name" : "05288-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-02T12:10:17.023Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200402 12:10:23.354" starttime="20200402 12:10:23.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:23.355" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:23.355" starttime="20200402 12:10:23.355"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:23.355" starttime="20200402 12:10:21.214"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:23.357" level="INFO">Running command 'ozone sh volume info o3:///05288-rpcwport | jq -r '. | select(.name=="05288-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:25.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:25.391" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200402 12:10:25.391" starttime="20200402 12:10:23.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:25.392" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200402 12:10:25.392" starttime="20200402 12:10:25.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:25.393" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:25.393" starttime="20200402 12:10:25.392"></status>
</kw>
<msg timestamp="20200402 12:10:25.393" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200402 12:10:25.393" starttime="20200402 12:10:23.355"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:25.394" starttime="20200402 12:10:25.393"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:25.396" level="INFO">Running command 'ozone sh bucket create o3:///05288-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:27.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:27.355" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:10:27.355" starttime="20200402 12:10:25.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:27.356" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:10:27.356" starttime="20200402 12:10:27.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:27.357" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:27.357" starttime="20200402 12:10:27.357"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:27.357" starttime="20200402 12:10:25.394"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:27.360" level="INFO">Running command 'ozone sh bucket info o3:///05288-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:29.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:29.592" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200402 12:10:29.592" starttime="20200402 12:10:27.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:29.593" level="INFO">DISK</msg>
<status status="PASS" endtime="20200402 12:10:29.593" starttime="20200402 12:10:29.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:29.593" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:29.593" starttime="20200402 12:10:29.593"></status>
</kw>
<msg timestamp="20200402 12:10:29.594" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200402 12:10:29.594" starttime="20200402 12:10:27.358"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:29.594" starttime="20200402 12:10:29.594"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:29.596" level="INFO">Running command 'ozone sh bucket list o3:///05288-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:31.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:31.703" level="INFO">${output} = 05288-rpcwport</msg>
<status status="PASS" endtime="20200402 12:10:31.703" starttime="20200402 12:10:29.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:31.704" level="INFO">05288-rpcwport</msg>
<status status="PASS" endtime="20200402 12:10:31.705" starttime="20200402 12:10:31.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:31.705" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:31.705" starttime="20200402 12:10:31.705"></status>
</kw>
<msg timestamp="20200402 12:10:31.706" level="INFO">${result} = 05288-rpcwport</msg>
<status status="PASS" endtime="20200402 12:10:31.706" starttime="20200402 12:10:29.594"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:31.706" starttime="20200402 12:10:31.706"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:31.709" level="INFO">Running command 'ozone sh key put o3:///05288-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:35.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:35.427" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:10:35.427" starttime="20200402 12:10:31.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:35.428" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:10:35.428" starttime="20200402 12:10:35.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:35.429" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:35.429" starttime="20200402 12:10:35.428"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:35.429" starttime="20200402 12:10:31.707"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:35.431" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:35.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:35.434" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:10:35.434" starttime="20200402 12:10:35.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:35.434" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:10:35.434" starttime="20200402 12:10:35.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:35.435" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:35.435" starttime="20200402 12:10:35.435"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:35.435" starttime="20200402 12:10:35.429"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:35.437" level="INFO">Running command 'ozone sh key get o3:///05288-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:38.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:38.890" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:10:38.890" starttime="20200402 12:10:35.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:38.891" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:10:38.892" starttime="20200402 12:10:38.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:38.892" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:38.892" starttime="20200402 12:10:38.892"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:38.892" starttime="20200402 12:10:35.435"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:38.894" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:38.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:38.898" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Apr  2 12:10 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200402 12:10:38.898" starttime="20200402 12:10:38.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:38.899" level="INFO">-rw-r--r-- 1 hadoop users 17540 Apr  2 12:10 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200402 12:10:38.899" starttime="20200402 12:10:38.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:38.899" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:38.899" starttime="20200402 12:10:38.899"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:38.900" starttime="20200402 12:10:38.893"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:38.901" level="INFO">Running command 'ozone sh key info o3:///05288-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:40.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:40.940" level="INFO">${output} = {
  "volumeName": "05288-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-02T12:10:33.672Z",
  "modificationTime": "2020-04-02T12:10:35.066Z",
  "rep...</msg>
<status status="PASS" endtime="20200402 12:10:40.940" starttime="20200402 12:10:38.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:40.941" level="INFO">{
  "volumeName": "05288-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-02T12:10:33.672Z",
  "modificationTime": "2020-04-02T12:10:35.066Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103928917765062780,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200402 12:10:40.941" starttime="20200402 12:10:40.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:40.941" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:40.941" starttime="20200402 12:10:40.941"></status>
</kw>
<msg timestamp="20200402 12:10:40.942" level="INFO">${result} = {
  "volumeName": "05288-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-02T12:10:33.672Z",
  "modificationTime": "2020-04-02T12:10:35.066Z",
  "rep...</msg>
<status status="PASS" endtime="20200402 12:10:40.942" starttime="20200402 12:10:38.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:40.942" starttime="20200402 12:10:40.942"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:40.944" level="INFO">Running command 'ozone sh key list o3:///05288-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:42.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:42.991" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200402 12:10:42.991" starttime="20200402 12:10:40.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:42.992" level="INFO">key1</msg>
<status status="PASS" endtime="20200402 12:10:42.993" starttime="20200402 12:10:42.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:42.993" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:42.993" starttime="20200402 12:10:42.993"></status>
</kw>
<msg timestamp="20200402 12:10:42.993" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200402 12:10:42.994" starttime="20200402 12:10:40.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:42.994" starttime="20200402 12:10:42.994"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:42.996" level="INFO">Running command 'ozone sh key rename o3:///05288-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:45.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:45.025" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:10:45.025" starttime="20200402 12:10:42.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:45.026" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:10:45.026" starttime="20200402 12:10:45.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:45.028" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:45.028" starttime="20200402 12:10:45.026"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:45.028" starttime="20200402 12:10:42.994"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:45.030" level="INFO">Running command 'ozone sh key list o3:///05288-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:46.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:47.000" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200402 12:10:47.000" starttime="20200402 12:10:45.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:47.001" level="INFO">key2</msg>
<status status="PASS" endtime="20200402 12:10:47.001" starttime="20200402 12:10:47.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:47.001" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:47.001" starttime="20200402 12:10:47.001"></status>
</kw>
<msg timestamp="20200402 12:10:47.002" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200402 12:10:47.002" starttime="20200402 12:10:45.028"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:47.002" starttime="20200402 12:10:47.002"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:47.004" level="INFO">Running command 'ozone sh key delete o3:///05288-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:48.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:48.937" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:10:48.937" starttime="20200402 12:10:47.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:48.939" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:10:48.939" starttime="20200402 12:10:48.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:48.939" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:48.939" starttime="20200402 12:10:48.939"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:48.940" starttime="20200402 12:10:47.002"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:48.940" starttime="20200402 12:10:31.707"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:48.940" starttime="20200402 12:10:31.706"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:48.942" level="INFO">Running command 'ozone sh bucket delete o3:///05288-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:50.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:50.876" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:10:50.876" starttime="20200402 12:10:48.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:50.877" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:10:50.877" starttime="20200402 12:10:50.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:50.878" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:50.878" starttime="20200402 12:10:50.877"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:50.878" starttime="20200402 12:10:48.940"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:50.880" level="INFO">Running command 'ozone sh volume delete o3:///05288-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:52.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:52.772" level="INFO">${output} = Volume 05288-rpcwport is deleted</msg>
<status status="PASS" endtime="20200402 12:10:52.772" starttime="20200402 12:10:50.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:52.773" level="INFO">Volume 05288-rpcwport is deleted</msg>
<status status="PASS" endtime="20200402 12:10:52.773" starttime="20200402 12:10:52.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:52.773" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:52.774" starttime="20200402 12:10:52.773"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:52.774" starttime="20200402 12:10:50.878"></status>
</kw>
<status status="PASS" endtime="20200402 12:10:52.774" starttime="20200402 12:10:13.278"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200402 12:10:52.774" critical="yes" starttime="20200402 12:10:13.276"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:52.776" starttime="20200402 12:10:52.775"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:52.778" level="INFO">Running command 'ozone sh volume info /05288-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:54.694" level="INFO">${rc} = 255</msg>
<msg timestamp="20200402 12:10:54.694" level="INFO">${output} = VOLUME_NOT_FOUND Volume 05288-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200402 12:10:54.694" starttime="20200402 12:10:52.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:54.696" level="INFO">VOLUME_NOT_FOUND Volume 05288-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200402 12:10:54.696" starttime="20200402 12:10:54.695"></status>
</kw>
<msg timestamp="20200402 12:10:54.696" level="INFO">${result} = VOLUME_NOT_FOUND Volume 05288-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200402 12:10:54.696" starttime="20200402 12:10:52.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:54.697" starttime="20200402 12:10:54.696"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:54.699" level="INFO">Running command 'ozone sh volume create /05288-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:56.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:56.615" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:10:56.615" starttime="20200402 12:10:54.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:56.616" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:10:56.616" starttime="20200402 12:10:56.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:56.617" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:56.617" starttime="20200402 12:10:56.617"></status>
</kw>
<msg timestamp="20200402 12:10:56.617" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200402 12:10:56.617" starttime="20200402 12:10:54.697"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:56.618" starttime="20200402 12:10:56.618"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:56.620" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="05288-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:10:58.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:10:58.637" level="INFO">${output} = {
  "metadata": {},
  "name": "05288-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:56.583Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200402 12:10:58.637" starttime="20200402 12:10:56.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:10:58.638" level="INFO">{
  "metadata": {},
  "name": "05288-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:56.583Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200402 12:10:58.638" starttime="20200402 12:10:58.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:10:58.639" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:10:58.639" starttime="20200402 12:10:58.638"></status>
</kw>
<msg timestamp="20200402 12:10:58.639" level="INFO">${result} = {
  "metadata": {},
  "name": "05288-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:56.583Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200402 12:10:58.639" starttime="20200402 12:10:56.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200402 12:10:58.640" starttime="20200402 12:10:58.639"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:10:58.642" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="05288-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:00.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:00.721" level="INFO">${output} = {
  "metadata": {},
  "name": "05288-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:56.583Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200402 12:11:00.721" starttime="20200402 12:10:58.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:00.722" level="INFO">{
  "metadata": {},
  "name": "05288-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:56.583Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200402 12:11:00.723" starttime="20200402 12:11:00.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:00.723" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:00.723" starttime="20200402 12:11:00.723"></status>
</kw>
<msg timestamp="20200402 12:11:00.723" level="INFO">${result} = {
  "metadata": {},
  "name": "05288-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-02T12:10:56.583Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" endtime="20200402 12:11:00.724" starttime="20200402 12:10:58.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200402 12:11:00.724" starttime="20200402 12:11:00.724"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:00.726" level="INFO">Running command 'ozone sh volume update /05288-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:02.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:02.682" level="INFO">${output} = {
  "metadata" : { },
  "name" : "05288-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-02T12:10:56.583Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" endtime="20200402 12:11:02.682" starttime="20200402 12:11:00.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:02.683" level="INFO">{
  "metadata" : { },
  "name" : "05288-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-02T12:10:56.583Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200402 12:11:02.684" starttime="20200402 12:11:02.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:02.684" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:02.684" starttime="20200402 12:11:02.684"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:02.685" starttime="20200402 12:11:00.724"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:02.687" level="INFO">Running command 'ozone sh volume info /05288-rpcwoscheme | jq -r '. | select(.name=="05288-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:04.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:04.746" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200402 12:11:04.746" starttime="20200402 12:11:02.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:04.747" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200402 12:11:04.747" starttime="20200402 12:11:04.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:04.748" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:04.748" starttime="20200402 12:11:04.747"></status>
</kw>
<msg timestamp="20200402 12:11:04.748" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200402 12:11:04.748" starttime="20200402 12:11:02.685"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200402 12:11:04.749" starttime="20200402 12:11:04.748"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:04.750" level="INFO">Running command 'ozone sh bucket create /05288-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:06.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:06.738" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:11:06.738" starttime="20200402 12:11:04.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:06.739" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:11:06.739" starttime="20200402 12:11:06.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:06.740" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:06.740" starttime="20200402 12:11:06.739"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:06.740" starttime="20200402 12:11:04.749"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:06.742" level="INFO">Running command 'ozone sh bucket info /05288-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:08.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:08.716" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200402 12:11:08.716" starttime="20200402 12:11:06.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:08.717" level="INFO">DISK</msg>
<status status="PASS" endtime="20200402 12:11:08.718" starttime="20200402 12:11:08.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:08.718" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:08.718" starttime="20200402 12:11:08.718"></status>
</kw>
<msg timestamp="20200402 12:11:08.718" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200402 12:11:08.718" starttime="20200402 12:11:06.740"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200402 12:11:08.719" starttime="20200402 12:11:08.719"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:08.721" level="INFO">Running command 'ozone sh bucket list /05288-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:10.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:10.858" level="INFO">${output} = 05288-rpcwoscheme</msg>
<status status="PASS" endtime="20200402 12:11:10.858" starttime="20200402 12:11:08.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:10.859" level="INFO">05288-rpcwoscheme</msg>
<status status="PASS" endtime="20200402 12:11:10.859" starttime="20200402 12:11:10.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:10.860" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:10.860" starttime="20200402 12:11:10.859"></status>
</kw>
<msg timestamp="20200402 12:11:10.860" level="INFO">${result} = 05288-rpcwoscheme</msg>
<status status="PASS" endtime="20200402 12:11:10.860" starttime="20200402 12:11:08.719"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200402 12:11:10.861" starttime="20200402 12:11:10.860"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:10.864" level="INFO">Running command 'ozone sh key put /05288-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:14.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:14.817" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:11:14.817" starttime="20200402 12:11:10.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:14.818" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:11:14.818" starttime="20200402 12:11:14.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:14.818" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:14.818" starttime="20200402 12:11:14.818"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:14.818" starttime="20200402 12:11:10.862"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:14.820" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:14.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:14.823" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:11:14.823" starttime="20200402 12:11:14.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:14.824" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:11:14.824" starttime="20200402 12:11:14.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:14.825" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:14.825" starttime="20200402 12:11:14.824"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:14.825" starttime="20200402 12:11:14.819"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:14.827" level="INFO">Running command 'ozone sh key get /05288-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:18.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:18.402" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:11:18.402" starttime="20200402 12:11:14.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:18.403" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:11:18.404" starttime="20200402 12:11:18.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:18.404" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:18.404" starttime="20200402 12:11:18.404"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:18.405" starttime="20200402 12:11:14.825"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:18.407" level="INFO">Running command 'ls -l /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:18.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:18.412" level="INFO">${output} = -rw-r--r-- 1 hadoop users 17540 Apr  2 12:11 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200402 12:11:18.412" starttime="20200402 12:11:18.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:18.413" level="INFO">-rw-r--r-- 1 hadoop users 17540 Apr  2 12:11 /tmp/NOTICE.txt.1</msg>
<status status="PASS" endtime="20200402 12:11:18.413" starttime="20200402 12:11:18.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:18.414" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:18.414" starttime="20200402 12:11:18.413"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:18.414" starttime="20200402 12:11:18.405"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:18.417" level="INFO">Running command 'ozone sh key info /05288-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:20.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:20.480" level="INFO">${output} = {
  "volumeName": "05288-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-02T12:11:12.770Z",
  "modificationTime": "2020-04-02T12:11:14.453Z",
  "...</msg>
<status status="PASS" endtime="20200402 12:11:20.480" starttime="20200402 12:11:18.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:20.481" level="INFO">{
  "volumeName": "05288-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-02T12:11:12.770Z",
  "modificationTime": "2020-04-02T12:11:14.453Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 103928920327389310,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200402 12:11:20.482" starttime="20200402 12:11:20.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:20.482" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:20.482" starttime="20200402 12:11:20.482"></status>
</kw>
<msg timestamp="20200402 12:11:20.483" level="INFO">${result} = {
  "volumeName": "05288-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-02T12:11:12.770Z",
  "modificationTime": "2020-04-02T12:11:14.453Z",
  "...</msg>
<status status="PASS" endtime="20200402 12:11:20.483" starttime="20200402 12:11:18.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200402 12:11:20.483" starttime="20200402 12:11:20.483"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:20.485" level="INFO">Running command 'ozone sh key list /05288-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:22.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:22.487" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200402 12:11:22.487" starttime="20200402 12:11:20.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:22.488" level="INFO">key1</msg>
<status status="PASS" endtime="20200402 12:11:22.488" starttime="20200402 12:11:22.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:22.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:22.489" starttime="20200402 12:11:22.489"></status>
</kw>
<msg timestamp="20200402 12:11:22.489" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200402 12:11:22.489" starttime="20200402 12:11:20.483"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200402 12:11:22.490" starttime="20200402 12:11:22.489"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:22.492" level="INFO">Running command 'ozone sh key rename /05288-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:24.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:24.381" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:11:24.381" starttime="20200402 12:11:22.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:24.382" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:11:24.382" starttime="20200402 12:11:24.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:24.383" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:24.383" starttime="20200402 12:11:24.382"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:24.383" starttime="20200402 12:11:22.490"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:24.385" level="INFO">Running command 'ozone sh key list /05288-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:26.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:26.402" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200402 12:11:26.402" starttime="20200402 12:11:24.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:26.403" level="INFO">key2</msg>
<status status="PASS" endtime="20200402 12:11:26.403" starttime="20200402 12:11:26.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:26.404" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:26.404" starttime="20200402 12:11:26.403"></status>
</kw>
<msg timestamp="20200402 12:11:26.404" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200402 12:11:26.404" starttime="20200402 12:11:24.383"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200402 12:11:26.405" starttime="20200402 12:11:26.404"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:26.406" level="INFO">Running command 'ozone sh key delete /05288-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:28.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:28.287" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:11:28.287" starttime="20200402 12:11:26.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:28.288" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:11:28.288" starttime="20200402 12:11:28.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:28.289" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:28.289" starttime="20200402 12:11:28.288"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:28.289" starttime="20200402 12:11:26.405"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:28.289" starttime="20200402 12:11:10.862"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:28.289" starttime="20200402 12:11:10.861"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:28.291" level="INFO">Running command 'ozone sh bucket delete /05288-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:30.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:30.208" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200402 12:11:30.208" starttime="20200402 12:11:28.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:30.209" level="INFO"></msg>
<status status="PASS" endtime="20200402 12:11:30.209" starttime="20200402 12:11:30.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:30.209" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:30.209" starttime="20200402 12:11:30.209"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:30.209" starttime="20200402 12:11:28.290"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:11:30.211" level="INFO">Running command 'ozone sh volume delete /05288-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:11:32.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:11:32.097" level="INFO">${output} = Volume 05288-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20200402 12:11:32.097" starttime="20200402 12:11:30.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:11:32.098" level="INFO">Volume 05288-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20200402 12:11:32.098" starttime="20200402 12:11:32.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:11:32.099" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:11:32.099" starttime="20200402 12:11:32.098"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:32.099" starttime="20200402 12:11:30.210"></status>
</kw>
<status status="PASS" endtime="20200402 12:11:32.099" starttime="20200402 12:10:52.776"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200402 12:11:32.099" critical="yes" starttime="20200402 12:10:52.775"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200402 12:11:32.100" starttime="20200402 12:08:43.941"></status>
</suite>
<status status="PASS" endtime="20200402 12:11:32.104" starttime="20200402 12:07:58.586"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-basic" pass="8">ozone-basic</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-basic.Basic</stat>
<stat fail="0" id="s1-s2" name="Ozone-Shell" pass="6">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
