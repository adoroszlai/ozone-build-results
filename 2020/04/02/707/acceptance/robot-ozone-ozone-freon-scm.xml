<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200402 12:16:57.051" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:16:57.096" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:17:04.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:17:04.672" level="INFO">${output} = 2020-04-02 12:16:58,000 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:16:58,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:17:04.672" starttime="20200402 12:16:57.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:17:04.673" level="INFO">2020-04-02 12:16:58,000 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:16:58,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-02 12:16:58,170 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-02 12:16:59,313 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-02 12:16:59,314 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-02 12:16:59,315 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-02 12:16:59,315 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-02 12:16:59,315 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-02 12:16:59,315 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-02 12:16:59,315 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-02 12:16:59,318 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-02 12:16:59,325 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:16:59,359 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-87617, with hadoop as owner.
2020-04-02 12:16:59,374 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-87617/bucket-0-19487, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:16:59,876 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-02 12:17:00,331 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,046
Average Time spent in bucket creation: 00:00:00,007
Average Time spent in key creation: 00:00:00,039
Average Time spent in key write: 00:00:00,624
Total bytes written: 10240
Total Execution time: 00:00:05,851
***************************************************</msg>
<status status="PASS" endtime="20200402 12:17:04.673" starttime="20200402 12:17:04.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:17:04.674" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:17:04.674" starttime="20200402 12:17:04.673"></status>
</kw>
<msg timestamp="20200402 12:17:04.674" level="INFO">${result} = 2020-04-02 12:16:58,000 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:16:58,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:17:04.674" starttime="20200402 12:16:57.094"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200402 12:17:04.675" starttime="20200402 12:17:04.675"></status>
</kw>
<status status="PASS" endtime="20200402 12:17:04.675" starttime="20200402 12:17:04.674"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200402 12:17:04.675" critical="yes" starttime="20200402 12:16:57.094"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:17:04.678" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:17:09.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:17:09.412" level="INFO">${output} = 2020-04-02 12:17:05,606 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:17:05,758 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:17:09.412" starttime="20200402 12:17:04.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:17:09.413" level="INFO">2020-04-02 12:17:05,606 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:17:05,758 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-02 12:17:05,758 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-02 12:17:06,018 [main] INFO freon.BaseFreonGenerator: Executing test with prefix W41bdU2wqZ
2020-04-02 12:17:06,034 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:17:06,853 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-02 12:17:06,868 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:17:07,042 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:17:07,370 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-02 12:17:08,042 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:17:09,043 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-02 12:17:09,079 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1303.826729, max=1303.826729, mean=1303.826729, stddev=0.0, median=1303.826729, p75=1303.826729, p95=1303.826729, p98=1303.826729, p99=1303.826729, p999=1303.826729, mean_rate=0.45558165638547193, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-02 12:17:09,079 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-02 12:17:09,079 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-02 12:17:09,079 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200402 12:17:09.413" starttime="20200402 12:17:09.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:17:09.414" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:17:09.414" starttime="20200402 12:17:09.413"></status>
</kw>
<msg timestamp="20200402 12:17:09.414" level="INFO">${result} = 2020-04-02 12:17:05,606 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:17:05,758 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:17:09.414" starttime="20200402 12:17:04.676"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200402 12:17:09.415" starttime="20200402 12:17:09.415"></status>
</kw>
<status status="PASS" endtime="20200402 12:17:09.415" starttime="20200402 12:17:09.414"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200402 12:17:09.416" critical="yes" starttime="20200402 12:17:04.676"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:17:09.419" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:17:12.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:17:12.629" level="INFO">${output} = 2020-04-02 12:17:10,306 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:17:10,475 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:17:12.629" starttime="20200402 12:17:09.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:17:12.630" level="INFO">2020-04-02 12:17:10,306 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:17:10,475 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-02 12:17:10,475 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-02 12:17:10,764 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8arirryIwP
2020-04-02 12:17:10,780 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:17:11,800 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-02 12:17:12,616 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=26.694599, max=26.694599, mean=26.694599, stddev=0.0, median=26.694599, p75=26.694599, p95=26.694599, p98=26.694599, p99=26.694599, p999=26.694599, mean_rate=0.9800950343269466, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-02 12:17:12,617 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-02 12:17:12,617 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-02 12:17:12,617 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200402 12:17:12.630" starttime="20200402 12:17:12.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:17:12.630" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:17:12.631" starttime="20200402 12:17:12.630"></status>
</kw>
<msg timestamp="20200402 12:17:12.631" level="INFO">${result} = 2020-04-02 12:17:10,306 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:17:10,475 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:17:12.631" starttime="20200402 12:17:09.417"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200402 12:17:12.632" starttime="20200402 12:17:12.632"></status>
</kw>
<status status="PASS" endtime="20200402 12:17:12.632" starttime="20200402 12:17:12.631"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200402 12:17:12.632" critical="yes" starttime="20200402 12:17:09.416"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:17:12.635" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:17:16.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:17:16.056" level="INFO">${output} = 2020-04-02 12:17:13,685 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:17:13,924 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:17:16.056" starttime="20200402 12:17:12.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:17:16.057" level="INFO">2020-04-02 12:17:13,685 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:17:13,924 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-02 12:17:13,924 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-02 12:17:14,222 [main] INFO freon.BaseFreonGenerator: Executing test with prefix XwF6V3JA6v
2020-04-02 12:17:14,242 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:17:15,253 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-02 12:17:16,041 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.825795, max=8.825795, mean=8.825795, stddev=0.0, median=8.825795, p75=8.825795, p95=8.825795, p98=8.825795, p99=8.825795, p999=8.825795, mean_rate=0.9843504258300434, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-02 12:17:16,044 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-02 12:17:16,044 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-02 12:17:16,044 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200402 12:17:16.058" starttime="20200402 12:17:16.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:17:16.058" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:17:16.058" starttime="20200402 12:17:16.058"></status>
</kw>
<msg timestamp="20200402 12:17:16.059" level="INFO">${result} = 2020-04-02 12:17:13,685 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:17:13,924 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:17:16.059" starttime="20200402 12:17:12.633"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200402 12:17:16.060" starttime="20200402 12:17:16.059"></status>
</kw>
<status status="PASS" endtime="20200402 12:17:16.060" starttime="20200402 12:17:16.059"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200402 12:17:16.060" critical="yes" starttime="20200402 12:17:12.633"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200402 12:17:16.061" starttime="20200402 12:16:57.073"></status>
</suite>
<status status="PASS" endtime="20200402 12:17:16.064" starttime="20200402 12:16:57.052"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-freon" pass="4">ozone-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
