<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200402 12:04:39.550" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/freon" id="s1" name="ozone-om-ha-s3-freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1" name="Freon">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:04:39.603" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:04:47.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:04:47.505" level="INFO">${output} = 2020-04-02 12:04:40,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:40,822 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:04:47.505" starttime="20200402 12:04:39.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:04:47.506" level="INFO">2020-04-02 12:04:40,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:40,822 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-02 12:04:40,822 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-02 12:04:42,139 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-02 12:04:42,140 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-02 12:04:42,140 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-02 12:04:42,140 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-02 12:04:42,140 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-02 12:04:42,140 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-02 12:04:42,141 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-02 12:04:42,145 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-02 12:04:42,155 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:04:42,177 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-21466, with hadoop as owner.
2020-04-02 12:04:42,224 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-21466/bucket-0-18518, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:04:42,768 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-02 12:04:43,158 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,058
Average Time spent in bucket creation: 00:00:00,024
Average Time spent in key creation: 00:00:00,056
Average Time spent in key write: 00:00:00,675
Total bytes written: 10240
Total Execution time: 00:00:06,026
***************************************************</msg>
<status status="PASS" endtime="20200402 12:04:47.506" starttime="20200402 12:04:47.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:04:47.507" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:04:47.507" starttime="20200402 12:04:47.506"></status>
</kw>
<msg timestamp="20200402 12:04:47.507" level="INFO">${result} = 2020-04-02 12:04:40,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:40,822 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:04:47.507" starttime="20200402 12:04:39.601"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200402 12:04:47.508" starttime="20200402 12:04:47.508"></status>
</kw>
<status status="PASS" endtime="20200402 12:04:47.508" starttime="20200402 12:04:47.507"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200402 12:04:47.508" critical="yes" starttime="20200402 12:04:39.600"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:04:47.511" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:04:52.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:04:52.244" level="INFO">${output} = 2020-04-02 12:04:48,438 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:48,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:04:52.244" starttime="20200402 12:04:47.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:04:52.245" level="INFO">2020-04-02 12:04:48,438 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:48,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-02 12:04:48,583 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-02 12:04:48,861 [main] INFO freon.BaseFreonGenerator: Executing test with prefix SLRMWq2CkT
2020-04-02 12:04:48,875 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:04:49,727 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-02 12:04:49,754 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-02 12:04:49,876 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:04:50,323 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-02 12:04:50,876 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:04:51,877 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-02 12:04:51,907 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1422.317495, max=1422.317495, mean=1422.317495, stddev=0.0, median=1422.317495, p75=1422.317495, p95=1422.317495, p98=1422.317495, p99=1422.317495, p999=1422.317495, mean_rate=0.4744911244136269, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-02 12:04:51,908 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-02 12:04:51,909 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-02 12:04:51,909 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200402 12:04:52.245" starttime="20200402 12:04:52.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:04:52.246" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:04:52.246" starttime="20200402 12:04:52.245"></status>
</kw>
<msg timestamp="20200402 12:04:52.246" level="INFO">${result} = 2020-04-02 12:04:48,438 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:48,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:04:52.246" starttime="20200402 12:04:47.509"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200402 12:04:52.248" starttime="20200402 12:04:52.247"></status>
</kw>
<status status="PASS" endtime="20200402 12:04:52.248" starttime="20200402 12:04:52.246"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200402 12:04:52.248" critical="yes" starttime="20200402 12:04:47.509"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:04:52.251" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:04:55.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:04:55.578" level="INFO">${output} = 2020-04-02 12:04:53,191 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:53,383 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:04:55.578" starttime="20200402 12:04:52.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:04:55.579" level="INFO">2020-04-02 12:04:53,191 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:53,383 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-02 12:04:53,384 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-02 12:04:53,658 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6GwU3cDsgE
2020-04-02 12:04:53,679 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:04:54,689 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-02 12:04:55,565 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=66.039573, max=66.039573, mean=66.039573, stddev=0.0, median=66.039573, p75=66.039573, p95=66.039573, p98=66.039573, p99=66.039573, p999=66.039573, mean_rate=0.9898200276561655, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-02 12:04:55,566 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-02 12:04:55,566 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-02 12:04:55,566 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200402 12:04:55.579" starttime="20200402 12:04:55.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:04:55.580" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:04:55.580" starttime="20200402 12:04:55.579"></status>
</kw>
<msg timestamp="20200402 12:04:55.580" level="INFO">${result} = 2020-04-02 12:04:53,191 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:53,383 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:04:55.580" starttime="20200402 12:04:52.249"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200402 12:04:55.581" starttime="20200402 12:04:55.581"></status>
</kw>
<status status="PASS" endtime="20200402 12:04:55.581" starttime="20200402 12:04:55.580"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200402 12:04:55.582" critical="yes" starttime="20200402 12:04:52.248"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200402 12:04:55.585" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200402 12:04:58.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20200402 12:04:58.916" level="INFO">${output} = 2020-04-02 12:04:56,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:56,771 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:04:58.916" starttime="20200402 12:04:55.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200402 12:04:58.917" level="INFO">2020-04-02 12:04:56,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:56,771 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-02 12:04:56,771 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-02 12:04:57,054 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 03WVBOynjR
2020-04-02 12:04:57,069 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-02 12:04:58,072 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-02 12:04:58,891 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=32.078119, max=32.078119, mean=32.078119, stddev=0.0, median=32.078119, p75=32.078119, p95=32.078119, p98=32.078119, p99=32.078119, p999=32.078119, mean_rate=0.9908182654810748, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-02 12:04:58,893 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-02 12:04:58,893 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-02 12:04:58,893 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200402 12:04:58.917" starttime="20200402 12:04:58.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200402 12:04:58.918" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200402 12:04:58.918" starttime="20200402 12:04:58.917"></status>
</kw>
<msg timestamp="20200402 12:04:58.918" level="INFO">${result} = 2020-04-02 12:04:56,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-02 12:04:56,771 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200402 12:04:58.918" starttime="20200402 12:04:55.583"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200402 12:04:58.919" starttime="20200402 12:04:58.919"></status>
</kw>
<status status="PASS" endtime="20200402 12:04:58.919" starttime="20200402 12:04:58.918"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200402 12:04:58.919" critical="yes" starttime="20200402 12:04:55.582"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200402 12:04:58.920" starttime="20200402 12:04:39.576"></status>
</suite>
<status status="PASS" endtime="20200402 12:04:58.927" starttime="20200402 12:04:39.550"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-om-ha-s3-freon" pass="4">ozone-om-ha-s3-freon</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
