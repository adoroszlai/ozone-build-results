<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200422 00:11:30.477" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200422 00:11:30.539" endtime="20200422 00:11:30.539"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:11:30.545" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:11:30.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:11:30.646" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 22 Apr 2020 00:11:30 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 21 Apr 2020 23:46:44 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200422 00:11:30.540" endtime="20200422 00:11:30.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:11:30.648" level="INFO">HTTP/1.1 200 OK
Date: Wed, 22 Apr 2020 00:11:30 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 21 Apr 2020 23:46:44 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200422 00:11:30.647" endtime="20200422 00:11:30.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:11:30.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:11:30.648" endtime="20200422 00:11:30.649"></status>
</kw>
<msg timestamp="20200422 00:11:30.649" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 22 Apr 2020 00:11:30 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 21 Apr 2020 23:46:44 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200422 00:11:30.540" endtime="20200422 00:11:30.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200422 00:11:30.649" endtime="20200422 00:11:30.650"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200422 00:11:30.538" endtime="20200422 00:11:30.650" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200422 00:11:30.652" endtime="20200422 00:11:30.652"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:11:30.656" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:30.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:30.795" level="INFO">${output} = 2020-04-22 00:11:31,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:11:32,028 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200422 00:11:30.653" endtime="20200422 00:12:30.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:30.797" level="INFO">2020-04-22 00:11:31,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:11:32,028 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-22 00:11:32,028 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-22 00:11:33,458 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-22 00:11:33,459 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-04-22 00:11:33,459 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-04-22 00:11:33,459 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-04-22 00:11:33,459 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-22 00:11:33,459 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-22 00:11:33,459 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-04-22 00:11:33,462 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-04-22 00:11:33,463 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-22 00:11:33,466 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-22 00:11:33,498 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-09773, with hadoop as owner.
2020-04-22 00:11:33,614 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-10638, with hadoop as owner.
2020-04-22 00:11:33,625 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-67414, with hadoop as owner.
2020-04-22 00:11:33,631 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-60647, with hadoop as owner.
2020-04-22 00:11:33,640 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-53387, with hadoop as owner.
2020-04-22 00:11:33,650 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09773/bucket-0-06477, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,698 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-10638/bucket-0-78696, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,707 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-67414/bucket-0-80784, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,722 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-60647/bucket-0-50398, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,732 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-53387/bucket-0-57025, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,740 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09773/bucket-1-43831, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,746 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-10638/bucket-1-43710, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,752 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-67414/bucket-1-89094, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,757 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-60647/bucket-1-40679, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,763 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-53387/bucket-1-71480, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,770 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09773/bucket-2-62310, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,776 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-10638/bucket-2-46467, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,781 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-67414/bucket-2-22987, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,786 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-60647/bucket-2-94630, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,799 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-53387/bucket-2-33935, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,806 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09773/bucket-3-64155, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,813 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-10638/bucket-3-64706, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,819 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-67414/bucket-3-61785, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,828 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-60647/bucket-3-58807, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,834 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-53387/bucket-3-20780, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,839 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09773/bucket-4-51948, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,843 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-10638/bucket-4-47153, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,848 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-67414/bucket-4-65068, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,853 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-60647/bucket-4-58696, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:33,859 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-53387/bucket-4-39739, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:11:34,399 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-22 00:11:34,473 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-04-22 00:11:35,474 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-04-22 00:11:36,475 [Thread-8] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-04-22 00:11:37,476 [Thread-8] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-04-22 00:11:38,476 [Thread-8] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-04-22 00:11:39,476 [Thread-8] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-04-22 00:11:40,478 [Thread-8] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-04-22 00:11:41,478 [Thread-8] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-04-22 00:11:42,479 [Thread-8] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-04-22 00:11:43,480 [Thread-8] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-04-22 00:11:44,480 [Thread-8] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-04-22 00:11:45,481 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-22 00:11:46,481 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-22 00:11:47,482 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-04-22 00:11:48,482 [Thread-8] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-04-22 00:11:49,482 [Thread-8] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-04-22 00:11:50,483 [Thread-8] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-04-22 00:11:51,483 [Thread-8] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-04-22 00:11:52,484 [Thread-8] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-04-22 00:11:53,484 [Thread-8] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-04-22 00:11:54,485 [Thread-8] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-04-22 00:11:55,486 [Thread-8] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-04-22 00:11:56,487 [Thread-8] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-04-22 00:11:57,487 [Thread-8] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-04-22 00:11:58,487 [Thread-8] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-04-22 00:11:59,488 [Thread-8] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-04-22 00:12:00,488 [Thread-8] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-04-22 00:12:01,489 [Thread-8] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-04-22 00:12:02,489 [Thread-8] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-04-22 00:12:03,490 [Thread-8] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-04-22 00:12:04,490 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-22 00:12:05,491 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-04-22 00:12:06,491 [Thread-8] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-04-22 00:12:07,492 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-04-22 00:12:08,492 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-04-22 00:12:09,493 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-04-22 00:12:10,493 [Thread-8] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-04-22 00:12:11,494 [Thread-8] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-04-22 00:12:12,500 [Thread-8] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-04-22 00:12:13,500 [Thread-8] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-04-22 00:12:14,501 [Thread-8] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-04-22 00:12:15,501 [Thread-8] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-04-22 00:12:16,502 [Thread-8] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-04-22 00:12:17,503 [Thread-8] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-04-22 00:12:18,503 [Thread-8] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-04-22 00:12:19,504 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-04-22 00:12:20,504 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-04-22 00:12:21,505 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-04-22 00:12:22,505 [Thread-8] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-04-22 00:12:23,505 [Thread-8] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-04-22 00:12:24,506 [Thread-8] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-04-22 00:12:25,506 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,162
Average Time spent in bucket creation: 00:00:00,146
Average Time spent in key creation: 00:00:01,770
Average Time spent in key write: 00:00:00,671
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:58,089
***************************************************</msg>
<status status="PASS" starttime="20200422 00:12:30.796" endtime="20200422 00:12:30.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:30.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:30.797" endtime="20200422 00:12:30.798"></status>
</kw>
<msg timestamp="20200422 00:12:30.798" level="INFO">${result} = 2020-04-22 00:11:31,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:11:32,028 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200422 00:11:30.652" endtime="20200422 00:12:30.798"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200422 00:12:30.799" endtime="20200422 00:12:30.800"></status>
</kw>
<status status="PASS" starttime="20200422 00:12:30.799" endtime="20200422 00:12:30.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200422 00:12:30.800" endtime="20200422 00:12:30.800"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200422 00:11:30.651" endtime="20200422 00:12:30.800" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200422 00:11:30.510" endtime="20200422 00:12:30.801"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200422 00:12:30.810" level="INFO">${random} = 68281</msg>
<status status="PASS" starttime="20200422 00:12:30.810" endtime="20200422 00:12:30.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200422 00:12:30.811" level="INFO">${prefix} = 68281</msg>
<status status="PASS" starttime="20200422 00:12:30.811" endtime="20200422 00:12:30.811"></status>
</kw>
<status status="PASS" starttime="20200422 00:12:30.810" endtime="20200422 00:12:30.811"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200422 00:12:30.812" endtime="20200422 00:12:30.812"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:30.816" level="INFO">Running command 'ozone sh volume info o3://om:9862/68281-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:32.709" level="INFO">${rc} = 255</msg>
<msg timestamp="20200422 00:12:32.709" level="INFO">${output} = VOLUME_NOT_FOUND Volume 68281-rpcwoport is not found</msg>
<status status="PASS" starttime="20200422 00:12:30.814" endtime="20200422 00:12:32.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:32.710" level="INFO">VOLUME_NOT_FOUND Volume 68281-rpcwoport is not found</msg>
<status status="PASS" starttime="20200422 00:12:32.710" endtime="20200422 00:12:32.710"></status>
</kw>
<msg timestamp="20200422 00:12:32.711" level="INFO">${result} = VOLUME_NOT_FOUND Volume 68281-rpcwoport is not found</msg>
<status status="PASS" starttime="20200422 00:12:30.813" endtime="20200422 00:12:32.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200422 00:12:32.711" endtime="20200422 00:12:32.711"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:32.717" level="INFO">Running command 'ozone sh volume create o3://om:9862/68281-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:34.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:34.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:12:32.713" endtime="20200422 00:12:34.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:34.602" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:12:34.601" endtime="20200422 00:12:34.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:34.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:34.602" endtime="20200422 00:12:34.602"></status>
</kw>
<msg timestamp="20200422 00:12:34.603" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200422 00:12:32.712" endtime="20200422 00:12:34.603"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200422 00:12:34.603" endtime="20200422 00:12:34.603"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:34.607" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="68281-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:36.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:36.907" level="INFO">${output} = {
  "metadata": {},
  "name": "68281-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:12:34.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200422 00:12:34.604" endtime="20200422 00:12:36.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:36.909" level="INFO">{
  "metadata": {},
  "name": "68281-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:12:34.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200422 00:12:36.908" endtime="20200422 00:12:36.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:36.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:36.909" endtime="20200422 00:12:36.909"></status>
</kw>
<msg timestamp="20200422 00:12:36.910" level="INFO">${result} = {
  "metadata": {},
  "name": "68281-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:12:34.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200422 00:12:34.603" endtime="20200422 00:12:36.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200422 00:12:36.910" endtime="20200422 00:12:36.910"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:36.913" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="68281-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:39.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:39.180" level="INFO">${output} = {
  "metadata": {},
  "name": "68281-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:12:34.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200422 00:12:36.911" endtime="20200422 00:12:39.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:39.181" level="INFO">{
  "metadata": {},
  "name": "68281-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:12:34.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200422 00:12:39.180" endtime="20200422 00:12:39.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:39.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:39.181" endtime="20200422 00:12:39.182"></status>
</kw>
<msg timestamp="20200422 00:12:39.182" level="INFO">${result} = {
  "metadata": {},
  "name": "68281-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:12:34.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200422 00:12:36.910" endtime="20200422 00:12:39.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200422 00:12:39.182" endtime="20200422 00:12:39.183"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:39.187" level="INFO">Running command 'ozone sh volume update o3://om:9862/68281-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:41.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:41.335" level="INFO">${output} = {
  "metadata" : { },
  "name" : "68281-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-22T00:12:34.582Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200422 00:12:39.183" endtime="20200422 00:12:41.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:41.336" level="INFO">{
  "metadata" : { },
  "name" : "68281-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-22T00:12:34.582Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200422 00:12:41.335" endtime="20200422 00:12:41.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:41.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:41.336" endtime="20200422 00:12:41.337"></status>
</kw>
<status status="PASS" starttime="20200422 00:12:39.183" endtime="20200422 00:12:41.337"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:41.340" level="INFO">Running command 'ozone sh volume info o3://om:9862/68281-rpcwoport | jq -r '. | select(.name=="68281-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:43.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:43.475" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200422 00:12:41.338" endtime="20200422 00:12:43.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:43.477" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200422 00:12:43.476" endtime="20200422 00:12:43.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:43.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:43.477" endtime="20200422 00:12:43.478"></status>
</kw>
<msg timestamp="20200422 00:12:43.478" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200422 00:12:41.337" endtime="20200422 00:12:43.478"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200422 00:12:43.478" endtime="20200422 00:12:43.479"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:43.483" level="INFO">Running command 'ozone sh bucket create o3://om:9862/68281-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:45.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:45.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:12:43.479" endtime="20200422 00:12:45.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:45.414" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:12:45.413" endtime="20200422 00:12:45.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:45.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:45.415" endtime="20200422 00:12:45.415"></status>
</kw>
<status status="PASS" starttime="20200422 00:12:43.479" endtime="20200422 00:12:45.415"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:45.419" level="INFO">Running command 'ozone sh bucket info o3://om:9862/68281-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:47.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:47.570" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200422 00:12:45.416" endtime="20200422 00:12:47.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:47.571" level="INFO">DISK</msg>
<status status="PASS" starttime="20200422 00:12:47.570" endtime="20200422 00:12:47.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:47.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:47.572" endtime="20200422 00:12:47.572"></status>
</kw>
<msg timestamp="20200422 00:12:47.573" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200422 00:12:45.416" endtime="20200422 00:12:47.573"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200422 00:12:47.573" endtime="20200422 00:12:47.573"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:47.577" level="INFO">Running command 'ozone sh bucket list o3://om:9862/68281-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:49.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:49.767" level="INFO">${output} = 68281-rpcwoport</msg>
<status status="PASS" starttime="20200422 00:12:47.574" endtime="20200422 00:12:49.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:49.770" level="INFO">68281-rpcwoport</msg>
<status status="PASS" starttime="20200422 00:12:49.769" endtime="20200422 00:12:49.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:49.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:49.771" endtime="20200422 00:12:49.771"></status>
</kw>
<msg timestamp="20200422 00:12:49.771" level="INFO">${result} = 68281-rpcwoport</msg>
<status status="PASS" starttime="20200422 00:12:47.573" endtime="20200422 00:12:49.771"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200422 00:12:49.772" endtime="20200422 00:12:49.772"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:49.777" level="INFO">Running command 'ozone sh key put o3://om:9862/68281-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:53.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:53.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:12:49.774" endtime="20200422 00:12:53.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:53.653" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:12:53.652" endtime="20200422 00:12:53.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:53.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:53.653" endtime="20200422 00:12:53.654"></status>
</kw>
<status status="PASS" starttime="20200422 00:12:49.773" endtime="20200422 00:12:53.654"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:53.657" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:53.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:53.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:12:53.655" endtime="20200422 00:12:53.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:53.661" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:12:53.660" endtime="20200422 00:12:53.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:53.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:53.661" endtime="20200422 00:12:53.661"></status>
</kw>
<status status="PASS" starttime="20200422 00:12:53.655" endtime="20200422 00:12:53.662"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:53.665" level="INFO">Running command 'ozone sh key get o3://om:9862/68281-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:57.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:57.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:12:53.662" endtime="20200422 00:12:57.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:57.265" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:12:57.264" endtime="20200422 00:12:57.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:57.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:57.265" endtime="20200422 00:12:57.266"></status>
</kw>
<status status="PASS" starttime="20200422 00:12:53.662" endtime="20200422 00:12:57.266"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:57.269" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:57.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:12:57.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:12:57.267" endtime="20200422 00:12:57.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:57.273" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:12:57.273" endtime="20200422 00:12:57.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:12:57.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:12:57.274" endtime="20200422 00:12:57.274"></status>
</kw>
<status status="PASS" starttime="20200422 00:12:57.266" endtime="20200422 00:12:57.274"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:57.277" level="INFO">Running command 'ozone sh key get o3://om:9862/68281-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:12:59.166" level="INFO">${rc} = 255</msg>
<msg timestamp="20200422 00:12:59.166" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200422 00:12:57.275" endtime="20200422 00:12:59.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:12:59.168" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200422 00:12:59.167" endtime="20200422 00:12:59.168"></status>
</kw>
<msg timestamp="20200422 00:12:59.168" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200422 00:12:57.275" endtime="20200422 00:12:59.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200422 00:12:59.168" endtime="20200422 00:12:59.169"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:12:59.172" level="INFO">Running command 'ozone sh key get --force o3://om:9862/68281-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:02.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:02.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:12:59.170" endtime="20200422 00:13:02.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:02.785" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:13:02.783" endtime="20200422 00:13:02.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:02.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:02.785" endtime="20200422 00:13:02.785"></status>
</kw>
<msg timestamp="20200422 00:13:02.786" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200422 00:12:59.169" endtime="20200422 00:13:02.786"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:02.786" endtime="20200422 00:13:02.786"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:02.790" level="INFO">Running command 'ozone sh key info o3://om:9862/68281-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:04.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:04.972" level="INFO">${output} = {
  "volumeName": "68281-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-22T00:12:51.693Z",
  "modificationTime": "2020-04-22T00:12:53.300Z",
  "re...</msg>
<status status="PASS" starttime="20200422 00:13:02.787" endtime="20200422 00:13:04.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:04.973" level="INFO">{
  "volumeName": "68281-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-22T00:12:51.693Z",
  "modificationTime": "2020-04-22T00:12:53.300Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104039341863207040,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200422 00:13:04.972" endtime="20200422 00:13:04.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:04.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:04.973" endtime="20200422 00:13:04.974"></status>
</kw>
<msg timestamp="20200422 00:13:04.974" level="INFO">${result} = {
  "volumeName": "68281-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-22T00:12:51.693Z",
  "modificationTime": "2020-04-22T00:12:53.300Z",
  "re...</msg>
<status status="PASS" starttime="20200422 00:13:02.786" endtime="20200422 00:13:04.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:04.974" endtime="20200422 00:13:04.975"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:04.977" level="INFO">Running command 'ozone debug chunkinfo o3://om:9862/68281-rpcwoport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:08.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:08.651" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/a5612396-b040-4515-95fe-23740bf3de9e/current/containerDir0/1/chunks/104039341863207037_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200422 00:13:04.975" endtime="20200422 00:13:08.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:08.653" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/a5612396-b040-4515-95fe-23740bf3de9e/current/containerDir0/1/chunks/104039341863207037_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    }
  ],
  "pipelineID": "8157de3a-4a9b-42bc-bce3-811a5608a097"
}</msg>
<status status="PASS" starttime="20200422 00:13:08.652" endtime="20200422 00:13:08.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:08.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:08.653" endtime="20200422 00:13:08.654"></status>
</kw>
<msg timestamp="20200422 00:13:08.654" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/a5612396-b040-4515-95fe-23740bf3de9e/current/containerDir0/1/chunks/104039341863207037_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200422 00:13:04.975" endtime="20200422 00:13:08.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:08.654" endtime="20200422 00:13:08.655"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:08.658" level="INFO">Running command 'ozone sh key list o3://om:9862/68281-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:10.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:10.937" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200422 00:13:08.656" endtime="20200422 00:13:10.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:10.938" level="INFO">key1</msg>
<status status="PASS" starttime="20200422 00:13:10.937" endtime="20200422 00:13:10.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:10.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:10.939" endtime="20200422 00:13:10.939"></status>
</kw>
<msg timestamp="20200422 00:13:10.939" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200422 00:13:08.655" endtime="20200422 00:13:10.940"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:10.940" endtime="20200422 00:13:10.940"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:10.943" level="INFO">Running command 'ozone sh key rename o3://om:9862/68281-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:13.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:13.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:13:10.941" endtime="20200422 00:13:13.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:13.026" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:13:13.025" endtime="20200422 00:13:13.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:13.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:13.026" endtime="20200422 00:13:13.027"></status>
</kw>
<status status="PASS" starttime="20200422 00:13:10.940" endtime="20200422 00:13:13.027"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:13.030" level="INFO">Running command 'ozone sh key list o3://om:9862/68281-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:15.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:15.462" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200422 00:13:13.028" endtime="20200422 00:13:15.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:15.463" level="INFO">key2</msg>
<status status="PASS" starttime="20200422 00:13:15.463" endtime="20200422 00:13:15.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:15.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:15.464" endtime="20200422 00:13:15.464"></status>
</kw>
<msg timestamp="20200422 00:13:15.465" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200422 00:13:13.027" endtime="20200422 00:13:15.465"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:15.465" endtime="20200422 00:13:15.465"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:15.468" level="INFO">Running command 'ozone sh key delete o3://om:9862/68281-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:17.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:17.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:13:15.466" endtime="20200422 00:13:17.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:17.412" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:13:17.411" endtime="20200422 00:13:17.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:17.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:17.412" endtime="20200422 00:13:17.413"></status>
</kw>
<status status="PASS" starttime="20200422 00:13:15.465" endtime="20200422 00:13:17.413"></status>
</kw>
<status status="PASS" starttime="20200422 00:12:49.773" endtime="20200422 00:13:17.413"></status>
</kw>
<status status="PASS" starttime="20200422 00:12:49.772" endtime="20200422 00:13:17.413"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:17.416" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/68281-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:19.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:19.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:13:17.414" endtime="20200422 00:13:19.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:19.374" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:13:19.373" endtime="20200422 00:13:19.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:19.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:19.374" endtime="20200422 00:13:19.375"></status>
</kw>
<status status="PASS" starttime="20200422 00:13:17.413" endtime="20200422 00:13:19.375"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:19.378" level="INFO">Running command 'ozone sh volume delete o3://om:9862/68281-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:21.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:21.310" level="INFO">${output} = Volume 68281-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200422 00:13:19.376" endtime="20200422 00:13:21.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:21.311" level="INFO">Volume 68281-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200422 00:13:21.310" endtime="20200422 00:13:21.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:21.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:21.311" endtime="20200422 00:13:21.312"></status>
</kw>
<status status="PASS" starttime="20200422 00:13:19.375" endtime="20200422 00:13:21.312"></status>
</kw>
<status status="PASS" starttime="20200422 00:12:30.813" endtime="20200422 00:13:21.313"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200422 00:12:30.811" endtime="20200422 00:13:21.313" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:21.314" endtime="20200422 00:13:21.315"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:21.319" level="INFO">Running command 'ozone sh volume create o3://om:9862/68281-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:23.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:23.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:13:21.316" endtime="20200422 00:13:23.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:23.364" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:13:23.363" endtime="20200422 00:13:23.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:23.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:23.364" endtime="20200422 00:13:23.365"></status>
</kw>
<status status="PASS" starttime="20200422 00:13:21.315" endtime="20200422 00:13:23.365"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:23.368" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/68281-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:25.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:25.585" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:13:23.366" endtime="20200422 00:13:25.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:25.587" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:13:25.586" endtime="20200422 00:13:25.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:25.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:25.587" endtime="20200422 00:13:25.588"></status>
</kw>
<msg timestamp="20200422 00:13:25.588" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:13:23.365" endtime="20200422 00:13:25.588"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:25.588" endtime="20200422 00:13:25.589"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:25.592" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/68281-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:27.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:27.498" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200422 00:13:25.590" endtime="20200422 00:13:27.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:27.500" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200422 00:13:27.499" endtime="20200422 00:13:27.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:27.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:27.500" endtime="20200422 00:13:27.500"></status>
</kw>
<msg timestamp="20200422 00:13:27.501" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200422 00:13:25.589" endtime="20200422 00:13:27.501"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:27.503" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/68281-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:29.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:29.602" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:27.501" endtime="20200422 00:13:29.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:29.603" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:13:29.602" endtime="20200422 00:13:29.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:29.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:29.603" endtime="20200422 00:13:29.604"></status>
</kw>
<msg timestamp="20200422 00:13:29.604" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:27.501" endtime="20200422 00:13:29.604"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:29.604" endtime="20200422 00:13:29.605"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:29.608" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/68281-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:31.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:31.686" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200422 00:13:29.606" endtime="20200422 00:13:31.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:31.687" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200422 00:13:31.686" endtime="20200422 00:13:31.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:31.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:31.688" endtime="20200422 00:13:31.688"></status>
</kw>
<msg timestamp="20200422 00:13:31.689" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200422 00:13:29.606" endtime="20200422 00:13:31.689"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:31.692" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/68281-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:33.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:33.854" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:31.690" endtime="20200422 00:13:33.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:33.855" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:13:33.854" endtime="20200422 00:13:33.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:33.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:33.856" endtime="20200422 00:13:33.856"></status>
</kw>
<msg timestamp="20200422 00:13:33.856" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:31.689" endtime="20200422 00:13:33.856"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:33.857" endtime="20200422 00:13:33.857"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:33.860" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/68281-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:35.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:35.726" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200422 00:13:33.858" endtime="20200422 00:13:35.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:35.728" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200422 00:13:35.727" endtime="20200422 00:13:35.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:35.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:35.728" endtime="20200422 00:13:35.728"></status>
</kw>
<msg timestamp="20200422 00:13:35.729" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200422 00:13:33.858" endtime="20200422 00:13:35.729"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:35.732" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/68281-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:37.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:37.922" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200422 00:13:35.729" endtime="20200422 00:13:37.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:37.923" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:13:37.923" endtime="20200422 00:13:37.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:37.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:37.924" endtime="20200422 00:13:37.924"></status>
</kw>
<msg timestamp="20200422 00:13:37.925" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200422 00:13:35.729" endtime="20200422 00:13:37.925"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:37.925" endtime="20200422 00:13:37.926"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:37.926" endtime="20200422 00:13:37.927"></status>
</kw>
<status status="PASS" starttime="20200422 00:13:21.315" endtime="20200422 00:13:37.927"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200422 00:13:21.313" endtime="20200422 00:13:37.927" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:37.928" endtime="20200422 00:13:37.929"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:37.932" level="INFO">Running command 'ozone sh bucket create o3://om:9862/68281-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:39.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:39.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:13:37.930" endtime="20200422 00:13:39.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:39.967" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:13:39.966" endtime="20200422 00:13:39.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:39.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:39.967" endtime="20200422 00:13:39.967"></status>
</kw>
<status status="PASS" starttime="20200422 00:13:37.930" endtime="20200422 00:13:39.968"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:39.972" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/68281-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:42.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:42.114" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:39.968" endtime="20200422 00:13:42.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:42.115" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:13:42.114" endtime="20200422 00:13:42.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:42.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:42.115" endtime="20200422 00:13:42.116"></status>
</kw>
<msg timestamp="20200422 00:13:42.116" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:39.968" endtime="20200422 00:13:42.116"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:42.116" endtime="20200422 00:13:42.117"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:42.120" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/68281-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:43.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:43.979" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200422 00:13:42.118" endtime="20200422 00:13:43.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:43.980" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200422 00:13:43.979" endtime="20200422 00:13:43.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:43.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:43.981" endtime="20200422 00:13:43.981"></status>
</kw>
<msg timestamp="20200422 00:13:43.981" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200422 00:13:42.117" endtime="20200422 00:13:43.982"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:43.986" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/68281-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:46.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:46.078" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:43.982" endtime="20200422 00:13:46.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:46.079" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:13:46.079" endtime="20200422 00:13:46.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:46.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:46.080" endtime="20200422 00:13:46.080"></status>
</kw>
<msg timestamp="20200422 00:13:46.081" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:43.982" endtime="20200422 00:13:46.081"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:46.081" endtime="20200422 00:13:46.082"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:46.086" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/68281-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:47.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:47.915" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200422 00:13:46.083" endtime="20200422 00:13:47.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:47.917" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200422 00:13:47.916" endtime="20200422 00:13:47.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:47.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:47.917" endtime="20200422 00:13:47.918"></status>
</kw>
<msg timestamp="20200422 00:13:47.918" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200422 00:13:46.082" endtime="20200422 00:13:47.918"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:47.921" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/68281-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:49.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:49.922" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:47.919" endtime="20200422 00:13:49.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:49.924" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:13:49.923" endtime="20200422 00:13:49.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:49.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:49.924" endtime="20200422 00:13:49.924"></status>
</kw>
<msg timestamp="20200422 00:13:49.925" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:47.919" endtime="20200422 00:13:49.925"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:49.925" endtime="20200422 00:13:49.926"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:49.930" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/68281-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:52.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:52.017" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200422 00:13:49.927" endtime="20200422 00:13:52.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:52.018" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200422 00:13:52.018" endtime="20200422 00:13:52.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:52.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:52.018" endtime="20200422 00:13:52.019"></status>
</kw>
<msg timestamp="20200422 00:13:52.019" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200422 00:13:49.926" endtime="20200422 00:13:52.019"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:52.022" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/68281-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:54.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:54.317" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200422 00:13:52.020" endtime="20200422 00:13:54.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:54.318" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:13:54.317" endtime="20200422 00:13:54.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:54.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:54.318" endtime="20200422 00:13:54.319"></status>
</kw>
<msg timestamp="20200422 00:13:54.319" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200422 00:13:52.019" endtime="20200422 00:13:54.319"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:54.319" endtime="20200422 00:13:54.320"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:54.320" endtime="20200422 00:13:54.321"></status>
</kw>
<status status="PASS" starttime="20200422 00:13:37.929" endtime="20200422 00:13:54.321"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200422 00:13:37.928" endtime="20200422 00:13:54.321" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200422 00:13:54.324" endtime="20200422 00:13:54.324"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:54.328" level="INFO">Running command 'ozone sh key put o3://om:9862/68281-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:13:57.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:13:57.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:13:54.326" endtime="20200422 00:13:57.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:13:57.946" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:13:57.945" endtime="20200422 00:13:57.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:13:57.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:13:57.946" endtime="20200422 00:13:57.947"></status>
</kw>
<status status="PASS" starttime="20200422 00:13:54.325" endtime="20200422 00:13:57.947"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:13:57.952" level="INFO">Running command 'ozone sh key getacl o3://om:9862/68281-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:00.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:00.027" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:57.948" endtime="20200422 00:14:00.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:00.028" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:14:00.027" endtime="20200422 00:14:00.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:00.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:00.029" endtime="20200422 00:14:00.030"></status>
</kw>
<msg timestamp="20200422 00:14:00.030" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:13:57.947" endtime="20200422 00:14:00.030"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:00.030" endtime="20200422 00:14:00.031"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:00.034" level="INFO">Running command 'ozone sh key addacl o3://om:9862/68281-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:01.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:01.985" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200422 00:14:00.032" endtime="20200422 00:14:01.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:01.986" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200422 00:14:01.986" endtime="20200422 00:14:01.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:01.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:01.987" endtime="20200422 00:14:01.987"></status>
</kw>
<msg timestamp="20200422 00:14:01.987" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200422 00:14:00.031" endtime="20200422 00:14:01.987"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:01.991" level="INFO">Running command 'ozone sh key getacl o3://om:9862/68281-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:04.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:04.059" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:14:01.988" endtime="20200422 00:14:04.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:04.060" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:14:04.059" endtime="20200422 00:14:04.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:04.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:04.060" endtime="20200422 00:14:04.061"></status>
</kw>
<msg timestamp="20200422 00:14:04.061" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:14:01.988" endtime="20200422 00:14:04.061"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:04.061" endtime="20200422 00:14:04.062"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:04.066" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/68281-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:06.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:06.092" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200422 00:14:04.063" endtime="20200422 00:14:06.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:06.093" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200422 00:14:06.093" endtime="20200422 00:14:06.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:06.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:06.094" endtime="20200422 00:14:06.096"></status>
</kw>
<msg timestamp="20200422 00:14:06.097" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200422 00:14:04.063" endtime="20200422 00:14:06.097"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:06.102" level="INFO">Running command 'ozone sh key getacl o3://om:9862/68281-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:08.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:08.227" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:14:06.098" endtime="20200422 00:14:08.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:08.228" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:14:08.227" endtime="20200422 00:14:08.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:08.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:08.228" endtime="20200422 00:14:08.229"></status>
</kw>
<msg timestamp="20200422 00:14:08.229" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200422 00:14:06.097" endtime="20200422 00:14:08.229"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:08.229" endtime="20200422 00:14:08.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:08.233" level="INFO">Running command 'ozone sh key setacl o3://om:9862/68281-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:10.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:10.185" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200422 00:14:08.231" endtime="20200422 00:14:10.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:10.187" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200422 00:14:10.186" endtime="20200422 00:14:10.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:10.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:10.187" endtime="20200422 00:14:10.187"></status>
</kw>
<msg timestamp="20200422 00:14:10.188" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200422 00:14:08.230" endtime="20200422 00:14:10.188"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:10.191" level="INFO">Running command 'ozone sh key getacl o3://om:9862/68281-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:12.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:12.342" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200422 00:14:10.189" endtime="20200422 00:14:12.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:12.343" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200422 00:14:12.342" endtime="20200422 00:14:12.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:12.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:12.343" endtime="20200422 00:14:12.343"></status>
</kw>
<msg timestamp="20200422 00:14:12.344" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200422 00:14:10.188" endtime="20200422 00:14:12.344"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:12.344" endtime="20200422 00:14:12.344"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:12.345" endtime="20200422 00:14:12.345"></status>
</kw>
<status status="PASS" starttime="20200422 00:13:54.325" endtime="20200422 00:14:12.346"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200422 00:13:54.321" endtime="20200422 00:14:12.346" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:12.347" endtime="20200422 00:14:12.347"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:12.351" level="INFO">Running command 'ozone sh volume info o3:///68281-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:14.188" level="INFO">${rc} = 255</msg>
<msg timestamp="20200422 00:14:14.188" level="INFO">${output} = VOLUME_NOT_FOUND Volume 68281-rpcwport is not found</msg>
<status status="PASS" starttime="20200422 00:14:12.349" endtime="20200422 00:14:14.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:14.189" level="INFO">VOLUME_NOT_FOUND Volume 68281-rpcwport is not found</msg>
<status status="PASS" starttime="20200422 00:14:14.188" endtime="20200422 00:14:14.189"></status>
</kw>
<msg timestamp="20200422 00:14:14.189" level="INFO">${result} = VOLUME_NOT_FOUND Volume 68281-rpcwport is not found</msg>
<status status="PASS" starttime="20200422 00:14:12.348" endtime="20200422 00:14:14.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:14.189" endtime="20200422 00:14:14.190"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:14.193" level="INFO">Running command 'ozone sh volume create o3:///68281-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:16.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:16.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:14:14.190" endtime="20200422 00:14:16.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:16.207" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:14:16.206" endtime="20200422 00:14:16.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:16.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:16.207" endtime="20200422 00:14:16.208"></status>
</kw>
<msg timestamp="20200422 00:14:16.208" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200422 00:14:14.190" endtime="20200422 00:14:16.208"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:16.209" endtime="20200422 00:14:16.209"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:16.212" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="68281-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:18.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:18.390" level="INFO">${output} = {
  "metadata": {},
  "name": "68281-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:14:16.177Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200422 00:14:16.210" endtime="20200422 00:14:18.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:18.391" level="INFO">{
  "metadata": {},
  "name": "68281-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:14:16.177Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200422 00:14:18.391" endtime="20200422 00:14:18.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:18.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:18.392" endtime="20200422 00:14:18.392"></status>
</kw>
<msg timestamp="20200422 00:14:18.393" level="INFO">${result} = {
  "metadata": {},
  "name": "68281-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:14:16.177Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200422 00:14:16.209" endtime="20200422 00:14:18.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:18.393" endtime="20200422 00:14:18.393"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:18.398" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="68281-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:20.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:20.636" level="INFO">${output} = {
  "metadata": {},
  "name": "68281-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:14:16.177Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200422 00:14:18.394" endtime="20200422 00:14:20.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:20.637" level="INFO">{
  "metadata": {},
  "name": "68281-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:14:16.177Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200422 00:14:20.636" endtime="20200422 00:14:20.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:20.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:20.637" endtime="20200422 00:14:20.638"></status>
</kw>
<msg timestamp="20200422 00:14:20.638" level="INFO">${result} = {
  "metadata": {},
  "name": "68281-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:14:16.177Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200422 00:14:18.393" endtime="20200422 00:14:20.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:20.638" endtime="20200422 00:14:20.639"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:20.643" level="INFO">Running command 'ozone sh volume update o3:///68281-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:22.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:22.793" level="INFO">${output} = {
  "metadata" : { },
  "name" : "68281-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-22T00:14:16.177Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200422 00:14:20.640" endtime="20200422 00:14:22.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:22.794" level="INFO">{
  "metadata" : { },
  "name" : "68281-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-22T00:14:16.177Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200422 00:14:22.793" endtime="20200422 00:14:22.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:22.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:22.795" endtime="20200422 00:14:22.795"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:20.639" endtime="20200422 00:14:22.795"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:22.799" level="INFO">Running command 'ozone sh volume info o3:///68281-rpcwport | jq -r '. | select(.name=="68281-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:24.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:24.811" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200422 00:14:22.796" endtime="20200422 00:14:24.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:24.812" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200422 00:14:24.811" endtime="20200422 00:14:24.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:24.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:24.812" endtime="20200422 00:14:24.813"></status>
</kw>
<msg timestamp="20200422 00:14:24.813" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200422 00:14:22.795" endtime="20200422 00:14:24.813"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:24.813" endtime="20200422 00:14:24.814"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:24.816" level="INFO">Running command 'ozone sh bucket create o3:///68281-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:26.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:26.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:14:24.814" endtime="20200422 00:14:26.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:26.700" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:14:26.700" endtime="20200422 00:14:26.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:26.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:26.701" endtime="20200422 00:14:26.701"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:24.814" endtime="20200422 00:14:26.701"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:26.704" level="INFO">Running command 'ozone sh bucket info o3:///68281-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:28.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:28.743" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200422 00:14:26.702" endtime="20200422 00:14:28.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:28.744" level="INFO">DISK</msg>
<status status="PASS" starttime="20200422 00:14:28.744" endtime="20200422 00:14:28.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:28.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:28.745" endtime="20200422 00:14:28.745"></status>
</kw>
<msg timestamp="20200422 00:14:28.746" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200422 00:14:26.702" endtime="20200422 00:14:28.746"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:28.746" endtime="20200422 00:14:28.746"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:28.751" level="INFO">Running command 'ozone sh bucket list o3:///68281-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:30.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:30.868" level="INFO">${output} = 68281-rpcwport</msg>
<status status="PASS" starttime="20200422 00:14:28.747" endtime="20200422 00:14:30.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:30.869" level="INFO">68281-rpcwport</msg>
<status status="PASS" starttime="20200422 00:14:30.868" endtime="20200422 00:14:30.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:30.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:30.869" endtime="20200422 00:14:30.870"></status>
</kw>
<msg timestamp="20200422 00:14:30.870" level="INFO">${result} = 68281-rpcwport</msg>
<status status="PASS" starttime="20200422 00:14:28.747" endtime="20200422 00:14:30.870"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:30.870" endtime="20200422 00:14:30.871"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:30.876" level="INFO">Running command 'ozone sh key put o3:///68281-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:34.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:34.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:14:30.872" endtime="20200422 00:14:34.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:34.594" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:14:34.593" endtime="20200422 00:14:34.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:34.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:34.594" endtime="20200422 00:14:34.594"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:30.872" endtime="20200422 00:14:34.595"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:34.597" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:34.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:34.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:14:34.595" endtime="20200422 00:14:34.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:34.600" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:14:34.599" endtime="20200422 00:14:34.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:34.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:34.600" endtime="20200422 00:14:34.601"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:34.595" endtime="20200422 00:14:34.601"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:34.603" level="INFO">Running command 'ozone sh key get o3:///68281-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:38.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:38.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:14:34.602" endtime="20200422 00:14:38.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:38.038" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:14:38.037" endtime="20200422 00:14:38.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:38.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:38.038" endtime="20200422 00:14:38.039"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:34.601" endtime="20200422 00:14:38.039"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:38.042" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:38.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:38.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:14:38.040" endtime="20200422 00:14:38.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:38.045" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:14:38.045" endtime="20200422 00:14:38.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:38.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:38.046" endtime="20200422 00:14:38.046"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:38.040" endtime="20200422 00:14:38.047"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:38.050" level="INFO">Running command 'ozone sh key get o3:///68281-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:39.769" level="INFO">${rc} = 255</msg>
<msg timestamp="20200422 00:14:39.769" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200422 00:14:38.047" endtime="20200422 00:14:39.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:39.771" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200422 00:14:39.770" endtime="20200422 00:14:39.771"></status>
</kw>
<msg timestamp="20200422 00:14:39.771" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200422 00:14:38.047" endtime="20200422 00:14:39.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:39.772" endtime="20200422 00:14:39.772"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:39.775" level="INFO">Running command 'ozone sh key get --force o3:///68281-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:43.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:43.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:14:39.773" endtime="20200422 00:14:43.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:43.516" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:14:43.515" endtime="20200422 00:14:43.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:43.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:43.516" endtime="20200422 00:14:43.517"></status>
</kw>
<msg timestamp="20200422 00:14:43.517" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200422 00:14:39.772" endtime="20200422 00:14:43.517"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:43.517" endtime="20200422 00:14:43.518"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:43.520" level="INFO">Running command 'ozone sh key info o3:///68281-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:45.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:45.635" level="INFO">${output} = {
  "volumeName": "68281-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-22T00:14:32.759Z",
  "modificationTime": "2020-04-22T00:14:34.245Z",
  "rep...</msg>
<status status="PASS" starttime="20200422 00:14:43.518" endtime="20200422 00:14:45.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:45.636" level="INFO">{
  "volumeName": "68281-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-22T00:14:32.759Z",
  "modificationTime": "2020-04-22T00:14:34.245Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104039348486668420,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200422 00:14:45.635" endtime="20200422 00:14:45.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:45.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:45.636" endtime="20200422 00:14:45.636"></status>
</kw>
<msg timestamp="20200422 00:14:45.637" level="INFO">${result} = {
  "volumeName": "68281-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-22T00:14:32.759Z",
  "modificationTime": "2020-04-22T00:14:34.245Z",
  "rep...</msg>
<status status="PASS" starttime="20200422 00:14:43.518" endtime="20200422 00:14:45.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:45.637" endtime="20200422 00:14:45.638"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:45.642" level="INFO">Running command 'ozone debug chunkinfo o3:///68281-rpcwport/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:48.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:48.978" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/a5612396-b040-4515-95fe-23740bf3de9e/current/containerDir0/1/chunks/104039348486668415_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200422 00:14:45.639" endtime="20200422 00:14:48.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:48.980" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/a5612396-b040-4515-95fe-23740bf3de9e/current/containerDir0/1/chunks/104039348486668415_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    }
  ],
  "pipelineID": "8157de3a-4a9b-42bc-bce3-811a5608a097"
}</msg>
<status status="PASS" starttime="20200422 00:14:48.979" endtime="20200422 00:14:48.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:48.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:48.980" endtime="20200422 00:14:48.981"></status>
</kw>
<msg timestamp="20200422 00:14:48.981" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/a5612396-b040-4515-95fe-23740bf3de9e/current/containerDir0/1/chunks/104039348486668415_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200422 00:14:45.638" endtime="20200422 00:14:48.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:48.981" endtime="20200422 00:14:48.982"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:48.984" level="INFO">Running command 'ozone sh key list o3:///68281-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:51.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:51.137" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200422 00:14:48.983" endtime="20200422 00:14:51.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:51.138" level="INFO">key1</msg>
<status status="PASS" starttime="20200422 00:14:51.137" endtime="20200422 00:14:51.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:51.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:51.138" endtime="20200422 00:14:51.139"></status>
</kw>
<msg timestamp="20200422 00:14:51.139" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200422 00:14:48.982" endtime="20200422 00:14:51.139"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:51.139" endtime="20200422 00:14:51.139"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:51.143" level="INFO">Running command 'ozone sh key rename o3:///68281-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:53.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:53.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:14:51.140" endtime="20200422 00:14:53.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:53.046" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:14:53.045" endtime="20200422 00:14:53.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:53.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:53.046" endtime="20200422 00:14:53.046"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:51.140" endtime="20200422 00:14:53.047"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:53.050" level="INFO">Running command 'ozone sh key list o3:///68281-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:55.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:55.129" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200422 00:14:53.047" endtime="20200422 00:14:55.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:55.130" level="INFO">key2</msg>
<status status="PASS" starttime="20200422 00:14:55.129" endtime="20200422 00:14:55.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:55.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:55.130" endtime="20200422 00:14:55.131"></status>
</kw>
<msg timestamp="20200422 00:14:55.131" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200422 00:14:53.047" endtime="20200422 00:14:55.131"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200422 00:14:55.131" endtime="20200422 00:14:55.132"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:55.136" level="INFO">Running command 'ozone sh key delete o3:///68281-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:57.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:57.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:14:55.132" endtime="20200422 00:14:57.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:57.040" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:14:57.040" endtime="20200422 00:14:57.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:57.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:57.041" endtime="20200422 00:14:57.041"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:55.132" endtime="20200422 00:14:57.041"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:30.871" endtime="20200422 00:14:57.042"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:30.871" endtime="20200422 00:14:57.042"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:57.047" level="INFO">Running command 'ozone sh bucket delete o3:///68281-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:14:58.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:14:58.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:14:57.042" endtime="20200422 00:14:58.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:14:58.839" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:14:58.838" endtime="20200422 00:14:58.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:14:58.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:14:58.839" endtime="20200422 00:14:58.840"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:57.042" endtime="20200422 00:14:58.840"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:14:58.845" level="INFO">Running command 'ozone sh volume delete o3:///68281-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:00.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:00.678" level="INFO">${output} = Volume 68281-rpcwport is deleted</msg>
<status status="PASS" starttime="20200422 00:14:58.842" endtime="20200422 00:15:00.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:00.679" level="INFO">Volume 68281-rpcwport is deleted</msg>
<status status="PASS" starttime="20200422 00:15:00.679" endtime="20200422 00:15:00.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:00.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:00.679" endtime="20200422 00:15:00.680"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:58.841" endtime="20200422 00:15:00.680"></status>
</kw>
<status status="PASS" starttime="20200422 00:14:12.348" endtime="20200422 00:15:00.680"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200422 00:14:12.346" endtime="20200422 00:15:00.680" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:00.682" endtime="20200422 00:15:00.682"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:00.687" level="INFO">Running command 'ozone sh volume info /68281-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:02.587" level="INFO">${rc} = 255</msg>
<msg timestamp="20200422 00:15:02.587" level="INFO">${output} = VOLUME_NOT_FOUND Volume 68281-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200422 00:15:00.683" endtime="20200422 00:15:02.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:02.589" level="INFO">VOLUME_NOT_FOUND Volume 68281-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200422 00:15:02.588" endtime="20200422 00:15:02.589"></status>
</kw>
<msg timestamp="20200422 00:15:02.589" level="INFO">${result} = VOLUME_NOT_FOUND Volume 68281-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200422 00:15:00.683" endtime="20200422 00:15:02.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:02.589" endtime="20200422 00:15:02.590"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:02.594" level="INFO">Running command 'ozone sh volume create /68281-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:04.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:04.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:15:02.591" endtime="20200422 00:15:04.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:04.413" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:15:04.412" endtime="20200422 00:15:04.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:04.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:04.413" endtime="20200422 00:15:04.414"></status>
</kw>
<msg timestamp="20200422 00:15:04.414" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200422 00:15:02.590" endtime="20200422 00:15:04.414"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:04.414" endtime="20200422 00:15:04.414"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:04.419" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="68281-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:06.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:06.561" level="INFO">${output} = {
  "metadata": {},
  "name": "68281-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:15:04.378Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200422 00:15:04.415" endtime="20200422 00:15:06.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:06.562" level="INFO">{
  "metadata": {},
  "name": "68281-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:15:04.378Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200422 00:15:06.561" endtime="20200422 00:15:06.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:06.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:06.562" endtime="20200422 00:15:06.563"></status>
</kw>
<msg timestamp="20200422 00:15:06.563" level="INFO">${result} = {
  "metadata": {},
  "name": "68281-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:15:04.378Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200422 00:15:04.415" endtime="20200422 00:15:06.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:06.563" endtime="20200422 00:15:06.564"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:06.567" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="68281-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:08.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:08.659" level="INFO">${output} = {
  "metadata": {},
  "name": "68281-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:15:04.378Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200422 00:15:06.564" endtime="20200422 00:15:08.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:08.660" level="INFO">{
  "metadata": {},
  "name": "68281-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:15:04.378Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200422 00:15:08.660" endtime="20200422 00:15:08.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:08.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:08.660" endtime="20200422 00:15:08.661"></status>
</kw>
<msg timestamp="20200422 00:15:08.661" level="INFO">${result} = {
  "metadata": {},
  "name": "68281-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-04-22T00:15:04.378Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200422 00:15:06.564" endtime="20200422 00:15:08.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:08.661" endtime="20200422 00:15:08.662"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:08.666" level="INFO">Running command 'ozone sh volume update /68281-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:10.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:10.755" level="INFO">${output} = {
  "metadata" : { },
  "name" : "68281-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-22T00:15:04.378Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200422 00:15:08.663" endtime="20200422 00:15:10.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:10.756" level="INFO">{
  "metadata" : { },
  "name" : "68281-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-04-22T00:15:04.378Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200422 00:15:10.756" endtime="20200422 00:15:10.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:10.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:10.757" endtime="20200422 00:15:10.757"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:08.662" endtime="20200422 00:15:10.757"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:10.761" level="INFO">Running command 'ozone sh volume info /68281-rpcwoscheme | jq -r '. | select(.name=="68281-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:13.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:13.121" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200422 00:15:10.758" endtime="20200422 00:15:13.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:13.123" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200422 00:15:13.122" endtime="20200422 00:15:13.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:13.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:13.123" endtime="20200422 00:15:13.124"></status>
</kw>
<msg timestamp="20200422 00:15:13.124" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200422 00:15:10.758" endtime="20200422 00:15:13.124"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:13.124" endtime="20200422 00:15:13.125"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:13.129" level="INFO">Running command 'ozone sh bucket create /68281-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:15.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:15.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:15:13.125" endtime="20200422 00:15:15.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:15.109" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:15:15.108" endtime="20200422 00:15:15.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:15.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:15.109" endtime="20200422 00:15:15.110"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:13.125" endtime="20200422 00:15:15.110"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:15.114" level="INFO">Running command 'ozone sh bucket info /68281-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:17.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:17.291" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200422 00:15:15.111" endtime="20200422 00:15:17.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:17.292" level="INFO">DISK</msg>
<status status="PASS" starttime="20200422 00:15:17.291" endtime="20200422 00:15:17.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:17.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:17.293" endtime="20200422 00:15:17.293"></status>
</kw>
<msg timestamp="20200422 00:15:17.294" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200422 00:15:15.110" endtime="20200422 00:15:17.294"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:17.294" endtime="20200422 00:15:17.294"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:17.298" level="INFO">Running command 'ozone sh bucket list /68281-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:19.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:19.366" level="INFO">${output} = 68281-rpcwoscheme</msg>
<status status="PASS" starttime="20200422 00:15:17.295" endtime="20200422 00:15:19.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:19.367" level="INFO">68281-rpcwoscheme</msg>
<status status="PASS" starttime="20200422 00:15:19.366" endtime="20200422 00:15:19.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:19.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:19.367" endtime="20200422 00:15:19.367"></status>
</kw>
<msg timestamp="20200422 00:15:19.368" level="INFO">${result} = 68281-rpcwoscheme</msg>
<status status="PASS" starttime="20200422 00:15:17.294" endtime="20200422 00:15:19.368"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:19.368" endtime="20200422 00:15:19.368"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:19.372" level="INFO">Running command 'ozone sh key put /68281-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:23.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:23.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:15:19.370" endtime="20200422 00:15:23.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:23.107" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:15:23.106" endtime="20200422 00:15:23.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:23.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:23.107" endtime="20200422 00:15:23.108"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:19.369" endtime="20200422 00:15:23.108"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:23.111" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:23.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:23.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:15:23.109" endtime="20200422 00:15:23.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:23.115" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:15:23.114" endtime="20200422 00:15:23.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:23.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:23.115" endtime="20200422 00:15:23.115"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:23.108" endtime="20200422 00:15:23.116"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:23.118" level="INFO">Running command 'ozone sh key get /68281-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:26.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:26.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:15:23.116" endtime="20200422 00:15:26.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:26.793" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:15:26.792" endtime="20200422 00:15:26.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:26.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:26.793" endtime="20200422 00:15:26.794"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:23.116" endtime="20200422 00:15:26.794"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:26.797" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:26.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:26.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:15:26.795" endtime="20200422 00:15:26.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:26.800" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:15:26.800" endtime="20200422 00:15:26.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:26.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:26.800" endtime="20200422 00:15:26.801"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:26.794" endtime="20200422 00:15:26.802"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:26.804" level="INFO">Running command 'ozone sh key get /68281-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:28.715" level="INFO">${rc} = 255</msg>
<msg timestamp="20200422 00:15:28.715" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200422 00:15:26.802" endtime="20200422 00:15:28.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:28.717" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200422 00:15:28.716" endtime="20200422 00:15:28.717"></status>
</kw>
<msg timestamp="20200422 00:15:28.717" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200422 00:15:26.802" endtime="20200422 00:15:28.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:28.717" endtime="20200422 00:15:28.718"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:28.722" level="INFO">Running command 'ozone sh key get --force /68281-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:32.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:32.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:15:28.719" endtime="20200422 00:15:32.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:32.258" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:15:32.257" endtime="20200422 00:15:32.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:32.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:32.258" endtime="20200422 00:15:32.258"></status>
</kw>
<msg timestamp="20200422 00:15:32.259" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200422 00:15:28.718" endtime="20200422 00:15:32.259"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:32.259" endtime="20200422 00:15:32.259"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:32.263" level="INFO">Running command 'ozone sh key info /68281-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:34.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:34.381" level="INFO">${output} = {
  "volumeName": "68281-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-22T00:15:21.233Z",
  "modificationTime": "2020-04-22T00:15:22.745Z",
  "...</msg>
<status status="PASS" starttime="20200422 00:15:32.260" endtime="20200422 00:15:34.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:34.382" level="INFO">{
  "volumeName": "68281-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-22T00:15:21.233Z",
  "modificationTime": "2020-04-22T00:15:22.745Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104039351663460480,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200422 00:15:34.382" endtime="20200422 00:15:34.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:34.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:34.383" endtime="20200422 00:15:34.383"></status>
</kw>
<msg timestamp="20200422 00:15:34.383" level="INFO">${result} = {
  "volumeName": "68281-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-04-22T00:15:21.233Z",
  "modificationTime": "2020-04-22T00:15:22.745Z",
  "...</msg>
<status status="PASS" starttime="20200422 00:15:32.259" endtime="20200422 00:15:34.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:34.384" endtime="20200422 00:15:34.384"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:34.388" level="INFO">Running command 'ozone debug chunkinfo /68281-rpcwoscheme/bb1/key1 | jq -r '.[]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:37.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:37.969" level="INFO">${output} = {
  "chunks": [
    "/data/hdds/hdds/a5612396-b040-4515-95fe-23740bf3de9e/current/containerDir0/1/chunks/104039351663460480_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200422 00:15:34.385" endtime="20200422 00:15:37.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:37.970" level="INFO">{
  "chunks": [
    "/data/hdds/hdds/a5612396-b040-4515-95fe-23740bf3de9e/current/containerDir0/1/chunks/104039351663460480_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0.6",
      "hostName": "ozone_datanode_3.ozone_default"
    },
    {
      "ipAddress": "172.21.0.8",
      "hostName": "ozone_datanode_1.ozone_default"
    },
    {
      "ipAddress": "172.21.0.5",
      "hostName": "ozone_datanode_2.ozone_default"
    }
  ],
  "pipelineID": "8157de3a-4a9b-42bc-bce3-811a5608a097"
}</msg>
<status status="PASS" starttime="20200422 00:15:37.969" endtime="20200422 00:15:37.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:37.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:37.970" endtime="20200422 00:15:37.970"></status>
</kw>
<msg timestamp="20200422 00:15:37.971" level="INFO">${result} = {
  "chunks": [
    "/data/hdds/hdds/a5612396-b040-4515-95fe-23740bf3de9e/current/containerDir0/1/chunks/104039351663460480_chunk_1"
  ],
  "chunkDataNodeDetails": [
    {
      "ipAddress": "172.21.0...</msg>
<status status="PASS" starttime="20200422 00:15:34.384" endtime="20200422 00:15:37.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>chunks</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:37.971" endtime="20200422 00:15:37.971"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:37.975" level="INFO">Running command 'ozone sh key list /68281-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:40.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:40.240" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200422 00:15:37.972" endtime="20200422 00:15:40.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:40.241" level="INFO">key1</msg>
<status status="PASS" starttime="20200422 00:15:40.240" endtime="20200422 00:15:40.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:40.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:40.241" endtime="20200422 00:15:40.242"></status>
</kw>
<msg timestamp="20200422 00:15:40.244" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200422 00:15:37.971" endtime="20200422 00:15:40.244"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:40.244" endtime="20200422 00:15:40.245"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:40.248" level="INFO">Running command 'ozone sh key rename /68281-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:42.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:42.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:15:40.246" endtime="20200422 00:15:42.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:42.253" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:15:42.252" endtime="20200422 00:15:42.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:42.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:42.253" endtime="20200422 00:15:42.254"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:40.245" endtime="20200422 00:15:42.254"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:42.257" level="INFO">Running command 'ozone sh key list /68281-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:44.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:44.401" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200422 00:15:42.255" endtime="20200422 00:15:44.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:44.403" level="INFO">key2</msg>
<status status="PASS" starttime="20200422 00:15:44.402" endtime="20200422 00:15:44.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:44.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:44.403" endtime="20200422 00:15:44.403"></status>
</kw>
<msg timestamp="20200422 00:15:44.404" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200422 00:15:42.254" endtime="20200422 00:15:44.404"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200422 00:15:44.404" endtime="20200422 00:15:44.404"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:44.409" level="INFO">Running command 'ozone sh key delete /68281-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:46.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:46.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:15:44.405" endtime="20200422 00:15:46.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:46.252" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:15:46.251" endtime="20200422 00:15:46.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:46.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:46.252" endtime="20200422 00:15:46.253"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:44.405" endtime="20200422 00:15:46.253"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:19.369" endtime="20200422 00:15:46.253"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:19.369" endtime="20200422 00:15:46.253"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:46.257" level="INFO">Running command 'ozone sh bucket delete /68281-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:48.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:48.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200422 00:15:46.254" endtime="20200422 00:15:48.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:48.202" level="INFO"></msg>
<status status="PASS" starttime="20200422 00:15:48.201" endtime="20200422 00:15:48.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:48.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:48.202" endtime="20200422 00:15:48.203"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:46.253" endtime="20200422 00:15:48.203"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:15:48.206" level="INFO">Running command 'ozone sh volume delete /68281-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:15:50.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:15:50.087" level="INFO">${output} = Volume 68281-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200422 00:15:48.204" endtime="20200422 00:15:50.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:15:50.089" level="INFO">Volume 68281-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200422 00:15:50.088" endtime="20200422 00:15:50.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:15:50.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:15:50.089" endtime="20200422 00:15:50.090"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:48.203" endtime="20200422 00:15:50.090"></status>
</kw>
<status status="PASS" starttime="20200422 00:15:00.682" endtime="20200422 00:15:50.090"></status>
</kw>
<timeout value="3 minutes"></timeout>
<status status="PASS" starttime="20200422 00:15:00.681" endtime="20200422 00:15:50.091" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200422 00:12:30.803" endtime="20200422 00:15:50.092"></status>
</suite>
<status status="PASS" starttime="20200422 00:11:30.478" endtime="20200422 00:15:50.097"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
