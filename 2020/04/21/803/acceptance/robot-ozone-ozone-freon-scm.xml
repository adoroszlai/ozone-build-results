<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200422 00:21:27.395" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:21:27.457" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:21:34.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:21:34.811" level="INFO">${output} = 2020-04-22 00:21:28,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:28,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200422 00:21:27.452" endtime="20200422 00:21:34.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:21:34.813" level="INFO">2020-04-22 00:21:28,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:28,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-22 00:21:28,552 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-22 00:21:29,454 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-04-22 00:21:29,455 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-04-22 00:21:29,455 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-04-22 00:21:29,455 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-04-22 00:21:29,455 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-04-22 00:21:29,455 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-04-22 00:21:29,455 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-04-22 00:21:29,457 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-04-22 00:21:29,467 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-22 00:21:29,501 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-09452, with hadoop as owner.
2020-04-22 00:21:29,535 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09452/bucket-0-72118, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:21:29,991 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-22 00:21:30,480 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,056
Average Time spent in bucket creation: 00:00:00,025
Average Time spent in key creation: 00:00:00,043
Average Time spent in key write: 00:00:00,587
Total bytes written: 10240
Total Execution time: 00:00:05,641
***************************************************</msg>
<status status="PASS" starttime="20200422 00:21:34.812" endtime="20200422 00:21:34.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:21:34.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:21:34.814" endtime="20200422 00:21:34.814"></status>
</kw>
<msg timestamp="20200422 00:21:34.814" level="INFO">${result} = 2020-04-22 00:21:28,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:28,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200422 00:21:27.452" endtime="20200422 00:21:34.814"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200422 00:21:34.815" endtime="20200422 00:21:34.816"></status>
</kw>
<status status="PASS" starttime="20200422 00:21:34.815" endtime="20200422 00:21:34.816"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200422 00:21:27.451" endtime="20200422 00:21:34.816" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:21:34.822" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:21:39.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:21:39.587" level="INFO">${output} = 2020-04-22 00:21:35,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:35,914 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200422 00:21:34.819" endtime="20200422 00:21:39.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:21:39.588" level="INFO">2020-04-22 00:21:35,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:35,914 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-22 00:21:35,914 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-22 00:21:36,196 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hi3re9hong
2020-04-22 00:21:36,213 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-22 00:21:36,846 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-04-22 00:21:36,866 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-04-22 00:21:37,214 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-22 00:21:37,378 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-04-22 00:21:38,222 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-22 00:21:39,222 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-22 00:21:39,262 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=1361.282267, max=1361.282267, mean=1361.282267, stddev=0.0, median=1361.282267, p75=1361.282267, p95=1361.282267, p98=1361.282267, p99=1361.282267, p999=1361.282267, mean_rate=0.4200540020921025, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-22 00:21:39,262 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-04-22 00:21:39,263 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-22 00:21:39,263 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200422 00:21:39.587" endtime="20200422 00:21:39.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:21:39.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:21:39.588" endtime="20200422 00:21:39.588"></status>
</kw>
<msg timestamp="20200422 00:21:39.589" level="INFO">${result} = 2020-04-22 00:21:35,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:35,914 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200422 00:21:34.818" endtime="20200422 00:21:39.589"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200422 00:21:39.589" endtime="20200422 00:21:39.590"></status>
</kw>
<status status="PASS" starttime="20200422 00:21:39.589" endtime="20200422 00:21:39.590"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200422 00:21:34.817" endtime="20200422 00:21:39.590" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:21:39.598" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:21:42.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:21:42.685" level="INFO">${output} = 2020-04-22 00:21:40,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:40,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200422 00:21:39.592" endtime="20200422 00:21:42.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:21:42.686" level="INFO">2020-04-22 00:21:40,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:40,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-22 00:21:40,670 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-22 00:21:40,986 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6eds68v08z
2020-04-22 00:21:40,997 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-22 00:21:42,003 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-22 00:21:42,660 [Thread-5] INFO metrics: type=TIMER, name=key-create, count=1, min=26.160196, max=26.160196, mean=26.160196, stddev=0.0, median=26.160196, p75=26.160196, p95=26.160196, p98=26.160196, p99=26.160196, p999=26.160196, mean_rate=0.9777571703069212, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-22 00:21:42,661 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-22 00:21:42,661 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-22 00:21:42,661 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200422 00:21:42.685" endtime="20200422 00:21:42.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:21:42.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:21:42.687" endtime="20200422 00:21:42.687"></status>
</kw>
<msg timestamp="20200422 00:21:42.687" level="INFO">${result} = 2020-04-22 00:21:40,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:40,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200422 00:21:39.591" endtime="20200422 00:21:42.687"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200422 00:21:42.688" endtime="20200422 00:21:42.689"></status>
</kw>
<status status="PASS" starttime="20200422 00:21:42.687" endtime="20200422 00:21:42.689"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200422 00:21:39.590" endtime="20200422 00:21:42.689" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200422 00:21:42.694" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200422 00:21:45.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20200422 00:21:45.693" level="INFO">${output} = 2020-04-22 00:21:43,662 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:43,843 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200422 00:21:42.691" endtime="20200422 00:21:45.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200422 00:21:45.694" level="INFO">2020-04-22 00:21:43,662 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:43,843 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-04-22 00:21:43,843 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-04-22 00:21:44,113 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bqcorbj8xi
2020-04-22 00:21:44,128 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-04-22 00:21:45,134 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-04-22 00:21:45,684 [Thread-5] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.426531, max=8.426531, mean=8.426531, stddev=0.0, median=8.426531, p75=8.426531, p95=8.426531, p98=8.426531, p99=8.426531, p999=8.426531, mean_rate=0.9890964157467304, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-04-22 00:21:45,685 [Thread-5] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-04-22 00:21:45,685 [Thread-5] INFO freon.BaseFreonGenerator: Failures: 0
2020-04-22 00:21:45,685 [Thread-5] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200422 00:21:45.693" endtime="20200422 00:21:45.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200422 00:21:45.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200422 00:21:45.694" endtime="20200422 00:21:45.695"></status>
</kw>
<msg timestamp="20200422 00:21:45.695" level="INFO">${result} = 2020-04-22 00:21:43,662 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-04-22 00:21:43,843 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200422 00:21:42.690" endtime="20200422 00:21:45.695"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200422 00:21:45.696" endtime="20200422 00:21:45.697"></status>
</kw>
<status status="PASS" starttime="20200422 00:21:45.696" endtime="20200422 00:21:45.697"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200422 00:21:42.690" endtime="20200422 00:21:45.697" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200422 00:21:27.425" endtime="20200422 00:21:45.698"></status>
</suite>
<status status="PASS" starttime="20200422 00:21:27.396" endtime="20200422 00:21:45.703"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
