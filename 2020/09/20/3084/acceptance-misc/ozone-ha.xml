<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200920 12:51:27.206" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 12:49:52.934" level="INFO">${random} = 87228</msg>
<status status="PASS" endtime="20200920 12:49:52.934" starttime="20200920 12:49:52.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200920 12:49:52.935" level="INFO">${prefix} = 87228</msg>
<status status="PASS" endtime="20200920 12:49:52.935" starttime="20200920 12:49:52.934"></status>
</kw>
<status status="PASS" endtime="20200920 12:49:52.935" starttime="20200920 12:49:52.933"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:49:52.949" level="INFO">Running command 'ozone sh volume info /87228-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:01.228" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 12:50:01.229" level="INFO">${output} = VOLUME_NOT_FOUND Volume 87228-rpcbasic is not found</msg>
<status status="PASS" endtime="20200920 12:50:01.229" starttime="20200920 12:49:52.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:01.230" level="INFO">VOLUME_NOT_FOUND Volume 87228-rpcbasic is not found</msg>
<status status="PASS" endtime="20200920 12:50:01.230" starttime="20200920 12:50:01.229"></status>
</kw>
<msg timestamp="20200920 12:50:01.230" level="INFO">${result} = VOLUME_NOT_FOUND Volume 87228-rpcbasic is not found</msg>
<status status="PASS" endtime="20200920 12:50:01.230" starttime="20200920 12:49:52.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200920 12:50:01.231" starttime="20200920 12:50:01.231"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:01.237" level="INFO">Running command 'ozone sh volume create /87228-rpcbasic --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:03.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:03.659" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:03.659" starttime="20200920 12:50:01.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:03.660" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:03.660" starttime="20200920 12:50:03.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:03.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:03.661" starttime="20200920 12:50:03.660"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:03.661" starttime="20200920 12:50:01.232"></status>
</kw>
<msg timestamp="20200920 12:50:03.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:03.661" starttime="20200920 12:50:01.232"></status>
</kw>
<msg timestamp="20200920 12:50:03.661" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200920 12:50:03.662" starttime="20200920 12:50:01.231"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200920 12:50:03.662" starttime="20200920 12:50:03.662"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:03.669" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="87228-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:06.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:06.542" level="INFO">${output} = {
  "metadata": {},
  "name": "87228-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-20T12:50:03.386Z",
  "mo...</msg>
<status status="PASS" endtime="20200920 12:50:06.542" starttime="20200920 12:50:03.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:06.544" level="INFO">{
  "metadata": {},
  "name": "87228-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-20T12:50:03.386Z",
  "modificationTime": "2020-09-20T12:50:06.131191Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200920 12:50:06.544" starttime="20200920 12:50:06.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:06.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:06.545" starttime="20200920 12:50:06.544"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:06.545" starttime="20200920 12:50:03.663"></status>
</kw>
<msg timestamp="20200920 12:50:06.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:06.545" starttime="20200920 12:50:03.663"></status>
</kw>
<msg timestamp="20200920 12:50:06.545" level="INFO">${result} = {
  "metadata": {},
  "name": "87228-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-20T12:50:03.386Z",
  "mo...</msg>
<status status="PASS" endtime="20200920 12:50:06.546" starttime="20200920 12:50:03.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200920 12:50:06.546" starttime="20200920 12:50:06.546"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:06.550" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="87228-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:09.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:09.086" level="INFO">${output} = {
  "metadata": {},
  "name": "87228-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-20T12:50:03.386Z",
  "mo...</msg>
<status status="PASS" endtime="20200920 12:50:09.087" starttime="20200920 12:50:06.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:09.088" level="INFO">{
  "metadata": {},
  "name": "87228-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-20T12:50:03.386Z",
  "modificationTime": "2020-09-20T12:50:08.745398Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200920 12:50:09.088" starttime="20200920 12:50:09.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:09.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:09.089" starttime="20200920 12:50:09.088"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:09.090" starttime="20200920 12:50:06.547"></status>
</kw>
<msg timestamp="20200920 12:50:09.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:09.090" starttime="20200920 12:50:06.547"></status>
</kw>
<msg timestamp="20200920 12:50:09.090" level="INFO">${result} = {
  "metadata": {},
  "name": "87228-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-20T12:50:03.386Z",
  "mo...</msg>
<status status="PASS" endtime="20200920 12:50:09.090" starttime="20200920 12:50:06.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200920 12:50:09.091" starttime="20200920 12:50:09.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:09.095" level="INFO">Running command 'ozone sh volume update /87228-rpcbasic --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:11.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:11.469" level="INFO">${output} = {
  "metadata" : { },
  "name" : "87228-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-20T12:50:03.386Z"...</msg>
<status status="PASS" endtime="20200920 12:50:11.469" starttime="20200920 12:50:09.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:11.470" level="INFO">{
  "metadata" : { },
  "name" : "87228-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-20T12:50:03.386Z",
  "modificationTime" : "2020-09-20T12:50:11.198757Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "usedBytes" : 0
}</msg>
<status status="PASS" endtime="20200920 12:50:11.470" starttime="20200920 12:50:11.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:11.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:11.471" starttime="20200920 12:50:11.470"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:11.471" starttime="20200920 12:50:09.092"></status>
</kw>
<msg timestamp="20200920 12:50:11.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:11.471" starttime="20200920 12:50:09.092"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:11.472" starttime="20200920 12:50:09.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:11.477" level="INFO">Running command 'ozone sh volume info /87228-rpcbasic | jq -r '. | select(.name=="87228-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:13.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:13.872" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200920 12:50:13.872" starttime="20200920 12:50:11.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:13.873" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200920 12:50:13.873" starttime="20200920 12:50:13.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:13.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:13.874" starttime="20200920 12:50:13.873"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:13.874" starttime="20200920 12:50:11.473"></status>
</kw>
<msg timestamp="20200920 12:50:13.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:13.874" starttime="20200920 12:50:11.473"></status>
</kw>
<msg timestamp="20200920 12:50:13.874" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200920 12:50:13.874" starttime="20200920 12:50:11.472"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200920 12:50:13.875" starttime="20200920 12:50:13.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:13.880" level="INFO">Running command 'ozone sh bucket create /87228-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:16.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:16.306" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:16.306" starttime="20200920 12:50:13.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:16.308" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:16.308" starttime="20200920 12:50:16.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:16.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:16.309" starttime="20200920 12:50:16.308"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:16.309" starttime="20200920 12:50:13.876"></status>
</kw>
<msg timestamp="20200920 12:50:16.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:16.309" starttime="20200920 12:50:13.876"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:16.309" starttime="20200920 12:50:13.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:16.315" level="INFO">Running command 'ozone sh bucket info /87228-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:18.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:18.942" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200920 12:50:18.942" starttime="20200920 12:50:16.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:18.943" level="INFO">DISK</msg>
<status status="PASS" endtime="20200920 12:50:18.944" starttime="20200920 12:50:18.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:18.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:18.944" starttime="20200920 12:50:18.944"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:18.945" starttime="20200920 12:50:16.311"></status>
</kw>
<msg timestamp="20200920 12:50:18.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:18.945" starttime="20200920 12:50:16.310"></status>
</kw>
<msg timestamp="20200920 12:50:18.945" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200920 12:50:18.945" starttime="20200920 12:50:16.310"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200920 12:50:18.946" starttime="20200920 12:50:18.945"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:18.950" level="INFO">Running command 'ozone sh bucket list /87228-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:21.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:21.201" level="INFO">${output} = 87228-rpcbasic</msg>
<status status="PASS" endtime="20200920 12:50:21.201" starttime="20200920 12:50:18.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:21.202" level="INFO">87228-rpcbasic</msg>
<status status="PASS" endtime="20200920 12:50:21.202" starttime="20200920 12:50:21.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:21.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:21.203" starttime="20200920 12:50:21.202"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:21.203" starttime="20200920 12:50:18.947"></status>
</kw>
<msg timestamp="20200920 12:50:21.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:21.203" starttime="20200920 12:50:18.947"></status>
</kw>
<msg timestamp="20200920 12:50:21.204" level="INFO">${result} = 87228-rpcbasic</msg>
<status status="PASS" endtime="20200920 12:50:21.204" starttime="20200920 12:50:18.946"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200920 12:50:21.204" starttime="20200920 12:50:21.204"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:21.211" level="INFO">Running command 'ozone sh key put /87228-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:27.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:27.456" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:27.456" starttime="20200920 12:50:21.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:27.457" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:27.457" starttime="20200920 12:50:27.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:27.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:27.458" starttime="20200920 12:50:27.458"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:27.458" starttime="20200920 12:50:21.206"></status>
</kw>
<msg timestamp="20200920 12:50:27.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:27.459" starttime="20200920 12:50:21.206"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:27.459" starttime="20200920 12:50:21.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:27.462" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:27.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:27.467" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:27.467" starttime="20200920 12:50:27.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:27.468" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:27.468" starttime="20200920 12:50:27.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:27.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:27.469" starttime="20200920 12:50:27.468"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:27.469" starttime="20200920 12:50:27.460"></status>
</kw>
<msg timestamp="20200920 12:50:27.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:27.469" starttime="20200920 12:50:27.459"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:27.469" starttime="20200920 12:50:27.459"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:27.474" level="INFO">Running command 'ozone sh key get /87228-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:31.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:31.549" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:31.550" starttime="20200920 12:50:27.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:31.551" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:31.551" starttime="20200920 12:50:31.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:31.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:31.552" starttime="20200920 12:50:31.551"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:31.552" starttime="20200920 12:50:27.471"></status>
</kw>
<msg timestamp="20200920 12:50:31.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:31.552" starttime="20200920 12:50:27.470"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:31.552" starttime="20200920 12:50:27.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:31.556" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:31.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:31.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:31.560" starttime="20200920 12:50:31.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:31.561" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:31.561" starttime="20200920 12:50:31.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:31.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:31.562" starttime="20200920 12:50:31.562"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:31.562" starttime="20200920 12:50:31.553"></status>
</kw>
<msg timestamp="20200920 12:50:31.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:31.563" starttime="20200920 12:50:31.553"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:31.563" starttime="20200920 12:50:31.553"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:31.568" level="INFO">Running command 'ozone sh key put -t RATIS /87228-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:35.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:35.942" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:35.942" starttime="20200920 12:50:31.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:35.943" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:35.943" starttime="20200920 12:50:35.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:35.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:35.944" starttime="20200920 12:50:35.944"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:35.945" starttime="20200920 12:50:31.564"></status>
</kw>
<msg timestamp="20200920 12:50:35.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:35.945" starttime="20200920 12:50:31.564"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:35.945" starttime="20200920 12:50:31.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:35.949" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:35.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:35.952" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:35.952" starttime="20200920 12:50:35.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:35.953" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:35.953" starttime="20200920 12:50:35.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:35.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:35.953" starttime="20200920 12:50:35.953"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:35.954" starttime="20200920 12:50:35.946"></status>
</kw>
<msg timestamp="20200920 12:50:35.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:35.954" starttime="20200920 12:50:35.946"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:35.954" starttime="20200920 12:50:35.945"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:35.959" level="INFO">Running command 'ozone sh key get /87228-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:39.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:39.809" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:39.809" starttime="20200920 12:50:35.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:39.810" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:39.810" starttime="20200920 12:50:39.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:39.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:39.811" starttime="20200920 12:50:39.810"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:39.811" starttime="20200920 12:50:35.955"></status>
</kw>
<msg timestamp="20200920 12:50:39.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:39.812" starttime="20200920 12:50:35.955"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:39.812" starttime="20200920 12:50:35.954"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:39.816" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:39.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:39.818" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:39.818" starttime="20200920 12:50:39.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:39.819" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:39.819" starttime="20200920 12:50:39.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:39.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:39.820" starttime="20200920 12:50:39.820"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:39.820" starttime="20200920 12:50:39.813"></status>
</kw>
<msg timestamp="20200920 12:50:39.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:39.820" starttime="20200920 12:50:39.812"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:39.821" starttime="20200920 12:50:39.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:39.825" level="INFO">Running command 'ozone sh key info /87228-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:42.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:42.235" level="INFO">${output} = {
  "volumeName": "87228-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-20T12:50:33.743Z",
  "modificationTime": "2020-09-20T12:50:35.554Z",
...</msg>
<status status="PASS" endtime="20200920 12:50:42.235" starttime="20200920 12:50:39.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:42.236" level="INFO">{
  "volumeName": "87228-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-20T12:50:33.743Z",
  "modificationTime": "2020-09-20T12:50:35.554Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104897330134515710,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200920 12:50:42.236" starttime="20200920 12:50:42.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:42.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:42.237" starttime="20200920 12:50:42.237"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:42.237" starttime="20200920 12:50:39.822"></status>
</kw>
<msg timestamp="20200920 12:50:42.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:42.238" starttime="20200920 12:50:39.822"></status>
</kw>
<msg timestamp="20200920 12:50:42.238" level="INFO">${result} = {
  "volumeName": "87228-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-20T12:50:33.743Z",
  "modificationTime": "2020-09-20T12:50:35.554Z",
...</msg>
<status status="PASS" endtime="20200920 12:50:42.238" starttime="20200920 12:50:39.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200920 12:50:42.239" starttime="20200920 12:50:42.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:42.242" level="INFO">Running command 'ozone sh key delete /87228-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:44.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:44.465" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:44.465" starttime="20200920 12:50:42.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:44.467" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:44.467" starttime="20200920 12:50:44.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:44.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:44.468" starttime="20200920 12:50:44.468"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:44.468" starttime="20200920 12:50:42.240"></status>
</kw>
<msg timestamp="20200920 12:50:44.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:44.469" starttime="20200920 12:50:42.239"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:44.469" starttime="20200920 12:50:42.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:44.474" level="INFO">Running command 'ozone sh key cp /87228-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:49.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:49.254" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:49.254" starttime="20200920 12:50:44.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:49.256" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:49.256" starttime="20200920 12:50:49.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:49.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:49.256" starttime="20200920 12:50:49.256"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:49.257" starttime="20200920 12:50:44.470"></status>
</kw>
<msg timestamp="20200920 12:50:49.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:49.257" starttime="20200920 12:50:44.470"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:49.257" starttime="20200920 12:50:44.469"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:49.262" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:49.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:49.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:49.265" starttime="20200920 12:50:49.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:49.266" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:49.266" starttime="20200920 12:50:49.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:49.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:49.267" starttime="20200920 12:50:49.267"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:49.267" starttime="20200920 12:50:49.259"></status>
</kw>
<msg timestamp="20200920 12:50:49.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:49.268" starttime="20200920 12:50:49.258"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:49.268" starttime="20200920 12:50:49.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:49.273" level="INFO">Running command 'ozone sh key get /87228-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:53.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:53.392" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:53.392" starttime="20200920 12:50:49.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:53.394" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:53.394" starttime="20200920 12:50:53.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:53.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:53.395" starttime="20200920 12:50:53.394"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:53.395" starttime="20200920 12:50:49.269"></status>
</kw>
<msg timestamp="20200920 12:50:53.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:53.395" starttime="20200920 12:50:49.269"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:53.395" starttime="20200920 12:50:49.268"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:53.399" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:53.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:53.402" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:53.402" starttime="20200920 12:50:53.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:53.403" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:53.403" starttime="20200920 12:50:53.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:53.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:53.404" starttime="20200920 12:50:53.403"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:53.404" starttime="20200920 12:50:53.397"></status>
</kw>
<msg timestamp="20200920 12:50:53.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:53.404" starttime="20200920 12:50:53.396"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:53.405" starttime="20200920 12:50:53.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:53.409" level="INFO">Running command 'ozone sh key delete /87228-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:55.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:50:55.663" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:50:55.663" starttime="20200920 12:50:53.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:55.664" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:50:55.664" starttime="20200920 12:50:55.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:50:55.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:50:55.665" starttime="20200920 12:50:55.665"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:55.666" starttime="20200920 12:50:53.406"></status>
</kw>
<msg timestamp="20200920 12:50:55.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:50:55.666" starttime="20200920 12:50:53.406"></status>
</kw>
<status status="PASS" endtime="20200920 12:50:55.666" starttime="20200920 12:50:53.405"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:55.670" level="INFO">Running command 'ozone sh key get /87228-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:50:57.937" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 12:50:57.937" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200920 12:50:57.937" starttime="20200920 12:50:55.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:50:57.939" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200920 12:50:57.939" starttime="20200920 12:50:57.938"></status>
</kw>
<msg timestamp="20200920 12:50:57.939" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200920 12:50:57.939" starttime="20200920 12:50:55.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200920 12:50:57.940" starttime="20200920 12:50:57.939"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:50:57.945" level="INFO">Running command 'ozone sh key get --force /87228-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:51:02.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:51:02.319" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:51:02.319" starttime="20200920 12:50:57.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:51:02.320" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:51:02.320" starttime="20200920 12:51:02.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:51:02.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:51:02.321" starttime="20200920 12:51:02.321"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:02.321" starttime="20200920 12:50:57.941"></status>
</kw>
<msg timestamp="20200920 12:51:02.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:51:02.322" starttime="20200920 12:50:57.940"></status>
</kw>
<msg timestamp="20200920 12:51:02.322" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200920 12:51:02.322" starttime="20200920 12:50:57.940"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200920 12:51:02.323" starttime="20200920 12:51:02.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:51:02.328" level="INFO">Running command 'ozone sh key info /87228-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:51:04.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:51:04.848" level="INFO">${output} = {
  "volumeName": "87228-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-20T12:50:23.552Z",
  "modificationTime": "2020-09-20T12:50:26.998Z",
  "rep...</msg>
<status status="PASS" endtime="20200920 12:51:04.848" starttime="20200920 12:51:02.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:51:04.849" level="INFO">{
  "volumeName": "87228-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-20T12:50:23.552Z",
  "modificationTime": "2020-09-20T12:50:26.998Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104897329464934400,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200920 12:51:04.849" starttime="20200920 12:51:04.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:51:04.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:51:04.850" starttime="20200920 12:51:04.849"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:04.851" starttime="20200920 12:51:02.325"></status>
</kw>
<msg timestamp="20200920 12:51:04.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:51:04.851" starttime="20200920 12:51:02.324"></status>
</kw>
<msg timestamp="20200920 12:51:04.851" level="INFO">${result} = {
  "volumeName": "87228-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-20T12:50:23.552Z",
  "modificationTime": "2020-09-20T12:50:26.998Z",
  "rep...</msg>
<status status="PASS" endtime="20200920 12:51:04.851" starttime="20200920 12:51:02.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200920 12:51:04.852" starttime="20200920 12:51:04.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:51:04.858" level="INFO">Running command 'ozone sh key list /87228-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:51:07.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:51:07.500" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200920 12:51:07.500" starttime="20200920 12:51:04.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:51:07.501" level="INFO">key1</msg>
<status status="PASS" endtime="20200920 12:51:07.501" starttime="20200920 12:51:07.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:51:07.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:51:07.502" starttime="20200920 12:51:07.501"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:07.502" starttime="20200920 12:51:04.853"></status>
</kw>
<msg timestamp="20200920 12:51:07.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:51:07.502" starttime="20200920 12:51:04.853"></status>
</kw>
<msg timestamp="20200920 12:51:07.503" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200920 12:51:07.503" starttime="20200920 12:51:04.852"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200920 12:51:07.503" starttime="20200920 12:51:07.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:51:07.507" level="INFO">Running command 'ozone sh key rename /87228-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:51:09.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:51:09.786" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:51:09.786" starttime="20200920 12:51:07.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:51:09.787" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:51:09.788" starttime="20200920 12:51:09.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:51:09.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:51:09.788" starttime="20200920 12:51:09.788"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:09.789" starttime="20200920 12:51:07.504"></status>
</kw>
<msg timestamp="20200920 12:51:09.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:51:09.789" starttime="20200920 12:51:07.504"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:09.789" starttime="20200920 12:51:07.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:51:09.793" level="INFO">Running command 'ozone sh key list /87228-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:51:12.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:51:12.291" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200920 12:51:12.291" starttime="20200920 12:51:09.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:51:12.292" level="INFO">key2</msg>
<status status="PASS" endtime="20200920 12:51:12.292" starttime="20200920 12:51:12.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:51:12.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:51:12.294" starttime="20200920 12:51:12.293"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:12.294" starttime="20200920 12:51:09.790"></status>
</kw>
<msg timestamp="20200920 12:51:12.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:51:12.294" starttime="20200920 12:51:09.790"></status>
</kw>
<msg timestamp="20200920 12:51:12.294" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200920 12:51:12.294" starttime="20200920 12:51:09.789"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200920 12:51:12.295" starttime="20200920 12:51:12.295"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:51:12.301" level="INFO">Running command 'ozone sh key delete /87228-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:51:14.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:51:14.808" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:51:14.808" starttime="20200920 12:51:12.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:51:14.809" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:51:14.810" starttime="20200920 12:51:14.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:51:14.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:51:14.810" starttime="20200920 12:51:14.810"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:14.811" starttime="20200920 12:51:12.296"></status>
</kw>
<msg timestamp="20200920 12:51:14.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:51:14.811" starttime="20200920 12:51:12.296"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:14.811" starttime="20200920 12:51:12.295"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:14.811" starttime="20200920 12:50:21.205"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:14.811" starttime="20200920 12:50:21.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:51:14.817" level="INFO">Running command 'ozone sh bucket delete /87228-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:51:17.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:51:17.042" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:51:17.042" starttime="20200920 12:51:14.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:51:17.043" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:51:17.043" starttime="20200920 12:51:17.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:51:17.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:51:17.044" starttime="20200920 12:51:17.043"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:17.044" starttime="20200920 12:51:14.813"></status>
</kw>
<msg timestamp="20200920 12:51:17.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:51:17.044" starttime="20200920 12:51:14.813"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:17.045" starttime="20200920 12:51:14.811"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:51:17.051" level="INFO">Running command 'ozone sh volume delete /87228-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:51:19.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:51:19.517" level="INFO">${output} = Volume 87228-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200920 12:51:19.517" starttime="20200920 12:51:17.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:51:19.518" level="INFO">Volume 87228-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200920 12:51:19.518" starttime="20200920 12:51:19.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:51:19.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:51:19.519" starttime="20200920 12:51:19.519"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:19.519" starttime="20200920 12:51:17.046"></status>
</kw>
<msg timestamp="20200920 12:51:19.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:51:19.520" starttime="20200920 12:51:17.046"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:19.520" starttime="20200920 12:51:17.045"></status>
</kw>
<status status="PASS" endtime="20200920 12:51:19.520" starttime="20200920 12:49:52.936"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 12:51:19.520" critical="yes" starttime="20200920 12:49:52.935"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200920 12:51:19.522" starttime="20200920 12:49:52.799"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
