<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200920 13:07:43.423" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:19.024" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:53:21.293" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 12:53:21.293" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200920 12:53:21.293" starttime="20200920 12:53:19.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:53:21.295" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200920 12:53:21.295" starttime="20200920 12:53:21.294"></status>
</kw>
<msg timestamp="20200920 12:53:21.295" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200920 12:53:21.295" starttime="20200920 12:53:19.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:21.303" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:53:23.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:53:23.388" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:53:23.388" starttime="20200920 12:53:21.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:53:23.390" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:53:23.390" starttime="20200920 12:53:23.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:53:23.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:53:23.390" starttime="20200920 12:53:23.390"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:23.391" starttime="20200920 12:53:21.298"></status>
</kw>
<msg timestamp="20200920 12:53:23.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:53:23.391" starttime="20200920 12:53:21.298"></status>
</kw>
<msg timestamp="20200920 12:53:23.391" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200920 12:53:23.391" starttime="20200920 12:53:21.297"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200920 12:53:23.392" starttime="20200920 12:53:23.391"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:23.392" starttime="20200920 12:53:21.296"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:23.392" starttime="20200920 12:53:21.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:23.397" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:53:25.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:53:25.437" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:53:25.437" starttime="20200920 12:53:23.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:53:25.439" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:53:25.439" starttime="20200920 12:53:25.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:53:25.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:53:25.439" starttime="20200920 12:53:25.439"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:25.440" starttime="20200920 12:53:23.394"></status>
</kw>
<msg timestamp="20200920 12:53:25.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:53:25.440" starttime="20200920 12:53:23.393"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:25.440" starttime="20200920 12:53:23.393"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:25.440" starttime="20200920 12:53:23.392"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:25.440" starttime="20200920 12:53:23.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200920 12:53:25.441" starttime="20200920 12:53:25.440"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:25.446" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:53:27.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:53:27.804" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T12:53:25.411Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200920 12:53:27.804" starttime="20200920 12:53:25.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:53:27.806" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T12:53:25.411Z",
  "modificationTime" : "2020-09-20T12:53:25.411Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200920 12:53:27.806" starttime="20200920 12:53:27.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:53:27.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:53:27.806" starttime="20200920 12:53:27.806"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:27.807" starttime="20200920 12:53:25.442"></status>
</kw>
<msg timestamp="20200920 12:53:27.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:53:27.807" starttime="20200920 12:53:25.442"></status>
</kw>
<msg timestamp="20200920 12:53:27.807" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T12:53:25.411Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200920 12:53:27.807" starttime="20200920 12:53:25.441"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200920 12:53:27.808" starttime="20200920 12:53:27.807"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:53:27.812" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:53:27.812" starttime="20200920 12:53:27.811"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:53:27.812" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:53:27.812" starttime="20200920 12:53:27.812"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:27.813" starttime="20200920 12:53:27.811"></status>
</kw>
<msg timestamp="20200920 12:53:27.813" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:53:27.813" starttime="20200920 12:53:27.810"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:27.813" starttime="20200920 12:53:27.810"></status>
</kw>
<msg timestamp="20200920 12:53:27.813" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200920 12:53:27.813" starttime="20200920 12:53:27.809"></status>
</kw>
<msg timestamp="20200920 12:53:27.813" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200920 12:53:27.813" starttime="20200920 12:53:27.808"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:27.817" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:53:30.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:53:30.251" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:53:30.251" starttime="20200920 12:53:27.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:53:30.253" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:53:30.253" starttime="20200920 12:53:30.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:53:30.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:53:30.253" starttime="20200920 12:53:30.253"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:30.254" starttime="20200920 12:53:27.814"></status>
</kw>
<msg timestamp="20200920 12:53:30.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:53:30.254" starttime="20200920 12:53:27.814"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:30.254" starttime="20200920 12:53:27.814"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:30.260" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:53:36.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:53:36.085" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:53:36.085" starttime="20200920 12:53:30.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:53:36.086" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:53:36.086" starttime="20200920 12:53:36.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:53:36.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:53:36.088" starttime="20200920 12:53:36.086"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:36.088" starttime="20200920 12:53:30.256"></status>
</kw>
<msg timestamp="20200920 12:53:36.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:53:36.089" starttime="20200920 12:53:30.255"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:36.089" starttime="20200920 12:53:30.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:36.094" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:53:40.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:53:40.619" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:53:40.619" starttime="20200920 12:53:36.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:53:40.620" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:53:40.621" starttime="20200920 12:53:40.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:53:40.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:53:40.621" starttime="20200920 12:53:40.621"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:40.621" starttime="20200920 12:53:36.090"></status>
</kw>
<msg timestamp="20200920 12:53:40.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:53:40.622" starttime="20200920 12:53:36.090"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:40.622" starttime="20200920 12:53:36.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:40.626" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:53:44.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:53:44.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:53:44.695" starttime="20200920 12:53:40.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:53:44.696" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:53:44.696" starttime="20200920 12:53:44.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:53:44.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:53:44.697" starttime="20200920 12:53:44.696"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:44.697" starttime="20200920 12:53:40.623"></status>
</kw>
<msg timestamp="20200920 12:53:44.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:53:44.697" starttime="20200920 12:53:40.623"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:44.698" starttime="20200920 12:53:40.622"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 12:53:44.698" critical="yes" starttime="20200920 12:53:19.017"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:53:44.703" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:53:44.703" starttime="20200920 12:53:44.702"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:53:44.703" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:53:44.703" starttime="20200920 12:53:44.703"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:44.704" starttime="20200920 12:53:44.702"></status>
</kw>
<msg timestamp="20200920 12:53:44.704" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:53:44.704" starttime="20200920 12:53:44.701"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:44.704" starttime="20200920 12:53:44.700"></status>
</kw>
<msg timestamp="20200920 12:53:44.704" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200920 12:53:44.704" starttime="20200920 12:53:44.700"></status>
</kw>
<msg timestamp="20200920 12:53:44.704" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200920 12:53:44.704" starttime="20200920 12:53:44.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:44.709" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:53:47.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:53:47.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:53:47.095" starttime="20200920 12:53:44.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:53:47.096" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:53:47.096" starttime="20200920 12:53:47.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:53:47.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:53:47.097" starttime="20200920 12:53:47.096"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:47.097" starttime="20200920 12:53:44.705"></status>
</kw>
<msg timestamp="20200920 12:53:47.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:53:47.097" starttime="20200920 12:53:44.705"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:47.098" starttime="20200920 12:53:44.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:47.103" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:53:49.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:53:49.376" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:53:49.376" starttime="20200920 12:53:47.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:53:49.377" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:53:49.377" starttime="20200920 12:53:49.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:53:49.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:53:49.378" starttime="20200920 12:53:49.378"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:49.378" starttime="20200920 12:53:47.099"></status>
</kw>
<msg timestamp="20200920 12:53:49.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:53:49.379" starttime="20200920 12:53:47.098"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:49.379" starttime="20200920 12:53:47.098"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 12:53:49.379" critical="yes" starttime="20200920 12:53:44.698"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200920 12:53:49.380" starttime="20200920 12:53:18.953"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 12:55:36.402" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 12:55:36.402" starttime="20200920 12:55:36.402"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:55:36.403" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 12:55:36.403" starttime="20200920 12:55:36.402"></status>
</kw>
<status status="PASS" endtime="20200920 12:55:36.403" starttime="20200920 12:55:36.401"></status>
</kw>
<msg timestamp="20200920 12:55:36.403" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 12:55:36.403" starttime="20200920 12:55:36.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 12:55:36.404" starttime="20200920 12:55:36.403"></status>
</kw>
<msg timestamp="20200920 12:55:36.404" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 12:55:36.404" starttime="20200920 12:55:36.403"></status>
</kw>
<status status="PASS" endtime="20200920 12:55:36.404" starttime="20200920 12:55:36.400"></status>
</kw>
<msg timestamp="20200920 12:55:36.404" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 12:55:36.404" starttime="20200920 12:55:36.400"></status>
</kw>
<msg timestamp="20200920 12:55:36.404" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 12:55:36.404" starttime="20200920 12:55:36.398"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 12:55:36.405" level="INFO">${random} = 39834</msg>
<status status="PASS" endtime="20200920 12:55:36.405" starttime="20200920 12:55:36.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:55:36.411" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-39834 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:55:40.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:55:40.155" level="INFO">${output} = 2020-09-20 12:55:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:55:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-20 ...</msg>
<status status="PASS" endtime="20200920 12:55:40.155" starttime="20200920 12:55:36.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:55:40.156" level="INFO">2020-09-20 12:55:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:55:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-20 12:55:38 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-20 12:55:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 12:55:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FD1AB488AB22-&gt;5b9f5a73-7922-4a9c-95b8-00c1d901e1a4
2020-09-20 12:55:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200920 12:55:40.156" starttime="20200920 12:55:40.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:55:40.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:55:40.157" starttime="20200920 12:55:40.157"></status>
</kw>
<status status="PASS" endtime="20200920 12:55:40.157" starttime="20200920 12:55:36.406"></status>
</kw>
<msg timestamp="20200920 12:55:40.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:55:40.158" starttime="20200920 12:55:36.406"></status>
</kw>
<msg timestamp="20200920 12:55:40.158" level="INFO">${result} = 2020-09-20 12:55:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:55:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-20 ...</msg>
<status status="PASS" endtime="20200920 12:55:40.158" starttime="20200920 12:55:36.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:55:40.162" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:55:42.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:55:42.009" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-20 12:53 ofs://om/volume1/bucket1/ozone-07763
-rw-...</msg>
<status status="PASS" endtime="20200920 12:55:42.009" starttime="20200920 12:55:40.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:55:42.010" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-20 12:53 ofs://om/volume1/bucket1/ozone-07763
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-20 12:55 ofs://om/volume1/bucket1/ozone-39834
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:53 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:55 ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20200920 12:55:42.010" starttime="20200920 12:55:42.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:55:42.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:55:42.011" starttime="20200920 12:55:42.010"></status>
</kw>
<status status="PASS" endtime="20200920 12:55:42.011" starttime="20200920 12:55:40.159"></status>
</kw>
<msg timestamp="20200920 12:55:42.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:55:42.011" starttime="20200920 12:55:40.158"></status>
</kw>
<msg timestamp="20200920 12:55:42.011" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-20 12:53 ofs://om/volume1/bucket1/ozone-07763
-rw-...</msg>
<status status="PASS" endtime="20200920 12:55:42.011" starttime="20200920 12:55:40.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200920 12:55:42.012" starttime="20200920 12:55:42.012"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 12:55:42.012" critical="yes" starttime="20200920 12:55:36.398"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200920 12:55:42.013" starttime="20200920 12:55:36.348"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:53:54.612" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:53:54.612" starttime="20200920 12:53:54.611"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:53:54.612" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:53:54.612" starttime="20200920 12:53:54.612"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:54.613" starttime="20200920 12:53:54.611"></status>
</kw>
<msg timestamp="20200920 12:53:54.613" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:53:54.613" starttime="20200920 12:53:54.611"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:54.613" starttime="20200920 12:53:54.610"></status>
</kw>
<msg timestamp="20200920 12:53:54.613" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:53:54.613" starttime="20200920 12:53:54.610"></status>
</kw>
<msg timestamp="20200920 12:53:54.613" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:53:54.613" starttime="20200920 12:53:54.608"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 12:53:54.614" level="INFO">${random} = 07763</msg>
<status status="PASS" endtime="20200920 12:53:54.614" starttime="20200920 12:53:54.613"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:54.622" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-07763 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:53:58.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:53:58.285" level="INFO">${output} = 2020-09-20 12:53:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:53:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-20 ...</msg>
<status status="PASS" endtime="20200920 12:53:58.285" starttime="20200920 12:53:54.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:53:58.286" level="INFO">2020-09-20 12:53:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:53:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-20 12:53:56 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-20 12:53:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 12:53:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A96515F135AE-&gt;5b9f5a73-7922-4a9c-95b8-00c1d901e1a4
2020-09-20 12:53:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200920 12:53:58.286" starttime="20200920 12:53:58.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:53:58.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:53:58.287" starttime="20200920 12:53:58.287"></status>
</kw>
<status status="PASS" endtime="20200920 12:53:58.288" starttime="20200920 12:53:54.614"></status>
</kw>
<msg timestamp="20200920 12:53:58.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:53:58.288" starttime="20200920 12:53:54.614"></status>
</kw>
<msg timestamp="20200920 12:53:58.288" level="INFO">${result} = 2020-09-20 12:53:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:53:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-20 ...</msg>
<status status="PASS" endtime="20200920 12:53:58.288" starttime="20200920 12:53:54.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:53:58.293" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:54:00.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:54:00.148" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-20 12:53 o3fs://bucket1.volume1.om/ozone-07763
dr...</msg>
<status status="PASS" endtime="20200920 12:54:00.149" starttime="20200920 12:53:58.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:54:00.150" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-20 12:53 o3fs://bucket1.volume1.om/ozone-07763
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:53 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200920 12:54:00.150" starttime="20200920 12:54:00.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:54:00.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:54:00.151" starttime="20200920 12:54:00.150"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:00.151" starttime="20200920 12:53:58.289"></status>
</kw>
<msg timestamp="20200920 12:54:00.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:54:00.151" starttime="20200920 12:53:58.289"></status>
</kw>
<msg timestamp="20200920 12:54:00.152" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-20 12:53 o3fs://bucket1.volume1.om/ozone-07763
dr...</msg>
<status status="PASS" endtime="20200920 12:54:00.152" starttime="20200920 12:53:58.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200920 12:54:00.152" starttime="20200920 12:54:00.152"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 12:54:00.152" critical="yes" starttime="20200920 12:53:54.608"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200920 12:54:00.153" starttime="20200920 12:53:54.555"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:55:47.197" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:55:47.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:55:47.203" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:55:47.203" starttime="20200920 12:55:47.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:55:47.204" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:55:47.204" starttime="20200920 12:55:47.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:55:47.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:55:47.205" starttime="20200920 12:55:47.204"></status>
</kw>
<status status="PASS" endtime="20200920 12:55:47.205" starttime="20200920 12:55:47.190"></status>
</kw>
<msg timestamp="20200920 12:55:47.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:55:47.205" starttime="20200920 12:55:47.190"></status>
</kw>
<msg timestamp="20200920 12:55:47.205" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:55:47.205" starttime="20200920 12:55:47.189"></status>
</kw>
<msg timestamp="20200920 12:55:47.206" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:55:47.206" starttime="20200920 12:55:47.189"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 12:55:47.209" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 12:55:47.209" starttime="20200920 12:55:47.209"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:55:47.210" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 12:55:47.210" starttime="20200920 12:55:47.209"></status>
</kw>
<status status="PASS" endtime="20200920 12:55:47.210" starttime="20200920 12:55:47.208"></status>
</kw>
<msg timestamp="20200920 12:55:47.210" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 12:55:47.210" starttime="20200920 12:55:47.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 12:55:47.211" starttime="20200920 12:55:47.211"></status>
</kw>
<msg timestamp="20200920 12:55:47.211" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 12:55:47.211" starttime="20200920 12:55:47.210"></status>
</kw>
<status status="PASS" endtime="20200920 12:55:47.211" starttime="20200920 12:55:47.207"></status>
</kw>
<msg timestamp="20200920 12:55:47.212" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 12:55:47.212" starttime="20200920 12:55:47.206"></status>
</kw>
<msg timestamp="20200920 12:55:47.212" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 12:55:47.212" starttime="20200920 12:55:47.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:55:47.217" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:56:31.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:56:31.680" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 12:55:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:55:49 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200920 12:56:31.680" starttime="20200920 12:55:47.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:56:31.682" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-20 12:55:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:55:49 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-20 12:55:49 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-20 12:55:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 12:55:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9FAA61CD69A5-&gt;5b9f5a73-7922-4a9c-95b8-00c1d901e1a4
2020-09-20 12:55:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-20 12:55:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-09-20 12:55:53 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 12:55:53 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-20 12:55:56 INFO  JobSubmitter:198 - number of splits:3
2020-09-20 12:55:56 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600606329187_0003
2020-09-20 12:55:56 INFO  YarnClientImpl:273 - Submitted application application_1600606329187_0003
2020-09-20 12:55:56 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600606329187_0003/
2020-09-20 12:55:56 INFO  Job:1339 - Running job: job_1600606329187_0003
2020-09-20 12:56:03 INFO  Job:1360 - Job job_1600606329187_0003 running in uber mode : false
2020-09-20 12:56:03 INFO  Job:1367 -  map 0% reduce 0%
2020-09-20 12:56:10 INFO  Job:1367 -  map 33% reduce 0%
2020-09-20 12:56:15 INFO  Job:1367 -  map 67% reduce 0%
2020-09-20 12:56:20 INFO  Job:1367 -  map 100% reduce 0%
2020-09-20 12:56:24 INFO  Job:1367 -  map 100% reduce 100%
2020-09-20 12:56:30 INFO  Job:1378 - Job job_1600606329187_0003 completed successfully
2020-09-20 12:56:31 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=613525
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41860
		Total time spent by all reduces in occupied slots (ms)=15384
		Total time spent by all map tasks (ms)=10465
		Total time spent by all reduce tasks (ms)=3846
		Total vcore-milliseconds taken by all map tasks=10465
		Total vcore-milliseconds taken by all reduce tasks=3846
		Total megabyte-milliseconds taken by all map tasks=42864640
		Total megabyte-milliseconds taken by all reduce tasks=15753216
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=650
		CPU time spent (ms)=7630
		Physical memory (bytes) snapshot=1140084736
		Virtual memory (bytes) snapshot=16066412544
		Total committed heap usage (bytes)=1054867456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.045 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200920 12:56:31.682" starttime="20200920 12:56:31.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:56:31.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:56:31.683" starttime="20200920 12:56:31.682"></status>
</kw>
<status status="PASS" endtime="20200920 12:56:31.683" starttime="20200920 12:55:47.213"></status>
</kw>
<msg timestamp="20200920 12:56:31.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:56:31.683" starttime="20200920 12:55:47.212"></status>
</kw>
<msg timestamp="20200920 12:56:31.684" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 12:55:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:55:49 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200920 12:56:31.684" starttime="20200920 12:55:47.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 12:56:31.684" starttime="20200920 12:56:31.684"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 12:56:31.685" critical="yes" starttime="20200920 12:55:47.188"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:56:31.691" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:56:31.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:56:31.697" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:56:31.698" starttime="20200920 12:56:31.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:56:31.699" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:56:31.699" starttime="20200920 12:56:31.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:56:31.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:56:31.699" starttime="20200920 12:56:31.699"></status>
</kw>
<status status="PASS" endtime="20200920 12:56:31.700" starttime="20200920 12:56:31.688"></status>
</kw>
<msg timestamp="20200920 12:56:31.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:56:31.700" starttime="20200920 12:56:31.687"></status>
</kw>
<msg timestamp="20200920 12:56:31.700" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:56:31.700" starttime="20200920 12:56:31.687"></status>
</kw>
<msg timestamp="20200920 12:56:31.700" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:56:31.700" starttime="20200920 12:56:31.686"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 12:56:31.701" level="INFO">${random} = 17</msg>
<status status="PASS" endtime="20200920 12:56:31.701" starttime="20200920 12:56:31.700"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 12:56:31.704" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 12:56:31.704" starttime="20200920 12:56:31.704"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:56:31.705" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 12:56:31.705" starttime="20200920 12:56:31.705"></status>
</kw>
<status status="PASS" endtime="20200920 12:56:31.705" starttime="20200920 12:56:31.704"></status>
</kw>
<msg timestamp="20200920 12:56:31.705" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 12:56:31.705" starttime="20200920 12:56:31.703"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 12:56:31.706" starttime="20200920 12:56:31.706"></status>
</kw>
<msg timestamp="20200920 12:56:31.706" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 12:56:31.706" starttime="20200920 12:56:31.705"></status>
</kw>
<status status="PASS" endtime="20200920 12:56:31.707" starttime="20200920 12:56:31.702"></status>
</kw>
<msg timestamp="20200920 12:56:31.707" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 12:56:31.707" starttime="20200920 12:56:31.702"></status>
</kw>
<msg timestamp="20200920 12:56:31.707" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 12:56:31.707" starttime="20200920 12:56:31.701"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 12:56:31.710" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 12:56:31.710" starttime="20200920 12:56:31.709"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:56:31.710" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 12:56:31.710" starttime="20200920 12:56:31.710"></status>
</kw>
<status status="PASS" endtime="20200920 12:56:31.710" starttime="20200920 12:56:31.709"></status>
</kw>
<msg timestamp="20200920 12:56:31.710" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 12:56:31.711" starttime="20200920 12:56:31.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:56:31.712" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200920 12:56:31.712" starttime="20200920 12:56:31.712"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:56:31.713" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200920 12:56:31.713" starttime="20200920 12:56:31.712"></status>
</kw>
<status status="PASS" endtime="20200920 12:56:31.713" starttime="20200920 12:56:31.711"></status>
</kw>
<msg timestamp="20200920 12:56:31.713" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200920 12:56:31.713" starttime="20200920 12:56:31.711"></status>
</kw>
<status status="PASS" endtime="20200920 12:56:31.713" starttime="20200920 12:56:31.708"></status>
</kw>
<msg timestamp="20200920 12:56:31.713" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200920 12:56:31.713" starttime="20200920 12:56:31.708"></status>
</kw>
<msg timestamp="20200920 12:56:31.713" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200920 12:56:31.713" starttime="20200920 12:56:31.707"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 12:56:31.717" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 12:56:31.718" starttime="20200920 12:56:31.717"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:56:31.718" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 12:56:31.718" starttime="20200920 12:56:31.718"></status>
</kw>
<status status="PASS" endtime="20200920 12:56:31.718" starttime="20200920 12:56:31.717"></status>
</kw>
<msg timestamp="20200920 12:56:31.718" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 12:56:31.718" starttime="20200920 12:56:31.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:56:31.720" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200920 12:56:31.720" starttime="20200920 12:56:31.719"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:56:31.720" level="INFO">${result} = /wordcount-17.txt</msg>
<status status="PASS" endtime="20200920 12:56:31.720" starttime="20200920 12:56:31.720"></status>
</kw>
<status status="PASS" endtime="20200920 12:56:31.720" starttime="20200920 12:56:31.719"></status>
</kw>
<msg timestamp="20200920 12:56:31.720" level="INFO">${path_with_leading} = /wordcount-17.txt</msg>
<status status="PASS" endtime="20200920 12:56:31.720" starttime="20200920 12:56:31.718"></status>
</kw>
<status status="PASS" endtime="20200920 12:56:31.721" starttime="20200920 12:56:31.714"></status>
</kw>
<msg timestamp="20200920 12:56:31.721" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-17.txt</msg>
<status status="PASS" endtime="20200920 12:56:31.721" starttime="20200920 12:56:31.714"></status>
</kw>
<msg timestamp="20200920 12:56:31.721" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-17.txt</msg>
<status status="PASS" endtime="20200920 12:56:31.721" starttime="20200920 12:56:31.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:56:31.725" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-17.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:57:09.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:57:09.982" level="INFO">${output} = 2020-09-20 12:56:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-09-20 12:56:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200920 12:57:09.982" starttime="20200920 12:56:31.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:57:09.984" level="INFO">2020-09-20 12:56:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-09-20 12:56:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 12:56:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:56:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-20 12:56:34 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-20 12:56:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 12:56:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C86E1AB59531-&gt;5b9f5a73-7922-4a9c-95b8-00c1d901e1a4
2020-09-20 12:56:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-20 12:56:35 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-20 12:56:35 INFO  JobSubmitter:198 - number of splits:3
2020-09-20 12:56:35 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600606329187_0004
2020-09-20 12:56:36 INFO  YarnClientImpl:273 - Submitted application application_1600606329187_0004
2020-09-20 12:56:36 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600606329187_0004/
2020-09-20 12:56:36 INFO  Job:1339 - Running job: job_1600606329187_0004
2020-09-20 12:56:44 INFO  Job:1360 - Job job_1600606329187_0004 running in uber mode : false
2020-09-20 12:56:44 INFO  Job:1367 -  map 0% reduce 0%
2020-09-20 12:56:50 INFO  Job:1367 -  map 33% reduce 0%
2020-09-20 12:56:55 INFO  Job:1367 -  map 67% reduce 0%
2020-09-20 12:57:00 INFO  Job:1367 -  map 100% reduce 0%
2020-09-20 12:57:06 INFO  Job:1367 -  map 100% reduce 100%
2020-09-20 12:57:09 INFO  Job:1378 - Job job_1600606329187_0004 completed successfully
2020-09-20 12:57:09 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676285
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42972
		Total time spent by all reduces in occupied slots (ms)=19800
		Total time spent by all map tasks (ms)=10743
		Total time spent by all reduce tasks (ms)=4950
		Total vcore-milliseconds taken by all map tasks=10743
		Total vcore-milliseconds taken by all reduce tasks=4950
		Total megabyte-milliseconds taken by all map tasks=44003328
		Total megabyte-milliseconds taken by all reduce tasks=20275200
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=670
		CPU time spent (ms)=7860
		Physical memory (bytes) snapshot=1136476160
		Virtual memory (bytes) snapshot=16043122688
		Total committed heap usage (bytes)=1053818880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200920 12:57:09.984" starttime="20200920 12:57:09.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:57:09.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:57:09.985" starttime="20200920 12:57:09.984"></status>
</kw>
<status status="PASS" endtime="20200920 12:57:09.985" starttime="20200920 12:56:31.722"></status>
</kw>
<msg timestamp="20200920 12:57:09.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:57:09.985" starttime="20200920 12:56:31.722"></status>
</kw>
<msg timestamp="20200920 12:57:09.986" level="INFO">${output} = 2020-09-20 12:56:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-09-20 12:56:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200920 12:57:09.986" starttime="20200920 12:56:31.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200920 12:57:09.986" starttime="20200920 12:57:09.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 12:57:09.987" starttime="20200920 12:57:09.986"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 12:57:09.987" critical="yes" starttime="20200920 12:56:31.686"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200920 12:57:09.988" starttime="20200920 12:55:47.136"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:54:05.359" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:54:05.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:54:05.366" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:54:05.366" starttime="20200920 12:54:05.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:54:05.367" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:54:05.367" starttime="20200920 12:54:05.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:54:05.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:54:05.368" starttime="20200920 12:54:05.367"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:05.368" starttime="20200920 12:54:05.353"></status>
</kw>
<msg timestamp="20200920 12:54:05.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:54:05.368" starttime="20200920 12:54:05.352"></status>
</kw>
<msg timestamp="20200920 12:54:05.368" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:54:05.368" starttime="20200920 12:54:05.352"></status>
</kw>
<msg timestamp="20200920 12:54:05.368" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:54:05.368" starttime="20200920 12:54:05.352"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:54:05.372" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:54:05.372" starttime="20200920 12:54:05.371"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:54:05.372" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:54:05.372" starttime="20200920 12:54:05.372"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:05.372" starttime="20200920 12:54:05.371"></status>
</kw>
<msg timestamp="20200920 12:54:05.373" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:54:05.373" starttime="20200920 12:54:05.370"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:05.373" starttime="20200920 12:54:05.370"></status>
</kw>
<msg timestamp="20200920 12:54:05.373" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:54:05.373" starttime="20200920 12:54:05.369"></status>
</kw>
<msg timestamp="20200920 12:54:05.373" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:54:05.373" starttime="20200920 12:54:05.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:54:05.378" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:54:50.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:54:50.479" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 12:54:07 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:54:07 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200920 12:54:50.479" starttime="20200920 12:54:05.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:54:50.481" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-20 12:54:07 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:54:07 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-20 12:54:07 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-20 12:54:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 12:54:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A1E6353EF131-&gt;5b9f5a73-7922-4a9c-95b8-00c1d901e1a4
2020-09-20 12:54:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-20 12:54:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-09-20 12:54:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-20 12:54:14 INFO  JobSubmitter:198 - number of splits:3
2020-09-20 12:54:14 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600606329187_0001
2020-09-20 12:54:15 INFO  YarnClientImpl:273 - Submitted application application_1600606329187_0001
2020-09-20 12:54:15 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600606329187_0001/
2020-09-20 12:54:15 INFO  Job:1339 - Running job: job_1600606329187_0001
2020-09-20 12:54:26 INFO  Job:1360 - Job job_1600606329187_0001 running in uber mode : false
2020-09-20 12:54:26 INFO  Job:1367 -  map 0% reduce 0%
2020-09-20 12:54:33 INFO  Job:1367 -  map 33% reduce 0%
2020-09-20 12:54:38 INFO  Job:1367 -  map 67% reduce 0%
2020-09-20 12:54:43 INFO  Job:1367 -  map 100% reduce 0%
2020-09-20 12:54:48 INFO  Job:1367 -  map 100% reduce 100%
2020-09-20 12:54:49 INFO  Job:1378 - Job job_1600606329187_0001 completed successfully
2020-09-20 12:54:49 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=613745
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43432
		Total time spent by all reduces in occupied slots (ms)=16256
		Total time spent by all map tasks (ms)=10858
		Total time spent by all reduce tasks (ms)=4064
		Total vcore-milliseconds taken by all map tasks=10858
		Total vcore-milliseconds taken by all reduce tasks=4064
		Total megabyte-milliseconds taken by all map tasks=44474368
		Total megabyte-milliseconds taken by all reduce tasks=16646144
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=683
		CPU time spent (ms)=7280
		Physical memory (bytes) snapshot=1152839680
		Virtual memory (bytes) snapshot=16081772544
		Total committed heap usage (bytes)=1059586048
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.155 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200920 12:54:50.481" starttime="20200920 12:54:50.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:54:50.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:54:50.482" starttime="20200920 12:54:50.481"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:50.482" starttime="20200920 12:54:05.374"></status>
</kw>
<msg timestamp="20200920 12:54:50.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:54:50.482" starttime="20200920 12:54:05.374"></status>
</kw>
<msg timestamp="20200920 12:54:50.483" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 12:54:07 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:54:07 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200920 12:54:50.483" starttime="20200920 12:54:05.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 12:54:50.483" starttime="20200920 12:54:50.483"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 12:54:50.484" critical="yes" starttime="20200920 12:54:05.351"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:54:50.490" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:54:50.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:54:50.498" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:54:50.498" starttime="20200920 12:54:50.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:54:50.500" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:54:50.500" starttime="20200920 12:54:50.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:54:50.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:54:50.501" starttime="20200920 12:54:50.500"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:50.501" starttime="20200920 12:54:50.486"></status>
</kw>
<msg timestamp="20200920 12:54:50.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:54:50.501" starttime="20200920 12:54:50.486"></status>
</kw>
<msg timestamp="20200920 12:54:50.501" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:54:50.501" starttime="20200920 12:54:50.486"></status>
</kw>
<msg timestamp="20200920 12:54:50.501" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200920 12:54:50.501" starttime="20200920 12:54:50.485"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 12:54:50.502" level="INFO">${random} = 45</msg>
<status status="PASS" endtime="20200920 12:54:50.502" starttime="20200920 12:54:50.502"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:54:50.506" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:54:50.506" starttime="20200920 12:54:50.505"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:54:50.506" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:54:50.506" starttime="20200920 12:54:50.506"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:50.507" starttime="20200920 12:54:50.505"></status>
</kw>
<msg timestamp="20200920 12:54:50.507" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:54:50.507" starttime="20200920 12:54:50.504"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:50.507" starttime="20200920 12:54:50.504"></status>
</kw>
<msg timestamp="20200920 12:54:50.507" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:54:50.507" starttime="20200920 12:54:50.503"></status>
</kw>
<msg timestamp="20200920 12:54:50.507" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:54:50.507" starttime="20200920 12:54:50.502"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:54:50.511" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:54:50.511" starttime="20200920 12:54:50.510"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:54:50.511" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:54:50.511" starttime="20200920 12:54:50.511"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:50.511" starttime="20200920 12:54:50.510"></status>
</kw>
<msg timestamp="20200920 12:54:50.511" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:54:50.512" starttime="20200920 12:54:50.509"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:50.512" starttime="20200920 12:54:50.509"></status>
</kw>
<msg timestamp="20200920 12:54:50.512" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200920 12:54:50.512" starttime="20200920 12:54:50.508"></status>
</kw>
<msg timestamp="20200920 12:54:50.513" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200920 12:54:50.513" starttime="20200920 12:54:50.508"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:54:50.517" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:54:50.517" starttime="20200920 12:54:50.517"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:54:50.518" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:54:50.518" starttime="20200920 12:54:50.517"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:50.519" starttime="20200920 12:54:50.516"></status>
</kw>
<msg timestamp="20200920 12:54:50.519" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:54:50.519" starttime="20200920 12:54:50.516"></status>
</kw>
<status status="PASS" endtime="20200920 12:54:50.520" starttime="20200920 12:54:50.515"></status>
</kw>
<msg timestamp="20200920 12:54:50.520" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-45.txt</msg>
<status status="PASS" endtime="20200920 12:54:50.520" starttime="20200920 12:54:50.514"></status>
</kw>
<msg timestamp="20200920 12:54:50.520" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-45.txt</msg>
<status status="PASS" endtime="20200920 12:54:50.520" starttime="20200920 12:54:50.513"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:54:50.526" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-45.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:55:31.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:55:31.189" level="INFO">${output} = 2020-09-20 12:54:52 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-09-20 12:54:52 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200920 12:55:31.189" starttime="20200920 12:54:50.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:55:31.191" level="INFO">2020-09-20 12:54:52 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-09-20 12:54:52 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 12:54:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:54:53 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-20 12:54:53 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-20 12:54:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 12:54:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-585B374A0A9D-&gt;5b9f5a73-7922-4a9c-95b8-00c1d901e1a4
2020-09-20 12:54:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-20 12:54:54 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-20 12:54:56 INFO  JobSubmitter:198 - number of splits:3
2020-09-20 12:54:56 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600606329187_0002
2020-09-20 12:54:57 INFO  YarnClientImpl:273 - Submitted application application_1600606329187_0002
2020-09-20 12:54:57 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600606329187_0002/
2020-09-20 12:54:57 INFO  Job:1339 - Running job: job_1600606329187_0002
2020-09-20 12:55:04 INFO  Job:1360 - Job job_1600606329187_0002 running in uber mode : false
2020-09-20 12:55:04 INFO  Job:1367 -  map 0% reduce 0%
2020-09-20 12:55:11 INFO  Job:1367 -  map 33% reduce 0%
2020-09-20 12:55:15 INFO  Job:1367 -  map 67% reduce 0%
2020-09-20 12:55:20 INFO  Job:1367 -  map 100% reduce 0%
2020-09-20 12:55:27 INFO  Job:1367 -  map 100% reduce 100%
2020-09-20 12:55:30 INFO  Job:1378 - Job job_1600606329187_0002 completed successfully
2020-09-20 12:55:30 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676369
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43244
		Total time spent by all reduces in occupied slots (ms)=25196
		Total time spent by all map tasks (ms)=10811
		Total time spent by all reduce tasks (ms)=6299
		Total vcore-milliseconds taken by all map tasks=10811
		Total vcore-milliseconds taken by all reduce tasks=6299
		Total megabyte-milliseconds taken by all map tasks=44281856
		Total megabyte-milliseconds taken by all reduce tasks=25800704
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=650
		CPU time spent (ms)=7730
		Physical memory (bytes) snapshot=1121804288
		Virtual memory (bytes) snapshot=16060923904
		Total committed heap usage (bytes)=1022361600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200920 12:55:31.191" starttime="20200920 12:55:31.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:55:31.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:55:31.192" starttime="20200920 12:55:31.191"></status>
</kw>
<status status="PASS" endtime="20200920 12:55:31.192" starttime="20200920 12:54:50.521"></status>
</kw>
<msg timestamp="20200920 12:55:31.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:55:31.192" starttime="20200920 12:54:50.521"></status>
</kw>
<msg timestamp="20200920 12:55:31.193" level="INFO">${output} = 2020-09-20 12:54:52 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-09-20 12:54:52 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200920 12:55:31.193" starttime="20200920 12:54:50.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200920 12:55:31.193" starttime="20200920 12:55:31.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 12:55:31.194" starttime="20200920 12:55:31.193"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 12:55:31.194" critical="yes" starttime="20200920 12:54:50.484"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200920 12:55:31.196" starttime="20200920 12:54:05.302"></status>
</suite>
<status status="PASS" elapsedtime="210436" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:20.140" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:58:22.501" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 12:58:22.501" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200920 12:58:22.501" starttime="20200920 12:58:20.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:58:22.502" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200920 12:58:22.502" starttime="20200920 12:58:22.501"></status>
</kw>
<msg timestamp="20200920 12:58:22.503" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200920 12:58:22.503" starttime="20200920 12:58:20.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:22.510" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:58:24.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:58:24.808" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:58:24.808" starttime="20200920 12:58:22.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:58:24.809" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:58:24.809" starttime="20200920 12:58:24.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:58:24.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:58:24.810" starttime="20200920 12:58:24.810"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:24.810" starttime="20200920 12:58:22.505"></status>
</kw>
<msg timestamp="20200920 12:58:24.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:58:24.811" starttime="20200920 12:58:22.505"></status>
</kw>
<msg timestamp="20200920 12:58:24.811" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200920 12:58:24.811" starttime="20200920 12:58:22.504"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200920 12:58:24.812" starttime="20200920 12:58:24.811"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:24.812" starttime="20200920 12:58:22.504"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:24.812" starttime="20200920 12:58:22.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:24.818" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:58:26.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:58:26.840" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:58:26.840" starttime="20200920 12:58:24.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:58:26.841" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:58:26.841" starttime="20200920 12:58:26.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:58:26.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:58:26.842" starttime="20200920 12:58:26.841"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:26.842" starttime="20200920 12:58:24.814"></status>
</kw>
<msg timestamp="20200920 12:58:26.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:58:26.842" starttime="20200920 12:58:24.814"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:26.842" starttime="20200920 12:58:24.813"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:26.843" starttime="20200920 12:58:24.813"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:26.843" starttime="20200920 12:58:24.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200920 12:58:26.843" starttime="20200920 12:58:26.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:26.847" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:58:29.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:58:29.117" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T12:58:26.719Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200920 12:58:29.117" starttime="20200920 12:58:26.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:58:29.119" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T12:58:26.719Z",
  "modificationTime" : "2020-09-20T12:58:26.719Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200920 12:58:29.119" starttime="20200920 12:58:29.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:58:29.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:58:29.121" starttime="20200920 12:58:29.119"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:29.121" starttime="20200920 12:58:26.844"></status>
</kw>
<msg timestamp="20200920 12:58:29.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:58:29.121" starttime="20200920 12:58:26.844"></status>
</kw>
<msg timestamp="20200920 12:58:29.121" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T12:58:26.719Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200920 12:58:29.121" starttime="20200920 12:58:26.843"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200920 12:58:29.122" starttime="20200920 12:58:29.122"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:58:29.126" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:58:29.126" starttime="20200920 12:58:29.126"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:58:29.127" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:58:29.127" starttime="20200920 12:58:29.126"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:29.127" starttime="20200920 12:58:29.125"></status>
</kw>
<msg timestamp="20200920 12:58:29.127" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:58:29.127" starttime="20200920 12:58:29.125"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:29.128" starttime="20200920 12:58:29.124"></status>
</kw>
<msg timestamp="20200920 12:58:29.128" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200920 12:58:29.128" starttime="20200920 12:58:29.123"></status>
</kw>
<msg timestamp="20200920 12:58:29.128" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200920 12:58:29.128" starttime="20200920 12:58:29.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:29.133" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:58:31.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:58:31.416" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:58:31.416" starttime="20200920 12:58:29.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:58:31.417" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:58:31.417" starttime="20200920 12:58:31.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:58:31.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:58:31.418" starttime="20200920 12:58:31.417"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:31.418" starttime="20200920 12:58:29.129"></status>
</kw>
<msg timestamp="20200920 12:58:31.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:58:31.418" starttime="20200920 12:58:29.129"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:31.419" starttime="20200920 12:58:29.128"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:31.422" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:58:36.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:58:36.723" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:58:36.723" starttime="20200920 12:58:31.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:58:36.724" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:58:36.724" starttime="20200920 12:58:36.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:58:36.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:58:36.725" starttime="20200920 12:58:36.725"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:36.725" starttime="20200920 12:58:31.420"></status>
</kw>
<msg timestamp="20200920 12:58:36.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:58:36.726" starttime="20200920 12:58:31.420"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:36.726" starttime="20200920 12:58:31.419"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:36.730" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:58:40.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:58:40.970" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:58:40.970" starttime="20200920 12:58:36.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:58:40.971" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:58:40.971" starttime="20200920 12:58:40.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:58:40.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:58:40.972" starttime="20200920 12:58:40.971"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:40.972" starttime="20200920 12:58:36.727"></status>
</kw>
<msg timestamp="20200920 12:58:40.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:58:40.972" starttime="20200920 12:58:36.727"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:40.972" starttime="20200920 12:58:36.726"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:40.976" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:58:45.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:58:45.026" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:58:45.026" starttime="20200920 12:58:40.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:58:45.027" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:58:45.028" starttime="20200920 12:58:45.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:58:45.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:58:45.028" starttime="20200920 12:58:45.028"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:45.029" starttime="20200920 12:58:40.973"></status>
</kw>
<msg timestamp="20200920 12:58:45.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:58:45.029" starttime="20200920 12:58:40.973"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:45.029" starttime="20200920 12:58:40.972"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 12:58:45.029" critical="yes" starttime="20200920 12:58:20.134"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:58:45.035" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:58:45.035" starttime="20200920 12:58:45.034"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:58:45.036" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:58:45.036" starttime="20200920 12:58:45.035"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:45.036" starttime="20200920 12:58:45.034"></status>
</kw>
<msg timestamp="20200920 12:58:45.036" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:58:45.036" starttime="20200920 12:58:45.033"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:45.036" starttime="20200920 12:58:45.033"></status>
</kw>
<msg timestamp="20200920 12:58:45.036" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200920 12:58:45.036" starttime="20200920 12:58:45.032"></status>
</kw>
<msg timestamp="20200920 12:58:45.037" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200920 12:58:45.037" starttime="20200920 12:58:45.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:45.040" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:58:47.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:58:47.116" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:58:47.116" starttime="20200920 12:58:45.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:58:47.118" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:58:47.118" starttime="20200920 12:58:47.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:58:47.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:58:47.119" starttime="20200920 12:58:47.118"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:47.119" starttime="20200920 12:58:45.038"></status>
</kw>
<msg timestamp="20200920 12:58:47.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:58:47.119" starttime="20200920 12:58:45.037"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:47.120" starttime="20200920 12:58:45.037"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:47.125" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:58:49.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:58:49.431" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 12:58:49.431" starttime="20200920 12:58:47.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:58:49.432" level="INFO"></msg>
<status status="PASS" endtime="20200920 12:58:49.432" starttime="20200920 12:58:49.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:58:49.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:58:49.433" starttime="20200920 12:58:49.433"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:49.434" starttime="20200920 12:58:47.121"></status>
</kw>
<msg timestamp="20200920 12:58:49.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:58:49.434" starttime="20200920 12:58:47.121"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:49.434" starttime="20200920 12:58:47.120"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 12:58:49.434" critical="yes" starttime="20200920 12:58:45.030"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200920 12:58:49.436" starttime="20200920 12:58:20.075"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:00:32.252" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:00:32.252" starttime="20200920 13:00:32.252"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:00:32.253" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:00:32.253" starttime="20200920 13:00:32.252"></status>
</kw>
<status status="PASS" endtime="20200920 13:00:32.253" starttime="20200920 13:00:32.251"></status>
</kw>
<msg timestamp="20200920 13:00:32.253" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:00:32.253" starttime="20200920 13:00:32.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:00:32.254" starttime="20200920 13:00:32.253"></status>
</kw>
<msg timestamp="20200920 13:00:32.254" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 13:00:32.254" starttime="20200920 13:00:32.253"></status>
</kw>
<status status="PASS" endtime="20200920 13:00:32.254" starttime="20200920 13:00:32.250"></status>
</kw>
<msg timestamp="20200920 13:00:32.254" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:00:32.254" starttime="20200920 13:00:32.250"></status>
</kw>
<msg timestamp="20200920 13:00:32.254" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:00:32.254" starttime="20200920 13:00:32.249"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 13:00:32.255" level="INFO">${random} = 30588</msg>
<status status="PASS" endtime="20200920 13:00:32.255" starttime="20200920 13:00:32.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:00:32.261" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-30588 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:00:35.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:00:35.944" level="INFO">${output} = 2020-09-20 13:00:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:33 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 13:00:35.944" starttime="20200920 13:00:32.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:00:35.945" level="INFO">2020-09-20 13:00:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-20 13:00:34 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-20 13:00:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:00:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:00:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:00:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7B1306450C3C-&gt;389318a2-116b-44e7-b040-d1e3ffcee976
2020-09-20 13:00:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-20 13:00:35 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200920 13:00:35.946" starttime="20200920 13:00:35.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:00:35.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:00:35.946" starttime="20200920 13:00:35.946"></status>
</kw>
<status status="PASS" endtime="20200920 13:00:35.946" starttime="20200920 13:00:32.256"></status>
</kw>
<msg timestamp="20200920 13:00:35.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:00:35.947" starttime="20200920 13:00:32.256"></status>
</kw>
<msg timestamp="20200920 13:00:35.947" level="INFO">${result} = 2020-09-20 13:00:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:33 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 13:00:35.947" starttime="20200920 13:00:32.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:00:35.951" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:00:37.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:00:37.934" level="INFO">${output} = 2020-09-20 13:00:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 13:00:37.934" starttime="20200920 13:00:35.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:00:37.936" level="INFO">2020-09-20 13:00:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:37 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-20 12:58 ofs://om/volume1/bucket1/ozone-12439
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-20 13:00 ofs://om/volume1/bucket1/ozone-30588
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:58 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:59 ofs://om/volume1/bucket1/wordcount-91.txt
2020-09-20 13:00:37 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200920 13:00:37.936" starttime="20200920 13:00:37.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:00:37.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:00:37.936" starttime="20200920 13:00:37.936"></status>
</kw>
<status status="PASS" endtime="20200920 13:00:37.937" starttime="20200920 13:00:35.948"></status>
</kw>
<msg timestamp="20200920 13:00:37.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:00:37.937" starttime="20200920 13:00:35.948"></status>
</kw>
<msg timestamp="20200920 13:00:37.937" level="INFO">${result} = 2020-09-20 13:00:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 13:00:37.937" starttime="20200920 13:00:35.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:00:37.938" starttime="20200920 13:00:37.937"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 13:00:37.938" critical="yes" starttime="20200920 13:00:32.248"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200920 13:00:37.939" starttime="20200920 13:00:32.200"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:58:54.505" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:58:54.506" starttime="20200920 12:58:54.505"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:58:54.506" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:58:54.506" starttime="20200920 12:58:54.506"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:54.506" starttime="20200920 12:58:54.505"></status>
</kw>
<msg timestamp="20200920 12:58:54.506" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:58:54.506" starttime="20200920 12:58:54.504"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:54.507" starttime="20200920 12:58:54.504"></status>
</kw>
<msg timestamp="20200920 12:58:54.507" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:58:54.507" starttime="20200920 12:58:54.503"></status>
</kw>
<msg timestamp="20200920 12:58:54.507" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:58:54.507" starttime="20200920 12:58:54.502"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 12:58:54.507" level="INFO">${random} = 12439</msg>
<status status="PASS" endtime="20200920 12:58:54.507" starttime="20200920 12:58:54.507"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:54.514" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-12439 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:58:58.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:58:58.233" level="INFO">${output} = 2020-09-20 12:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:58:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 12:58:58.233" starttime="20200920 12:58:54.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:58:58.235" level="INFO">2020-09-20 12:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:58:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:58:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-20 12:58:56 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:58:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 12:58:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 12:58:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 12:58:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8606CE03D354-&gt;389318a2-116b-44e7-b040-d1e3ffcee976
2020-09-20 12:58:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-20 12:58:57 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200920 12:58:58.236" starttime="20200920 12:58:58.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:58:58.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:58:58.236" starttime="20200920 12:58:58.236"></status>
</kw>
<status status="PASS" endtime="20200920 12:58:58.237" starttime="20200920 12:58:54.508"></status>
</kw>
<msg timestamp="20200920 12:58:58.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:58:58.237" starttime="20200920 12:58:54.508"></status>
</kw>
<msg timestamp="20200920 12:58:58.237" level="INFO">${result} = 2020-09-20 12:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:58:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 12:58:58.237" starttime="20200920 12:58:54.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:58:58.241" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:59:00.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:59:00.215" level="INFO">${output} = 2020-09-20 12:58:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:58:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 12:59:00.215" starttime="20200920 12:58:58.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:59:00.216" level="INFO">2020-09-20 12:58:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:58:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:00 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-20 12:58 o3fs://bucket1.volume1.om/ozone-12439
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 12:58 o3fs://bucket1.volume1.om/user
2020-09-20 12:59:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200920 12:59:00.216" starttime="20200920 12:59:00.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:59:00.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:59:00.217" starttime="20200920 12:59:00.216"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:00.217" starttime="20200920 12:58:58.238"></status>
</kw>
<msg timestamp="20200920 12:59:00.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:59:00.217" starttime="20200920 12:58:58.238"></status>
</kw>
<msg timestamp="20200920 12:59:00.217" level="INFO">${result} = 2020-09-20 12:58:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:58:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 12:59:00.217" starttime="20200920 12:58:58.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200920 12:59:00.218" starttime="20200920 12:59:00.218"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 12:59:00.218" critical="yes" starttime="20200920 12:58:54.501"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200920 12:59:00.219" starttime="20200920 12:58:54.452"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:00:43.067" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:00:43.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:00:43.071" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 13:00:43.071" starttime="20200920 13:00:43.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:00:43.072" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 13:00:43.072" starttime="20200920 13:00:43.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:00:43.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:00:43.073" starttime="20200920 13:00:43.072"></status>
</kw>
<status status="PASS" endtime="20200920 13:00:43.073" starttime="20200920 13:00:43.060"></status>
</kw>
<msg timestamp="20200920 13:00:43.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:00:43.073" starttime="20200920 13:00:43.060"></status>
</kw>
<msg timestamp="20200920 13:00:43.073" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 13:00:43.073" starttime="20200920 13:00:43.059"></status>
</kw>
<msg timestamp="20200920 13:00:43.074" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 13:00:43.074" starttime="20200920 13:00:43.059"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:00:43.077" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:00:43.077" starttime="20200920 13:00:43.076"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:00:43.078" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:00:43.078" starttime="20200920 13:00:43.077"></status>
</kw>
<status status="PASS" endtime="20200920 13:00:43.078" starttime="20200920 13:00:43.076"></status>
</kw>
<msg timestamp="20200920 13:00:43.078" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:00:43.078" starttime="20200920 13:00:43.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:00:43.079" starttime="20200920 13:00:43.079"></status>
</kw>
<msg timestamp="20200920 13:00:43.079" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 13:00:43.079" starttime="20200920 13:00:43.078"></status>
</kw>
<status status="PASS" endtime="20200920 13:00:43.079" starttime="20200920 13:00:43.075"></status>
</kw>
<msg timestamp="20200920 13:00:43.080" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:00:43.080" starttime="20200920 13:00:43.074"></status>
</kw>
<msg timestamp="20200920 13:00:43.080" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:00:43.080" starttime="20200920 13:00:43.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:00:43.085" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:01:21.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:01:21.906" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00...</msg>
<status status="PASS" endtime="20200920 13:01:21.906" starttime="20200920 13:00:43.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:01:21.908" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:45 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-20 13:00:45 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-20 13:00:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:00:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:00:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:00:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A64DAC19EFB8-&gt;389318a2-116b-44e7-b040-d1e3ffcee976
2020-09-20 13:00:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-20 13:00:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-09-20 13:00:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 13:00:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:47 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 13:00:47 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 13:00:47 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600606678084_0003
2020-09-20 13:00:47 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-20 13:00:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:47 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 13:00:47 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-20 13:00:47 INFO  YarnClientImpl:324 - Submitted application application_1600606678084_0003
2020-09-20 13:00:47 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600606678084_0003/
2020-09-20 13:00:47 INFO  Job:1619 - Running job: job_1600606678084_0003
2020-09-20 13:00:56 INFO  Job:1640 - Job job_1600606678084_0003 running in uber mode : false
2020-09-20 13:00:56 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 13:01:03 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 13:01:09 INFO  Job:1647 -  map 67% reduce 0%
2020-09-20 13:01:15 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 13:01:20 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 13:01:21 INFO  Job:1658 - Job job_1600606678084_0003 completed successfully
2020-09-20 13:01:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:21 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1019437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43204
		Total time spent by all reduces in occupied slots (ms)=15368
		Total time spent by all map tasks (ms)=10801
		Total time spent by all reduce tasks (ms)=3842
		Total vcore-milliseconds taken by all map tasks=10801
		Total vcore-milliseconds taken by all reduce tasks=3842
		Total megabyte-milliseconds taken by all map tasks=44240896
		Total megabyte-milliseconds taken by all reduce tasks=15736832
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=678
		CPU time spent (ms)=7110
		Physical memory (bytes) snapshot=1303724032
		Virtual memory (bytes) snapshot=16038805504
		Total committed heap usage (bytes)=1285554176
		Peak Map Physical memory (bytes)=388423680
		Peak Map Virtual memory (bytes)=4014448640
		Peak Reduce Physical memory (bytes)=357711872
		Peak Reduce Virtual memory (bytes)=4016705536
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.834 seconds
2020-09-20 13:01:21 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-09-20 13:01:21 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200920 13:01:21.908" starttime="20200920 13:01:21.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:01:21.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:01:21.909" starttime="20200920 13:01:21.908"></status>
</kw>
<status status="PASS" endtime="20200920 13:01:21.909" starttime="20200920 13:00:43.081"></status>
</kw>
<msg timestamp="20200920 13:01:21.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:01:21.909" starttime="20200920 13:00:43.080"></status>
</kw>
<msg timestamp="20200920 13:01:21.910" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00...</msg>
<status status="PASS" endtime="20200920 13:01:21.910" starttime="20200920 13:00:43.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 13:01:21.910" starttime="20200920 13:01:21.910"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 13:01:21.910" critical="yes" starttime="20200920 13:00:43.059"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:01:21.915" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:01:21.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:01:21.922" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 13:01:21.922" starttime="20200920 13:01:21.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:01:21.923" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 13:01:21.923" starttime="20200920 13:01:21.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:01:21.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:01:21.923" starttime="20200920 13:01:21.923"></status>
</kw>
<status status="PASS" endtime="20200920 13:01:21.924" starttime="20200920 13:01:21.912"></status>
</kw>
<msg timestamp="20200920 13:01:21.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:01:21.924" starttime="20200920 13:01:21.912"></status>
</kw>
<msg timestamp="20200920 13:01:21.924" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 13:01:21.924" starttime="20200920 13:01:21.912"></status>
</kw>
<msg timestamp="20200920 13:01:21.924" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 13:01:21.924" starttime="20200920 13:01:21.911"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 13:01:21.925" level="INFO">${random} = 87</msg>
<status status="PASS" endtime="20200920 13:01:21.925" starttime="20200920 13:01:21.924"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:01:21.928" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:01:21.928" starttime="20200920 13:01:21.928"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:01:21.929" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:01:21.929" starttime="20200920 13:01:21.928"></status>
</kw>
<status status="PASS" endtime="20200920 13:01:21.929" starttime="20200920 13:01:21.928"></status>
</kw>
<msg timestamp="20200920 13:01:21.929" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:01:21.929" starttime="20200920 13:01:21.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:01:21.930" starttime="20200920 13:01:21.930"></status>
</kw>
<msg timestamp="20200920 13:01:21.930" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 13:01:21.930" starttime="20200920 13:01:21.929"></status>
</kw>
<status status="PASS" endtime="20200920 13:01:21.930" starttime="20200920 13:01:21.926"></status>
</kw>
<msg timestamp="20200920 13:01:21.930" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:01:21.930" starttime="20200920 13:01:21.926"></status>
</kw>
<msg timestamp="20200920 13:01:21.931" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:01:21.931" starttime="20200920 13:01:21.925"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:01:21.933" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:01:21.933" starttime="20200920 13:01:21.933"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:01:21.934" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:01:21.934" starttime="20200920 13:01:21.934"></status>
</kw>
<status status="PASS" endtime="20200920 13:01:21.934" starttime="20200920 13:01:21.933"></status>
</kw>
<msg timestamp="20200920 13:01:21.934" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:01:21.934" starttime="20200920 13:01:21.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:01:21.936" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200920 13:01:21.936" starttime="20200920 13:01:21.935"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:01:21.936" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200920 13:01:21.936" starttime="20200920 13:01:21.936"></status>
</kw>
<status status="PASS" endtime="20200920 13:01:21.936" starttime="20200920 13:01:21.935"></status>
</kw>
<msg timestamp="20200920 13:01:21.936" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200920 13:01:21.937" starttime="20200920 13:01:21.935"></status>
</kw>
<status status="PASS" endtime="20200920 13:01:21.937" starttime="20200920 13:01:21.932"></status>
</kw>
<msg timestamp="20200920 13:01:21.937" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200920 13:01:21.937" starttime="20200920 13:01:21.931"></status>
</kw>
<msg timestamp="20200920 13:01:21.937" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200920 13:01:21.937" starttime="20200920 13:01:21.931"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:01:21.940" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:01:21.941" starttime="20200920 13:01:21.940"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:01:21.941" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:01:21.941" starttime="20200920 13:01:21.941"></status>
</kw>
<status status="PASS" endtime="20200920 13:01:21.941" starttime="20200920 13:01:21.940"></status>
</kw>
<msg timestamp="20200920 13:01:21.941" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:01:21.941" starttime="20200920 13:01:21.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:01:21.943" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200920 13:01:21.943" starttime="20200920 13:01:21.942"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:01:21.943" level="INFO">${result} = /wordcount-87.txt</msg>
<status status="PASS" endtime="20200920 13:01:21.943" starttime="20200920 13:01:21.943"></status>
</kw>
<status status="PASS" endtime="20200920 13:01:21.943" starttime="20200920 13:01:21.942"></status>
</kw>
<msg timestamp="20200920 13:01:21.943" level="INFO">${path_with_leading} = /wordcount-87.txt</msg>
<status status="PASS" endtime="20200920 13:01:21.943" starttime="20200920 13:01:21.941"></status>
</kw>
<status status="PASS" endtime="20200920 13:01:21.944" starttime="20200920 13:01:21.938"></status>
</kw>
<msg timestamp="20200920 13:01:21.944" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-87.txt</msg>
<status status="PASS" endtime="20200920 13:01:21.944" starttime="20200920 13:01:21.938"></status>
</kw>
<msg timestamp="20200920 13:01:21.944" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-87.txt</msg>
<status status="PASS" endtime="20200920 13:01:21.944" starttime="20200920 13:01:21.937"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:01:21.948" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-87.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:02:02.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:02:02.996" level="INFO">${output} = 2020-09-20 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 13:02:02.996" starttime="20200920 13:01:21.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:02:02.997" level="INFO">2020-09-20 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-09-20 13:01:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 13:01:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:24 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-20 13:01:24 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-20 13:01:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:01:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:01:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:01:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EDD7A017B4F0-&gt;389318a2-116b-44e7-b040-d1e3ffcee976
2020-09-20 13:01:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-20 13:01:28 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 13:01:28 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 13:01:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600606678084_0004
2020-09-20 13:01:28 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-20 13:01:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:28 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 13:01:28 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-20 13:01:29 INFO  YarnClientImpl:324 - Submitted application application_1600606678084_0004
2020-09-20 13:01:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600606678084_0004/
2020-09-20 13:01:29 INFO  Job:1619 - Running job: job_1600606678084_0004
2020-09-20 13:01:37 INFO  Job:1640 - Job job_1600606678084_0004 running in uber mode : false
2020-09-20 13:01:37 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 13:01:44 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 13:01:50 INFO  Job:1647 -  map 67% reduce 0%
2020-09-20 13:01:55 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 13:02:01 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 13:02:02 INFO  Job:1658 - Job job_1600606678084_0004 completed successfully
2020-09-20 13:02:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:02:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082117
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42788
		Total time spent by all reduces in occupied slots (ms)=19292
		Total time spent by all map tasks (ms)=10697
		Total time spent by all reduce tasks (ms)=4823
		Total vcore-milliseconds taken by all map tasks=10697
		Total vcore-milliseconds taken by all reduce tasks=4823
		Total megabyte-milliseconds taken by all map tasks=43814912
		Total megabyte-milliseconds taken by all reduce tasks=19755008
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=652
		CPU time spent (ms)=7850
		Physical memory (bytes) snapshot=1150476288
		Virtual memory (bytes) snapshot=16057147392
		Total committed heap usage (bytes)=1060110336
		Peak Map Physical memory (bytes)=292274176
		Peak Map Virtual memory (bytes)=4011978752
		Peak Reduce Physical memory (bytes)=296558592
		Peak Reduce Virtual memory (bytes)=4038275072
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-09-20 13:02:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200920 13:02:02.998" starttime="20200920 13:02:02.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:02:02.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:02:02.998" starttime="20200920 13:02:02.998"></status>
</kw>
<status status="PASS" endtime="20200920 13:02:02.998" starttime="20200920 13:01:21.945"></status>
</kw>
<msg timestamp="20200920 13:02:02.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:02:02.999" starttime="20200920 13:01:21.945"></status>
</kw>
<msg timestamp="20200920 13:02:02.999" level="INFO">${output} = 2020-09-20 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:01:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 13:02:02.999" starttime="20200920 13:01:21.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200920 13:02:03.000" starttime="20200920 13:02:03.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 13:02:03.001" starttime="20200920 13:02:03.000"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 13:02:03.001" critical="yes" starttime="20200920 13:01:21.911"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200920 13:02:03.002" starttime="20200920 13:00:42.999"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:59:05.396" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:59:05.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:59:05.403" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 12:59:05.403" starttime="20200920 12:59:05.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:59:05.404" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 12:59:05.404" starttime="20200920 12:59:05.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:59:05.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:59:05.405" starttime="20200920 12:59:05.404"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:05.406" starttime="20200920 12:59:05.392"></status>
</kw>
<msg timestamp="20200920 12:59:05.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:59:05.406" starttime="20200920 12:59:05.392"></status>
</kw>
<msg timestamp="20200920 12:59:05.406" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 12:59:05.406" starttime="20200920 12:59:05.391"></status>
</kw>
<msg timestamp="20200920 12:59:05.406" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 12:59:05.406" starttime="20200920 12:59:05.391"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:59:05.410" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:59:05.410" starttime="20200920 12:59:05.410"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:59:05.411" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:59:05.411" starttime="20200920 12:59:05.410"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:05.412" starttime="20200920 12:59:05.409"></status>
</kw>
<msg timestamp="20200920 12:59:05.412" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:59:05.412" starttime="20200920 12:59:05.408"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:05.412" starttime="20200920 12:59:05.408"></status>
</kw>
<msg timestamp="20200920 12:59:05.412" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:59:05.412" starttime="20200920 12:59:05.407"></status>
</kw>
<msg timestamp="20200920 12:59:05.412" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:59:05.412" starttime="20200920 12:59:05.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:59:05.416" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:59:48.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:59:48.329" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 12:59:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59...</msg>
<status status="PASS" endtime="20200920 12:59:48.330" starttime="20200920 12:59:05.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:59:48.332" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-20 12:59:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:07 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-20 12:59:07 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:59:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 12:59:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 12:59:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 12:59:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2363DA28D946-&gt;389318a2-116b-44e7-b040-d1e3ffcee976
2020-09-20 12:59:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-20 12:59:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-09-20 12:59:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:09 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 12:59:12 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 12:59:12 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600606678084_0001
2020-09-20 12:59:12 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-20 12:59:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:12 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 12:59:12 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-20 12:59:13 INFO  YarnClientImpl:324 - Submitted application application_1600606678084_0001
2020-09-20 12:59:13 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600606678084_0001/
2020-09-20 12:59:13 INFO  Job:1619 - Running job: job_1600606678084_0001
2020-09-20 12:59:24 INFO  Job:1640 - Job job_1600606678084_0001 running in uber mode : false
2020-09-20 12:59:24 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 12:59:31 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 12:59:37 INFO  Job:1647 -  map 67% reduce 0%
2020-09-20 12:59:41 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 12:59:46 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 12:59:47 INFO  Job:1658 - Job job_1600606678084_0001 completed successfully
2020-09-20 12:59:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1019657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42212
		Total time spent by all reduces in occupied slots (ms)=17100
		Total time spent by all map tasks (ms)=10553
		Total time spent by all reduce tasks (ms)=4275
		Total vcore-milliseconds taken by all map tasks=10553
		Total vcore-milliseconds taken by all reduce tasks=4275
		Total megabyte-milliseconds taken by all map tasks=43225088
		Total megabyte-milliseconds taken by all reduce tasks=17510400
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=681
		CPU time spent (ms)=7100
		Physical memory (bytes) snapshot=1221918720
		Virtual memory (bytes) snapshot=16050630656
		Total committed heap usage (bytes)=1098383360
		Peak Map Physical memory (bytes)=293437440
		Peak Map Virtual memory (bytes)=4013846528
		Peak Reduce Physical memory (bytes)=373145600
		Peak Reduce Virtual memory (bytes)=4031254528
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.658 seconds
2020-09-20 12:59:47 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-09-20 12:59:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200920 12:59:48.332" starttime="20200920 12:59:48.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:59:48.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:59:48.333" starttime="20200920 12:59:48.332"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:48.333" starttime="20200920 12:59:05.413"></status>
</kw>
<msg timestamp="20200920 12:59:48.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:59:48.333" starttime="20200920 12:59:05.413"></status>
</kw>
<msg timestamp="20200920 12:59:48.334" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 12:59:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59...</msg>
<status status="PASS" endtime="20200920 12:59:48.334" starttime="20200920 12:59:05.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 12:59:48.334" starttime="20200920 12:59:48.334"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 12:59:48.334" critical="yes" starttime="20200920 12:59:05.391"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:59:48.339" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 12:59:48.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 12:59:48.348" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 12:59:48.348" starttime="20200920 12:59:48.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 12:59:48.350" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 12:59:48.350" starttime="20200920 12:59:48.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 12:59:48.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 12:59:48.351" starttime="20200920 12:59:48.350"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:48.351" starttime="20200920 12:59:48.337"></status>
</kw>
<msg timestamp="20200920 12:59:48.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 12:59:48.352" starttime="20200920 12:59:48.337"></status>
</kw>
<msg timestamp="20200920 12:59:48.352" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 12:59:48.352" starttime="20200920 12:59:48.336"></status>
</kw>
<msg timestamp="20200920 12:59:48.352" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200920 12:59:48.352" starttime="20200920 12:59:48.336"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 12:59:48.353" level="INFO">${random} = 91</msg>
<status status="PASS" endtime="20200920 12:59:48.353" starttime="20200920 12:59:48.352"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:59:48.357" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:59:48.357" starttime="20200920 12:59:48.357"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:59:48.358" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:59:48.358" starttime="20200920 12:59:48.358"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:48.358" starttime="20200920 12:59:48.356"></status>
</kw>
<msg timestamp="20200920 12:59:48.358" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:59:48.358" starttime="20200920 12:59:48.356"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:48.358" starttime="20200920 12:59:48.355"></status>
</kw>
<msg timestamp="20200920 12:59:48.359" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:59:48.359" starttime="20200920 12:59:48.354"></status>
</kw>
<msg timestamp="20200920 12:59:48.359" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 12:59:48.359" starttime="20200920 12:59:48.353"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:59:48.362" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:59:48.362" starttime="20200920 12:59:48.361"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:59:48.362" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:59:48.362" starttime="20200920 12:59:48.362"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:48.363" starttime="20200920 12:59:48.361"></status>
</kw>
<msg timestamp="20200920 12:59:48.363" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:59:48.363" starttime="20200920 12:59:48.361"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:48.363" starttime="20200920 12:59:48.360"></status>
</kw>
<msg timestamp="20200920 12:59:48.363" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200920 12:59:48.363" starttime="20200920 12:59:48.360"></status>
</kw>
<msg timestamp="20200920 12:59:48.363" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200920 12:59:48.363" starttime="20200920 12:59:48.359"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 12:59:48.366" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 12:59:48.366" starttime="20200920 12:59:48.366"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 12:59:48.367" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 12:59:48.367" starttime="20200920 12:59:48.366"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:48.367" starttime="20200920 12:59:48.365"></status>
</kw>
<msg timestamp="20200920 12:59:48.367" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 12:59:48.367" starttime="20200920 12:59:48.365"></status>
</kw>
<status status="PASS" endtime="20200920 12:59:48.368" starttime="20200920 12:59:48.364"></status>
</kw>
<msg timestamp="20200920 12:59:48.368" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-91.txt</msg>
<status status="PASS" endtime="20200920 12:59:48.368" starttime="20200920 12:59:48.364"></status>
</kw>
<msg timestamp="20200920 12:59:48.368" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-91.txt</msg>
<status status="PASS" endtime="20200920 12:59:48.368" starttime="20200920 12:59:48.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 12:59:48.373" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-91.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:00:27.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:00:27.040" level="INFO">${output} = 2020-09-20 12:59:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 13:00:27.040" starttime="20200920 12:59:48.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:00:27.041" level="INFO">2020-09-20 12:59:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-09-20 12:59:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 12:59:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:50 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-20 12:59:50 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-20 12:59:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 12:59:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 12:59:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 12:59:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-227226C3D693-&gt;389318a2-116b-44e7-b040-d1e3ffcee976
2020-09-20 12:59:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-20 12:59:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 12:59:52 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 12:59:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600606678084_0002
2020-09-20 12:59:52 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-20 12:59:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:52 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 12:59:52 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-20 12:59:53 INFO  YarnClientImpl:324 - Submitted application application_1600606678084_0002
2020-09-20 12:59:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600606678084_0002/
2020-09-20 12:59:53 INFO  Job:1619 - Running job: job_1600606678084_0002
2020-09-20 13:00:01 INFO  Job:1640 - Job job_1600606678084_0002 running in uber mode : false
2020-09-20 13:00:01 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 13:00:08 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 13:00:14 INFO  Job:1647 -  map 67% reduce 0%
2020-09-20 13:00:20 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 13:00:25 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 13:00:26 INFO  Job:1658 - Job job_1600606678084_0002 completed successfully
2020-09-20 13:00:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 13:00:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082201
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43852
		Total time spent by all reduces in occupied slots (ms)=15640
		Total time spent by all map tasks (ms)=10963
		Total time spent by all reduce tasks (ms)=3910
		Total vcore-milliseconds taken by all map tasks=10963
		Total vcore-milliseconds taken by all reduce tasks=3910
		Total megabyte-milliseconds taken by all map tasks=44904448
		Total megabyte-milliseconds taken by all reduce tasks=16015360
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=669
		CPU time spent (ms)=7670
		Physical memory (bytes) snapshot=1175142400
		Virtual memory (bytes) snapshot=16070406144
		Total committed heap usage (bytes)=1056964608
		Peak Map Physical memory (bytes)=295124992
		Peak Map Virtual memory (bytes)=4015042560
		Peak Reduce Physical memory (bytes)=296079360
		Peak Reduce Virtual memory (bytes)=4032712704
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-09-20 13:00:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200920 13:00:27.042" starttime="20200920 13:00:27.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:00:27.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:00:27.042" starttime="20200920 13:00:27.042"></status>
</kw>
<status status="PASS" endtime="20200920 13:00:27.042" starttime="20200920 12:59:48.369"></status>
</kw>
<msg timestamp="20200920 13:00:27.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:00:27.043" starttime="20200920 12:59:48.369"></status>
</kw>
<msg timestamp="20200920 13:00:27.043" level="INFO">${output} = 2020-09-20 12:59:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-20 12:59:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200920 13:00:27.043" starttime="20200920 12:59:48.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200920 13:00:27.044" starttime="20200920 13:00:27.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 13:00:27.044" starttime="20200920 13:00:27.044"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 13:00:27.045" critical="yes" starttime="20200920 12:59:48.335"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200920 13:00:27.047" starttime="20200920 12:59:05.342"></status>
</suite>
<status status="PASS" elapsedtime="202575" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:03:27.727" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:03:32.068" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 13:03:32.069" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200920 13:03:32.069" starttime="20200920 13:03:27.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:03:32.070" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200920 13:03:32.070" starttime="20200920 13:03:32.069"></status>
</kw>
<msg timestamp="20200920 13:03:32.070" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200920 13:03:32.070" starttime="20200920 13:03:27.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:03:32.077" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:03:35.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:03:35.317" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:03:35.317" starttime="20200920 13:03:32.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:03:35.318" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:03:35.318" starttime="20200920 13:03:35.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:03:35.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:03:35.319" starttime="20200920 13:03:35.319"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:35.320" starttime="20200920 13:03:32.073"></status>
</kw>
<msg timestamp="20200920 13:03:35.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:03:35.320" starttime="20200920 13:03:32.072"></status>
</kw>
<msg timestamp="20200920 13:03:35.320" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200920 13:03:35.320" starttime="20200920 13:03:32.072"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200920 13:03:35.320" starttime="20200920 13:03:35.320"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:35.321" starttime="20200920 13:03:32.071"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:35.321" starttime="20200920 13:03:32.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:03:35.328" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:03:38.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:03:38.565" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:03:38.565" starttime="20200920 13:03:35.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:03:38.566" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:03:38.566" starttime="20200920 13:03:38.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:03:38.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:03:38.567" starttime="20200920 13:03:38.566"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:38.567" starttime="20200920 13:03:35.324"></status>
</kw>
<msg timestamp="20200920 13:03:38.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:03:38.567" starttime="20200920 13:03:35.323"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:38.568" starttime="20200920 13:03:35.323"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:38.568" starttime="20200920 13:03:35.322"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:38.568" starttime="20200920 13:03:35.322"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200920 13:03:38.568" starttime="20200920 13:03:38.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:03:38.573" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:03:42.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:03:42.333" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:03:38.397Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200920 13:03:42.333" starttime="20200920 13:03:38.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:03:42.336" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:03:38.397Z",
  "modificationTime" : "2020-09-20T13:03:38.397Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200920 13:03:42.336" starttime="20200920 13:03:42.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:03:42.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:03:42.337" starttime="20200920 13:03:42.336"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:42.338" starttime="20200920 13:03:38.569"></status>
</kw>
<msg timestamp="20200920 13:03:42.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:03:42.338" starttime="20200920 13:03:38.569"></status>
</kw>
<msg timestamp="20200920 13:03:42.338" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:03:38.397Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200920 13:03:42.338" starttime="20200920 13:03:38.568"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200920 13:03:42.339" starttime="20200920 13:03:42.339"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:03:42.343" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:03:42.343" starttime="20200920 13:03:42.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:03:42.344" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:03:42.344" starttime="20200920 13:03:42.344"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:42.344" starttime="20200920 13:03:42.342"></status>
</kw>
<msg timestamp="20200920 13:03:42.344" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:03:42.344" starttime="20200920 13:03:42.342"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:42.345" starttime="20200920 13:03:42.341"></status>
</kw>
<msg timestamp="20200920 13:03:42.345" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200920 13:03:42.345" starttime="20200920 13:03:42.340"></status>
</kw>
<msg timestamp="20200920 13:03:42.345" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200920 13:03:42.345" starttime="20200920 13:03:42.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:03:42.349" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:03:45.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:03:45.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:03:45.835" starttime="20200920 13:03:42.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:03:45.836" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:03:45.836" starttime="20200920 13:03:45.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:03:45.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:03:45.837" starttime="20200920 13:03:45.837"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:45.837" starttime="20200920 13:03:42.346"></status>
</kw>
<msg timestamp="20200920 13:03:45.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:03:45.838" starttime="20200920 13:03:42.346"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:45.838" starttime="20200920 13:03:42.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:03:45.843" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:03:53.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:03:53.121" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:03:53.121" starttime="20200920 13:03:45.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:03:53.123" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:03:53.123" starttime="20200920 13:03:53.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:03:53.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:03:53.124" starttime="20200920 13:03:53.123"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:53.124" starttime="20200920 13:03:45.839"></status>
</kw>
<msg timestamp="20200920 13:03:53.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:03:53.124" starttime="20200920 13:03:45.839"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:53.124" starttime="20200920 13:03:45.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:03:53.129" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:03:58.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:03:58.494" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:03:58.494" starttime="20200920 13:03:53.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:03:58.495" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:03:58.495" starttime="20200920 13:03:58.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:03:58.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:03:58.496" starttime="20200920 13:03:58.495"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:58.496" starttime="20200920 13:03:53.125"></status>
</kw>
<msg timestamp="20200920 13:03:58.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:03:58.496" starttime="20200920 13:03:53.125"></status>
</kw>
<status status="PASS" endtime="20200920 13:03:58.497" starttime="20200920 13:03:53.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:03:58.501" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:04:03.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:04:03.848" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:04:03.848" starttime="20200920 13:03:58.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:04:03.849" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:04:03.849" starttime="20200920 13:04:03.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:04:03.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:04:03.850" starttime="20200920 13:04:03.849"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:03.850" starttime="20200920 13:03:58.498"></status>
</kw>
<msg timestamp="20200920 13:04:03.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:04:03.850" starttime="20200920 13:03:58.497"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:03.851" starttime="20200920 13:03:58.497"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:04:03.851" critical="yes" starttime="20200920 13:03:27.716"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:04:03.857" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:04:03.857" starttime="20200920 13:04:03.856"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:04:03.857" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:04:03.858" starttime="20200920 13:04:03.857"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:03.858" starttime="20200920 13:04:03.856"></status>
</kw>
<msg timestamp="20200920 13:04:03.858" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:04:03.858" starttime="20200920 13:04:03.855"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:03.858" starttime="20200920 13:04:03.854"></status>
</kw>
<msg timestamp="20200920 13:04:03.858" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200920 13:04:03.858" starttime="20200920 13:04:03.854"></status>
</kw>
<msg timestamp="20200920 13:04:03.858" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200920 13:04:03.859" starttime="20200920 13:04:03.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:04:03.863" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:04:07.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:04:07.236" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:04:07.236" starttime="20200920 13:04:03.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:04:07.237" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:04:07.237" starttime="20200920 13:04:07.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:04:07.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:04:07.238" starttime="20200920 13:04:07.237"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:07.238" starttime="20200920 13:04:03.859"></status>
</kw>
<msg timestamp="20200920 13:04:07.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:04:07.238" starttime="20200920 13:04:03.859"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:07.239" starttime="20200920 13:04:03.859"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:04:07.242" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:04:10.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:04:10.654" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:04:10.654" starttime="20200920 13:04:07.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:04:10.655" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:04:10.655" starttime="20200920 13:04:10.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:04:10.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:04:10.657" starttime="20200920 13:04:10.656"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:10.657" starttime="20200920 13:04:07.240"></status>
</kw>
<msg timestamp="20200920 13:04:10.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:04:10.658" starttime="20200920 13:04:07.239"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:10.658" starttime="20200920 13:04:07.239"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:04:10.658" critical="yes" starttime="20200920 13:04:03.852"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200920 13:04:10.659" starttime="20200920 13:03:27.652"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:05:57.726" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:05:57.726" starttime="20200920 13:05:57.721"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:05:57.726" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:05:57.726" starttime="20200920 13:05:57.726"></status>
</kw>
<status status="PASS" endtime="20200920 13:05:57.727" starttime="20200920 13:05:57.720"></status>
</kw>
<msg timestamp="20200920 13:05:57.727" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:05:57.727" starttime="20200920 13:05:57.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:05:57.728" starttime="20200920 13:05:57.727"></status>
</kw>
<msg timestamp="20200920 13:05:57.728" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 13:05:57.728" starttime="20200920 13:05:57.727"></status>
</kw>
<status status="PASS" endtime="20200920 13:05:57.728" starttime="20200920 13:05:57.718"></status>
</kw>
<msg timestamp="20200920 13:05:57.728" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:05:57.728" starttime="20200920 13:05:57.718"></status>
</kw>
<msg timestamp="20200920 13:05:57.728" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:05:57.729" starttime="20200920 13:05:57.717"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 13:05:57.729" level="INFO">${random} = 14716</msg>
<status status="PASS" endtime="20200920 13:05:57.729" starttime="20200920 13:05:57.729"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:05:57.732" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-14716 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:06:01.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:06:01.523" level="INFO">${output} = 2020-09-20 13:05:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:05:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200920 13:06:01.523" starttime="20200920 13:05:57.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:06:01.524" level="INFO">2020-09-20 13:05:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:05:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:05:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:06:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:06:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7BF80780FE97-&gt;fd2c8640-e20a-4812-994a-a2e302d5320d
2020-09-20 13:06:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200920 13:06:01.525" starttime="20200920 13:06:01.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:06:01.525" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:06:01.525" starttime="20200920 13:06:01.525"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:01.525" starttime="20200920 13:05:57.730"></status>
</kw>
<msg timestamp="20200920 13:06:01.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:06:01.526" starttime="20200920 13:05:57.730"></status>
</kw>
<msg timestamp="20200920 13:06:01.526" level="INFO">${result} = 2020-09-20 13:05:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:05:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200920 13:06:01.526" starttime="20200920 13:05:57.729"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:06:01.529" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:06:03.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:06:03.557" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:04 ofs://om/volume1/bucket1/ozone-10133
-rw-...</msg>
<status status="PASS" endtime="20200920 13:06:03.558" starttime="20200920 13:06:01.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:06:03.559" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:04 ofs://om/volume1/bucket1/ozone-10133
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:06 ofs://om/volume1/bucket1/ozone-14716
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:04 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:05 ofs://om/volume1/bucket1/wordcount-06.txt</msg>
<status status="PASS" endtime="20200920 13:06:03.559" starttime="20200920 13:06:03.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:06:03.559" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:06:03.559" starttime="20200920 13:06:03.559"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:03.560" starttime="20200920 13:06:01.527"></status>
</kw>
<msg timestamp="20200920 13:06:03.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:06:03.560" starttime="20200920 13:06:01.527"></status>
</kw>
<msg timestamp="20200920 13:06:03.560" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:04 ofs://om/volume1/bucket1/ozone-10133
-rw-...</msg>
<status status="PASS" endtime="20200920 13:06:03.560" starttime="20200920 13:06:01.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:06:03.561" starttime="20200920 13:06:03.560"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 13:06:03.561" critical="yes" starttime="20200920 13:05:57.716"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200920 13:06:03.562" starttime="20200920 13:05:57.657"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:04:15.836" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:04:15.836" starttime="20200920 13:04:15.834"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:04:15.837" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:04:15.837" starttime="20200920 13:04:15.836"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:15.837" starttime="20200920 13:04:15.834"></status>
</kw>
<msg timestamp="20200920 13:04:15.837" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:04:15.837" starttime="20200920 13:04:15.834"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:15.837" starttime="20200920 13:04:15.833"></status>
</kw>
<msg timestamp="20200920 13:04:15.837" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:04:15.837" starttime="20200920 13:04:15.832"></status>
</kw>
<msg timestamp="20200920 13:04:15.837" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:04:15.838" starttime="20200920 13:04:15.831"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 13:04:15.838" level="INFO">${random} = 10133</msg>
<status status="PASS" endtime="20200920 13:04:15.838" starttime="20200920 13:04:15.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:04:15.841" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-10133 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:04:20.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:04:20.175" level="INFO">${output} = 2020-09-20 13:04:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:04:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200920 13:04:20.175" starttime="20200920 13:04:15.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:04:20.176" level="INFO">2020-09-20 13:04:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:04:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:04:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:04:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:04:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CEF2C81C18FB-&gt;fd2c8640-e20a-4812-994a-a2e302d5320d
2020-09-20 13:04:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200920 13:04:20.176" starttime="20200920 13:04:20.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:04:20.177" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:04:20.177" starttime="20200920 13:04:20.176"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:20.177" starttime="20200920 13:04:15.839"></status>
</kw>
<msg timestamp="20200920 13:04:20.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:04:20.177" starttime="20200920 13:04:15.839"></status>
</kw>
<msg timestamp="20200920 13:04:20.177" level="INFO">${result} = 2020-09-20 13:04:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:04:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200920 13:04:20.178" starttime="20200920 13:04:15.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:04:20.181" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:04:22.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:04:22.194" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:04 o3fs://bucket1.volume1.om/ozone-10133
dr...</msg>
<status status="PASS" endtime="20200920 13:04:22.194" starttime="20200920 13:04:20.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:04:22.196" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:04 o3fs://bucket1.volume1.om/ozone-10133
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:04 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200920 13:04:22.196" starttime="20200920 13:04:22.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:04:22.197" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:04:22.197" starttime="20200920 13:04:22.196"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:22.197" starttime="20200920 13:04:20.178"></status>
</kw>
<msg timestamp="20200920 13:04:22.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:04:22.197" starttime="20200920 13:04:20.178"></status>
</kw>
<msg timestamp="20200920 13:04:22.197" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:04 o3fs://bucket1.volume1.om/ozone-10133
dr...</msg>
<status status="PASS" endtime="20200920 13:04:22.197" starttime="20200920 13:04:20.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:04:22.198" starttime="20200920 13:04:22.198"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 13:04:22.199" critical="yes" starttime="20200920 13:04:15.830"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200920 13:04:22.200" starttime="20200920 13:04:15.781"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:06:08.795" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:06:08.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:06:08.804" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:06:08.805" starttime="20200920 13:06:08.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:06:08.805" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:06:08.805" starttime="20200920 13:06:08.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:06:08.806" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:06:08.806" starttime="20200920 13:06:08.806"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:08.806" starttime="20200920 13:06:08.792"></status>
</kw>
<msg timestamp="20200920 13:06:08.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:06:08.806" starttime="20200920 13:06:08.792"></status>
</kw>
<msg timestamp="20200920 13:06:08.807" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:06:08.807" starttime="20200920 13:06:08.792"></status>
</kw>
<msg timestamp="20200920 13:06:08.807" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:06:08.807" starttime="20200920 13:06:08.791"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:06:08.810" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:06:08.810" starttime="20200920 13:06:08.810"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:06:08.811" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:06:08.811" starttime="20200920 13:06:08.811"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:08.811" starttime="20200920 13:06:08.810"></status>
</kw>
<msg timestamp="20200920 13:06:08.811" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:06:08.811" starttime="20200920 13:06:08.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:06:08.813" starttime="20200920 13:06:08.812"></status>
</kw>
<msg timestamp="20200920 13:06:08.813" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 13:06:08.813" starttime="20200920 13:06:08.812"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:08.813" starttime="20200920 13:06:08.808"></status>
</kw>
<msg timestamp="20200920 13:06:08.813" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:06:08.813" starttime="20200920 13:06:08.808"></status>
</kw>
<msg timestamp="20200920 13:06:08.814" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:06:08.814" starttime="20200920 13:06:08.807"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:06:08.817" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:06:55.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:06:55.470" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:06:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:06:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200920 13:06:55.470" starttime="20200920 13:06:08.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:06:55.471" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:06:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:06:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:06:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:06:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:06:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-065E62068BA0-&gt;fd2c8640-e20a-4812-994a-a2e302d5320d
2020-09-20 13:06:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-20 13:06:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-20 13:06:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 13:06:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 13:06:18 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 13:06:18 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-20 13:06:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600606984392_0003
2020-09-20 13:06:20 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-20 13:06:21 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 13:06:21 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-20 13:06:21 INFO  YarnClientImpl:311 - Submitted application application_1600606984392_0003
2020-09-20 13:06:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600606984392_0003/
2020-09-20 13:06:21 INFO  Job:1619 - Running job: job_1600606984392_0003
2020-09-20 13:06:29 INFO  Job:1640 - Job job_1600606984392_0003 running in uber mode : false
2020-09-20 13:06:29 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 13:06:36 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 13:06:42 INFO  Job:1647 -  map 67% reduce 0%
2020-09-20 13:06:47 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 13:06:53 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 13:06:54 INFO  Job:1658 - Job job_1600606984392_0003 completed successfully
2020-09-20 13:06:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1042445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44468
		Total time spent by all reduces in occupied slots (ms)=16536
		Total time spent by all map tasks (ms)=11117
		Total time spent by all reduce tasks (ms)=4134
		Total vcore-milliseconds taken by all map tasks=11117
		Total vcore-milliseconds taken by all reduce tasks=4134
		Total megabyte-milliseconds taken by all map tasks=45535232
		Total megabyte-milliseconds taken by all reduce tasks=16932864
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=682
		CPU time spent (ms)=8130
		Physical memory (bytes) snapshot=1383489536
		Virtual memory (bytes) snapshot=16040890368
		Total committed heap usage (bytes)=1600651264
		Peak Map Physical memory (bytes)=353546240
		Peak Map Virtual memory (bytes)=4013641728
		Peak Reduce Physical memory (bytes)=335843328
		Peak Reduce Virtual memory (bytes)=4002562048
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.587 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200920 13:06:55.472" starttime="20200920 13:06:55.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:06:55.472" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:06:55.472" starttime="20200920 13:06:55.472"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:55.472" starttime="20200920 13:06:08.815"></status>
</kw>
<msg timestamp="20200920 13:06:55.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:06:55.473" starttime="20200920 13:06:08.814"></status>
</kw>
<msg timestamp="20200920 13:06:55.473" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:06:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:06:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200920 13:06:55.473" starttime="20200920 13:06:08.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 13:06:55.474" starttime="20200920 13:06:55.474"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 13:06:55.474" critical="yes" starttime="20200920 13:06:08.791"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:06:55.479" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:06:55.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:06:55.485" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:06:55.486" starttime="20200920 13:06:55.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:06:55.487" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:06:55.487" starttime="20200920 13:06:55.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:06:55.488" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:06:55.488" starttime="20200920 13:06:55.487"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:55.488" starttime="20200920 13:06:55.477"></status>
</kw>
<msg timestamp="20200920 13:06:55.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:06:55.488" starttime="20200920 13:06:55.476"></status>
</kw>
<msg timestamp="20200920 13:06:55.488" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:06:55.488" starttime="20200920 13:06:55.476"></status>
</kw>
<msg timestamp="20200920 13:06:55.489" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:06:55.489" starttime="20200920 13:06:55.475"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 13:06:55.489" level="INFO">${random} = 55</msg>
<status status="PASS" endtime="20200920 13:06:55.489" starttime="20200920 13:06:55.489"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:06:55.493" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:06:55.493" starttime="20200920 13:06:55.492"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:06:55.494" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:06:55.494" starttime="20200920 13:06:55.493"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:55.494" starttime="20200920 13:06:55.492"></status>
</kw>
<msg timestamp="20200920 13:06:55.494" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:06:55.494" starttime="20200920 13:06:55.492"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:06:55.495" starttime="20200920 13:06:55.495"></status>
</kw>
<msg timestamp="20200920 13:06:55.495" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 13:06:55.495" starttime="20200920 13:06:55.494"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:55.495" starttime="20200920 13:06:55.491"></status>
</kw>
<msg timestamp="20200920 13:06:55.496" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:06:55.496" starttime="20200920 13:06:55.490"></status>
</kw>
<msg timestamp="20200920 13:06:55.496" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:06:55.496" starttime="20200920 13:06:55.489"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:06:55.499" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:06:55.499" starttime="20200920 13:06:55.499"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:06:55.500" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:06:55.500" starttime="20200920 13:06:55.499"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:55.500" starttime="20200920 13:06:55.498"></status>
</kw>
<msg timestamp="20200920 13:06:55.500" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:06:55.500" starttime="20200920 13:06:55.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:06:55.502" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200920 13:06:55.502" starttime="20200920 13:06:55.501"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:06:55.503" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200920 13:06:55.503" starttime="20200920 13:06:55.502"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:55.503" starttime="20200920 13:06:55.501"></status>
</kw>
<msg timestamp="20200920 13:06:55.503" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200920 13:06:55.503" starttime="20200920 13:06:55.500"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:55.503" starttime="20200920 13:06:55.497"></status>
</kw>
<msg timestamp="20200920 13:06:55.503" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200920 13:06:55.503" starttime="20200920 13:06:55.497"></status>
</kw>
<msg timestamp="20200920 13:06:55.504" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200920 13:06:55.504" starttime="20200920 13:06:55.496"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:06:55.507" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:06:55.507" starttime="20200920 13:06:55.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:06:55.508" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:06:55.508" starttime="20200920 13:06:55.507"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:55.508" starttime="20200920 13:06:55.506"></status>
</kw>
<msg timestamp="20200920 13:06:55.508" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:06:55.508" starttime="20200920 13:06:55.506"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:06:55.510" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200920 13:06:55.510" starttime="20200920 13:06:55.509"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:06:55.510" level="INFO">${result} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20200920 13:06:55.510" starttime="20200920 13:06:55.510"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:55.511" starttime="20200920 13:06:55.509"></status>
</kw>
<msg timestamp="20200920 13:06:55.511" level="INFO">${path_with_leading} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20200920 13:06:55.511" starttime="20200920 13:06:55.508"></status>
</kw>
<status status="PASS" endtime="20200920 13:06:55.511" starttime="20200920 13:06:55.505"></status>
</kw>
<msg timestamp="20200920 13:06:55.511" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20200920 13:06:55.511" starttime="20200920 13:06:55.504"></status>
</kw>
<msg timestamp="20200920 13:06:55.511" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20200920 13:06:55.511" starttime="20200920 13:06:55.504"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:06:55.514" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:07:35.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:07:35.629" level="INFO">${output} = 2020-09-20 13:06:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-20 13:06:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200920 13:07:35.629" starttime="20200920 13:06:55.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:07:35.631" level="INFO">2020-09-20 13:06:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-20 13:06:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 13:06:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:06:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:06:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:06:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:06:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9FD81D75ECD6-&gt;fd2c8640-e20a-4812-994a-a2e302d5320d
2020-09-20 13:06:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-20 13:06:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 13:07:02 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 13:07:02 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-20 13:07:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600606984392_0004
2020-09-20 13:07:02 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-20 13:07:02 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 13:07:02 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-20 13:07:02 INFO  YarnClientImpl:311 - Submitted application application_1600606984392_0004
2020-09-20 13:07:02 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600606984392_0004/
2020-09-20 13:07:02 INFO  Job:1619 - Running job: job_1600606984392_0004
2020-09-20 13:07:10 INFO  Job:1640 - Job job_1600606984392_0004 running in uber mode : false
2020-09-20 13:07:10 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 13:07:18 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 13:07:24 INFO  Job:1647 -  map 67% reduce 0%
2020-09-20 13:07:30 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 13:07:34 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 13:07:35 INFO  Job:1658 - Job job_1600606984392_0004 completed successfully
2020-09-20 13:07:35 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105133
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43836
		Total time spent by all reduces in occupied slots (ms)=16260
		Total time spent by all map tasks (ms)=10959
		Total time spent by all reduce tasks (ms)=4065
		Total vcore-milliseconds taken by all map tasks=10959
		Total vcore-milliseconds taken by all reduce tasks=4065
		Total megabyte-milliseconds taken by all map tasks=44888064
		Total megabyte-milliseconds taken by all reduce tasks=16650240
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=660
		CPU time spent (ms)=7850
		Physical memory (bytes) snapshot=1383628800
		Virtual memory (bytes) snapshot=16034717696
		Total committed heap usage (bytes)=1523056640
		Peak Map Physical memory (bytes)=349184000
		Peak Map Virtual memory (bytes)=4009922560
		Peak Reduce Physical memory (bytes)=365760512
		Peak Reduce Virtual memory (bytes)=4018806784
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200920 13:07:35.632" starttime="20200920 13:07:35.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:07:35.633" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:07:35.633" starttime="20200920 13:07:35.632"></status>
</kw>
<status status="PASS" endtime="20200920 13:07:35.633" starttime="20200920 13:06:55.512"></status>
</kw>
<msg timestamp="20200920 13:07:35.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:07:35.634" starttime="20200920 13:06:55.512"></status>
</kw>
<msg timestamp="20200920 13:07:35.635" level="INFO">${output} = 2020-09-20 13:06:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-20 13:06:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200920 13:07:35.635" starttime="20200920 13:06:55.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200920 13:07:35.635" starttime="20200920 13:07:35.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 13:07:35.636" starttime="20200920 13:07:35.635"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 13:07:35.636" critical="yes" starttime="20200920 13:06:55.475"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200920 13:07:35.637" starttime="20200920 13:06:08.745"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:04:27.396" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:04:27.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:04:27.406" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:04:27.406" starttime="20200920 13:04:27.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:04:27.407" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:04:27.407" starttime="20200920 13:04:27.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:04:27.408" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:04:27.408" starttime="20200920 13:04:27.407"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:27.408" starttime="20200920 13:04:27.394"></status>
</kw>
<msg timestamp="20200920 13:04:27.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:04:27.408" starttime="20200920 13:04:27.393"></status>
</kw>
<msg timestamp="20200920 13:04:27.409" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:04:27.409" starttime="20200920 13:04:27.393"></status>
</kw>
<msg timestamp="20200920 13:04:27.409" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:04:27.409" starttime="20200920 13:04:27.393"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:04:27.412" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:04:27.412" starttime="20200920 13:04:27.412"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:04:27.413" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:04:27.413" starttime="20200920 13:04:27.413"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:27.413" starttime="20200920 13:04:27.411"></status>
</kw>
<msg timestamp="20200920 13:04:27.414" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:04:27.414" starttime="20200920 13:04:27.411"></status>
</kw>
<status status="PASS" endtime="20200920 13:04:27.414" starttime="20200920 13:04:27.410"></status>
</kw>
<msg timestamp="20200920 13:04:27.414" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:04:27.414" starttime="20200920 13:04:27.410"></status>
</kw>
<msg timestamp="20200920 13:04:27.414" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:04:27.414" starttime="20200920 13:04:27.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:04:27.418" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:05:10.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:05:10.105" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:04:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:04:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200920 13:05:10.105" starttime="20200920 13:04:27.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:05:10.106" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:04:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:04:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:04:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:04:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:04:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2F11DF24C883-&gt;fd2c8640-e20a-4812-994a-a2e302d5320d
2020-09-20 13:04:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-20 13:04:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-20 13:04:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 13:04:32 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 13:04:32 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-20 13:04:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600606984392_0001
2020-09-20 13:04:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-20 13:04:32 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 13:04:32 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-20 13:04:32 INFO  YarnClientImpl:311 - Submitted application application_1600606984392_0001
2020-09-20 13:04:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600606984392_0001/
2020-09-20 13:04:32 INFO  Job:1619 - Running job: job_1600606984392_0001
2020-09-20 13:04:44 INFO  Job:1640 - Job job_1600606984392_0001 running in uber mode : false
2020-09-20 13:04:44 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 13:04:51 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 13:04:57 INFO  Job:1647 -  map 67% reduce 0%
2020-09-20 13:05:03 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 13:05:08 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 13:05:09 INFO  Job:1658 - Job job_1600606984392_0001 completed successfully
2020-09-20 13:05:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1042685
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44016
		Total time spent by all reduces in occupied slots (ms)=17300
		Total time spent by all map tasks (ms)=11004
		Total time spent by all reduce tasks (ms)=4325
		Total vcore-milliseconds taken by all map tasks=11004
		Total vcore-milliseconds taken by all reduce tasks=4325
		Total megabyte-milliseconds taken by all map tasks=45072384
		Total megabyte-milliseconds taken by all reduce tasks=17715200
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=696
		CPU time spent (ms)=8000
		Physical memory (bytes) snapshot=1401266176
		Virtual memory (bytes) snapshot=16041246720
		Total committed heap usage (bytes)=1548746752
		Peak Map Physical memory (bytes)=363008000
		Peak Map Virtual memory (bytes)=4017020928
		Peak Reduce Physical memory (bytes)=355770368
		Peak Reduce Virtual memory (bytes)=4014157824
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.441 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200920 13:05:10.107" starttime="20200920 13:05:10.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:05:10.107" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:05:10.107" starttime="20200920 13:05:10.107"></status>
</kw>
<status status="PASS" endtime="20200920 13:05:10.108" starttime="20200920 13:04:27.415"></status>
</kw>
<msg timestamp="20200920 13:05:10.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:05:10.108" starttime="20200920 13:04:27.415"></status>
</kw>
<msg timestamp="20200920 13:05:10.109" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:04:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:04:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200920 13:05:10.109" starttime="20200920 13:04:27.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 13:05:10.109" starttime="20200920 13:05:10.109"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 13:05:10.109" critical="yes" starttime="20200920 13:04:27.392"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:05:10.114" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:05:10.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:05:10.120" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:05:10.120" starttime="20200920 13:05:10.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:05:10.121" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:05:10.121" starttime="20200920 13:05:10.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:05:10.122" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:05:10.122" starttime="20200920 13:05:10.121"></status>
</kw>
<status status="PASS" endtime="20200920 13:05:10.122" starttime="20200920 13:05:10.112"></status>
</kw>
<msg timestamp="20200920 13:05:10.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:05:10.122" starttime="20200920 13:05:10.112"></status>
</kw>
<msg timestamp="20200920 13:05:10.122" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:05:10.122" starttime="20200920 13:05:10.111"></status>
</kw>
<msg timestamp="20200920 13:05:10.123" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:05:10.123" starttime="20200920 13:05:10.111"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 13:05:10.123" level="INFO">${random} = 06</msg>
<status status="PASS" endtime="20200920 13:05:10.123" starttime="20200920 13:05:10.123"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:05:10.127" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:05:10.127" starttime="20200920 13:05:10.126"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:05:10.128" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:05:10.128" starttime="20200920 13:05:10.127"></status>
</kw>
<status status="PASS" endtime="20200920 13:05:10.128" starttime="20200920 13:05:10.126"></status>
</kw>
<msg timestamp="20200920 13:05:10.128" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:05:10.128" starttime="20200920 13:05:10.125"></status>
</kw>
<status status="PASS" endtime="20200920 13:05:10.128" starttime="20200920 13:05:10.125"></status>
</kw>
<msg timestamp="20200920 13:05:10.128" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:05:10.128" starttime="20200920 13:05:10.124"></status>
</kw>
<msg timestamp="20200920 13:05:10.128" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:05:10.129" starttime="20200920 13:05:10.123"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:05:10.132" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:05:10.132" starttime="20200920 13:05:10.131"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:05:10.132" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:05:10.132" starttime="20200920 13:05:10.132"></status>
</kw>
<status status="PASS" endtime="20200920 13:05:10.133" starttime="20200920 13:05:10.131"></status>
</kw>
<msg timestamp="20200920 13:05:10.133" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:05:10.133" starttime="20200920 13:05:10.130"></status>
</kw>
<status status="PASS" endtime="20200920 13:05:10.133" starttime="20200920 13:05:10.130"></status>
</kw>
<msg timestamp="20200920 13:05:10.133" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200920 13:05:10.133" starttime="20200920 13:05:10.129"></status>
</kw>
<msg timestamp="20200920 13:05:10.133" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200920 13:05:10.133" starttime="20200920 13:05:10.129"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:05:10.137" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:05:10.137" starttime="20200920 13:05:10.136"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:05:10.138" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:05:10.138" starttime="20200920 13:05:10.137"></status>
</kw>
<status status="PASS" endtime="20200920 13:05:10.138" starttime="20200920 13:05:10.136"></status>
</kw>
<msg timestamp="20200920 13:05:10.138" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:05:10.138" starttime="20200920 13:05:10.135"></status>
</kw>
<status status="PASS" endtime="20200920 13:05:10.138" starttime="20200920 13:05:10.135"></status>
</kw>
<msg timestamp="20200920 13:05:10.139" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-06.txt</msg>
<status status="PASS" endtime="20200920 13:05:10.139" starttime="20200920 13:05:10.134"></status>
</kw>
<msg timestamp="20200920 13:05:10.139" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-06.txt</msg>
<status status="PASS" endtime="20200920 13:05:10.139" starttime="20200920 13:05:10.133"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:05:10.142" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-06.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:05:52.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:05:52.472" level="INFO">${output} = 2020-09-20 13:05:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-20 13:05:12 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200920 13:05:52.473" starttime="20200920 13:05:10.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:05:52.474" level="INFO">2020-09-20 13:05:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-20 13:05:12 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 13:05:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:05:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:05:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:05:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:05:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FB650EE4DABA-&gt;fd2c8640-e20a-4812-994a-a2e302d5320d
2020-09-20 13:05:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-20 13:05:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 13:05:16 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 13:05:16 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-20 13:05:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600606984392_0002
2020-09-20 13:05:16 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-20 13:05:17 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 13:05:17 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-20 13:05:17 INFO  YarnClientImpl:311 - Submitted application application_1600606984392_0002
2020-09-20 13:05:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600606984392_0002/
2020-09-20 13:05:17 INFO  Job:1619 - Running job: job_1600606984392_0002
2020-09-20 13:05:25 INFO  Job:1640 - Job job_1600606984392_0002 running in uber mode : false
2020-09-20 13:05:25 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 13:05:32 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 13:05:38 INFO  Job:1647 -  map 67% reduce 0%
2020-09-20 13:05:44 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 13:05:50 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 13:05:51 INFO  Job:1658 - Job job_1600606984392_0002 completed successfully
2020-09-20 13:05:52 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105217
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45900
		Total time spent by all reduces in occupied slots (ms)=16272
		Total time spent by all map tasks (ms)=11475
		Total time spent by all reduce tasks (ms)=4068
		Total vcore-milliseconds taken by all map tasks=11475
		Total vcore-milliseconds taken by all reduce tasks=4068
		Total megabyte-milliseconds taken by all map tasks=47001600
		Total megabyte-milliseconds taken by all reduce tasks=16662528
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=720
		CPU time spent (ms)=8290
		Physical memory (bytes) snapshot=1374650368
		Virtual memory (bytes) snapshot=16045592576
		Total committed heap usage (bytes)=1596456960
		Peak Map Physical memory (bytes)=357343232
		Peak Map Virtual memory (bytes)=4018937856
		Peak Reduce Physical memory (bytes)=332394496
		Peak Reduce Virtual memory (bytes)=4009738240
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200920 13:05:52.474" starttime="20200920 13:05:52.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:05:52.474" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:05:52.475" starttime="20200920 13:05:52.474"></status>
</kw>
<status status="PASS" endtime="20200920 13:05:52.475" starttime="20200920 13:05:10.140"></status>
</kw>
<msg timestamp="20200920 13:05:52.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:05:52.475" starttime="20200920 13:05:10.140"></status>
</kw>
<msg timestamp="20200920 13:05:52.476" level="INFO">${output} = 2020-09-20 13:05:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-20 13:05:12 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200920 13:05:52.476" starttime="20200920 13:05:10.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200920 13:05:52.476" starttime="20200920 13:05:52.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 13:05:52.477" starttime="20200920 13:05:52.477"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 13:05:52.477" critical="yes" starttime="20200920 13:05:10.110"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200920 13:05:52.479" starttime="20200920 13:04:27.334"></status>
</suite>
<status status="PASS" elapsedtime="227368" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="640379" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
