<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200920 13:35:37.933" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:31:06.689" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:31:17.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:31:17.848" level="INFO">${output} = 2020-09-20 13:31:08,599 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:08,752 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200920 13:31:17.848" starttime="20200920 13:31:06.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:31:17.849" level="INFO">2020-09-20 13:31:08,599 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:08,752 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:31:08,752 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-20 13:31:11,476 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-09-20 13:31:11,476 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-09-20 13:31:11,477 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-09-20 13:31:11,477 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-09-20 13:31:11,477 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-09-20 13:31:11,477 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-09-20 13:31:11,477 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-09-20 13:31:11,480 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-09-20 13:31:11,488 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-20 13:31:11,549 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-09379, with testuser/scm@EXAMPLE.COM as owner.
2020-09-20 13:31:12,059 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-09379/bucket-0-83513, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-20 13:31:12,498 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-20 13:31:13,506 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-20 13:31:14,506 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-20 13:31:14,869 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-20 13:31:15,507 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,494
Average Time spent in bucket creation: 00:00:00,292
Average Time spent in key creation: 00:00:01,164
Average Time spent in key write: 00:00:01,721
Total bytes written: 10240
Total Execution time: 00:00:08,379
***************************************************</msg>
<status status="PASS" endtime="20200920 13:31:17.849" starttime="20200920 13:31:17.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:31:17.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:31:17.850" starttime="20200920 13:31:17.850"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:17.851" starttime="20200920 13:31:06.684"></status>
</kw>
<msg timestamp="20200920 13:31:17.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:31:17.851" starttime="20200920 13:31:06.683"></status>
</kw>
<msg timestamp="20200920 13:31:17.852" level="INFO">${result} = 2020-09-20 13:31:08,599 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:08,752 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200920 13:31:17.852" starttime="20200920 13:31:06.682"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200920 13:31:17.853" starttime="20200920 13:31:17.853"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:17.854" starttime="20200920 13:31:17.852"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 13:31:17.854" critical="yes" starttime="20200920 13:31:06.681"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:31:17.861" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:31:26.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:31:26.796" level="INFO">${output} = 2020-09-20 13:31:19,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:19,986 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200920 13:31:26.796" starttime="20200920 13:31:17.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:31:26.798" level="INFO">2020-09-20 13:31:19,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:19,986 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:31:19,986 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-20 13:31:20,166 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 5gkfigucyo
2020-09-20 13:31:20,190 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-20 13:31:21,202 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-20 13:31:21,834 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-09-20 13:31:21,924 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-20 13:31:22,203 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-20 13:31:22,642 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-20 13:31:23,034 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:31:23,035 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5061D1BC3788-&gt;91350532-37ed-4bb6-8aca-f9a427607f96
2020-09-20 13:31:23,036 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-20 13:31:23,203 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-20 13:31:24,204 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-20 13:31:25,206 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-20 13:31:26,207 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-20 13:31:26,352 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3496.01771, max=3496.01771, mean=3496.01771, stddev=0.0, median=3496.01771, p75=3496.01771, p95=3496.01771, p98=3496.01771, p99=3496.01771, p999=3496.01771, mean_rate=0.22856441893170712, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-20 13:31:26,353 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-09-20 13:31:26,357 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-20 13:31:26,357 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200920 13:31:26.798" starttime="20200920 13:31:26.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:31:26.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:31:26.799" starttime="20200920 13:31:26.798"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:26.799" starttime="20200920 13:31:17.858"></status>
</kw>
<msg timestamp="20200920 13:31:26.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:31:26.799" starttime="20200920 13:31:17.857"></status>
</kw>
<msg timestamp="20200920 13:31:26.800" level="INFO">${result} = 2020-09-20 13:31:19,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:19,986 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200920 13:31:26.800" starttime="20200920 13:31:17.856"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200920 13:31:26.801" starttime="20200920 13:31:26.801"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:26.801" starttime="20200920 13:31:26.800"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 13:31:26.801" critical="yes" starttime="20200920 13:31:17.855"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:31:26.807" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:31:31.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:31:31.748" level="INFO">${output} = 2020-09-20 13:31:28,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:28,990 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200920 13:31:31.748" starttime="20200920 13:31:26.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:31:31.750" level="INFO">2020-09-20 13:31:28,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:28,990 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:31:28,990 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-20 13:31:29,186 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7hum38qt7q
2020-09-20 13:31:29,204 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-20 13:31:30,211 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-20 13:31:31,215 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-20 13:31:31,694 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=264.328395, max=264.328395, mean=264.328395, stddev=0.0, median=264.328395, p75=264.328395, p95=264.328395, p98=264.328395, p99=264.328395, p999=264.328395, mean_rate=0.9791416902104632, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-20 13:31:31,695 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-09-20 13:31:31,695 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-20 13:31:31,695 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200920 13:31:31.750" starttime="20200920 13:31:31.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:31:31.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:31:31.751" starttime="20200920 13:31:31.750"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:31.752" starttime="20200920 13:31:26.804"></status>
</kw>
<msg timestamp="20200920 13:31:31.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:31:31.752" starttime="20200920 13:31:26.804"></status>
</kw>
<msg timestamp="20200920 13:31:31.752" level="INFO">${result} = 2020-09-20 13:31:28,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:28,990 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200920 13:31:31.753" starttime="20200920 13:31:26.803"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200920 13:31:31.754" starttime="20200920 13:31:31.753"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:31.754" starttime="20200920 13:31:31.753"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 13:31:31.754" critical="yes" starttime="20200920 13:31:26.802"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:31:31.762" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:31:36.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:31:36.753" level="INFO">${output} = 2020-09-20 13:31:33,549 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:33,710 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200920 13:31:36.753" starttime="20200920 13:31:31.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:31:36.755" level="INFO">2020-09-20 13:31:33,549 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:33,710 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:31:33,710 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-20 13:31:33,876 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yfwwqlubtz
2020-09-20 13:31:33,896 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-20 13:31:34,899 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-20 13:31:35,899 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-20 13:31:36,614 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=78.73524, max=78.73524, mean=78.73524, stddev=0.0, median=78.73524, p75=78.73524, p95=78.73524, p98=78.73524, p99=78.73524, p999=78.73524, mean_rate=0.8660191723637153, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-20 13:31:36,615 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-09-20 13:31:36,616 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-20 13:31:36,616 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200920 13:31:36.755" starttime="20200920 13:31:36.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:31:36.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:31:36.756" starttime="20200920 13:31:36.755"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:36.757" starttime="20200920 13:31:31.758"></status>
</kw>
<msg timestamp="20200920 13:31:36.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:31:36.757" starttime="20200920 13:31:31.758"></status>
</kw>
<msg timestamp="20200920 13:31:36.758" level="INFO">${result} = 2020-09-20 13:31:33,549 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-20 13:31:33,710 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200920 13:31:36.758" starttime="20200920 13:31:31.757"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200920 13:31:36.759" starttime="20200920 13:31:36.759"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:36.759" starttime="20200920 13:31:36.758"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 13:31:36.760" critical="yes" starttime="20200920 13:31:31.756"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200920 13:31:36.761" starttime="20200920 13:31:06.650"></status>
</suite>
<status status="PASS" endtime="20200920 13:31:36.765" starttime="20200920 13:31:06.622"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:30:58.599" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:30:58.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:30:58.601" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:30:58.601" starttime="20200920 13:30:58.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:30:58.602" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:30:58.602" starttime="20200920 13:30:58.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:30:58.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:30:58.607" starttime="20200920 13:30:58.603"></status>
</kw>
<status status="PASS" endtime="20200920 13:30:58.607" starttime="20200920 13:30:58.582"></status>
</kw>
<msg timestamp="20200920 13:30:58.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:30:58.608" starttime="20200920 13:30:58.581"></status>
</kw>
<msg timestamp="20200920 13:30:58.608" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:30:58.608" starttime="20200920 13:30:58.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:30:58.609" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:30:58.609" starttime="20200920 13:30:58.608"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:30:58.624" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:30:58.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:30:58.658" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:30:58.658" starttime="20200920 13:30:58.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:30:58.659" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:30:58.659" starttime="20200920 13:30:58.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:30:58.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:30:58.663" starttime="20200920 13:30:58.659"></status>
</kw>
<status status="PASS" endtime="20200920 13:30:58.663" starttime="20200920 13:30:58.610"></status>
</kw>
<msg timestamp="20200920 13:30:58.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:30:58.664" starttime="20200920 13:30:58.610"></status>
</kw>
<status status="PASS" endtime="20200920 13:30:58.664" starttime="20200920 13:30:58.609"></status>
</kw>
<status status="PASS" endtime="20200920 13:30:58.664" starttime="20200920 13:30:58.609"></status>
</kw>
<status status="PASS" endtime="20200920 13:30:58.665" starttime="20200920 13:30:58.580"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:30:58.665" critical="yes" starttime="20200920 13:30:58.578"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200920 13:30:58.672" starttime="20200920 13:30:58.470"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 13:31:42.885" level="INFO">${random} = 12711</msg>
<status status="PASS" endtime="20200920 13:31:42.885" starttime="20200920 13:31:42.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20200920 13:31:42.886" level="INFO">${source} = 12711-source</msg>
<status status="PASS" endtime="20200920 13:31:42.887" starttime="20200920 13:31:42.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20200920 13:31:42.888" level="INFO">${target} = 12711-target</msg>
<status status="PASS" endtime="20200920 13:31:42.888" starttime="20200920 13:31:42.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:31:42.894" level="INFO">Running command 'ozone sh volume create 12711-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:31:46.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:31:46.631" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:31:46.631" starttime="20200920 13:31:42.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:31:46.632" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:31:46.632" starttime="20200920 13:31:46.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:31:46.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:31:46.633" starttime="20200920 13:31:46.632"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:46.633" starttime="20200920 13:31:42.888"></status>
</kw>
<msg timestamp="20200920 13:31:46.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:31:46.633" starttime="20200920 13:31:42.888"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:46.634" starttime="20200920 13:31:42.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:31:46.637" level="INFO">Running command 'ozone sh volume create 12711-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:31:51.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:31:51.226" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:31:51.226" starttime="20200920 13:31:46.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:31:51.227" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:31:51.228" starttime="20200920 13:31:51.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:31:51.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:31:51.228" starttime="20200920 13:31:51.228"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:51.228" starttime="20200920 13:31:46.634"></status>
</kw>
<msg timestamp="20200920 13:31:51.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:31:51.229" starttime="20200920 13:31:46.634"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:51.229" starttime="20200920 13:31:46.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:31:51.235" level="INFO">Running command 'ozone sh bucket create 12711-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:31:55.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:31:55.150" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:31:55.150" starttime="20200920 13:31:51.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:31:55.151" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:31:55.151" starttime="20200920 13:31:55.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:31:55.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:31:55.152" starttime="20200920 13:31:55.151"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:55.152" starttime="20200920 13:31:51.231"></status>
</kw>
<msg timestamp="20200920 13:31:55.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:31:55.152" starttime="20200920 13:31:51.230"></status>
</kw>
<status status="PASS" endtime="20200920 13:31:55.152" starttime="20200920 13:31:51.230"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:31:55.157" level="INFO">Running command 'ozone sh key put 12711-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:01.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:01.040" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:01.040" starttime="20200920 13:31:55.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:01.042" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:32:01.042" starttime="20200920 13:32:01.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:01.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:01.043" starttime="20200920 13:32:01.043"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:01.044" starttime="20200920 13:31:55.153"></status>
</kw>
<msg timestamp="20200920 13:32:01.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:01.044" starttime="20200920 13:31:55.153"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:01.045" starttime="20200920 13:31:55.153"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:01.049" level="INFO">Running command 'ozone sh bucket create 12711-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:04.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:04.857" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:04.857" starttime="20200920 13:32:01.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:04.858" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:32:04.858" starttime="20200920 13:32:04.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:04.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:04.859" starttime="20200920 13:32:04.859"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:04.859" starttime="20200920 13:32:01.046"></status>
</kw>
<msg timestamp="20200920 13:32:04.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:04.860" starttime="20200920 13:32:01.046"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:04.860" starttime="20200920 13:32:01.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:04.866" level="INFO">Running command 'ozone sh bucket link 12711-source/readable-bucket 12711-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:08.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:08.731" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:08.731" starttime="20200920 13:32:04.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:08.732" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:32:08.732" starttime="20200920 13:32:08.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:08.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:08.733" starttime="20200920 13:32:08.732"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:08.733" starttime="20200920 13:32:04.861"></status>
</kw>
<msg timestamp="20200920 13:32:08.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:08.733" starttime="20200920 13:32:04.861"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:08.733" starttime="20200920 13:32:04.860"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:08.738" level="INFO">Running command 'ozone sh bucket link 12711-source/readable-bucket 12711-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:12.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:12.603" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:12.603" starttime="20200920 13:32:08.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:12.604" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:32:12.604" starttime="20200920 13:32:12.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:12.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:12.604" starttime="20200920 13:32:12.604"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:12.605" starttime="20200920 13:32:08.734"></status>
</kw>
<msg timestamp="20200920 13:32:12.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:12.605" starttime="20200920 13:32:08.734"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:12.605" starttime="20200920 13:32:08.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:12.609" level="INFO">Running command 'ozone sh bucket link 12711-source/unreadable-bucket 12711-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:16.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:16.400" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:16.400" starttime="20200920 13:32:12.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:16.401" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:32:16.401" starttime="20200920 13:32:16.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:16.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:16.402" starttime="20200920 13:32:16.401"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:16.402" starttime="20200920 13:32:12.606"></status>
</kw>
<msg timestamp="20200920 13:32:16.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:16.403" starttime="20200920 13:32:12.606"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:16.403" starttime="20200920 13:32:12.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:16.406" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 12711-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:20.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:20.544" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:20.544" starttime="20200920 13:32:16.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:20.547" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200920 13:32:20.547" starttime="20200920 13:32:20.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:20.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:20.548" starttime="20200920 13:32:20.547"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:20.548" starttime="20200920 13:32:16.404"></status>
</kw>
<msg timestamp="20200920 13:32:20.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:20.548" starttime="20200920 13:32:16.403"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:20.549" starttime="20200920 13:32:16.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:20.552" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 12711-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:24.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:24.779" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:24.779" starttime="20200920 13:32:20.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:24.780" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200920 13:32:24.780" starttime="20200920 13:32:24.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:24.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:24.781" starttime="20200920 13:32:24.780"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:24.781" starttime="20200920 13:32:20.550"></status>
</kw>
<msg timestamp="20200920 13:32:24.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:24.781" starttime="20200920 13:32:20.549"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:24.781" starttime="20200920 13:32:20.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:24.786" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 12711-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:28.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:28.717" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:28.717" starttime="20200920 13:32:24.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:28.718" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200920 13:32:28.718" starttime="20200920 13:32:28.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:28.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:28.718" starttime="20200920 13:32:28.718"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:28.719" starttime="20200920 13:32:24.782"></status>
</kw>
<msg timestamp="20200920 13:32:28.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:28.719" starttime="20200920 13:32:24.782"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:28.719" starttime="20200920 13:32:24.782"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:28.725" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 12711-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:32.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:32.768" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:32.768" starttime="20200920 13:32:28.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:32.769" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200920 13:32:32.769" starttime="20200920 13:32:32.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:32.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:32.769" starttime="20200920 13:32:32.769"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:32.770" starttime="20200920 13:32:28.721"></status>
</kw>
<msg timestamp="20200920 13:32:32.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:32.770" starttime="20200920 13:32:28.721"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:32.770" starttime="20200920 13:32:28.720"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:32.775" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 12711-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:36.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:36.707" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:36.708" starttime="20200920 13:32:32.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:36.709" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200920 13:32:36.709" starttime="20200920 13:32:36.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:36.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:36.709" starttime="20200920 13:32:36.709"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:36.710" starttime="20200920 13:32:32.771"></status>
</kw>
<msg timestamp="20200920 13:32:36.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:36.710" starttime="20200920 13:32:32.771"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:36.710" starttime="20200920 13:32:32.770"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:36.710" starttime="20200920 13:31:51.229"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:36.710" starttime="20200920 13:31:51.229"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:36.710" starttime="20200920 13:31:42.884"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:36.717" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:36.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:36.720" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:32:36.721" starttime="20200920 13:32:36.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:36.722" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:32:36.722" starttime="20200920 13:32:36.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:36.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:36.722" starttime="20200920 13:32:36.722"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:36.723" starttime="20200920 13:32:36.714"></status>
</kw>
<msg timestamp="20200920 13:32:36.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:36.723" starttime="20200920 13:32:36.714"></status>
</kw>
<msg timestamp="20200920 13:32:36.723" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:32:36.723" starttime="20200920 13:32:36.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:32:36.724" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:32:36.724" starttime="20200920 13:32:36.723"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:36.730" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:36.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:36.752" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:32:36.752" starttime="20200920 13:32:36.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:36.753" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:32:36.753" starttime="20200920 13:32:36.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:36.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:36.754" starttime="20200920 13:32:36.754"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:36.754" starttime="20200920 13:32:36.726"></status>
</kw>
<msg timestamp="20200920 13:32:36.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:36.755" starttime="20200920 13:32:36.726"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:36.755" starttime="20200920 13:32:36.725"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:36.755" starttime="20200920 13:32:36.725"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:36.755" starttime="20200920 13:32:36.712"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:36.755" starttime="20200920 13:32:36.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:36.759" level="INFO">Running command 'ozone sh bucket link 12711-source/no-such-bucket 12711-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:40.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:40.699" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:40.699" starttime="20200920 13:32:36.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:40.701" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:32:40.701" starttime="20200920 13:32:40.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:40.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:40.702" starttime="20200920 13:32:40.701"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:40.702" starttime="20200920 13:32:36.756"></status>
</kw>
<msg timestamp="20200920 13:32:40.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:40.703" starttime="20200920 13:32:36.756"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:40.703" starttime="20200920 13:32:36.755"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:40.706" level="INFO">Running command 'ozone sh key list 12711-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:44.760" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 13:32:44.760" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:44.760" starttime="20200920 13:32:40.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:44.761" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20200920 13:32:44.761" starttime="20200920 13:32:44.761"></status>
</kw>
<msg timestamp="20200920 13:32:44.762" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:44.762" starttime="20200920 13:32:40.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200920 13:32:44.762" starttime="20200920 13:32:44.762"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:32:44.763" critical="yes" starttime="20200920 13:32:36.711"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:44.771" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:44.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:44.773" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:32:44.773" starttime="20200920 13:32:44.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:44.774" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:32:44.774" starttime="20200920 13:32:44.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:44.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:44.775" starttime="20200920 13:32:44.774"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:44.775" starttime="20200920 13:32:44.767"></status>
</kw>
<msg timestamp="20200920 13:32:44.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:44.775" starttime="20200920 13:32:44.766"></status>
</kw>
<msg timestamp="20200920 13:32:44.775" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:32:44.775" starttime="20200920 13:32:44.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:32:44.776" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:32:44.776" starttime="20200920 13:32:44.776"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:44.781" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:44.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:44.797" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:32:44.797" starttime="20200920 13:32:44.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:44.798" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:32:44.798" starttime="20200920 13:32:44.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:44.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:44.799" starttime="20200920 13:32:44.798"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:44.799" starttime="20200920 13:32:44.778"></status>
</kw>
<msg timestamp="20200920 13:32:44.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:44.800" starttime="20200920 13:32:44.777"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:44.800" starttime="20200920 13:32:44.777"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:44.800" starttime="20200920 13:32:44.776"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:44.800" starttime="20200920 13:32:44.766"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:44.800" starttime="20200920 13:32:44.765"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:44.804" level="INFO">Running command 'ozone sh bucket link 12711-source/bucket1 12711-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:49.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:49.059" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:49.059" starttime="20200920 13:32:44.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:49.061" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:32:49.061" starttime="20200920 13:32:49.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:49.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:49.062" starttime="20200920 13:32:49.061"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:49.062" starttime="20200920 13:32:44.801"></status>
</kw>
<msg timestamp="20200920 13:32:49.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:49.062" starttime="20200920 13:32:44.801"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:49.062" starttime="20200920 13:32:44.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:49.067" level="INFO">Running command 'ozone sh bucket create 12711-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:32:53.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:32:53.456" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:32:53.456" starttime="20200920 13:32:49.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:32:53.458" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:32:53.458" starttime="20200920 13:32:53.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:32:53.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:32:53.458" starttime="20200920 13:32:53.458"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:53.459" starttime="20200920 13:32:49.064"></status>
</kw>
<msg timestamp="20200920 13:32:53.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:32:53.459" starttime="20200920 13:32:49.063"></status>
</kw>
<status status="PASS" endtime="20200920 13:32:53.460" starttime="20200920 13:32:49.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:32:53.465" level="INFO">Running command 'ozone sh key put 12711-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:00.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:00.688" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:33:00.688" starttime="20200920 13:32:53.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:00.689" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:33:00.689" starttime="20200920 13:33:00.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:00.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:00.690" starttime="20200920 13:33:00.689"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:00.690" starttime="20200920 13:32:53.461"></status>
</kw>
<msg timestamp="20200920 13:33:00.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:00.690" starttime="20200920 13:32:53.460"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:00.691" starttime="20200920 13:32:53.460"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200920 13:33:00.693" level="INFO">${postfix} = 38643</msg>
<status status="PASS" endtime="20200920 13:33:00.693" starttime="20200920 13:33:00.692"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200920 13:33:00.693" level="INFO">${tmpfile} = /tmp/tempkey-38643</msg>
<status status="PASS" endtime="20200920 13:33:00.693" starttime="20200920 13:33:00.693"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:00.698" level="INFO">Running command 'ozone sh key get -f 12711-target/link1/key1 /tmp/tempkey-38643 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:07.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:07.091" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:33:07.092" starttime="20200920 13:33:00.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:07.093" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:33:07.093" starttime="20200920 13:33:07.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:07.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:07.094" starttime="20200920 13:33:07.093"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:07.094" starttime="20200920 13:33:00.694"></status>
</kw>
<msg timestamp="20200920 13:33:07.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:07.094" starttime="20200920 13:33:00.694"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:07.095" starttime="20200920 13:33:00.693"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200920 13:33:07.099" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-38643 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:07.100" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200920 13:33:07.100" starttime="20200920 13:33:07.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:07.107" level="INFO">Running command 'rm -f /tmp/tempkey-38643 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:07.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:07.108" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:33:07.108" starttime="20200920 13:33:07.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:07.109" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:33:07.109" starttime="20200920 13:33:07.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:07.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:07.110" starttime="20200920 13:33:07.110"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:07.110" starttime="20200920 13:33:07.102"></status>
</kw>
<msg timestamp="20200920 13:33:07.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:07.111" starttime="20200920 13:33:07.102"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:07.111" starttime="20200920 13:33:07.101"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:33:07.112" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200920 13:33:07.112" starttime="20200920 13:33:07.111"></status>
</kw>
<msg timestamp="20200920 13:33:07.112" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200920 13:33:07.112" starttime="20200920 13:33:00.692"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:33:07.112" starttime="20200920 13:33:07.112"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:07.113" starttime="20200920 13:33:00.691"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:33:07.113" critical="yes" starttime="20200920 13:32:44.764"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:07.121" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:07.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:07.122" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:33:07.122" starttime="20200920 13:33:07.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:07.123" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:33:07.123" starttime="20200920 13:33:07.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:07.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:07.124" starttime="20200920 13:33:07.124"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:07.124" starttime="20200920 13:33:07.117"></status>
</kw>
<msg timestamp="20200920 13:33:07.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:07.125" starttime="20200920 13:33:07.117"></status>
</kw>
<msg timestamp="20200920 13:33:07.125" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:33:07.125" starttime="20200920 13:33:07.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:33:07.126" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:33:07.126" starttime="20200920 13:33:07.125"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:07.131" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:07.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:07.148" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:33:07.148" starttime="20200920 13:33:07.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:07.149" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:33:07.149" starttime="20200920 13:33:07.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:07.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:07.150" starttime="20200920 13:33:07.149"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:07.150" starttime="20200920 13:33:07.127"></status>
</kw>
<msg timestamp="20200920 13:33:07.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:07.150" starttime="20200920 13:33:07.127"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:07.150" starttime="20200920 13:33:07.126"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:07.150" starttime="20200920 13:33:07.126"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:07.150" starttime="20200920 13:33:07.116"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:07.151" starttime="20200920 13:33:07.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:07.155" level="INFO">Running command 'ozone sh key put 12711-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:13.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:13.206" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:33:13.206" starttime="20200920 13:33:07.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:13.207" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:33:13.208" starttime="20200920 13:33:13.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:13.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:13.208" starttime="20200920 13:33:13.208"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:13.209" starttime="20200920 13:33:07.152"></status>
</kw>
<msg timestamp="20200920 13:33:13.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:13.209" starttime="20200920 13:33:07.151"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:13.209" starttime="20200920 13:33:07.151"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200920 13:33:13.211" level="INFO">${postfix} = 19055</msg>
<status status="PASS" endtime="20200920 13:33:13.211" starttime="20200920 13:33:13.210"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200920 13:33:13.211" level="INFO">${tmpfile} = /tmp/tempkey-19055</msg>
<status status="PASS" endtime="20200920 13:33:13.211" starttime="20200920 13:33:13.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:13.216" level="INFO">Running command 'ozone sh key get -f 12711-source/bucket1/key2 /tmp/tempkey-19055 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:19.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:19.360" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:33:19.360" starttime="20200920 13:33:13.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:19.361" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:33:19.361" starttime="20200920 13:33:19.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:19.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:19.362" starttime="20200920 13:33:19.361"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:19.363" starttime="20200920 13:33:13.212"></status>
</kw>
<msg timestamp="20200920 13:33:19.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:19.363" starttime="20200920 13:33:13.212"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:19.363" starttime="20200920 13:33:13.212"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200920 13:33:19.366" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-19055 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:19.369" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200920 13:33:19.369" starttime="20200920 13:33:19.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:19.373" level="INFO">Running command 'rm -f /tmp/tempkey-19055 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:19.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:19.376" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:33:19.376" starttime="20200920 13:33:19.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:19.377" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:33:19.378" starttime="20200920 13:33:19.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:19.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:19.378" starttime="20200920 13:33:19.378"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:19.379" starttime="20200920 13:33:19.370"></status>
</kw>
<msg timestamp="20200920 13:33:19.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:19.379" starttime="20200920 13:33:19.370"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:19.379" starttime="20200920 13:33:19.369"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:33:19.380" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200920 13:33:19.380" starttime="20200920 13:33:19.379"></status>
</kw>
<msg timestamp="20200920 13:33:19.380" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200920 13:33:19.380" starttime="20200920 13:33:13.210"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:33:19.381" starttime="20200920 13:33:19.380"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:19.381" starttime="20200920 13:33:13.209"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:33:19.381" critical="yes" starttime="20200920 13:33:07.114"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:19.395" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:19.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:19.400" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:33:19.400" starttime="20200920 13:33:19.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:19.401" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:33:19.402" starttime="20200920 13:33:19.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:19.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:19.403" starttime="20200920 13:33:19.402"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:19.403" starttime="20200920 13:33:19.385"></status>
</kw>
<msg timestamp="20200920 13:33:19.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:19.403" starttime="20200920 13:33:19.385"></status>
</kw>
<msg timestamp="20200920 13:33:19.404" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:33:19.404" starttime="20200920 13:33:19.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:33:19.405" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:33:19.405" starttime="20200920 13:33:19.404"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:19.409" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:19.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:19.428" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:33:19.428" starttime="20200920 13:33:19.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:19.429" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:33:19.429" starttime="20200920 13:33:19.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:19.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:19.430" starttime="20200920 13:33:19.429"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:19.430" starttime="20200920 13:33:19.406"></status>
</kw>
<msg timestamp="20200920 13:33:19.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:19.431" starttime="20200920 13:33:19.406"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:19.431" starttime="20200920 13:33:19.405"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:19.431" starttime="20200920 13:33:19.405"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:19.431" starttime="20200920 13:33:19.384"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:19.431" starttime="20200920 13:33:19.383"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:19.437" level="INFO">Running command 'ozone sh key list 12711-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:23.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:23.513" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20200920 13:33:23.513" starttime="20200920 13:33:19.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:23.515" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20200920 13:33:23.515" starttime="20200920 13:33:23.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:23.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:23.517" starttime="20200920 13:33:23.515"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:23.517" starttime="20200920 13:33:19.432"></status>
</kw>
<msg timestamp="20200920 13:33:23.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:23.517" starttime="20200920 13:33:19.432"></status>
</kw>
<msg timestamp="20200920 13:33:23.518" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20200920 13:33:23.518" starttime="20200920 13:33:19.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:23.525" level="INFO">Running command 'ozone sh key list 12711-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:27.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:27.922" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20200920 13:33:27.922" starttime="20200920 13:33:23.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:27.924" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20200920 13:33:27.924" starttime="20200920 13:33:27.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:27.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:27.924" starttime="20200920 13:33:27.924"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:27.925" starttime="20200920 13:33:23.520"></status>
</kw>
<msg timestamp="20200920 13:33:27.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:27.925" starttime="20200920 13:33:23.519"></status>
</kw>
<msg timestamp="20200920 13:33:27.925" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20200920 13:33:27.925" starttime="20200920 13:33:23.518"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:33:27.926" starttime="20200920 13:33:27.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200920 13:33:27.927" starttime="20200920 13:33:27.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200920 13:33:27.927" starttime="20200920 13:33:27.927"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:33:27.928" critical="yes" starttime="20200920 13:33:19.382"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:27.934" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:27.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:27.937" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:33:27.937" starttime="20200920 13:33:27.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:27.938" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:33:27.938" starttime="20200920 13:33:27.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:27.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:27.939" starttime="20200920 13:33:27.938"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:27.939" starttime="20200920 13:33:27.931"></status>
</kw>
<msg timestamp="20200920 13:33:27.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:27.939" starttime="20200920 13:33:27.931"></status>
</kw>
<msg timestamp="20200920 13:33:27.940" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:33:27.940" starttime="20200920 13:33:27.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:33:27.940" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:33:27.940" starttime="20200920 13:33:27.940"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:27.945" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:27.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:27.959" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:33:27.959" starttime="20200920 13:33:27.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:27.960" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:33:27.960" starttime="20200920 13:33:27.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:27.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:27.961" starttime="20200920 13:33:27.960"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:27.961" starttime="20200920 13:33:27.942"></status>
</kw>
<msg timestamp="20200920 13:33:27.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:27.961" starttime="20200920 13:33:27.942"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:27.961" starttime="20200920 13:33:27.941"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:27.961" starttime="20200920 13:33:27.941"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:27.961" starttime="20200920 13:33:27.930"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:27.962" starttime="20200920 13:33:27.929"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:27.966" level="INFO">Running command 'ozone sh key delete 12711-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:32.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:32.168" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:33:32.168" starttime="20200920 13:33:27.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:32.169" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:33:32.169" starttime="20200920 13:33:32.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:32.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:32.170" starttime="20200920 13:33:32.169"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:32.170" starttime="20200920 13:33:27.963"></status>
</kw>
<msg timestamp="20200920 13:33:32.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:32.171" starttime="20200920 13:33:27.962"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:32.171" starttime="20200920 13:33:27.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:32.176" level="INFO">Running command 'ozone sh key list 12711-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:36.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:36.420" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200920 13:33:36.420" starttime="20200920 13:33:32.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:36.421" level="INFO">key1</msg>
<status status="PASS" endtime="20200920 13:33:36.421" starttime="20200920 13:33:36.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:36.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:36.422" starttime="20200920 13:33:36.422"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:36.423" starttime="20200920 13:33:32.172"></status>
</kw>
<msg timestamp="20200920 13:33:36.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:36.423" starttime="20200920 13:33:32.172"></status>
</kw>
<msg timestamp="20200920 13:33:36.423" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20200920 13:33:36.423" starttime="20200920 13:33:32.171"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200920 13:33:36.424" starttime="20200920 13:33:36.423"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:33:36.424" critical="yes" starttime="20200920 13:33:27.928"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:36.432" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:36.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:36.434" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:33:36.434" starttime="20200920 13:33:36.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:36.436" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:33:36.436" starttime="20200920 13:33:36.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:36.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:36.436" starttime="20200920 13:33:36.436"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:36.437" starttime="20200920 13:33:36.428"></status>
</kw>
<msg timestamp="20200920 13:33:36.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:36.437" starttime="20200920 13:33:36.428"></status>
</kw>
<msg timestamp="20200920 13:33:36.437" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:33:36.437" starttime="20200920 13:33:36.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:33:36.438" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:33:36.438" starttime="20200920 13:33:36.437"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:36.443" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:36.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:36.458" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:33:36.458" starttime="20200920 13:33:36.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:36.459" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:33:36.459" starttime="20200920 13:33:36.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:36.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:36.460" starttime="20200920 13:33:36.460"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:36.460" starttime="20200920 13:33:36.439"></status>
</kw>
<msg timestamp="20200920 13:33:36.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:36.460" starttime="20200920 13:33:36.439"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:36.461" starttime="20200920 13:33:36.438"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:36.461" starttime="20200920 13:33:36.438"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:36.461" starttime="20200920 13:33:36.427"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:36.461" starttime="20200920 13:33:36.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:36.466" level="INFO">Running command 'ozone sh bucket list 12711-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:40.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:40.989" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:33:40.989" starttime="20200920 13:33:36.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:40.991" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:32:40.487Z",
  "modificationTime" : "2020-09-20T13:32:40.487Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:32:16.234Z",
  "modificationTime" : "2020-09-20T13:32:16.234Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:32:48.843Z",
  "modificationTime" : "2020-09-20T13:32:48.843Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:32:08.500Z",
  "modificationTime" : "2020-09-20T13:32:08.500Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:32:12.494Z",
  "modificationTime" : "2020-09-20T13:32:12.494Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200920 13:33:40.991" starttime="20200920 13:33:40.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:40.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:40.992" starttime="20200920 13:33:40.991"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:40.992" starttime="20200920 13:33:36.462"></status>
</kw>
<msg timestamp="20200920 13:33:40.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:40.992" starttime="20200920 13:33:36.462"></status>
</kw>
<msg timestamp="20200920 13:33:40.992" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:33:40.992" starttime="20200920 13:33:36.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200920 13:33:40.993" starttime="20200920 13:33:40.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20200920 13:33:40.993" starttime="20200920 13:33:40.993"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:33:40.994" critical="yes" starttime="20200920 13:33:36.425"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:41.001" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:41.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:41.006" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:33:41.006" starttime="20200920 13:33:40.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:41.007" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:33:41.007" starttime="20200920 13:33:41.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:41.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:41.008" starttime="20200920 13:33:41.007"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:41.008" starttime="20200920 13:33:40.998"></status>
</kw>
<msg timestamp="20200920 13:33:41.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:41.009" starttime="20200920 13:33:40.998"></status>
</kw>
<msg timestamp="20200920 13:33:41.009" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:33:41.009" starttime="20200920 13:33:40.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:33:41.010" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:33:41.010" starttime="20200920 13:33:41.009"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:41.015" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:41.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:41.028" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:33:41.028" starttime="20200920 13:33:41.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:41.029" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:33:41.029" starttime="20200920 13:33:41.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:41.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:41.030" starttime="20200920 13:33:41.029"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:41.030" starttime="20200920 13:33:41.012"></status>
</kw>
<msg timestamp="20200920 13:33:41.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:41.031" starttime="20200920 13:33:41.011"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:41.031" starttime="20200920 13:33:41.011"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:41.031" starttime="20200920 13:33:41.010"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:41.031" starttime="20200920 13:33:40.997"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:41.031" starttime="20200920 13:33:40.997"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:41.036" level="INFO">Running command 'ozone sh bucket info 12711-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:45.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:45.159" level="INFO">${output} = 12711-source bucket1</msg>
<status status="PASS" endtime="20200920 13:33:45.159" starttime="20200920 13:33:41.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:45.160" level="INFO">12711-source bucket1</msg>
<status status="PASS" endtime="20200920 13:33:45.160" starttime="20200920 13:33:45.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:45.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:45.161" starttime="20200920 13:33:45.160"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:45.161" starttime="20200920 13:33:41.032"></status>
</kw>
<msg timestamp="20200920 13:33:45.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:45.161" starttime="20200920 13:33:41.032"></status>
</kw>
<msg timestamp="20200920 13:33:45.161" level="INFO">${result} = 12711-source bucket1</msg>
<status status="PASS" endtime="20200920 13:33:45.161" starttime="20200920 13:33:41.031"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20200920 13:33:45.162" starttime="20200920 13:33:45.162"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:33:45.162" critical="yes" starttime="20200920 13:33:40.995"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:45.170" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:45.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:45.172" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:33:45.172" starttime="20200920 13:33:45.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:45.173" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:33:45.173" starttime="20200920 13:33:45.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:45.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:45.173" starttime="20200920 13:33:45.173"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:45.174" starttime="20200920 13:33:45.166"></status>
</kw>
<msg timestamp="20200920 13:33:45.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:45.174" starttime="20200920 13:33:45.166"></status>
</kw>
<msg timestamp="20200920 13:33:45.174" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:33:45.174" starttime="20200920 13:33:45.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:33:45.175" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:33:45.175" starttime="20200920 13:33:45.175"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:45.179" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:45.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:45.194" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:33:45.194" starttime="20200920 13:33:45.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:45.195" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:33:45.195" starttime="20200920 13:33:45.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:45.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:45.196" starttime="20200920 13:33:45.195"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:45.196" starttime="20200920 13:33:45.177"></status>
</kw>
<msg timestamp="20200920 13:33:45.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:45.196" starttime="20200920 13:33:45.176"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:45.197" starttime="20200920 13:33:45.176"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:45.197" starttime="20200920 13:33:45.175"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:45.197" starttime="20200920 13:33:45.165"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:45.197" starttime="20200920 13:33:45.165"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:45.202" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 12711-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:49.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:49.139" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:33:49.140" starttime="20200920 13:33:45.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:49.141" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200920 13:33:49.141" starttime="20200920 13:33:49.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:49.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:49.142" starttime="20200920 13:33:49.141"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:49.142" starttime="20200920 13:33:45.198"></status>
</kw>
<msg timestamp="20200920 13:33:49.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:49.142" starttime="20200920 13:33:45.198"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:49.142" starttime="20200920 13:33:45.197"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:49.147" level="INFO">Running command 'ozone sh bucket getacl 12711-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:53.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:53.408" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200920 13:33:53.408" starttime="20200920 13:33:49.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:53.409" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200920 13:33:53.409" starttime="20200920 13:33:53.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:53.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:53.410" starttime="20200920 13:33:53.410"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:53.410" starttime="20200920 13:33:49.144"></status>
</kw>
<msg timestamp="20200920 13:33:53.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:53.411" starttime="20200920 13:33:49.144"></status>
</kw>
<msg timestamp="20200920 13:33:53.411" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200920 13:33:53.411" starttime="20200920 13:33:49.143"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:33:53.412" starttime="20200920 13:33:53.411"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:53.412" starttime="20200920 13:33:49.142"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:53.417" level="INFO">Running command 'ozone sh bucket getacl 12711-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:33:57.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:33:57.761" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:33:57.761" starttime="20200920 13:33:53.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:33:57.762" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:33:57.762" starttime="20200920 13:33:57.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:33:57.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:33:57.763" starttime="20200920 13:33:57.762"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:57.763" starttime="20200920 13:33:53.414"></status>
</kw>
<msg timestamp="20200920 13:33:57.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:33:57.763" starttime="20200920 13:33:53.414"></status>
</kw>
<msg timestamp="20200920 13:33:57.763" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200920 13:33:57.763" starttime="20200920 13:33:53.413"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:33:57.764" starttime="20200920 13:33:57.764"></status>
</kw>
<status status="PASS" endtime="20200920 13:33:57.765" starttime="20200920 13:33:53.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:33:57.770" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 12711-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:01.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:01.990" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:01.990" starttime="20200920 13:33:57.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:01.991" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200920 13:34:01.991" starttime="20200920 13:34:01.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:01.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:01.992" starttime="20200920 13:34:01.991"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:01.992" starttime="20200920 13:33:57.766"></status>
</kw>
<msg timestamp="20200920 13:34:01.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:01.992" starttime="20200920 13:33:57.765"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:01.993" starttime="20200920 13:33:57.765"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:01.998" level="INFO">Running command 'ozone sh bucket getacl 12711-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:06.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:06.300" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:06.300" starttime="20200920 13:34:01.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:06.301" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:06.301" starttime="20200920 13:34:06.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:06.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:06.302" starttime="20200920 13:34:06.302"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:06.302" starttime="20200920 13:34:01.995"></status>
</kw>
<msg timestamp="20200920 13:34:06.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:06.303" starttime="20200920 13:34:01.995"></status>
</kw>
<msg timestamp="20200920 13:34:06.303" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200920 13:34:06.303" starttime="20200920 13:34:01.994"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:34:06.303" starttime="20200920 13:34:06.303"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:06.304" starttime="20200920 13:34:01.993"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:06.312" level="INFO">Running command 'ozone sh bucket getacl 12711-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:12.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:12.207" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20200920 13:34:12.207" starttime="20200920 13:34:06.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:12.209" level="INFO">READ</msg>
<status status="PASS" endtime="20200920 13:34:12.209" starttime="20200920 13:34:12.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:12.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:12.210" starttime="20200920 13:34:12.209"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:12.210" starttime="20200920 13:34:06.306"></status>
</kw>
<msg timestamp="20200920 13:34:12.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:12.210" starttime="20200920 13:34:06.305"></status>
</kw>
<msg timestamp="20200920 13:34:12.210" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20200920 13:34:12.210" starttime="20200920 13:34:06.304"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:34:12.211" starttime="20200920 13:34:12.210"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:12.211" starttime="20200920 13:34:06.304"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:34:12.211" critical="yes" starttime="20200920 13:33:45.164"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:12.219" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:12.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:12.222" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:34:12.222" starttime="20200920 13:34:12.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:12.223" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:34:12.223" starttime="20200920 13:34:12.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:12.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:12.224" starttime="20200920 13:34:12.223"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:12.224" starttime="20200920 13:34:12.216"></status>
</kw>
<msg timestamp="20200920 13:34:12.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:12.224" starttime="20200920 13:34:12.215"></status>
</kw>
<msg timestamp="20200920 13:34:12.225" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:34:12.225" starttime="20200920 13:34:12.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:34:12.225" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:34:12.225" starttime="20200920 13:34:12.225"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:12.231" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:12.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:12.246" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:12.247" starttime="20200920 13:34:12.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:12.248" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:12.248" starttime="20200920 13:34:12.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:12.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:12.249" starttime="20200920 13:34:12.248"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:12.249" starttime="20200920 13:34:12.227"></status>
</kw>
<msg timestamp="20200920 13:34:12.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:12.249" starttime="20200920 13:34:12.227"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:12.250" starttime="20200920 13:34:12.226"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:12.250" starttime="20200920 13:34:12.226"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:12.250" starttime="20200920 13:34:12.213"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:12.250" starttime="20200920 13:34:12.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:12.255" level="INFO">Running command 'ozone sh bucket link 12711-source/bucket2 12711-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:16.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:16.319" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:16.319" starttime="20200920 13:34:12.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:16.321" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:34:16.321" starttime="20200920 13:34:16.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:16.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:16.321" starttime="20200920 13:34:16.321"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:16.322" starttime="20200920 13:34:12.251"></status>
</kw>
<msg timestamp="20200920 13:34:16.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:16.322" starttime="20200920 13:34:12.251"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:16.322" starttime="20200920 13:34:12.251"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:16.325" level="INFO">Running command 'ozone sh bucket create 12711-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:21.350" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 13:34:21.350" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:21.350" starttime="20200920 13:34:16.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:21.351" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200920 13:34:21.351" starttime="20200920 13:34:21.350"></status>
</kw>
<msg timestamp="20200920 13:34:21.352" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:21.352" starttime="20200920 13:34:16.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200920 13:34:21.352" starttime="20200920 13:34:21.352"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:21.363" level="INFO">Running command 'ozone sh bucket create 12711-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:25.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:25.605" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:25.605" starttime="20200920 13:34:21.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:25.607" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:34:25.607" starttime="20200920 13:34:25.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:25.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:25.608" starttime="20200920 13:34:25.607"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:25.608" starttime="20200920 13:34:21.353"></status>
</kw>
<msg timestamp="20200920 13:34:25.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:25.608" starttime="20200920 13:34:21.353"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:25.609" starttime="20200920 13:34:21.353"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:25.613" level="INFO">Running command 'ozone sh bucket link 12711-source/bucket1 12711-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:29.430" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 13:34:29.431" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:29.431" starttime="20200920 13:34:25.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:29.432" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200920 13:34:29.432" starttime="20200920 13:34:29.431"></status>
</kw>
<msg timestamp="20200920 13:34:29.432" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:29.432" starttime="20200920 13:34:25.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200920 13:34:29.433" starttime="20200920 13:34:29.433"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:34:29.434" critical="yes" starttime="20200920 13:34:12.212"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:29.441" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:29.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:29.444" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:34:29.444" starttime="20200920 13:34:29.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:29.446" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:34:29.446" starttime="20200920 13:34:29.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:29.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:29.446" starttime="20200920 13:34:29.446"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.447" starttime="20200920 13:34:29.438"></status>
</kw>
<msg timestamp="20200920 13:34:29.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:29.447" starttime="20200920 13:34:29.438"></status>
</kw>
<msg timestamp="20200920 13:34:29.447" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:34:29.447" starttime="20200920 13:34:29.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:34:29.448" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:34:29.448" starttime="20200920 13:34:29.447"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:29.453" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:29.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:29.468" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:29.468" starttime="20200920 13:34:29.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:29.469" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:29.469" starttime="20200920 13:34:29.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:29.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:29.469" starttime="20200920 13:34:29.469"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.470" starttime="20200920 13:34:29.449"></status>
</kw>
<msg timestamp="20200920 13:34:29.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:29.470" starttime="20200920 13:34:29.449"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.470" starttime="20200920 13:34:29.448"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.470" starttime="20200920 13:34:29.448"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.471" starttime="20200920 13:34:29.437"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.471" starttime="20200920 13:34:29.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:29.477" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:29.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:29.481" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:29.481" starttime="20200920 13:34:29.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:29.486" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:29.486" starttime="20200920 13:34:29.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:29.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:29.487" starttime="20200920 13:34:29.487"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.488" starttime="20200920 13:34:29.473"></status>
</kw>
<msg timestamp="20200920 13:34:29.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:29.488" starttime="20200920 13:34:29.473"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.488" starttime="20200920 13:34:29.472"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:29.494" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:29.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:29.496" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:34:29.496" starttime="20200920 13:34:29.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:29.497" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:34:29.497" starttime="20200920 13:34:29.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:29.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:29.498" starttime="20200920 13:34:29.497"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.498" starttime="20200920 13:34:29.490"></status>
</kw>
<msg timestamp="20200920 13:34:29.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:29.498" starttime="20200920 13:34:29.490"></status>
</kw>
<msg timestamp="20200920 13:34:29.498" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:34:29.498" starttime="20200920 13:34:29.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:34:29.499" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:34:29.499" starttime="20200920 13:34:29.498"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:29.503" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:29.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:29.525" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:29.525" starttime="20200920 13:34:29.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:29.526" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:29.526" starttime="20200920 13:34:29.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:29.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:29.527" starttime="20200920 13:34:29.526"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.527" starttime="20200920 13:34:29.500"></status>
</kw>
<msg timestamp="20200920 13:34:29.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:29.528" starttime="20200920 13:34:29.500"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.528" starttime="20200920 13:34:29.500"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.528" starttime="20200920 13:34:29.499"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.528" starttime="20200920 13:34:29.489"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:29.528" starttime="20200920 13:34:29.488"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:29.533" level="INFO">Running command 'ozone sh key list 12711-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:33.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:33.355" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:33.355" starttime="20200920 13:34:29.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:33.359" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "12711-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-09-20T13:31:58.531Z",
  "modificationTime" : "2020-09-20T13:32:00.588Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20200920 13:34:33.360" starttime="20200920 13:34:33.356"></status>
</kw>
<msg timestamp="20200920 13:34:33.361" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:33.361" starttime="20200920 13:34:29.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200920 13:34:33.362" starttime="20200920 13:34:33.361"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.362" starttime="20200920 13:34:29.472"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.362" starttime="20200920 13:34:29.471"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:34:33.362" critical="yes" starttime="20200920 13:34:29.435"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:33.370" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:33.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:33.374" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:34:33.374" starttime="20200920 13:34:33.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:33.375" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:34:33.375" starttime="20200920 13:34:33.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:33.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:33.376" starttime="20200920 13:34:33.376"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.376" starttime="20200920 13:34:33.367"></status>
</kw>
<msg timestamp="20200920 13:34:33.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:33.377" starttime="20200920 13:34:33.367"></status>
</kw>
<msg timestamp="20200920 13:34:33.377" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:34:33.377" starttime="20200920 13:34:33.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:34:33.378" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:34:33.378" starttime="20200920 13:34:33.377"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:33.389" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:33.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:33.410" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:33.410" starttime="20200920 13:34:33.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:33.411" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:33.411" starttime="20200920 13:34:33.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:33.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:33.412" starttime="20200920 13:34:33.411"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.413" starttime="20200920 13:34:33.386"></status>
</kw>
<msg timestamp="20200920 13:34:33.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:33.413" starttime="20200920 13:34:33.386"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.413" starttime="20200920 13:34:33.378"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.413" starttime="20200920 13:34:33.378"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.413" starttime="20200920 13:34:33.366"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.413" starttime="20200920 13:34:33.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:33.419" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:33.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:33.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:33.423" starttime="20200920 13:34:33.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:33.424" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:33.424" starttime="20200920 13:34:33.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:33.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:33.425" starttime="20200920 13:34:33.424"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.425" starttime="20200920 13:34:33.416"></status>
</kw>
<msg timestamp="20200920 13:34:33.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:33.425" starttime="20200920 13:34:33.416"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.426" starttime="20200920 13:34:33.415"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:33.430" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:33.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:33.433" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:34:33.433" starttime="20200920 13:34:33.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:33.434" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:34:33.434" starttime="20200920 13:34:33.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:33.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:33.435" starttime="20200920 13:34:33.435"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.436" starttime="20200920 13:34:33.427"></status>
</kw>
<msg timestamp="20200920 13:34:33.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:33.436" starttime="20200920 13:34:33.427"></status>
</kw>
<msg timestamp="20200920 13:34:33.436" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:34:33.436" starttime="20200920 13:34:33.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:34:33.437" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:34:33.437" starttime="20200920 13:34:33.436"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:33.441" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:33.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:33.461" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:33.461" starttime="20200920 13:34:33.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:33.462" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:33.462" starttime="20200920 13:34:33.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:33.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:33.463" starttime="20200920 13:34:33.462"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.463" starttime="20200920 13:34:33.438"></status>
</kw>
<msg timestamp="20200920 13:34:33.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:33.463" starttime="20200920 13:34:33.438"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.464" starttime="20200920 13:34:33.437"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.464" starttime="20200920 13:34:33.437"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.464" starttime="20200920 13:34:33.426"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:33.464" starttime="20200920 13:34:33.426"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:33.467" level="INFO">Running command 'ozone sh key list 12711-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:36.810" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 13:34:36.810" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:36.811" starttime="20200920 13:34:33.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:36.812" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20200920 13:34:36.812" starttime="20200920 13:34:36.811"></status>
</kw>
<msg timestamp="20200920 13:34:36.812" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:36.812" starttime="20200920 13:34:33.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200920 13:34:36.813" starttime="20200920 13:34:36.812"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.813" starttime="20200920 13:34:33.414"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.813" starttime="20200920 13:34:33.414"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:34:36.813" critical="yes" starttime="20200920 13:34:33.364"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:36.821" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:36.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:36.822" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:34:36.822" starttime="20200920 13:34:36.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:36.823" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:34:36.823" starttime="20200920 13:34:36.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:36.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:36.824" starttime="20200920 13:34:36.824"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.824" starttime="20200920 13:34:36.817"></status>
</kw>
<msg timestamp="20200920 13:34:36.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:36.825" starttime="20200920 13:34:36.816"></status>
</kw>
<msg timestamp="20200920 13:34:36.825" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:34:36.825" starttime="20200920 13:34:36.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:34:36.826" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:34:36.826" starttime="20200920 13:34:36.825"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:36.831" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:36.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:36.850" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:36.850" starttime="20200920 13:34:36.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:36.851" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:36.852" starttime="20200920 13:34:36.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:36.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:36.852" starttime="20200920 13:34:36.852"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.853" starttime="20200920 13:34:36.828"></status>
</kw>
<msg timestamp="20200920 13:34:36.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:36.853" starttime="20200920 13:34:36.827"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.853" starttime="20200920 13:34:36.826"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.853" starttime="20200920 13:34:36.826"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.853" starttime="20200920 13:34:36.816"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.854" starttime="20200920 13:34:36.815"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:36.860" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:36.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:36.863" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:36.863" starttime="20200920 13:34:36.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:36.864" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:36.864" starttime="20200920 13:34:36.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:36.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:36.865" starttime="20200920 13:34:36.864"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.865" starttime="20200920 13:34:36.856"></status>
</kw>
<msg timestamp="20200920 13:34:36.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:36.866" starttime="20200920 13:34:36.856"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.866" starttime="20200920 13:34:36.855"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:36.870" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:36.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:36.873" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:34:36.873" starttime="20200920 13:34:36.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:36.874" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:34:36.874" starttime="20200920 13:34:36.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:36.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:36.875" starttime="20200920 13:34:36.874"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.875" starttime="20200920 13:34:36.867"></status>
</kw>
<msg timestamp="20200920 13:34:36.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:36.876" starttime="20200920 13:34:36.867"></status>
</kw>
<msg timestamp="20200920 13:34:36.876" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:34:36.876" starttime="20200920 13:34:36.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:34:36.877" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:34:36.877" starttime="20200920 13:34:36.876"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:36.881" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:36.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:36.897" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:36.897" starttime="20200920 13:34:36.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:36.898" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:36.898" starttime="20200920 13:34:36.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:36.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:36.899" starttime="20200920 13:34:36.898"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.899" starttime="20200920 13:34:36.878"></status>
</kw>
<msg timestamp="20200920 13:34:36.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:36.900" starttime="20200920 13:34:36.878"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.900" starttime="20200920 13:34:36.877"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.900" starttime="20200920 13:34:36.877"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.900" starttime="20200920 13:34:36.866"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:36.900" starttime="20200920 13:34:36.866"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:36.906" level="INFO">Running command 'ozone sh bucket info 12711-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:40.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:40.805" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:40.805" starttime="20200920 13:34:36.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:40.807" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:32:16.234Z",
  "modificationTime" : "2020-09-20T13:32:16.234Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "unreadable-bucket"
}</msg>
<status status="PASS" endtime="20200920 13:34:40.807" starttime="20200920 13:34:40.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:40.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:40.808" starttime="20200920 13:34:40.807"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:40.808" starttime="20200920 13:34:36.901"></status>
</kw>
<msg timestamp="20200920 13:34:40.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:40.808" starttime="20200920 13:34:36.901"></status>
</kw>
<msg timestamp="20200920 13:34:40.809" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:40.809" starttime="20200920 13:34:36.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200920 13:34:40.809" starttime="20200920 13:34:40.809"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200920 13:34:40.810" starttime="20200920 13:34:40.809"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:40.817" level="INFO">Running command 'ozone sh key list 12711-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:44.259" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 13:34:44.259" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:44.259" starttime="20200920 13:34:40.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:44.260" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20200920 13:34:44.261" starttime="20200920 13:34:44.260"></status>
</kw>
<msg timestamp="20200920 13:34:44.261" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:44.261" starttime="20200920 13:34:40.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200920 13:34:44.261" starttime="20200920 13:34:44.261"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:44.262" starttime="20200920 13:34:36.855"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:44.262" starttime="20200920 13:34:36.854"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:34:44.262" critical="yes" starttime="20200920 13:34:36.814"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:44.269" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:44.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:44.272" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:34:44.272" starttime="20200920 13:34:44.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:44.273" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:34:44.273" starttime="20200920 13:34:44.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:44.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:44.274" starttime="20200920 13:34:44.273"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:44.274" starttime="20200920 13:34:44.267"></status>
</kw>
<msg timestamp="20200920 13:34:44.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:44.275" starttime="20200920 13:34:44.266"></status>
</kw>
<msg timestamp="20200920 13:34:44.275" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:34:44.275" starttime="20200920 13:34:44.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:34:44.276" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:34:44.276" starttime="20200920 13:34:44.275"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:44.280" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:44.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:44.300" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:44.300" starttime="20200920 13:34:44.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:44.301" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:44.301" starttime="20200920 13:34:44.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:44.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:44.302" starttime="20200920 13:34:44.301"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:44.302" starttime="20200920 13:34:44.278"></status>
</kw>
<msg timestamp="20200920 13:34:44.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:44.303" starttime="20200920 13:34:44.277"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:44.303" starttime="20200920 13:34:44.277"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:44.303" starttime="20200920 13:34:44.276"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:44.303" starttime="20200920 13:34:44.265"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:44.303" starttime="20200920 13:34:44.264"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:44.310" level="INFO">Running command 'ozone sh bucket link 12711-target/loop1 12711-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:48.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:48.047" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:48.047" starttime="20200920 13:34:44.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:48.048" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:34:48.048" starttime="20200920 13:34:48.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:48.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:48.049" starttime="20200920 13:34:48.048"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:48.049" starttime="20200920 13:34:44.305"></status>
</kw>
<msg timestamp="20200920 13:34:48.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:48.050" starttime="20200920 13:34:44.304"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:48.050" starttime="20200920 13:34:44.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:48.056" level="INFO">Running command 'ozone sh bucket link 12711-target/loop2 12711-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:52.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:52.110" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:52.111" starttime="20200920 13:34:48.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:52.112" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:34:52.112" starttime="20200920 13:34:52.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:52.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:52.113" starttime="20200920 13:34:52.112"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:52.113" starttime="20200920 13:34:48.051"></status>
</kw>
<msg timestamp="20200920 13:34:52.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:52.113" starttime="20200920 13:34:48.051"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:52.114" starttime="20200920 13:34:48.050"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:52.121" level="INFO">Running command 'ozone sh bucket link 12711-target/loop3 12711-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:55.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:55.915" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:55.916" starttime="20200920 13:34:52.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:55.917" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:34:55.917" starttime="20200920 13:34:55.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:55.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:55.918" starttime="20200920 13:34:55.917"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:55.918" starttime="20200920 13:34:52.115"></status>
</kw>
<msg timestamp="20200920 13:34:55.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:55.918" starttime="20200920 13:34:52.115"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:55.919" starttime="20200920 13:34:52.114"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:55.923" level="INFO">Running command 'ozone sh key list 12711-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:59.406" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 13:34:59.406" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:59.406" starttime="20200920 13:34:55.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:59.408" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20200920 13:34:59.408" starttime="20200920 13:34:59.407"></status>
</kw>
<msg timestamp="20200920 13:34:59.408" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:34:59.408" starttime="20200920 13:34:55.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20200920 13:34:59.409" starttime="20200920 13:34:59.409"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:34:59.409" critical="yes" starttime="20200920 13:34:44.263"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:59.417" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:59.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:59.420" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:34:59.420" starttime="20200920 13:34:59.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:59.422" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:34:59.422" starttime="20200920 13:34:59.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:59.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:59.422" starttime="20200920 13:34:59.422"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:59.423" starttime="20200920 13:34:59.413"></status>
</kw>
<msg timestamp="20200920 13:34:59.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:59.423" starttime="20200920 13:34:59.413"></status>
</kw>
<msg timestamp="20200920 13:34:59.423" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:34:59.423" starttime="20200920 13:34:59.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:34:59.424" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:34:59.424" starttime="20200920 13:34:59.423"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:59.428" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:34:59.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:34:59.443" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:34:59.443" starttime="20200920 13:34:59.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:34:59.444" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:34:59.444" starttime="20200920 13:34:59.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:34:59.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:34:59.444" starttime="20200920 13:34:59.444"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:59.445" starttime="20200920 13:34:59.425"></status>
</kw>
<msg timestamp="20200920 13:34:59.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:34:59.445" starttime="20200920 13:34:59.425"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:59.445" starttime="20200920 13:34:59.425"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:59.445" starttime="20200920 13:34:59.424"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:59.445" starttime="20200920 13:34:59.412"></status>
</kw>
<status status="PASS" endtime="20200920 13:34:59.445" starttime="20200920 13:34:59.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:34:59.450" level="INFO">Running command 'ozone sh bucket link 12711-source/bucket1 12711-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:35:02.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:35:02.987" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:35:02.987" starttime="20200920 13:34:59.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:35:02.988" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:35:02.988" starttime="20200920 13:35:02.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:35:02.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:35:02.989" starttime="20200920 13:35:02.988"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:02.989" starttime="20200920 13:34:59.446"></status>
</kw>
<msg timestamp="20200920 13:35:02.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:35:02.989" starttime="20200920 13:34:59.446"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:02.990" starttime="20200920 13:34:59.446"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:35:02.995" level="INFO">Running command 'ozone sh key put 12711-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:35:08.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:35:08.836" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:35:08.836" starttime="20200920 13:35:02.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:35:08.838" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:35:08.838" starttime="20200920 13:35:08.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:35:08.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:35:08.839" starttime="20200920 13:35:08.838"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:08.839" starttime="20200920 13:35:02.991"></status>
</kw>
<msg timestamp="20200920 13:35:08.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:35:08.839" starttime="20200920 13:35:02.990"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:08.839" starttime="20200920 13:35:02.990"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200920 13:35:08.842" level="INFO">${postfix} = 45932</msg>
<status status="PASS" endtime="20200920 13:35:08.842" starttime="20200920 13:35:08.841"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200920 13:35:08.842" level="INFO">${tmpfile} = /tmp/tempkey-45932</msg>
<status status="PASS" endtime="20200920 13:35:08.842" starttime="20200920 13:35:08.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:35:08.847" level="INFO">Running command 'ozone sh key get -f 12711-target/link1/key3 /tmp/tempkey-45932 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:35:14.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:35:14.315" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:35:14.315" starttime="20200920 13:35:08.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:35:14.316" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:35:14.316" starttime="20200920 13:35:14.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:35:14.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:35:14.317" starttime="20200920 13:35:14.316"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:14.318" starttime="20200920 13:35:08.843"></status>
</kw>
<msg timestamp="20200920 13:35:14.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:35:14.318" starttime="20200920 13:35:08.843"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:14.318" starttime="20200920 13:35:08.843"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200920 13:35:14.321" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-45932 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:35:14.324" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200920 13:35:14.324" starttime="20200920 13:35:14.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:35:14.329" level="INFO">Running command 'rm -f /tmp/tempkey-45932 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:35:14.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:35:14.332" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:35:14.332" starttime="20200920 13:35:14.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:35:14.333" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:35:14.333" starttime="20200920 13:35:14.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:35:14.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:35:14.335" starttime="20200920 13:35:14.333"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:14.335" starttime="20200920 13:35:14.325"></status>
</kw>
<msg timestamp="20200920 13:35:14.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:35:14.336" starttime="20200920 13:35:14.325"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:14.336" starttime="20200920 13:35:14.324"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:35:14.337" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200920 13:35:14.337" starttime="20200920 13:35:14.336"></status>
</kw>
<msg timestamp="20200920 13:35:14.337" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200920 13:35:14.337" starttime="20200920 13:35:08.840"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:35:14.338" starttime="20200920 13:35:14.338"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:14.338" starttime="20200920 13:35:08.840"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:35:14.338" critical="yes" starttime="20200920 13:34:59.410"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:35:14.345" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:35:14.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:35:14.348" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200920 13:35:14.348" starttime="20200920 13:35:14.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:35:14.349" level="INFO">scm</msg>
<status status="PASS" endtime="20200920 13:35:14.349" starttime="20200920 13:35:14.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:35:14.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:35:14.350" starttime="20200920 13:35:14.349"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:14.350" starttime="20200920 13:35:14.342"></status>
</kw>
<msg timestamp="20200920 13:35:14.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:35:14.350" starttime="20200920 13:35:14.342"></status>
</kw>
<msg timestamp="20200920 13:35:14.350" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200920 13:35:14.350" starttime="20200920 13:35:14.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:35:14.351" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:35:14.351" starttime="20200920 13:35:14.351"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:35:14.357" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:35:14.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:35:14.375" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:35:14.375" starttime="20200920 13:35:14.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:35:14.376" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:35:14.376" starttime="20200920 13:35:14.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:35:14.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:35:14.377" starttime="20200920 13:35:14.376"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:14.377" starttime="20200920 13:35:14.353"></status>
</kw>
<msg timestamp="20200920 13:35:14.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:35:14.377" starttime="20200920 13:35:14.352"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:14.378" starttime="20200920 13:35:14.352"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:14.378" starttime="20200920 13:35:14.351"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:14.378" starttime="20200920 13:35:14.340"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:14.378" starttime="20200920 13:35:14.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:35:14.385" level="INFO">Running command 'ozone sh bucket delete 12711-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:35:18.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:35:18.346" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:35:18.346" starttime="20200920 13:35:14.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:35:18.347" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:35:18.347" starttime="20200920 13:35:18.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:35:18.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:35:18.348" starttime="20200920 13:35:18.348"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:18.348" starttime="20200920 13:35:14.381"></status>
</kw>
<msg timestamp="20200920 13:35:18.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:35:18.349" starttime="20200920 13:35:14.380"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:18.349" starttime="20200920 13:35:14.378"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:35:18.358" level="INFO">Running command 'ozone sh bucket list 12711-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:35:22.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:35:22.742" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:35:22.742" starttime="20200920 13:35:18.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:35:22.743" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:34:25.523Z",
  "modificationTime" : "2020-09-20T13:34:25.523Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:32:40.487Z",
  "modificationTime" : "2020-09-20T13:32:40.487Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:32:16.234Z",
  "modificationTime" : "2020-09-20T13:32:16.234Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:34:16.128Z",
  "modificationTime" : "2020-09-20T13:34:16.128Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "bucket2"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:35:02.914Z",
  "modificationTime" : "2020-09-20T13:35:02.914Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:34:55.740Z",
  "modificationTime" : "2020-09-20T13:34:55.740Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-target",
  "sourceBucket" : "loop3"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:34:47.944Z",
  "modificationTime" : "2020-09-20T13:34:47.944Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-target",
  "sourceBucket" : "loop1"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:34:51.923Z",
  "modificationTime" : "2020-09-20T13:34:51.923Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-target",
  "sourceBucket" : "loop2"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:32:08.500Z",
  "modificationTime" : "2020-09-20T13:32:08.500Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12711-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:32:12.494Z",
  "modificationTime" : "2020-09-20T13:32:12.494Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12711-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200920 13:35:22.743" starttime="20200920 13:35:22.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:35:22.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:35:22.744" starttime="20200920 13:35:22.744"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:22.745" starttime="20200920 13:35:18.350"></status>
</kw>
<msg timestamp="20200920 13:35:22.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:35:22.745" starttime="20200920 13:35:18.350"></status>
</kw>
<msg timestamp="20200920 13:35:22.745" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:35:22.745" starttime="20200920 13:35:18.349"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200920 13:35:22.746" starttime="20200920 13:35:22.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:35:22.752" level="INFO">Running command 'ozone sh key list 12711-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:35:27.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:35:27.027" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20200920 13:35:27.028" starttime="20200920 13:35:22.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:35:27.029" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20200920 13:35:27.029" starttime="20200920 13:35:27.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:35:27.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:35:27.030" starttime="20200920 13:35:27.029"></status>
</kw>
<status status="PASS" endtime="20200920 13:35:27.030" starttime="20200920 13:35:22.748"></status>
</kw>
<msg timestamp="20200920 13:35:27.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:35:27.030" starttime="20200920 13:35:22.747"></status>
</kw>
<msg timestamp="20200920 13:35:27.030" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20200920 13:35:27.030" starttime="20200920 13:35:22.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200920 13:35:27.031" starttime="20200920 13:35:27.030"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:35:27.031" critical="yes" starttime="20200920 13:35:14.339"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20200920 13:35:27.035" starttime="20200920 13:31:42.827"></status>
</suite>
<status status="PASS" elapsedtime="254553" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
