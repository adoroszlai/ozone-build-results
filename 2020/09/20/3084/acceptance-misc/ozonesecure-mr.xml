<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200920 13:29:15.691" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:04.782" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:09.418" level="INFO">${rc} = 255</msg>
<msg timestamp="20200920 13:25:09.418" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:09.418" starttime="20200920 13:25:04.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:09.420" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200920 13:25:09.420" starttime="20200920 13:25:09.419"></status>
</kw>
<msg timestamp="20200920 13:25:09.420" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:09.420" starttime="20200920 13:25:04.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:09.427" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:13.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:25:13.246" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:13.246" starttime="20200920 13:25:09.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:13.247" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:25:13.247" starttime="20200920 13:25:13.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:25:13.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:25:13.248" starttime="20200920 13:25:13.248"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:13.248" starttime="20200920 13:25:09.422"></status>
</kw>
<msg timestamp="20200920 13:25:13.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:25:13.249" starttime="20200920 13:25:09.422"></status>
</kw>
<msg timestamp="20200920 13:25:13.249" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:13.249" starttime="20200920 13:25:09.421"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200920 13:25:13.250" starttime="20200920 13:25:13.249"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:13.250" starttime="20200920 13:25:09.421"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:13.250" starttime="20200920 13:25:09.420"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:13.255" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:16.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:25:16.899" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:16.899" starttime="20200920 13:25:13.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:16.900" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:25:16.900" starttime="20200920 13:25:16.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:25:16.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:25:16.901" starttime="20200920 13:25:16.900"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:16.901" starttime="20200920 13:25:13.252"></status>
</kw>
<msg timestamp="20200920 13:25:16.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:25:16.901" starttime="20200920 13:25:13.251"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:16.902" starttime="20200920 13:25:13.251"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:16.902" starttime="20200920 13:25:13.250"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:16.902" starttime="20200920 13:25:13.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200920 13:25:16.902" starttime="20200920 13:25:16.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:16.907" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:20.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:25:20.844" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:20.844" starttime="20200920 13:25:16.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:20.846" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-20T13:25:16.682Z",
  "modificationTime" : "2020-09-20T13:25:16.682Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200920 13:25:20.846" starttime="20200920 13:25:20.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:25:20.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:25:20.847" starttime="20200920 13:25:20.846"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:20.847" starttime="20200920 13:25:16.904"></status>
</kw>
<msg timestamp="20200920 13:25:20.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:25:20.847" starttime="20200920 13:25:16.903"></status>
</kw>
<msg timestamp="20200920 13:25:20.848" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:20.848" starttime="20200920 13:25:16.903"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200920 13:25:20.848" starttime="20200920 13:25:20.848"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:25:20.852" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:25:20.852" starttime="20200920 13:25:20.852"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:25:20.853" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:25:20.853" starttime="20200920 13:25:20.852"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:20.853" starttime="20200920 13:25:20.851"></status>
</kw>
<msg timestamp="20200920 13:25:20.853" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:25:20.853" starttime="20200920 13:25:20.851"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:20.853" starttime="20200920 13:25:20.850"></status>
</kw>
<msg timestamp="20200920 13:25:20.854" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200920 13:25:20.854" starttime="20200920 13:25:20.849"></status>
</kw>
<msg timestamp="20200920 13:25:20.854" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200920 13:25:20.854" starttime="20200920 13:25:20.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:20.858" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:24.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:25:24.589" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:24.589" starttime="20200920 13:25:20.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:24.590" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:25:24.590" starttime="20200920 13:25:24.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:25:24.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:25:24.591" starttime="20200920 13:25:24.590"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:24.591" starttime="20200920 13:25:20.855"></status>
</kw>
<msg timestamp="20200920 13:25:24.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:25:24.591" starttime="20200920 13:25:20.854"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:24.591" starttime="20200920 13:25:20.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:24.596" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:33.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:25:33.214" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:33.214" starttime="20200920 13:25:24.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:33.215" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:25:33.215" starttime="20200920 13:25:33.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:25:33.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:25:33.216" starttime="20200920 13:25:33.215"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:33.216" starttime="20200920 13:25:24.592"></status>
</kw>
<msg timestamp="20200920 13:25:33.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:25:33.216" starttime="20200920 13:25:24.592"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:33.217" starttime="20200920 13:25:24.592"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:33.221" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:39.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:25:39.135" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:39.135" starttime="20200920 13:25:33.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:39.136" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:25:39.136" starttime="20200920 13:25:39.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:25:39.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:25:39.137" starttime="20200920 13:25:39.137"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:39.138" starttime="20200920 13:25:33.218"></status>
</kw>
<msg timestamp="20200920 13:25:39.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:25:39.138" starttime="20200920 13:25:33.217"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:39.138" starttime="20200920 13:25:33.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:39.142" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:45.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:25:45.079" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:45.079" starttime="20200920 13:25:39.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:45.080" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:25:45.081" starttime="20200920 13:25:45.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:25:45.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:25:45.081" starttime="20200920 13:25:45.081"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:45.082" starttime="20200920 13:25:39.139"></status>
</kw>
<msg timestamp="20200920 13:25:45.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:25:45.082" starttime="20200920 13:25:39.139"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:45.082" starttime="20200920 13:25:39.138"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:25:45.082" critical="yes" starttime="20200920 13:25:04.776"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:25:45.088" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:25:45.088" starttime="20200920 13:25:45.087"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:25:45.088" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:25:45.088" starttime="20200920 13:25:45.088"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:45.089" starttime="20200920 13:25:45.087"></status>
</kw>
<msg timestamp="20200920 13:25:45.089" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:25:45.089" starttime="20200920 13:25:45.086"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:45.089" starttime="20200920 13:25:45.085"></status>
</kw>
<msg timestamp="20200920 13:25:45.089" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200920 13:25:45.089" starttime="20200920 13:25:45.085"></status>
</kw>
<msg timestamp="20200920 13:25:45.089" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200920 13:25:45.089" starttime="20200920 13:25:45.084"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:45.094" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:48.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:25:48.511" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:48.512" starttime="20200920 13:25:45.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:48.513" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:25:48.513" starttime="20200920 13:25:48.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:25:48.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:25:48.514" starttime="20200920 13:25:48.513"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:48.514" starttime="20200920 13:25:45.090"></status>
</kw>
<msg timestamp="20200920 13:25:48.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:25:48.514" starttime="20200920 13:25:45.090"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:48.514" starttime="20200920 13:25:45.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:48.518" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:52.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:25:52.175" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200920 13:25:52.175" starttime="20200920 13:25:48.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:52.176" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200920 13:25:52.176" starttime="20200920 13:25:52.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:25:52.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:25:52.177" starttime="20200920 13:25:52.176"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:52.177" starttime="20200920 13:25:48.515"></status>
</kw>
<msg timestamp="20200920 13:25:52.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:25:52.177" starttime="20200920 13:25:48.515"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:52.178" starttime="20200920 13:25:48.514"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:25:52.178" critical="yes" starttime="20200920 13:25:45.083"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200920 13:25:52.179" starttime="20200920 13:25:04.719"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:27:38.598" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:27:38.598" starttime="20200920 13:27:38.598"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:27:38.599" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:27:38.599" starttime="20200920 13:27:38.599"></status>
</kw>
<status status="PASS" endtime="20200920 13:27:38.599" starttime="20200920 13:27:38.596"></status>
</kw>
<msg timestamp="20200920 13:27:38.599" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:27:38.599" starttime="20200920 13:27:38.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:27:38.601" starttime="20200920 13:27:38.600"></status>
</kw>
<msg timestamp="20200920 13:27:38.601" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 13:27:38.601" starttime="20200920 13:27:38.600"></status>
</kw>
<status status="PASS" endtime="20200920 13:27:38.601" starttime="20200920 13:27:38.595"></status>
</kw>
<msg timestamp="20200920 13:27:38.601" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:27:38.601" starttime="20200920 13:27:38.594"></status>
</kw>
<msg timestamp="20200920 13:27:38.601" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:27:38.601" starttime="20200920 13:27:38.593"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 13:27:38.602" level="INFO">${random} = 90190</msg>
<status status="PASS" endtime="20200920 13:27:38.602" starttime="20200920 13:27:38.601"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:27:38.606" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-90190 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:27:42.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:27:42.674" level="INFO">${output} = 2020-09-20 13:27:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:27:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200920 13:27:42.674" starttime="20200920 13:27:38.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:27:42.675" level="INFO">2020-09-20 13:27:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:27:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:27:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:27:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:27:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5BEE92E87EB9-&gt;5367fcc7-66d5-48b0-bd66-acad9c8852f5
2020-09-20 13:27:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200920 13:27:42.676" starttime="20200920 13:27:42.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:27:42.676" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:27:42.677" starttime="20200920 13:27:42.676"></status>
</kw>
<status status="PASS" endtime="20200920 13:27:42.677" starttime="20200920 13:27:38.603"></status>
</kw>
<msg timestamp="20200920 13:27:42.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:27:42.677" starttime="20200920 13:27:38.603"></status>
</kw>
<msg timestamp="20200920 13:27:42.677" level="INFO">${result} = 2020-09-20 13:27:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:27:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200920 13:27:42.677" starttime="20200920 13:27:38.602"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:27:42.682" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:27:44.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:27:44.992" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:26 ofs://om/volume1/bucket1/ozone-54327
-rw-...</msg>
<status status="PASS" endtime="20200920 13:27:44.992" starttime="20200920 13:27:42.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:27:44.994" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:26 ofs://om/volume1/bucket1/ozone-54327
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:27 ofs://om/volume1/bucket1/ozone-90190
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:25 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:27 ofs://om/volume1/bucket1/wordcount-76.txt</msg>
<status status="PASS" endtime="20200920 13:27:44.995" starttime="20200920 13:27:44.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:27:44.996" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:27:44.996" starttime="20200920 13:27:44.996"></status>
</kw>
<status status="PASS" endtime="20200920 13:27:44.997" starttime="20200920 13:27:42.678"></status>
</kw>
<msg timestamp="20200920 13:27:44.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:27:44.997" starttime="20200920 13:27:42.678"></status>
</kw>
<msg timestamp="20200920 13:27:44.997" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:26 ofs://om/volume1/bucket1/ozone-54327
-rw-...</msg>
<status status="PASS" endtime="20200920 13:27:44.997" starttime="20200920 13:27:42.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:27:44.998" starttime="20200920 13:27:44.997"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 13:27:44.998" critical="yes" starttime="20200920 13:27:38.592"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200920 13:27:45.000" starttime="20200920 13:27:38.537"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:26:03.567" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:26:03.567" starttime="20200920 13:26:03.565"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:26:03.568" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:26:03.568" starttime="20200920 13:26:03.567"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:03.568" starttime="20200920 13:26:03.565"></status>
</kw>
<msg timestamp="20200920 13:26:03.568" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:26:03.568" starttime="20200920 13:26:03.564"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:03.568" starttime="20200920 13:26:03.564"></status>
</kw>
<msg timestamp="20200920 13:26:03.568" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:26:03.568" starttime="20200920 13:26:03.563"></status>
</kw>
<msg timestamp="20200920 13:26:03.568" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:26:03.569" starttime="20200920 13:26:03.562"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 13:26:03.569" level="INFO">${random} = 54327</msg>
<status status="PASS" endtime="20200920 13:26:03.569" starttime="20200920 13:26:03.569"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:26:03.572" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-54327 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:26:08.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:26:08.064" level="INFO">${output} = 2020-09-20 13:26:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:26:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200920 13:26:08.064" starttime="20200920 13:26:03.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:26:08.065" level="INFO">2020-09-20 13:26:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:26:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:26:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:26:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:26:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CDD9A2899EFE-&gt;5367fcc7-66d5-48b0-bd66-acad9c8852f5
2020-09-20 13:26:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200920 13:26:08.065" starttime="20200920 13:26:08.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:26:08.065" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:26:08.066" starttime="20200920 13:26:08.065"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:08.066" starttime="20200920 13:26:03.570"></status>
</kw>
<msg timestamp="20200920 13:26:08.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:26:08.066" starttime="20200920 13:26:03.570"></status>
</kw>
<msg timestamp="20200920 13:26:08.066" level="INFO">${result} = 2020-09-20 13:26:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:26:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200920 13:26:08.066" starttime="20200920 13:26:03.569"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:26:08.070" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:26:10.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:26:10.131" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:26 o3fs://bucket1.volume1.om/ozone-54327
dr...</msg>
<status status="PASS" endtime="20200920 13:26:10.131" starttime="20200920 13:26:08.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:26:10.132" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:26 o3fs://bucket1.volume1.om/ozone-54327
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:25 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200920 13:26:10.133" starttime="20200920 13:26:10.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:26:10.133" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:26:10.133" starttime="20200920 13:26:10.133"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:10.133" starttime="20200920 13:26:08.068"></status>
</kw>
<msg timestamp="20200920 13:26:10.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:26:10.134" starttime="20200920 13:26:08.067"></status>
</kw>
<msg timestamp="20200920 13:26:10.134" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-20 13:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-20 13:26 o3fs://bucket1.volume1.om/ozone-54327
dr...</msg>
<status status="PASS" endtime="20200920 13:26:10.134" starttime="20200920 13:26:08.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:26:10.135" starttime="20200920 13:26:10.134"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200920 13:26:10.135" critical="yes" starttime="20200920 13:26:03.561"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200920 13:26:10.136" starttime="20200920 13:26:03.514"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:57.807" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:57.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:25:57.810" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20200920 13:25:57.810" starttime="20200920 13:25:57.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:57.811" level="INFO">rm</msg>
<status status="PASS" endtime="20200920 13:25:57.811" starttime="20200920 13:25:57.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:25:57.812" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:25:57.812" starttime="20200920 13:25:57.811"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:57.812" starttime="20200920 13:25:57.804"></status>
</kw>
<msg timestamp="20200920 13:25:57.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:25:57.812" starttime="20200920 13:25:57.804"></status>
</kw>
<msg timestamp="20200920 13:25:57.812" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20200920 13:25:57.812" starttime="20200920 13:25:57.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:25:57.814" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:25:57.814" starttime="20200920 13:25:57.813"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:25:57.817" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:25:57.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:25:57.841" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:25:57.841" starttime="20200920 13:25:57.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:25:57.842" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:25:57.842" starttime="20200920 13:25:57.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:25:57.843" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:25:57.843" starttime="20200920 13:25:57.842"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:57.843" starttime="20200920 13:25:57.815"></status>
</kw>
<msg timestamp="20200920 13:25:57.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:25:57.843" starttime="20200920 13:25:57.815"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:57.843" starttime="20200920 13:25:57.814"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:57.844" starttime="20200920 13:25:57.814"></status>
</kw>
<status status="PASS" endtime="20200920 13:25:57.844" starttime="20200920 13:25:57.803"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:25:57.844" critical="yes" starttime="20200920 13:25:57.803"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200920 13:25:57.845" starttime="20200920 13:25:57.762"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:24:59.087" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:24:59.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:24:59.089" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20200920 13:24:59.089" starttime="20200920 13:24:59.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:24:59.090" level="INFO">om</msg>
<status status="PASS" endtime="20200920 13:24:59.090" starttime="20200920 13:24:59.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:24:59.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:24:59.091" starttime="20200920 13:24:59.090"></status>
</kw>
<status status="PASS" endtime="20200920 13:24:59.091" starttime="20200920 13:24:59.081"></status>
</kw>
<msg timestamp="20200920 13:24:59.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:24:59.091" starttime="20200920 13:24:59.081"></status>
</kw>
<msg timestamp="20200920 13:24:59.091" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20200920 13:24:59.091" starttime="20200920 13:24:59.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200920 13:24:59.092" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200920 13:24:59.092" starttime="20200920 13:24:59.091"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:24:59.096" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:24:59.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:24:59.110" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200920 13:24:59.110" starttime="20200920 13:24:59.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:24:59.111" level="INFO"></msg>
<status status="PASS" endtime="20200920 13:24:59.111" starttime="20200920 13:24:59.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:24:59.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:24:59.112" starttime="20200920 13:24:59.111"></status>
</kw>
<status status="PASS" endtime="20200920 13:24:59.112" starttime="20200920 13:24:59.093"></status>
</kw>
<msg timestamp="20200920 13:24:59.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:24:59.112" starttime="20200920 13:24:59.093"></status>
</kw>
<status status="PASS" endtime="20200920 13:24:59.112" starttime="20200920 13:24:59.092"></status>
</kw>
<status status="PASS" endtime="20200920 13:24:59.112" starttime="20200920 13:24:59.092"></status>
</kw>
<status status="PASS" endtime="20200920 13:24:59.112" starttime="20200920 13:24:59.079"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200920 13:24:59.113" critical="yes" starttime="20200920 13:24:59.078"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200920 13:24:59.114" starttime="20200920 13:24:59.027"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:27:50.799" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:27:50.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:27:50.810" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:27:50.810" starttime="20200920 13:27:50.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:27:50.812" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:27:50.813" starttime="20200920 13:27:50.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:27:50.813" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:27:50.813" starttime="20200920 13:27:50.813"></status>
</kw>
<status status="PASS" endtime="20200920 13:27:50.814" starttime="20200920 13:27:50.796"></status>
</kw>
<msg timestamp="20200920 13:27:50.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:27:50.814" starttime="20200920 13:27:50.796"></status>
</kw>
<msg timestamp="20200920 13:27:50.814" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:27:50.814" starttime="20200920 13:27:50.796"></status>
</kw>
<msg timestamp="20200920 13:27:50.814" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:27:50.814" starttime="20200920 13:27:50.795"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:27:50.818" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:27:50.818" starttime="20200920 13:27:50.818"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:27:50.819" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:27:50.819" starttime="20200920 13:27:50.818"></status>
</kw>
<status status="PASS" endtime="20200920 13:27:50.819" starttime="20200920 13:27:50.817"></status>
</kw>
<msg timestamp="20200920 13:27:50.819" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:27:50.819" starttime="20200920 13:27:50.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:27:50.820" starttime="20200920 13:27:50.820"></status>
</kw>
<msg timestamp="20200920 13:27:50.820" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 13:27:50.821" starttime="20200920 13:27:50.820"></status>
</kw>
<status status="PASS" endtime="20200920 13:27:50.821" starttime="20200920 13:27:50.816"></status>
</kw>
<msg timestamp="20200920 13:27:50.821" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:27:50.821" starttime="20200920 13:27:50.815"></status>
</kw>
<msg timestamp="20200920 13:27:50.821" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:27:50.821" starttime="20200920 13:27:50.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:27:50.825" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:28:28.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:28:28.090" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:27:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:27:53 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200920 13:28:28.090" starttime="20200920 13:27:50.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:28:28.091" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:27:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:27:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:27:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:27:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:27:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-57554F7DEDC3-&gt;5367fcc7-66d5-48b0-bd66-acad9c8852f5
2020-09-20 13:27:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-20 13:27:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-09-20 13:27:55 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-09-20 13:27:55 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608475356, maxDate=1601213275356, sequenceNumber=3, masterKeyId=2))
2020-09-20 13:27:55 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8e b1 cc dd ca 2e 38 8e b9 fe fd cc 2e 40 03 48 01 5a 0d 32 39 39 35 32 31 31 39 30 35 39 38 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-20 13:27:55 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608475356, maxDate=1601213275356, sequenceNumber=3, masterKeyId=2)
2020-09-20 13:27:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 13:27:55 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 13:27:56 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 13:27:56 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-20 13:27:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600608260461_0003
2020-09-20 13:27:56 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8e b1 cc dd ca 2e 38 8e b9 fe fd cc 2e 40 03 48 01 5a 0d 32 39 39 35 32 31 31 39 30 35 39 38 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608475356, maxDate=1601213275356, sequenceNumber=3, masterKeyId=2)]
2020-09-20 13:27:56 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 13:27:56 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-20 13:27:56 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-20 13:27:57 INFO  YarnClientImpl:311 - Submitted application application_1600608260461_0003
2020-09-20 13:27:57 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600608260461_0003/
2020-09-20 13:27:57 INFO  Job:1619 - Running job: job_1600608260461_0003
2020-09-20 13:28:06 INFO  Job:1640 - Job job_1600608260461_0003 running in uber mode : false
2020-09-20 13:28:06 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 13:28:17 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 13:28:19 INFO  Job:1647 -  map 67% reduce 0%
2020-09-20 13:28:20 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 13:28:25 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 13:28:27 INFO  Job:1658 - Job job_1600608260461_0003 completed successfully
2020-09-20 13:28:27 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1051981
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52250
		Total time spent by all reduces in occupied slots (ms)=9456
		Total time spent by all map tasks (ms)=26125
		Total time spent by all reduce tasks (ms)=4728
		Total vcore-milliseconds taken by all map tasks=26125
		Total vcore-milliseconds taken by all reduce tasks=4728
		Total megabyte-milliseconds taken by all map tasks=53504000
		Total megabyte-milliseconds taken by all reduce tasks=9682944
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1169
		CPU time spent (ms)=8360
		Physical memory (bytes) snapshot=1293230080
		Virtual memory (bytes) snapshot=14284423168
		Total committed heap usage (bytes)=1426063360
		Peak Map Physical memory (bytes)=369254400
		Peak Map Virtual memory (bytes)=3581267968
		Peak Reduce Physical memory (bytes)=295112704
		Peak Reduce Virtual memory (bytes)=3575820288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.512 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200920 13:28:28.091" starttime="20200920 13:28:28.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:28:28.092" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:28:28.092" starttime="20200920 13:28:28.091"></status>
</kw>
<status status="PASS" endtime="20200920 13:28:28.092" starttime="20200920 13:27:50.823"></status>
</kw>
<msg timestamp="20200920 13:28:28.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:28:28.092" starttime="20200920 13:27:50.822"></status>
</kw>
<msg timestamp="20200920 13:28:28.093" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:27:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:27:53 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200920 13:28:28.093" starttime="20200920 13:27:50.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 13:28:28.094" starttime="20200920 13:28:28.093"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 13:28:28.094" critical="yes" starttime="20200920 13:27:50.795"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:28:28.099" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:28:28.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:28:28.108" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:28:28.108" starttime="20200920 13:28:28.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:28:28.109" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:28:28.109" starttime="20200920 13:28:28.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:28:28.109" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:28:28.109" starttime="20200920 13:28:28.109"></status>
</kw>
<status status="PASS" endtime="20200920 13:28:28.110" starttime="20200920 13:28:28.097"></status>
</kw>
<msg timestamp="20200920 13:28:28.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:28:28.110" starttime="20200920 13:28:28.096"></status>
</kw>
<msg timestamp="20200920 13:28:28.110" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:28:28.110" starttime="20200920 13:28:28.096"></status>
</kw>
<msg timestamp="20200920 13:28:28.110" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:28:28.110" starttime="20200920 13:28:28.095"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 13:28:28.111" level="INFO">${random} = 18</msg>
<status status="PASS" endtime="20200920 13:28:28.111" starttime="20200920 13:28:28.110"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:28:28.114" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:28:28.114" starttime="20200920 13:28:28.114"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:28:28.115" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:28:28.115" starttime="20200920 13:28:28.115"></status>
</kw>
<status status="PASS" endtime="20200920 13:28:28.115" starttime="20200920 13:28:28.114"></status>
</kw>
<msg timestamp="20200920 13:28:28.115" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:28:28.115" starttime="20200920 13:28:28.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200920 13:28:28.117" starttime="20200920 13:28:28.116"></status>
</kw>
<msg timestamp="20200920 13:28:28.117" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200920 13:28:28.117" starttime="20200920 13:28:28.116"></status>
</kw>
<status status="PASS" endtime="20200920 13:28:28.117" starttime="20200920 13:28:28.112"></status>
</kw>
<msg timestamp="20200920 13:28:28.117" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:28:28.117" starttime="20200920 13:28:28.112"></status>
</kw>
<msg timestamp="20200920 13:28:28.117" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200920 13:28:28.117" starttime="20200920 13:28:28.111"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:28:28.121" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:28:28.121" starttime="20200920 13:28:28.121"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:28:28.122" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:28:28.122" starttime="20200920 13:28:28.121"></status>
</kw>
<status status="PASS" endtime="20200920 13:28:28.122" starttime="20200920 13:28:28.120"></status>
</kw>
<msg timestamp="20200920 13:28:28.122" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:28:28.122" starttime="20200920 13:28:28.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:28:28.124" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200920 13:28:28.124" starttime="20200920 13:28:28.123"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:28:28.125" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200920 13:28:28.125" starttime="20200920 13:28:28.124"></status>
</kw>
<status status="PASS" endtime="20200920 13:28:28.125" starttime="20200920 13:28:28.123"></status>
</kw>
<msg timestamp="20200920 13:28:28.125" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200920 13:28:28.125" starttime="20200920 13:28:28.122"></status>
</kw>
<status status="PASS" endtime="20200920 13:28:28.125" starttime="20200920 13:28:28.119"></status>
</kw>
<msg timestamp="20200920 13:28:28.125" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200920 13:28:28.125" starttime="20200920 13:28:28.118"></status>
</kw>
<msg timestamp="20200920 13:28:28.126" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200920 13:28:28.126" starttime="20200920 13:28:28.117"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200920 13:28:28.129" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200920 13:28:28.129" starttime="20200920 13:28:28.129"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:28:28.130" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200920 13:28:28.130" starttime="20200920 13:28:28.129"></status>
</kw>
<status status="PASS" endtime="20200920 13:28:28.130" starttime="20200920 13:28:28.128"></status>
</kw>
<msg timestamp="20200920 13:28:28.130" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200920 13:28:28.130" starttime="20200920 13:28:28.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:28:28.131" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200920 13:28:28.131" starttime="20200920 13:28:28.131"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:28:28.132" level="INFO">${result} = /wordcount-18.txt</msg>
<status status="PASS" endtime="20200920 13:28:28.132" starttime="20200920 13:28:28.132"></status>
</kw>
<status status="PASS" endtime="20200920 13:28:28.132" starttime="20200920 13:28:28.130"></status>
</kw>
<msg timestamp="20200920 13:28:28.132" level="INFO">${path_with_leading} = /wordcount-18.txt</msg>
<status status="PASS" endtime="20200920 13:28:28.132" starttime="20200920 13:28:28.130"></status>
</kw>
<status status="PASS" endtime="20200920 13:28:28.133" starttime="20200920 13:28:28.127"></status>
</kw>
<msg timestamp="20200920 13:28:28.133" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-18.txt</msg>
<status status="PASS" endtime="20200920 13:28:28.133" starttime="20200920 13:28:28.126"></status>
</kw>
<msg timestamp="20200920 13:28:28.133" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-18.txt</msg>
<status status="PASS" endtime="20200920 13:28:28.133" starttime="20200920 13:28:28.126"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:28:28.137" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-18.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:29:06.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:29:06.676" level="INFO">${output} = 2020-09-20 13:28:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-09-20 13:28:30 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
20...</msg>
<status status="PASS" endtime="20200920 13:29:06.676" starttime="20200920 13:28:28.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:29:06.679" level="INFO">2020-09-20 13:28:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-09-20 13:28:30 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-09-20 13:28:30 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608510795, maxDate=1601213310795, sequenceNumber=4, masterKeyId=2))
2020-09-20 13:28:30 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fa c5 ce dd ca 2e 38 fa cd 80 fe cc 2e 40 04 48 01 5a 0d 32 39 39 35 32 31 31 39 30 35 39 38 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-20 13:28:30 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608510795, maxDate=1601213310795, sequenceNumber=4, masterKeyId=2)
2020-09-20 13:28:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 13:28:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:28:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:28:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:28:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:28:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CF03501426CB-&gt;5367fcc7-66d5-48b0-bd66-acad9c8852f5
2020-09-20 13:28:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-20 13:28:33 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 13:28:33 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 13:28:33 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-20 13:28:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600608260461_0004
2020-09-20 13:28:33 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fa c5 ce dd ca 2e 38 fa cd 80 fe cc 2e 40 04 48 01 5a 0d 32 39 39 35 32 31 31 39 30 35 39 38 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608510795, maxDate=1601213310795, sequenceNumber=4, masterKeyId=2)]
2020-09-20 13:28:33 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 13:28:33 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-20 13:28:33 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-20 13:28:34 INFO  YarnClientImpl:311 - Submitted application application_1600608260461_0004
2020-09-20 13:28:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600608260461_0004/
2020-09-20 13:28:34 INFO  Job:1619 - Running job: job_1600608260461_0004
2020-09-20 13:28:43 INFO  Job:1640 - Job job_1600608260461_0004 running in uber mode : false
2020-09-20 13:28:43 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 13:28:56 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 13:28:57 INFO  Job:1647 -  map 67% reduce 0%
2020-09-20 13:28:58 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 13:29:02 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 13:29:06 INFO  Job:1658 - Job job_1600608260461_0004 completed successfully
2020-09-20 13:29:06 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1114637
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51612
		Total time spent by all reduces in occupied slots (ms)=8430
		Total time spent by all map tasks (ms)=25806
		Total time spent by all reduce tasks (ms)=4215
		Total vcore-milliseconds taken by all map tasks=25806
		Total vcore-milliseconds taken by all reduce tasks=4215
		Total megabyte-milliseconds taken by all map tasks=52850688
		Total megabyte-milliseconds taken by all reduce tasks=8632320
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1298
		CPU time spent (ms)=8780
		Physical memory (bytes) snapshot=1374396416
		Virtual memory (bytes) snapshot=14292434944
		Total committed heap usage (bytes)=1563426816
		Peak Map Physical memory (bytes)=369893376
		Peak Map Virtual memory (bytes)=3577638912
		Peak Reduce Physical memory (bytes)=364957696
		Peak Reduce Virtual memory (bytes)=3583205376
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200920 13:29:06.679" starttime="20200920 13:29:06.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:29:06.680" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:29:06.681" starttime="20200920 13:29:06.680"></status>
</kw>
<status status="PASS" endtime="20200920 13:29:06.681" starttime="20200920 13:28:28.134"></status>
</kw>
<msg timestamp="20200920 13:29:06.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:29:06.681" starttime="20200920 13:28:28.134"></status>
</kw>
<msg timestamp="20200920 13:29:06.682" level="INFO">${output} = 2020-09-20 13:28:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-09-20 13:28:30 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
20...</msg>
<status status="PASS" endtime="20200920 13:29:06.682" starttime="20200920 13:28:28.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200920 13:29:06.683" starttime="20200920 13:29:06.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 13:29:06.683" starttime="20200920 13:29:06.683"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 13:29:06.683" critical="yes" starttime="20200920 13:28:28.095"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200920 13:29:06.685" starttime="20200920 13:27:50.749"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:26:15.640" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:26:15.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:26:15.648" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:26:15.648" starttime="20200920 13:26:15.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:26:15.649" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:26:15.649" starttime="20200920 13:26:15.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:26:15.650" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:26:15.650" starttime="20200920 13:26:15.649"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:15.650" starttime="20200920 13:26:15.638"></status>
</kw>
<msg timestamp="20200920 13:26:15.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:26:15.650" starttime="20200920 13:26:15.638"></status>
</kw>
<msg timestamp="20200920 13:26:15.650" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:26:15.650" starttime="20200920 13:26:15.637"></status>
</kw>
<msg timestamp="20200920 13:26:15.651" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:26:15.651" starttime="20200920 13:26:15.637"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:26:15.654" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:26:15.654" starttime="20200920 13:26:15.654"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:26:15.655" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:26:15.655" starttime="20200920 13:26:15.655"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:15.655" starttime="20200920 13:26:15.654"></status>
</kw>
<msg timestamp="20200920 13:26:15.655" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:26:15.655" starttime="20200920 13:26:15.653"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:15.656" starttime="20200920 13:26:15.652"></status>
</kw>
<msg timestamp="20200920 13:26:15.656" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:26:15.656" starttime="20200920 13:26:15.652"></status>
</kw>
<msg timestamp="20200920 13:26:15.656" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:26:15.656" starttime="20200920 13:26:15.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:26:15.659" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:26:57.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:26:57.014" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:26:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:26:18 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200920 13:26:57.015" starttime="20200920 13:26:15.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:26:57.016" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:26:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:26:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:26:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:26:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:26:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-78322360EA3B-&gt;5367fcc7-66d5-48b0-bd66-acad9c8852f5
2020-09-20 13:26:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-20 13:26:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-09-20 13:26:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-09-20 13:26:20 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608380632, maxDate=1601213180632, sequenceNumber=1, masterKeyId=2))
2020-09-20 13:26:20 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c2 cb c6 dd ca 2e 38 c2 d3 f8 fd cc 2e 40 01 48 01 5a 0d 32 39 39 35 32 31 31 39 30 35 39 38 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-20 13:26:20 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608380632, maxDate=1601213180632, sequenceNumber=1, masterKeyId=2)
2020-09-20 13:26:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 13:26:21 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 13:26:21 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-20 13:26:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600608260461_0001
2020-09-20 13:26:21 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c2 cb c6 dd ca 2e 38 c2 d3 f8 fd cc 2e 40 01 48 01 5a 0d 32 39 39 35 32 31 31 39 30 35 39 38 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608380632, maxDate=1601213180632, sequenceNumber=1, masterKeyId=2)]
2020-09-20 13:26:21 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 13:26:21 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-20 13:26:21 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-20 13:26:23 INFO  YarnClientImpl:311 - Submitted application application_1600608260461_0001
2020-09-20 13:26:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600608260461_0001/
2020-09-20 13:26:23 INFO  Job:1619 - Running job: job_1600608260461_0001
2020-09-20 13:26:36 INFO  Job:1640 - Job job_1600608260461_0001 running in uber mode : false
2020-09-20 13:26:36 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 13:26:48 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 13:26:50 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 13:26:54 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 13:26:56 INFO  Job:1658 - Job job_1600608260461_0001 completed successfully
2020-09-20 13:26:56 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052193
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=56194
		Total time spent by all reduces in occupied slots (ms)=8866
		Total time spent by all map tasks (ms)=28097
		Total time spent by all reduce tasks (ms)=4433
		Total vcore-milliseconds taken by all map tasks=28097
		Total vcore-milliseconds taken by all reduce tasks=4433
		Total megabyte-milliseconds taken by all map tasks=57542656
		Total megabyte-milliseconds taken by all reduce tasks=9078784
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1304
		CPU time spent (ms)=8310
		Physical memory (bytes) snapshot=1350246400
		Virtual memory (bytes) snapshot=14299082752
		Total committed heap usage (bytes)=1416626176
		Peak Map Physical memory (bytes)=366874624
		Peak Map Virtual memory (bytes)=3581767680
		Peak Reduce Physical memory (bytes)=333377536
		Peak Reduce Virtual memory (bytes)=3565531136
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.515 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200920 13:26:57.016" starttime="20200920 13:26:57.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:26:57.017" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:26:57.017" starttime="20200920 13:26:57.016"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:57.017" starttime="20200920 13:26:15.657"></status>
</kw>
<msg timestamp="20200920 13:26:57.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:26:57.017" starttime="20200920 13:26:15.657"></status>
</kw>
<msg timestamp="20200920 13:26:57.018" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-20 13:26:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:26:18 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200920 13:26:57.018" starttime="20200920 13:26:15.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 13:26:57.019" starttime="20200920 13:26:57.018"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 13:26:57.019" critical="yes" starttime="20200920 13:26:15.636"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:26:57.024" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:26:57.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:26:57.031" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:26:57.031" starttime="20200920 13:26:57.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:26:57.032" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:26:57.032" starttime="20200920 13:26:57.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:26:57.033" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:26:57.033" starttime="20200920 13:26:57.033"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:57.033" starttime="20200920 13:26:57.022"></status>
</kw>
<msg timestamp="20200920 13:26:57.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:26:57.034" starttime="20200920 13:26:57.021"></status>
</kw>
<msg timestamp="20200920 13:26:57.034" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:26:57.034" starttime="20200920 13:26:57.021"></status>
</kw>
<msg timestamp="20200920 13:26:57.034" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200920 13:26:57.034" starttime="20200920 13:26:57.021"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200920 13:26:57.035" level="INFO">${random} = 76</msg>
<status status="PASS" endtime="20200920 13:26:57.035" starttime="20200920 13:26:57.034"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:26:57.040" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:26:57.040" starttime="20200920 13:26:57.039"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:26:57.040" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:26:57.041" starttime="20200920 13:26:57.040"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:57.041" starttime="20200920 13:26:57.039"></status>
</kw>
<msg timestamp="20200920 13:26:57.041" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:26:57.041" starttime="20200920 13:26:57.038"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:57.041" starttime="20200920 13:26:57.037"></status>
</kw>
<msg timestamp="20200920 13:26:57.041" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:26:57.041" starttime="20200920 13:26:57.036"></status>
</kw>
<msg timestamp="20200920 13:26:57.041" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200920 13:26:57.041" starttime="20200920 13:26:57.035"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:26:57.045" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:26:57.045" starttime="20200920 13:26:57.044"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:26:57.046" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:26:57.046" starttime="20200920 13:26:57.045"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:57.046" starttime="20200920 13:26:57.044"></status>
</kw>
<msg timestamp="20200920 13:26:57.046" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:26:57.046" starttime="20200920 13:26:57.044"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:57.046" starttime="20200920 13:26:57.043"></status>
</kw>
<msg timestamp="20200920 13:26:57.046" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200920 13:26:57.046" starttime="20200920 13:26:57.042"></status>
</kw>
<msg timestamp="20200920 13:26:57.047" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200920 13:26:57.047" starttime="20200920 13:26:57.042"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200920 13:26:57.050" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200920 13:26:57.050" starttime="20200920 13:26:57.050"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200920 13:26:57.051" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200920 13:26:57.051" starttime="20200920 13:26:57.051"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:57.051" starttime="20200920 13:26:57.049"></status>
</kw>
<msg timestamp="20200920 13:26:57.051" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200920 13:26:57.052" starttime="20200920 13:26:57.049"></status>
</kw>
<status status="PASS" endtime="20200920 13:26:57.052" starttime="20200920 13:26:57.048"></status>
</kw>
<msg timestamp="20200920 13:26:57.052" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-76.txt</msg>
<status status="PASS" endtime="20200920 13:26:57.052" starttime="20200920 13:26:57.048"></status>
</kw>
<msg timestamp="20200920 13:26:57.052" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-76.txt</msg>
<status status="PASS" endtime="20200920 13:26:57.052" starttime="20200920 13:26:57.047"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200920 13:26:57.055" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-76.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200920 13:27:32.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20200920 13:27:32.233" level="INFO">${output} = 2020-09-20 13:26:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-09-20 13:26:59 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
20...</msg>
<status status="PASS" endtime="20200920 13:27:32.233" starttime="20200920 13:26:57.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200920 13:27:32.234" level="INFO">2020-09-20 13:26:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-09-20 13:26:59 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-09-20 13:26:59 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608419738, maxDate=1601213219738, sequenceNumber=2, masterKeyId=2))
2020-09-20 13:26:59 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fd fd c8 dd ca 2e 38 fd 85 fb fd cc 2e 40 02 48 01 5a 0d 32 39 39 35 32 31 31 39 30 35 39 38 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-20 13:26:59 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608419738, maxDate=1601213219738, sequenceNumber=2, masterKeyId=2)
2020-09-20 13:26:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-20 13:27:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-20 13:27:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-20 13:27:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-20 13:27:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-20 13:27:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D2A58BBB4BAC-&gt;5367fcc7-66d5-48b0-bd66-acad9c8852f5
2020-09-20 13:27:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-20 13:27:01 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-20 13:27:01 INFO  JobSubmitter:202 - number of splits:3
2020-09-20 13:27:02 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-20 13:27:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600608260461_0002
2020-09-20 13:27:02 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fd fd c8 dd ca 2e 38 fd 85 fb fd cc 2e 40 02 48 01 5a 0d 32 39 39 35 32 31 31 39 30 35 39 38 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600608419738, maxDate=1601213219738, sequenceNumber=2, masterKeyId=2)]
2020-09-20 13:27:02 INFO  Configuration:2752 - resource-types.xml not found
2020-09-20 13:27:02 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-20 13:27:02 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-20 13:27:04 INFO  YarnClientImpl:311 - Submitted application application_1600608260461_0002
2020-09-20 13:27:04 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600608260461_0002/
2020-09-20 13:27:04 INFO  Job:1619 - Running job: job_1600608260461_0002
2020-09-20 13:27:12 INFO  Job:1640 - Job job_1600608260461_0002 running in uber mode : false
2020-09-20 13:27:12 INFO  Job:1647 -  map 0% reduce 0%
2020-09-20 13:27:23 INFO  Job:1647 -  map 33% reduce 0%
2020-09-20 13:27:25 INFO  Job:1647 -  map 67% reduce 0%
2020-09-20 13:27:26 INFO  Job:1647 -  map 100% reduce 0%
2020-09-20 13:27:31 INFO  Job:1647 -  map 100% reduce 100%
2020-09-20 13:27:31 INFO  Job:1658 - Job job_1600608260461_0002 completed successfully
2020-09-20 13:27:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1114721
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51182
		Total time spent by all reduces in occupied slots (ms)=8492
		Total time spent by all map tasks (ms)=25591
		Total time spent by all reduce tasks (ms)=4246
		Total vcore-milliseconds taken by all map tasks=25591
		Total vcore-milliseconds taken by all reduce tasks=4246
		Total megabyte-milliseconds taken by all map tasks=52410368
		Total megabyte-milliseconds taken by all reduce tasks=8695808
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1152
		CPU time spent (ms)=8670
		Physical memory (bytes) snapshot=1364082688
		Virtual memory (bytes) snapshot=14296862720
		Total committed heap usage (bytes)=1371013120
		Peak Map Physical memory (bytes)=356663296
		Peak Map Virtual memory (bytes)=3576057856
		Peak Reduce Physical memory (bytes)=371560448
		Peak Reduce Virtual memory (bytes)=3583553536
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200920 13:27:32.235" starttime="20200920 13:27:32.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200920 13:27:32.235" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200920 13:27:32.236" starttime="20200920 13:27:32.235"></status>
</kw>
<status status="PASS" endtime="20200920 13:27:32.236" starttime="20200920 13:26:57.053"></status>
</kw>
<msg timestamp="20200920 13:27:32.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200920 13:27:32.236" starttime="20200920 13:26:57.053"></status>
</kw>
<msg timestamp="20200920 13:27:32.237" level="INFO">${output} = 2020-09-20 13:26:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-09-20 13:26:59 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
20...</msg>
<status status="PASS" endtime="20200920 13:27:32.237" starttime="20200920 13:26:57.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200920 13:27:32.238" starttime="20200920 13:27:32.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200920 13:27:32.238" starttime="20200920 13:27:32.238"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200920 13:27:32.238" critical="yes" starttime="20200920 13:26:57.020"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200920 13:27:32.240" starttime="20200920 13:26:15.589"></status>
</suite>
<status status="PASS" elapsedtime="213302" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
