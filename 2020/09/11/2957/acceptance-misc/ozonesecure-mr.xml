<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200911 13:54:51.388" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:50:31.510" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:50:36.727" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 13:50:36.727" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:50:36.727" starttime="20200911 13:50:31.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:50:36.728" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200911 13:50:36.729" starttime="20200911 13:50:36.728"></status>
</kw>
<msg timestamp="20200911 13:50:36.729" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:50:36.729" starttime="20200911 13:50:31.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:50:36.735" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:50:40.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:50:40.649" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:50:40.649" starttime="20200911 13:50:36.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:50:40.650" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 13:50:40.650" starttime="20200911 13:50:40.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:50:40.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:50:40.651" starttime="20200911 13:50:40.651"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:40.652" starttime="20200911 13:50:36.731"></status>
</kw>
<msg timestamp="20200911 13:50:40.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:50:40.652" starttime="20200911 13:50:36.731"></status>
</kw>
<msg timestamp="20200911 13:50:40.652" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:50:40.652" starttime="20200911 13:50:36.730"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200911 13:50:40.653" starttime="20200911 13:50:40.652"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:40.653" starttime="20200911 13:50:36.730"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:40.653" starttime="20200911 13:50:36.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:50:40.658" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:50:44.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:50:44.402" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:50:44.402" starttime="20200911 13:50:40.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:50:44.403" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 13:50:44.404" starttime="20200911 13:50:44.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:50:44.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:50:44.405" starttime="20200911 13:50:44.404"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:44.405" starttime="20200911 13:50:40.655"></status>
</kw>
<msg timestamp="20200911 13:50:44.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:50:44.405" starttime="20200911 13:50:40.655"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:44.405" starttime="20200911 13:50:40.654"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:44.406" starttime="20200911 13:50:40.654"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:44.406" starttime="20200911 13:50:40.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200911 13:50:44.406" starttime="20200911 13:50:44.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:50:44.411" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:50:48.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:50:48.753" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:50:48.753" starttime="20200911 13:50:44.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:50:48.754" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T13:50:44.187Z",
  "modificationTime" : "2020-09-11T13:50:44.187Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200911 13:50:48.754" starttime="20200911 13:50:48.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:50:48.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:50:48.755" starttime="20200911 13:50:48.754"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:48.755" starttime="20200911 13:50:44.408"></status>
</kw>
<msg timestamp="20200911 13:50:48.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:50:48.755" starttime="20200911 13:50:44.407"></status>
</kw>
<msg timestamp="20200911 13:50:48.756" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:50:48.756" starttime="20200911 13:50:44.407"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200911 13:50:48.756" starttime="20200911 13:50:48.756"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:50:48.762" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:50:48.762" starttime="20200911 13:50:48.761"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:50:48.763" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:50:48.763" starttime="20200911 13:50:48.762"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:48.764" starttime="20200911 13:50:48.760"></status>
</kw>
<msg timestamp="20200911 13:50:48.764" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:50:48.764" starttime="20200911 13:50:48.760"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:48.764" starttime="20200911 13:50:48.759"></status>
</kw>
<msg timestamp="20200911 13:50:48.764" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200911 13:50:48.764" starttime="20200911 13:50:48.757"></status>
</kw>
<msg timestamp="20200911 13:50:48.765" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200911 13:50:48.765" starttime="20200911 13:50:48.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:50:48.769" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:50:53.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:50:53.053" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:50:53.053" starttime="20200911 13:50:48.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:50:53.054" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 13:50:53.055" starttime="20200911 13:50:53.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:50:53.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:50:53.055" starttime="20200911 13:50:53.055"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:53.056" starttime="20200911 13:50:48.766"></status>
</kw>
<msg timestamp="20200911 13:50:53.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:50:53.056" starttime="20200911 13:50:48.766"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:53.056" starttime="20200911 13:50:48.765"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:50:53.061" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:51:02.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:51:02.077" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:51:02.077" starttime="20200911 13:50:53.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:51:02.079" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 13:51:02.079" starttime="20200911 13:51:02.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:51:02.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:51:02.080" starttime="20200911 13:51:02.079"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:02.080" starttime="20200911 13:50:53.058"></status>
</kw>
<msg timestamp="20200911 13:51:02.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:51:02.080" starttime="20200911 13:50:53.057"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:02.080" starttime="20200911 13:50:53.056"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:51:02.085" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:51:08.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:51:08.618" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:51:08.618" starttime="20200911 13:51:02.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:51:08.620" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 13:51:08.620" starttime="20200911 13:51:08.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:51:08.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:51:08.620" starttime="20200911 13:51:08.620"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:08.621" starttime="20200911 13:51:02.082"></status>
</kw>
<msg timestamp="20200911 13:51:08.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:51:08.621" starttime="20200911 13:51:02.081"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:08.621" starttime="20200911 13:51:02.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:51:08.626" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:51:17.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:51:17.400" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:51:17.400" starttime="20200911 13:51:08.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:51:17.401" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 13:51:17.402" starttime="20200911 13:51:17.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:51:17.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:51:17.402" starttime="20200911 13:51:17.402"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:17.403" starttime="20200911 13:51:08.622"></status>
</kw>
<msg timestamp="20200911 13:51:17.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:51:17.403" starttime="20200911 13:51:08.622"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:17.403" starttime="20200911 13:51:08.621"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 13:51:17.403" critical="yes" starttime="20200911 13:50:31.503"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:51:17.410" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:51:17.410" starttime="20200911 13:51:17.409"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:51:17.410" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:51:17.410" starttime="20200911 13:51:17.410"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:17.411" starttime="20200911 13:51:17.408"></status>
</kw>
<msg timestamp="20200911 13:51:17.411" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:51:17.411" starttime="20200911 13:51:17.408"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:17.411" starttime="20200911 13:51:17.407"></status>
</kw>
<msg timestamp="20200911 13:51:17.412" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200911 13:51:17.412" starttime="20200911 13:51:17.406"></status>
</kw>
<msg timestamp="20200911 13:51:17.412" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200911 13:51:17.412" starttime="20200911 13:51:17.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:51:17.417" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:51:21.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:51:21.288" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:51:21.288" starttime="20200911 13:51:17.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:51:21.289" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 13:51:21.289" starttime="20200911 13:51:21.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:51:21.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:51:21.290" starttime="20200911 13:51:21.289"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:21.290" starttime="20200911 13:51:17.413"></status>
</kw>
<msg timestamp="20200911 13:51:21.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:51:21.290" starttime="20200911 13:51:17.413"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:21.291" starttime="20200911 13:51:17.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:51:21.295" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:51:25.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:51:25.164" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 13:51:25.164" starttime="20200911 13:51:21.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:51:25.165" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 13:51:25.165" starttime="20200911 13:51:25.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:51:25.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:51:25.166" starttime="20200911 13:51:25.165"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:25.166" starttime="20200911 13:51:21.292"></status>
</kw>
<msg timestamp="20200911 13:51:25.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:51:25.166" starttime="20200911 13:51:21.291"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:25.167" starttime="20200911 13:51:21.291"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 13:51:25.167" critical="yes" starttime="20200911 13:51:17.404"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200911 13:51:25.169" starttime="20200911 13:50:31.434"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:53:16.470" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:53:16.470" starttime="20200911 13:53:16.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:53:16.471" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:53:16.471" starttime="20200911 13:53:16.470"></status>
</kw>
<status status="PASS" endtime="20200911 13:53:16.471" starttime="20200911 13:53:16.468"></status>
</kw>
<msg timestamp="20200911 13:53:16.472" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:53:16.472" starttime="20200911 13:53:16.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:53:16.473" starttime="20200911 13:53:16.472"></status>
</kw>
<msg timestamp="20200911 13:53:16.473" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:53:16.473" starttime="20200911 13:53:16.472"></status>
</kw>
<status status="PASS" endtime="20200911 13:53:16.473" starttime="20200911 13:53:16.467"></status>
</kw>
<msg timestamp="20200911 13:53:16.473" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:53:16.473" starttime="20200911 13:53:16.466"></status>
</kw>
<msg timestamp="20200911 13:53:16.474" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:53:16.474" starttime="20200911 13:53:16.465"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:53:16.474" level="INFO">${random} = 54658</msg>
<status status="PASS" endtime="20200911 13:53:16.474" starttime="20200911 13:53:16.474"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:53:16.478" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-54658 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:53:20.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:53:20.612" level="INFO">${output} = 2020-09-11 13:53:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:53:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200911 13:53:20.612" starttime="20200911 13:53:16.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:53:20.613" level="INFO">2020-09-11 13:53:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:53:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:53:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:53:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:53:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D574A961F113-&gt;ff7850c7-e9e6-49d7-9a44-8ae3b26988e1
2020-09-11 13:53:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200911 13:53:20.613" starttime="20200911 13:53:20.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:53:20.614" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:53:20.614" starttime="20200911 13:53:20.613"></status>
</kw>
<status status="PASS" endtime="20200911 13:53:20.614" starttime="20200911 13:53:16.475"></status>
</kw>
<msg timestamp="20200911 13:53:20.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:53:20.614" starttime="20200911 13:53:16.475"></status>
</kw>
<msg timestamp="20200911 13:53:20.614" level="INFO">${result} = 2020-09-11 13:53:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:53:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200911 13:53:20.614" starttime="20200911 13:53:16.474"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:53:20.618" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:53:22.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:53:22.964" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:50 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:51 ofs://om/volume1/bucket1/ozone-12719
-rw-...</msg>
<status status="PASS" endtime="20200911 13:53:22.964" starttime="20200911 13:53:20.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:53:22.965" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:50 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:51 ofs://om/volume1/bucket1/ozone-12719
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:53 ofs://om/volume1/bucket1/ozone-54658
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:51 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:52 ofs://om/volume1/bucket1/wordcount-35.txt</msg>
<status status="PASS" endtime="20200911 13:53:22.965" starttime="20200911 13:53:22.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:53:22.966" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:53:22.966" starttime="20200911 13:53:22.965"></status>
</kw>
<status status="PASS" endtime="20200911 13:53:22.966" starttime="20200911 13:53:20.616"></status>
</kw>
<msg timestamp="20200911 13:53:22.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:53:22.967" starttime="20200911 13:53:20.615"></status>
</kw>
<msg timestamp="20200911 13:53:22.967" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:50 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:51 ofs://om/volume1/bucket1/ozone-12719
-rw-...</msg>
<status status="PASS" endtime="20200911 13:53:22.967" starttime="20200911 13:53:20.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:53:22.969" starttime="20200911 13:53:22.969"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200911 13:53:22.970" critical="yes" starttime="20200911 13:53:16.464"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200911 13:53:22.971" starttime="20200911 13:53:16.406"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:51:36.318" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:51:36.318" starttime="20200911 13:51:36.316"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:51:36.319" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:51:36.319" starttime="20200911 13:51:36.318"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:36.319" starttime="20200911 13:51:36.316"></status>
</kw>
<msg timestamp="20200911 13:51:36.319" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:51:36.319" starttime="20200911 13:51:36.315"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:36.320" starttime="20200911 13:51:36.315"></status>
</kw>
<msg timestamp="20200911 13:51:36.320" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:51:36.320" starttime="20200911 13:51:36.314"></status>
</kw>
<msg timestamp="20200911 13:51:36.320" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:51:36.320" starttime="20200911 13:51:36.313"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:51:36.321" level="INFO">${random} = 12719</msg>
<status status="PASS" endtime="20200911 13:51:36.321" starttime="20200911 13:51:36.320"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:51:36.324" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-12719 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:51:40.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:51:40.778" level="INFO">${output} = 2020-09-11 13:51:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:51:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200911 13:51:40.778" starttime="20200911 13:51:36.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:51:40.780" level="INFO">2020-09-11 13:51:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:51:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:51:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:51:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:51:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F26A2FBABEAA-&gt;ff7850c7-e9e6-49d7-9a44-8ae3b26988e1
2020-09-11 13:51:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200911 13:51:40.780" starttime="20200911 13:51:40.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:51:40.780" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:51:40.781" starttime="20200911 13:51:40.780"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:40.781" starttime="20200911 13:51:36.322"></status>
</kw>
<msg timestamp="20200911 13:51:40.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:51:40.781" starttime="20200911 13:51:36.322"></status>
</kw>
<msg timestamp="20200911 13:51:40.781" level="INFO">${result} = 2020-09-11 13:51:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:51:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200911 13:51:40.781" starttime="20200911 13:51:36.321"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:51:40.785" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:51:43.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:51:43.047" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:50 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:51 o3fs://bucket1.volume1.om/ozone-12719
dr...</msg>
<status status="PASS" endtime="20200911 13:51:43.048" starttime="20200911 13:51:40.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:51:43.049" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:50 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:51 o3fs://bucket1.volume1.om/ozone-12719
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:51 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200911 13:51:43.049" starttime="20200911 13:51:43.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:51:43.049" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:51:43.049" starttime="20200911 13:51:43.049"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:43.050" starttime="20200911 13:51:40.783"></status>
</kw>
<msg timestamp="20200911 13:51:43.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:51:43.050" starttime="20200911 13:51:40.782"></status>
</kw>
<msg timestamp="20200911 13:51:43.050" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:50 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:51 o3fs://bucket1.volume1.om/ozone-12719
dr...</msg>
<status status="PASS" endtime="20200911 13:51:43.050" starttime="20200911 13:51:40.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:51:43.051" starttime="20200911 13:51:43.050"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200911 13:51:43.051" critical="yes" starttime="20200911 13:51:36.312"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200911 13:51:43.052" starttime="20200911 13:51:36.254"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:51:30.758" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:51:30.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:51:30.766" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20200911 13:51:30.766" starttime="20200911 13:51:30.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:51:30.768" level="INFO">rm</msg>
<status status="PASS" endtime="20200911 13:51:30.768" starttime="20200911 13:51:30.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:51:30.770" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:51:30.770" starttime="20200911 13:51:30.768"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:30.770" starttime="20200911 13:51:30.755"></status>
</kw>
<msg timestamp="20200911 13:51:30.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:51:30.770" starttime="20200911 13:51:30.755"></status>
</kw>
<msg timestamp="20200911 13:51:30.770" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20200911 13:51:30.771" starttime="20200911 13:51:30.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 13:51:30.772" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 13:51:30.772" starttime="20200911 13:51:30.771"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:51:30.777" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:51:30.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:51:30.803" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:51:30.803" starttime="20200911 13:51:30.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:51:30.804" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:51:30.804" starttime="20200911 13:51:30.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:51:30.805" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:51:30.805" starttime="20200911 13:51:30.805"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:30.805" starttime="20200911 13:51:30.775"></status>
</kw>
<msg timestamp="20200911 13:51:30.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:51:30.806" starttime="20200911 13:51:30.774"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:30.806" starttime="20200911 13:51:30.774"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:30.806" starttime="20200911 13:51:30.772"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:30.806" starttime="20200911 13:51:30.753"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 13:51:30.806" critical="yes" starttime="20200911 13:51:30.752"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200911 13:51:30.807" starttime="20200911 13:51:30.702"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:50:25.867" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:50:25.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:50:25.870" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20200911 13:50:25.870" starttime="20200911 13:50:25.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:50:25.872" level="INFO">om</msg>
<status status="PASS" endtime="20200911 13:50:25.872" starttime="20200911 13:50:25.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:50:25.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:50:25.873" starttime="20200911 13:50:25.872"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:25.874" starttime="20200911 13:50:25.862"></status>
</kw>
<msg timestamp="20200911 13:50:25.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:50:25.874" starttime="20200911 13:50:25.862"></status>
</kw>
<msg timestamp="20200911 13:50:25.874" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20200911 13:50:25.874" starttime="20200911 13:50:25.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 13:50:25.875" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 13:50:25.875" starttime="20200911 13:50:25.875"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:50:25.880" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:50:25.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:50:25.896" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:50:25.896" starttime="20200911 13:50:25.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:50:25.897" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:50:25.897" starttime="20200911 13:50:25.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:50:25.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:50:25.898" starttime="20200911 13:50:25.898"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:25.898" starttime="20200911 13:50:25.877"></status>
</kw>
<msg timestamp="20200911 13:50:25.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:50:25.899" starttime="20200911 13:50:25.876"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:25.899" starttime="20200911 13:50:25.876"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:25.899" starttime="20200911 13:50:25.875"></status>
</kw>
<status status="PASS" endtime="20200911 13:50:25.899" starttime="20200911 13:50:25.861"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 13:50:25.899" critical="yes" starttime="20200911 13:50:25.860"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200911 13:50:25.900" starttime="20200911 13:50:25.800"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:53:28.467" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:53:28.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:53:28.476" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:53:28.476" starttime="20200911 13:53:28.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:53:28.477" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:53:28.478" starttime="20200911 13:53:28.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:53:28.478" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:53:28.479" starttime="20200911 13:53:28.478"></status>
</kw>
<status status="PASS" endtime="20200911 13:53:28.479" starttime="20200911 13:53:28.464"></status>
</kw>
<msg timestamp="20200911 13:53:28.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:53:28.479" starttime="20200911 13:53:28.464"></status>
</kw>
<msg timestamp="20200911 13:53:28.479" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:53:28.480" starttime="20200911 13:53:28.463"></status>
</kw>
<msg timestamp="20200911 13:53:28.480" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:53:28.480" starttime="20200911 13:53:28.463"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:53:28.484" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:53:28.484" starttime="20200911 13:53:28.484"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:53:28.485" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:53:28.485" starttime="20200911 13:53:28.485"></status>
</kw>
<status status="PASS" endtime="20200911 13:53:28.485" starttime="20200911 13:53:28.483"></status>
</kw>
<msg timestamp="20200911 13:53:28.485" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:53:28.485" starttime="20200911 13:53:28.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:53:28.487" starttime="20200911 13:53:28.486"></status>
</kw>
<msg timestamp="20200911 13:53:28.487" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:53:28.487" starttime="20200911 13:53:28.486"></status>
</kw>
<status status="PASS" endtime="20200911 13:53:28.487" starttime="20200911 13:53:28.482"></status>
</kw>
<msg timestamp="20200911 13:53:28.488" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:53:28.488" starttime="20200911 13:53:28.481"></status>
</kw>
<msg timestamp="20200911 13:53:28.488" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:53:28.488" starttime="20200911 13:53:28.480"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:53:28.492" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:54:06.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:54:06.954" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:53:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:53:30 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200911 13:54:06.954" starttime="20200911 13:53:28.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:54:06.955" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:53:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:53:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:53:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:53:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:53:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0F18555F4D7B-&gt;ff7850c7-e9e6-49d7-9a44-8ae3b26988e1
2020-09-11 13:53:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-11 13:53:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-09-11 13:53:32 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-09-11 13:53:32 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832412906, maxDate=1600437212906, sequenceNumber=3, masterKeyId=2))
2020-09-11 13:53:32 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 92 a5 c5 eb c7 2e 38 92 ad f7 8b ca 2e 40 03 48 01 5a 0d 33 38 36 33 38 30 37 30 31 38 32 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-11 13:53:32 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832412906, maxDate=1600437212906, sequenceNumber=3, masterKeyId=2)
2020-09-11 13:53:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:53:33 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:53:33 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:53:33 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-11 13:53:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599832184025_0003
2020-09-11 13:53:33 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832412906, maxDate=1600437212906, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 92 a5 c5 eb c7 2e 38 92 ad f7 8b ca 2e 40 03 48 01 5a 0d 33 38 36 33 38 30 37 30 31 38 32 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-09-11 13:53:34 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:53:34 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-11 13:53:34 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-11 13:53:34 INFO  YarnClientImpl:311 - Submitted application application_1599832184025_0003
2020-09-11 13:53:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599832184025_0003/
2020-09-11 13:53:34 INFO  Job:1619 - Running job: job_1599832184025_0003
2020-09-11 13:53:43 INFO  Job:1640 - Job job_1599832184025_0003 running in uber mode : false
2020-09-11 13:53:43 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:53:56 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:53:58 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:54:03 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:54:06 INFO  Job:1658 - Job job_1599832184025_0003 completed successfully
2020-09-11 13:54:06 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1051969
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=56296
		Total time spent by all reduces in occupied slots (ms)=10004
		Total time spent by all map tasks (ms)=28148
		Total time spent by all reduce tasks (ms)=5002
		Total vcore-milliseconds taken by all map tasks=28148
		Total vcore-milliseconds taken by all reduce tasks=5002
		Total megabyte-milliseconds taken by all map tasks=57647104
		Total megabyte-milliseconds taken by all reduce tasks=10244096
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1587
		CPU time spent (ms)=9640
		Physical memory (bytes) snapshot=1361858560
		Virtual memory (bytes) snapshot=14291333120
		Total committed heap usage (bytes)=1195900928
		Peak Map Physical memory (bytes)=503349248
		Peak Map Virtual memory (bytes)=3577507840
		Peak Reduce Physical memory (bytes)=289058816
		Peak Reduce Virtual memory (bytes)=3573030912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.988 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200911 13:54:06.955" starttime="20200911 13:54:06.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:54:06.956" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:54:06.956" starttime="20200911 13:54:06.956"></status>
</kw>
<status status="PASS" endtime="20200911 13:54:06.957" starttime="20200911 13:53:28.489"></status>
</kw>
<msg timestamp="20200911 13:54:06.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:54:06.957" starttime="20200911 13:53:28.489"></status>
</kw>
<msg timestamp="20200911 13:54:06.958" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:53:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:53:30 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200911 13:54:06.958" starttime="20200911 13:53:28.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:54:06.959" starttime="20200911 13:54:06.958"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:54:06.959" critical="yes" starttime="20200911 13:53:28.462"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:54:06.964" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:54:06.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:54:06.970" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:54:06.970" starttime="20200911 13:54:06.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:54:06.971" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:54:06.972" starttime="20200911 13:54:06.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:54:06.972" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:54:06.972" starttime="20200911 13:54:06.972"></status>
</kw>
<status status="PASS" endtime="20200911 13:54:06.973" starttime="20200911 13:54:06.962"></status>
</kw>
<msg timestamp="20200911 13:54:06.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:54:06.973" starttime="20200911 13:54:06.961"></status>
</kw>
<msg timestamp="20200911 13:54:06.973" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:54:06.973" starttime="20200911 13:54:06.961"></status>
</kw>
<msg timestamp="20200911 13:54:06.973" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:54:06.973" starttime="20200911 13:54:06.960"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:54:06.974" level="INFO">${random} = 06</msg>
<status status="PASS" endtime="20200911 13:54:06.974" starttime="20200911 13:54:06.974"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:54:06.978" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:54:06.978" starttime="20200911 13:54:06.978"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:54:06.979" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:54:06.979" starttime="20200911 13:54:06.978"></status>
</kw>
<status status="PASS" endtime="20200911 13:54:06.979" starttime="20200911 13:54:06.977"></status>
</kw>
<msg timestamp="20200911 13:54:06.979" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:54:06.979" starttime="20200911 13:54:06.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:54:06.981" starttime="20200911 13:54:06.980"></status>
</kw>
<msg timestamp="20200911 13:54:06.981" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:54:06.981" starttime="20200911 13:54:06.980"></status>
</kw>
<status status="PASS" endtime="20200911 13:54:06.981" starttime="20200911 13:54:06.976"></status>
</kw>
<msg timestamp="20200911 13:54:06.981" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:54:06.981" starttime="20200911 13:54:06.975"></status>
</kw>
<msg timestamp="20200911 13:54:06.982" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:54:06.982" starttime="20200911 13:54:06.974"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:54:06.985" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:54:06.985" starttime="20200911 13:54:06.985"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:54:06.986" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:54:06.986" starttime="20200911 13:54:06.986"></status>
</kw>
<status status="PASS" endtime="20200911 13:54:06.986" starttime="20200911 13:54:06.984"></status>
</kw>
<msg timestamp="20200911 13:54:06.986" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:54:06.986" starttime="20200911 13:54:06.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:54:06.988" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200911 13:54:06.989" starttime="20200911 13:54:06.988"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:54:06.989" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200911 13:54:06.989" starttime="20200911 13:54:06.989"></status>
</kw>
<status status="PASS" endtime="20200911 13:54:06.990" starttime="20200911 13:54:06.987"></status>
</kw>
<msg timestamp="20200911 13:54:06.990" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200911 13:54:06.990" starttime="20200911 13:54:06.987"></status>
</kw>
<status status="PASS" endtime="20200911 13:54:06.990" starttime="20200911 13:54:06.983"></status>
</kw>
<msg timestamp="20200911 13:54:06.990" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200911 13:54:06.990" starttime="20200911 13:54:06.982"></status>
</kw>
<msg timestamp="20200911 13:54:06.990" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200911 13:54:06.990" starttime="20200911 13:54:06.982"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:54:06.994" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:54:06.994" starttime="20200911 13:54:06.994"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:54:06.995" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:54:06.995" starttime="20200911 13:54:06.994"></status>
</kw>
<status status="PASS" endtime="20200911 13:54:06.995" starttime="20200911 13:54:06.993"></status>
</kw>
<msg timestamp="20200911 13:54:06.995" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:54:06.995" starttime="20200911 13:54:06.993"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:54:06.997" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200911 13:54:06.997" starttime="20200911 13:54:06.996"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:54:06.998" level="INFO">${result} = /wordcount-06.txt</msg>
<status status="PASS" endtime="20200911 13:54:06.998" starttime="20200911 13:54:06.997"></status>
</kw>
<status status="PASS" endtime="20200911 13:54:06.998" starttime="20200911 13:54:06.996"></status>
</kw>
<msg timestamp="20200911 13:54:06.998" level="INFO">${path_with_leading} = /wordcount-06.txt</msg>
<status status="PASS" endtime="20200911 13:54:06.998" starttime="20200911 13:54:06.995"></status>
</kw>
<status status="PASS" endtime="20200911 13:54:06.998" starttime="20200911 13:54:06.992"></status>
</kw>
<msg timestamp="20200911 13:54:06.999" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-06.txt</msg>
<status status="PASS" endtime="20200911 13:54:06.999" starttime="20200911 13:54:06.991"></status>
</kw>
<msg timestamp="20200911 13:54:06.999" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-06.txt</msg>
<status status="PASS" endtime="20200911 13:54:06.999" starttime="20200911 13:54:06.991"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:54:07.002" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-06.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:54:42.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:54:42.267" level="INFO">${output} = 2020-09-11 13:54:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-09-11 13:54:09 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20200911 13:54:42.267" starttime="20200911 13:54:07.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:54:42.268" level="INFO">2020-09-11 13:54:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-09-11 13:54:09 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-09-11 13:54:09 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832449603, maxDate=1600437249603, sequenceNumber=4, masterKeyId=2))
2020-09-11 13:54:09 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 c3 c7 eb c7 2e 38 e9 cb f9 8b ca 2e 40 04 48 01 5a 0d 33 38 36 33 38 30 37 30 31 38 32 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-11 13:54:09 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832449603, maxDate=1600437249603, sequenceNumber=4, masterKeyId=2)
2020-09-11 13:54:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:54:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:54:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:54:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:54:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:54:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4F3B2001A731-&gt;ff7850c7-e9e6-49d7-9a44-8ae3b26988e1
2020-09-11 13:54:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-11 13:54:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:54:12 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:54:12 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-11 13:54:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599832184025_0004
2020-09-11 13:54:13 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832449603, maxDate=1600437249603, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 c3 c7 eb c7 2e 38 e9 cb f9 8b ca 2e 40 04 48 01 5a 0d 33 38 36 33 38 30 37 30 31 38 32 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-09-11 13:54:13 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:54:13 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-11 13:54:13 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-11 13:54:14 INFO  YarnClientImpl:311 - Submitted application application_1599832184025_0004
2020-09-11 13:54:14 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599832184025_0004/
2020-09-11 13:54:14 INFO  Job:1619 - Running job: job_1599832184025_0004
2020-09-11 13:54:22 INFO  Job:1640 - Job job_1599832184025_0004 running in uber mode : false
2020-09-11 13:54:22 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:54:33 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:54:35 INFO  Job:1647 -  map 67% reduce 0%
2020-09-11 13:54:36 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:54:40 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:54:41 INFO  Job:1658 - Job job_1599832184025_0004 completed successfully
2020-09-11 13:54:41 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1114633
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=55172
		Total time spent by all reduces in occupied slots (ms)=9426
		Total time spent by all map tasks (ms)=27586
		Total time spent by all reduce tasks (ms)=4713
		Total vcore-milliseconds taken by all map tasks=27586
		Total vcore-milliseconds taken by all reduce tasks=4713
		Total megabyte-milliseconds taken by all map tasks=56496128
		Total megabyte-milliseconds taken by all reduce tasks=9652224
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1134
		CPU time spent (ms)=9840
		Physical memory (bytes) snapshot=1239457792
		Virtual memory (bytes) snapshot=14292865024
		Total committed heap usage (bytes)=996671488
		Peak Map Physical memory (bytes)=288944128
		Peak Map Virtual memory (bytes)=3574095872
		Peak Reduce Physical memory (bytes)=377319424
		Peak Reduce Virtual memory (bytes)=3575070720
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200911 13:54:42.269" starttime="20200911 13:54:42.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:54:42.269" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:54:42.270" starttime="20200911 13:54:42.269"></status>
</kw>
<status status="PASS" endtime="20200911 13:54:42.270" starttime="20200911 13:54:07.000"></status>
</kw>
<msg timestamp="20200911 13:54:42.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:54:42.270" starttime="20200911 13:54:07.000"></status>
</kw>
<msg timestamp="20200911 13:54:42.271" level="INFO">${output} = 2020-09-11 13:54:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-09-11 13:54:09 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20200911 13:54:42.271" starttime="20200911 13:54:06.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200911 13:54:42.272" starttime="20200911 13:54:42.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:54:42.273" starttime="20200911 13:54:42.272"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:54:42.273" critical="yes" starttime="20200911 13:54:06.959"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200911 13:54:42.274" starttime="20200911 13:53:28.408"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:51:48.523" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:51:48.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:51:48.531" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:51:48.531" starttime="20200911 13:51:48.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:51:48.532" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:51:48.532" starttime="20200911 13:51:48.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:51:48.533" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:51:48.533" starttime="20200911 13:51:48.532"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:48.533" starttime="20200911 13:51:48.521"></status>
</kw>
<msg timestamp="20200911 13:51:48.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:51:48.534" starttime="20200911 13:51:48.520"></status>
</kw>
<msg timestamp="20200911 13:51:48.534" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:51:48.534" starttime="20200911 13:51:48.520"></status>
</kw>
<msg timestamp="20200911 13:51:48.534" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:51:48.534" starttime="20200911 13:51:48.519"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:51:48.538" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:51:48.538" starttime="20200911 13:51:48.538"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:51:48.539" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:51:48.539" starttime="20200911 13:51:48.538"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:48.540" starttime="20200911 13:51:48.537"></status>
</kw>
<msg timestamp="20200911 13:51:48.540" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:51:48.540" starttime="20200911 13:51:48.537"></status>
</kw>
<status status="PASS" endtime="20200911 13:51:48.540" starttime="20200911 13:51:48.536"></status>
</kw>
<msg timestamp="20200911 13:51:48.540" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:51:48.540" starttime="20200911 13:51:48.535"></status>
</kw>
<msg timestamp="20200911 13:51:48.540" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:51:48.540" starttime="20200911 13:51:48.534"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:51:48.544" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:52:33.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:52:33.307" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:51:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:51:51 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200911 13:52:33.307" starttime="20200911 13:51:48.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:52:33.308" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:51:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:51:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:51:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:51:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:51:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-51F7FC8D64A9-&gt;ff7850c7-e9e6-49d7-9a44-8ae3b26988e1
2020-09-11 13:51:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-11 13:51:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-09-11 13:51:53 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-09-11 13:51:53 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832313448, maxDate=1600437113448, sequenceNumber=1, masterKeyId=2))
2020-09-11 13:51:53 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8c 9a bf eb c7 2e 38 8c a2 f1 8b ca 2e 40 01 48 01 5a 0d 33 38 36 33 38 30 37 30 31 38 32 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-11 13:51:53 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832313448, maxDate=1600437113448, sequenceNumber=1, masterKeyId=2)
2020-09-11 13:51:53 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:51:54 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:51:54 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-11 13:51:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599832184025_0001
2020-09-11 13:51:54 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832313448, maxDate=1600437113448, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8c 9a bf eb c7 2e 38 8c a2 f1 8b ca 2e 40 01 48 01 5a 0d 33 38 36 33 38 30 37 30 31 38 32 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-09-11 13:51:54 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:51:54 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-11 13:51:54 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-11 13:51:56 INFO  YarnClientImpl:311 - Submitted application application_1599832184025_0001
2020-09-11 13:51:56 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599832184025_0001/
2020-09-11 13:51:56 INFO  Job:1619 - Running job: job_1599832184025_0001
2020-09-11 13:52:09 INFO  Job:1640 - Job job_1599832184025_0001 running in uber mode : false
2020-09-11 13:52:09 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:52:21 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:52:23 INFO  Job:1647 -  map 67% reduce 0%
2020-09-11 13:52:24 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:52:31 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:52:32 INFO  Job:1658 - Job job_1599832184025_0001 completed successfully
2020-09-11 13:52:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052181
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=56878
		Total time spent by all reduces in occupied slots (ms)=13800
		Total time spent by all map tasks (ms)=28439
		Total time spent by all reduce tasks (ms)=6900
		Total vcore-milliseconds taken by all map tasks=28439
		Total vcore-milliseconds taken by all reduce tasks=6900
		Total megabyte-milliseconds taken by all map tasks=58243072
		Total megabyte-milliseconds taken by all reduce tasks=14131200
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1134
		CPU time spent (ms)=9300
		Physical memory (bytes) snapshot=1318739968
		Virtual memory (bytes) snapshot=14289838080
		Total committed heap usage (bytes)=1188036608
		Peak Map Physical memory (bytes)=376737792
		Peak Map Virtual memory (bytes)=3578195968
		Peak Reduce Physical memory (bytes)=366002176
		Peak Reduce Virtual memory (bytes)=3564236800
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.98 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200911 13:52:33.308" starttime="20200911 13:52:33.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:52:33.309" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:52:33.309" starttime="20200911 13:52:33.309"></status>
</kw>
<status status="PASS" endtime="20200911 13:52:33.309" starttime="20200911 13:51:48.541"></status>
</kw>
<msg timestamp="20200911 13:52:33.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:52:33.310" starttime="20200911 13:51:48.541"></status>
</kw>
<msg timestamp="20200911 13:52:33.311" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:51:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:51:51 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200911 13:52:33.311" starttime="20200911 13:51:48.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:52:33.312" starttime="20200911 13:52:33.311"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:52:33.312" critical="yes" starttime="20200911 13:51:48.519"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:52:33.318" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:52:33.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:52:33.325" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:52:33.326" starttime="20200911 13:52:33.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:52:33.328" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:52:33.328" starttime="20200911 13:52:33.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:52:33.329" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:52:33.329" starttime="20200911 13:52:33.329"></status>
</kw>
<status status="PASS" endtime="20200911 13:52:33.329" starttime="20200911 13:52:33.315"></status>
</kw>
<msg timestamp="20200911 13:52:33.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:52:33.330" starttime="20200911 13:52:33.315"></status>
</kw>
<msg timestamp="20200911 13:52:33.330" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:52:33.330" starttime="20200911 13:52:33.314"></status>
</kw>
<msg timestamp="20200911 13:52:33.330" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:52:33.330" starttime="20200911 13:52:33.314"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:52:33.332" level="INFO">${random} = 35</msg>
<status status="PASS" endtime="20200911 13:52:33.332" starttime="20200911 13:52:33.331"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:52:33.336" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:52:33.336" starttime="20200911 13:52:33.335"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:52:33.337" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:52:33.337" starttime="20200911 13:52:33.336"></status>
</kw>
<status status="PASS" endtime="20200911 13:52:33.337" starttime="20200911 13:52:33.335"></status>
</kw>
<msg timestamp="20200911 13:52:33.337" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:52:33.337" starttime="20200911 13:52:33.334"></status>
</kw>
<status status="PASS" endtime="20200911 13:52:33.337" starttime="20200911 13:52:33.333"></status>
</kw>
<msg timestamp="20200911 13:52:33.338" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:52:33.338" starttime="20200911 13:52:33.333"></status>
</kw>
<msg timestamp="20200911 13:52:33.338" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:52:33.338" starttime="20200911 13:52:33.332"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:52:33.342" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:52:33.342" starttime="20200911 13:52:33.341"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:52:33.342" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:52:33.343" starttime="20200911 13:52:33.342"></status>
</kw>
<status status="PASS" endtime="20200911 13:52:33.343" starttime="20200911 13:52:33.341"></status>
</kw>
<msg timestamp="20200911 13:52:33.343" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:52:33.343" starttime="20200911 13:52:33.340"></status>
</kw>
<status status="PASS" endtime="20200911 13:52:33.343" starttime="20200911 13:52:33.339"></status>
</kw>
<msg timestamp="20200911 13:52:33.343" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200911 13:52:33.343" starttime="20200911 13:52:33.339"></status>
</kw>
<msg timestamp="20200911 13:52:33.344" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200911 13:52:33.344" starttime="20200911 13:52:33.338"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:52:33.348" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:52:33.348" starttime="20200911 13:52:33.347"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:52:33.348" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:52:33.348" starttime="20200911 13:52:33.348"></status>
</kw>
<status status="PASS" endtime="20200911 13:52:33.349" starttime="20200911 13:52:33.346"></status>
</kw>
<msg timestamp="20200911 13:52:33.349" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:52:33.349" starttime="20200911 13:52:33.346"></status>
</kw>
<status status="PASS" endtime="20200911 13:52:33.349" starttime="20200911 13:52:33.345"></status>
</kw>
<msg timestamp="20200911 13:52:33.349" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-35.txt</msg>
<status status="PASS" endtime="20200911 13:52:33.349" starttime="20200911 13:52:33.344"></status>
</kw>
<msg timestamp="20200911 13:52:33.349" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-35.txt</msg>
<status status="PASS" endtime="20200911 13:52:33.349" starttime="20200911 13:52:33.344"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:52:33.353" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-35.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:53:10.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:53:10.207" level="INFO">${output} = 2020-09-11 13:52:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-09-11 13:52:35 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20200911 13:53:10.207" starttime="20200911 13:52:33.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:53:10.208" level="INFO">2020-09-11 13:52:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-09-11 13:52:35 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-09-11 13:52:36 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832356164, maxDate=1600437156164, sequenceNumber=2, masterKeyId=2))
2020-09-11 13:52:36 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ba e9 c1 eb c7 2e 38 ba f1 f3 8b ca 2e 40 02 48 01 5a 0d 33 38 36 33 38 30 37 30 31 38 32 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-11 13:52:36 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832356164, maxDate=1600437156164, sequenceNumber=2, masterKeyId=2)
2020-09-11 13:52:36 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:52:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:52:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:52:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:52:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:52:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-74E74EBB3240-&gt;ff7850c7-e9e6-49d7-9a44-8ae3b26988e1
2020-09-11 13:52:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-11 13:52:38 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:52:38 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:52:38 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-11 13:52:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599832184025_0002
2020-09-11 13:52:38 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599832356164, maxDate=1600437156164, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ba e9 c1 eb c7 2e 38 ba f1 f3 8b ca 2e 40 02 48 01 5a 0d 33 38 36 33 38 30 37 30 31 38 32 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-09-11 13:52:39 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:52:39 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-11 13:52:39 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-11 13:52:41 INFO  YarnClientImpl:311 - Submitted application application_1599832184025_0002
2020-09-11 13:52:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599832184025_0002/
2020-09-11 13:52:41 INFO  Job:1619 - Running job: job_1599832184025_0002
2020-09-11 13:52:49 INFO  Job:1640 - Job job_1599832184025_0002 running in uber mode : false
2020-09-11 13:52:49 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:53:00 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:53:02 INFO  Job:1647 -  map 67% reduce 0%
2020-09-11 13:53:03 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:53:08 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:53:09 INFO  Job:1658 - Job job_1599832184025_0002 completed successfully
2020-09-11 13:53:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1114717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=53316
		Total time spent by all reduces in occupied slots (ms)=9074
		Total time spent by all map tasks (ms)=26658
		Total time spent by all reduce tasks (ms)=4537
		Total vcore-milliseconds taken by all map tasks=26658
		Total vcore-milliseconds taken by all reduce tasks=4537
		Total megabyte-milliseconds taken by all map tasks=54595584
		Total megabyte-milliseconds taken by all reduce tasks=9291776
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1122
		CPU time spent (ms)=8440
		Physical memory (bytes) snapshot=1289572352
		Virtual memory (bytes) snapshot=14278152192
		Total committed heap usage (bytes)=1101004800
		Peak Map Physical memory (bytes)=371232768
		Peak Map Virtual memory (bytes)=3571171328
		Peak Reduce Physical memory (bytes)=354381824
		Peak Reduce Virtual memory (bytes)=3569876992
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200911 13:53:10.209" starttime="20200911 13:53:10.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:53:10.209" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:53:10.210" starttime="20200911 13:53:10.209"></status>
</kw>
<status status="PASS" endtime="20200911 13:53:10.210" starttime="20200911 13:52:33.351"></status>
</kw>
<msg timestamp="20200911 13:53:10.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:53:10.210" starttime="20200911 13:52:33.350"></status>
</kw>
<msg timestamp="20200911 13:53:10.211" level="INFO">${output} = 2020-09-11 13:52:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.4:8032
2020-09-11 13:52:35 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20200911 13:53:10.211" starttime="20200911 13:52:33.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200911 13:53:10.212" starttime="20200911 13:53:10.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:53:10.212" starttime="20200911 13:53:10.212"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:53:10.213" critical="yes" starttime="20200911 13:52:33.313"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200911 13:53:10.214" starttime="20200911 13:51:48.463"></status>
</suite>
<status status="PASS" elapsedtime="222920" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
