<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200911 13:04:46.846" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:03:10.407" level="INFO">${random} = 59379</msg>
<status status="PASS" endtime="20200911 13:03:10.407" starttime="20200911 13:03:10.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200911 13:03:10.408" level="INFO">${prefix} = 59379</msg>
<status status="PASS" endtime="20200911 13:03:10.408" starttime="20200911 13:03:10.408"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:10.409" starttime="20200911 13:03:10.405"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:10.423" level="INFO">Running command 'ozone sh volume info /59379-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:18.661" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 13:03:18.661" level="INFO">${output} = VOLUME_NOT_FOUND Volume 59379-rpcbasic is not found</msg>
<status status="PASS" endtime="20200911 13:03:18.661" starttime="20200911 13:03:10.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:18.663" level="INFO">VOLUME_NOT_FOUND Volume 59379-rpcbasic is not found</msg>
<status status="PASS" endtime="20200911 13:03:18.663" starttime="20200911 13:03:18.662"></status>
</kw>
<msg timestamp="20200911 13:03:18.663" level="INFO">${result} = VOLUME_NOT_FOUND Volume 59379-rpcbasic is not found</msg>
<status status="PASS" endtime="20200911 13:03:18.663" starttime="20200911 13:03:10.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200911 13:03:18.664" starttime="20200911 13:03:18.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:18.671" level="INFO">Running command 'ozone sh volume create /59379-rpcbasic --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:21.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:21.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:03:21.524" starttime="20200911 13:03:18.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:21.525" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:03:21.526" starttime="20200911 13:03:21.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:21.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:21.526" starttime="20200911 13:03:21.526"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:21.527" starttime="20200911 13:03:18.665"></status>
</kw>
<msg timestamp="20200911 13:03:21.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:21.527" starttime="20200911 13:03:18.665"></status>
</kw>
<msg timestamp="20200911 13:03:21.527" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200911 13:03:21.527" starttime="20200911 13:03:18.664"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200911 13:03:21.528" starttime="20200911 13:03:21.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:21.537" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="59379-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:24.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:24.630" level="INFO">${output} = {
  "metadata": {},
  "name": "59379-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T13:03:21.143Z",
  "mo...</msg>
<status status="PASS" endtime="20200911 13:03:24.631" starttime="20200911 13:03:21.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:24.632" level="INFO">{
  "metadata": {},
  "name": "59379-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T13:03:21.143Z",
  "modificationTime": "2020-09-11T13:03:21.143Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200911 13:03:24.632" starttime="20200911 13:03:24.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:24.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:24.633" starttime="20200911 13:03:24.632"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:24.633" starttime="20200911 13:03:21.529"></status>
</kw>
<msg timestamp="20200911 13:03:24.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:24.633" starttime="20200911 13:03:21.529"></status>
</kw>
<msg timestamp="20200911 13:03:24.634" level="INFO">${result} = {
  "metadata": {},
  "name": "59379-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T13:03:21.143Z",
  "mo...</msg>
<status status="PASS" endtime="20200911 13:03:24.634" starttime="20200911 13:03:21.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 13:03:24.634" starttime="20200911 13:03:24.634"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:24.638" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="59379-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:27.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:27.245" level="INFO">${output} = {
  "metadata": {},
  "name": "59379-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T13:03:21.143Z",
  "mo...</msg>
<status status="PASS" endtime="20200911 13:03:27.245" starttime="20200911 13:03:24.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:27.246" level="INFO">{
  "metadata": {},
  "name": "59379-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T13:03:21.143Z",
  "modificationTime": "2020-09-11T13:03:21.143Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200911 13:03:27.246" starttime="20200911 13:03:27.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:27.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:27.247" starttime="20200911 13:03:27.247"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:27.248" starttime="20200911 13:03:24.635"></status>
</kw>
<msg timestamp="20200911 13:03:27.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:27.248" starttime="20200911 13:03:24.635"></status>
</kw>
<msg timestamp="20200911 13:03:27.248" level="INFO">${result} = {
  "metadata": {},
  "name": "59379-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T13:03:21.143Z",
  "mo...</msg>
<status status="PASS" endtime="20200911 13:03:27.248" starttime="20200911 13:03:24.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 13:03:27.249" starttime="20200911 13:03:27.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:27.254" level="INFO">Running command 'ozone sh volume update /59379-rpcbasic --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:29.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:29.947" level="INFO">${output} = {
  "metadata" : { },
  "name" : "59379-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-11T13:03:21.143Z"...</msg>
<status status="PASS" endtime="20200911 13:03:29.947" starttime="20200911 13:03:27.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:29.948" level="INFO">{
  "metadata" : { },
  "name" : "59379-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-11T13:03:21.143Z",
  "modificationTime" : "2020-09-11T13:03:29.520Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20200911 13:03:29.949" starttime="20200911 13:03:29.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:29.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:29.949" starttime="20200911 13:03:29.949"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:29.950" starttime="20200911 13:03:27.250"></status>
</kw>
<msg timestamp="20200911 13:03:29.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:29.950" starttime="20200911 13:03:27.250"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:29.950" starttime="20200911 13:03:27.249"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:29.956" level="INFO">Running command 'ozone sh volume info /59379-rpcbasic | jq -r '. | select(.name=="59379-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:32.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:32.499" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200911 13:03:32.499" starttime="20200911 13:03:29.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:32.500" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200911 13:03:32.500" starttime="20200911 13:03:32.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:32.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:32.501" starttime="20200911 13:03:32.500"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:32.501" starttime="20200911 13:03:29.952"></status>
</kw>
<msg timestamp="20200911 13:03:32.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:32.501" starttime="20200911 13:03:29.951"></status>
</kw>
<msg timestamp="20200911 13:03:32.501" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200911 13:03:32.502" starttime="20200911 13:03:29.950"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200911 13:03:32.502" starttime="20200911 13:03:32.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:32.508" level="INFO">Running command 'ozone sh bucket create /59379-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:34.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:34.921" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:03:34.921" starttime="20200911 13:03:32.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:34.923" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:03:34.923" starttime="20200911 13:03:34.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:34.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:34.924" starttime="20200911 13:03:34.923"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:34.924" starttime="20200911 13:03:32.504"></status>
</kw>
<msg timestamp="20200911 13:03:34.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:34.925" starttime="20200911 13:03:32.503"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:34.925" starttime="20200911 13:03:32.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:34.930" level="INFO">Running command 'ozone sh bucket info /59379-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:37.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:37.462" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200911 13:03:37.462" starttime="20200911 13:03:34.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:37.463" level="INFO">DISK</msg>
<status status="PASS" endtime="20200911 13:03:37.464" starttime="20200911 13:03:37.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:37.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:37.464" starttime="20200911 13:03:37.464"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:37.465" starttime="20200911 13:03:34.927"></status>
</kw>
<msg timestamp="20200911 13:03:37.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:37.465" starttime="20200911 13:03:34.926"></status>
</kw>
<msg timestamp="20200911 13:03:37.465" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200911 13:03:37.465" starttime="20200911 13:03:34.926"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200911 13:03:37.466" starttime="20200911 13:03:37.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:37.471" level="INFO">Running command 'ozone sh bucket list /59379-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:39.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:39.826" level="INFO">${output} = 59379-rpcbasic</msg>
<status status="PASS" endtime="20200911 13:03:39.826" starttime="20200911 13:03:37.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:39.828" level="INFO">59379-rpcbasic</msg>
<status status="PASS" endtime="20200911 13:03:39.828" starttime="20200911 13:03:39.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:39.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:39.829" starttime="20200911 13:03:39.829"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:39.830" starttime="20200911 13:03:37.467"></status>
</kw>
<msg timestamp="20200911 13:03:39.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:39.830" starttime="20200911 13:03:37.467"></status>
</kw>
<msg timestamp="20200911 13:03:39.830" level="INFO">${result} = 59379-rpcbasic</msg>
<status status="PASS" endtime="20200911 13:03:39.830" starttime="20200911 13:03:37.466"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:03:39.831" starttime="20200911 13:03:39.830"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:39.836" level="INFO">Running command 'ozone sh key put /59379-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:46.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:46.647" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:03:46.647" starttime="20200911 13:03:39.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:46.649" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:03:46.649" starttime="20200911 13:03:46.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:46.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:46.650" starttime="20200911 13:03:46.649"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:46.650" starttime="20200911 13:03:39.833"></status>
</kw>
<msg timestamp="20200911 13:03:46.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:46.650" starttime="20200911 13:03:39.833"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:46.650" starttime="20200911 13:03:39.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:46.654" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:46.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:46.658" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:03:46.658" starttime="20200911 13:03:46.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:46.660" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:03:46.660" starttime="20200911 13:03:46.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:46.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:46.660" starttime="20200911 13:03:46.660"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:46.661" starttime="20200911 13:03:46.651"></status>
</kw>
<msg timestamp="20200911 13:03:46.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:46.661" starttime="20200911 13:03:46.651"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:46.661" starttime="20200911 13:03:46.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:46.665" level="INFO">Running command 'ozone sh key get /59379-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:51.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:51.024" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:03:51.024" starttime="20200911 13:03:46.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:51.025" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:03:51.025" starttime="20200911 13:03:51.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:51.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:51.026" starttime="20200911 13:03:51.026"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:51.027" starttime="20200911 13:03:46.662"></status>
</kw>
<msg timestamp="20200911 13:03:51.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:51.027" starttime="20200911 13:03:46.662"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:51.027" starttime="20200911 13:03:46.661"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:51.031" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:51.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:51.035" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:03:51.035" starttime="20200911 13:03:51.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:51.037" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:03:51.037" starttime="20200911 13:03:51.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:51.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:51.037" starttime="20200911 13:03:51.037"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:51.038" starttime="20200911 13:03:51.028"></status>
</kw>
<msg timestamp="20200911 13:03:51.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:51.038" starttime="20200911 13:03:51.028"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:51.038" starttime="20200911 13:03:51.027"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:51.044" level="INFO">Running command 'ozone sh key put -t RATIS /59379-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:55.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:55.490" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:03:55.490" starttime="20200911 13:03:51.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:55.491" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:03:55.491" starttime="20200911 13:03:55.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:55.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:55.492" starttime="20200911 13:03:55.491"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:55.492" starttime="20200911 13:03:51.040"></status>
</kw>
<msg timestamp="20200911 13:03:55.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:55.492" starttime="20200911 13:03:51.039"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:55.493" starttime="20200911 13:03:51.038"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:55.496" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:55.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:55.500" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:03:55.500" starttime="20200911 13:03:55.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:55.501" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:03:55.501" starttime="20200911 13:03:55.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:55.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:55.502" starttime="20200911 13:03:55.501"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:55.502" starttime="20200911 13:03:55.494"></status>
</kw>
<msg timestamp="20200911 13:03:55.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:55.502" starttime="20200911 13:03:55.493"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:55.503" starttime="20200911 13:03:55.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:55.507" level="INFO">Running command 'ozone sh key get /59379-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:59.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:59.753" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:03:59.753" starttime="20200911 13:03:55.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:59.754" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:03:59.754" starttime="20200911 13:03:59.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:59.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:59.755" starttime="20200911 13:03:59.754"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:59.755" starttime="20200911 13:03:55.504"></status>
</kw>
<msg timestamp="20200911 13:03:59.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:59.756" starttime="20200911 13:03:55.504"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:59.756" starttime="20200911 13:03:55.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:59.760" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:03:59.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:03:59.762" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:03:59.762" starttime="20200911 13:03:59.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:03:59.763" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:03:59.764" starttime="20200911 13:03:59.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:03:59.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:03:59.764" starttime="20200911 13:03:59.764"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:59.765" starttime="20200911 13:03:59.757"></status>
</kw>
<msg timestamp="20200911 13:03:59.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:03:59.765" starttime="20200911 13:03:59.757"></status>
</kw>
<status status="PASS" endtime="20200911 13:03:59.765" starttime="20200911 13:03:59.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:03:59.770" level="INFO">Running command 'ozone sh key info /59379-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:02.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:02.314" level="INFO">${output} = {
  "volumeName": "59379-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T13:03:53.132Z",
  "modificationTime": "2020-09-11T13:03:55.004Z",
...</msg>
<status status="PASS" endtime="20200911 13:04:02.314" starttime="20200911 13:03:59.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:02.316" level="INFO">{
  "volumeName": "59379-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T13:03:53.132Z",
  "modificationTime": "2020-09-11T13:03:55.004Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104846421729607680,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200911 13:04:02.316" starttime="20200911 13:04:02.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:02.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:02.317" starttime="20200911 13:04:02.316"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:02.317" starttime="20200911 13:03:59.766"></status>
</kw>
<msg timestamp="20200911 13:04:02.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:02.317" starttime="20200911 13:03:59.766"></status>
</kw>
<msg timestamp="20200911 13:04:02.317" level="INFO">${result} = {
  "volumeName": "59379-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T13:03:53.132Z",
  "modificationTime": "2020-09-11T13:03:55.004Z",
...</msg>
<status status="PASS" endtime="20200911 13:04:02.317" starttime="20200911 13:03:59.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200911 13:04:02.319" starttime="20200911 13:04:02.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:02.325" level="INFO">Running command 'ozone sh key delete /59379-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:04.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:04.584" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:04:04.584" starttime="20200911 13:04:02.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:04.586" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:04:04.586" starttime="20200911 13:04:04.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:04.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:04.587" starttime="20200911 13:04:04.586"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:04.587" starttime="20200911 13:04:02.321"></status>
</kw>
<msg timestamp="20200911 13:04:04.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:04.587" starttime="20200911 13:04:02.320"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:04.588" starttime="20200911 13:04:02.319"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:04.592" level="INFO">Running command 'ozone sh key cp /59379-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:09.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:09.579" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:04:09.579" starttime="20200911 13:04:04.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:09.581" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:04:09.581" starttime="20200911 13:04:09.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:09.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:09.581" starttime="20200911 13:04:09.581"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:09.582" starttime="20200911 13:04:04.589"></status>
</kw>
<msg timestamp="20200911 13:04:09.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:09.582" starttime="20200911 13:04:04.589"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:09.582" starttime="20200911 13:04:04.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:09.586" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:09.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:09.589" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:04:09.589" starttime="20200911 13:04:09.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:09.590" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:04:09.590" starttime="20200911 13:04:09.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:09.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:09.591" starttime="20200911 13:04:09.590"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:09.591" starttime="20200911 13:04:09.583"></status>
</kw>
<msg timestamp="20200911 13:04:09.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:09.592" starttime="20200911 13:04:09.583"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:09.592" starttime="20200911 13:04:09.582"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:09.596" level="INFO">Running command 'ozone sh key get /59379-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:13.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:13.561" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:04:13.561" starttime="20200911 13:04:09.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:13.562" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:04:13.562" starttime="20200911 13:04:13.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:13.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:13.563" starttime="20200911 13:04:13.562"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:13.563" starttime="20200911 13:04:09.593"></status>
</kw>
<msg timestamp="20200911 13:04:13.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:13.563" starttime="20200911 13:04:09.593"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:13.563" starttime="20200911 13:04:09.592"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:13.567" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:13.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:13.570" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:04:13.570" starttime="20200911 13:04:13.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:13.571" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:04:13.571" starttime="20200911 13:04:13.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:13.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:13.572" starttime="20200911 13:04:13.572"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:13.572" starttime="20200911 13:04:13.565"></status>
</kw>
<msg timestamp="20200911 13:04:13.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:13.573" starttime="20200911 13:04:13.564"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:13.573" starttime="20200911 13:04:13.564"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:13.578" level="INFO">Running command 'ozone sh key delete /59379-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:15.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:15.863" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:04:15.863" starttime="20200911 13:04:13.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:15.864" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:04:15.864" starttime="20200911 13:04:15.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:15.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:15.865" starttime="20200911 13:04:15.864"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:15.865" starttime="20200911 13:04:13.574"></status>
</kw>
<msg timestamp="20200911 13:04:15.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:15.865" starttime="20200911 13:04:13.574"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:15.866" starttime="20200911 13:04:13.573"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:15.869" level="INFO">Running command 'ozone sh key get /59379-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:18.212" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 13:04:18.212" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200911 13:04:18.212" starttime="20200911 13:04:15.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:18.213" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200911 13:04:18.213" starttime="20200911 13:04:18.212"></status>
</kw>
<msg timestamp="20200911 13:04:18.213" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200911 13:04:18.213" starttime="20200911 13:04:15.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200911 13:04:18.214" starttime="20200911 13:04:18.214"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:18.219" level="INFO">Running command 'ozone sh key get --force /59379-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:22.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:22.501" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:04:22.501" starttime="20200911 13:04:18.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:22.503" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:04:22.503" starttime="20200911 13:04:22.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:22.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:22.503" starttime="20200911 13:04:22.503"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:22.504" starttime="20200911 13:04:18.215"></status>
</kw>
<msg timestamp="20200911 13:04:22.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:22.504" starttime="20200911 13:04:18.215"></status>
</kw>
<msg timestamp="20200911 13:04:22.504" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200911 13:04:22.504" starttime="20200911 13:04:18.214"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200911 13:04:22.505" starttime="20200911 13:04:22.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:22.511" level="INFO">Running command 'ozone sh key info /59379-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:24.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:24.945" level="INFO">${output} = {
  "volumeName": "59379-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T13:03:42.244Z",
  "modificationTime": "2020-09-11T13:03:46.185Z",
  "rep...</msg>
<status status="PASS" endtime="20200911 13:04:24.945" starttime="20200911 13:04:22.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:24.946" level="INFO">{
  "volumeName": "59379-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T13:03:42.244Z",
  "modificationTime": "2020-09-11T13:03:46.185Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104846421012971520,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200911 13:04:24.946" starttime="20200911 13:04:24.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:24.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:24.947" starttime="20200911 13:04:24.946"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:24.947" starttime="20200911 13:04:22.507"></status>
</kw>
<msg timestamp="20200911 13:04:24.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:24.947" starttime="20200911 13:04:22.506"></status>
</kw>
<msg timestamp="20200911 13:04:24.948" level="INFO">${result} = {
  "volumeName": "59379-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T13:03:42.244Z",
  "modificationTime": "2020-09-11T13:03:46.185Z",
  "rep...</msg>
<status status="PASS" endtime="20200911 13:04:24.948" starttime="20200911 13:04:22.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 13:04:24.948" starttime="20200911 13:04:24.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:24.952" level="INFO">Running command 'ozone sh key list /59379-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:27.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:27.556" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200911 13:04:27.556" starttime="20200911 13:04:24.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:27.557" level="INFO">key1</msg>
<status status="PASS" endtime="20200911 13:04:27.557" starttime="20200911 13:04:27.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:27.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:27.558" starttime="20200911 13:04:27.557"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:27.558" starttime="20200911 13:04:24.950"></status>
</kw>
<msg timestamp="20200911 13:04:27.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:27.558" starttime="20200911 13:04:24.949"></status>
</kw>
<msg timestamp="20200911 13:04:27.559" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200911 13:04:27.559" starttime="20200911 13:04:24.948"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200911 13:04:27.559" starttime="20200911 13:04:27.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:27.563" level="INFO">Running command 'ozone sh key rename /59379-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:29.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:29.985" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:04:29.985" starttime="20200911 13:04:27.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:29.986" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:04:29.986" starttime="20200911 13:04:29.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:29.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:29.987" starttime="20200911 13:04:29.986"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:29.987" starttime="20200911 13:04:27.560"></status>
</kw>
<msg timestamp="20200911 13:04:29.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:29.988" starttime="20200911 13:04:27.560"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:29.988" starttime="20200911 13:04:27.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:29.992" level="INFO">Running command 'ozone sh key list /59379-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:32.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:32.570" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200911 13:04:32.570" starttime="20200911 13:04:29.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:32.571" level="INFO">key2</msg>
<status status="PASS" endtime="20200911 13:04:32.571" starttime="20200911 13:04:32.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:32.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:32.572" starttime="20200911 13:04:32.571"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:32.572" starttime="20200911 13:04:29.989"></status>
</kw>
<msg timestamp="20200911 13:04:32.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:32.573" starttime="20200911 13:04:29.989"></status>
</kw>
<msg timestamp="20200911 13:04:32.573" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200911 13:04:32.573" starttime="20200911 13:04:29.988"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200911 13:04:32.574" starttime="20200911 13:04:32.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:32.577" level="INFO">Running command 'ozone sh key delete /59379-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:34.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:34.818" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:04:34.818" starttime="20200911 13:04:32.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:34.820" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:04:34.820" starttime="20200911 13:04:34.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:34.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:34.820" starttime="20200911 13:04:34.820"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:34.821" starttime="20200911 13:04:32.575"></status>
</kw>
<msg timestamp="20200911 13:04:34.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:34.821" starttime="20200911 13:04:32.574"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:34.821" starttime="20200911 13:04:32.574"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:34.821" starttime="20200911 13:03:39.831"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:34.821" starttime="20200911 13:03:39.831"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:34.825" level="INFO">Running command 'ozone sh bucket delete /59379-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:37.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:37.063" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:04:37.063" starttime="20200911 13:04:34.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:37.064" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:04:37.064" starttime="20200911 13:04:37.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:37.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:37.065" starttime="20200911 13:04:37.064"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:37.065" starttime="20200911 13:04:34.823"></status>
</kw>
<msg timestamp="20200911 13:04:37.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:37.066" starttime="20200911 13:04:34.822"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:37.066" starttime="20200911 13:04:34.822"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:04:37.070" level="INFO">Running command 'ozone sh volume delete /59379-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:04:39.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:04:39.369" level="INFO">${output} = Volume 59379-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200911 13:04:39.369" starttime="20200911 13:04:37.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:04:39.371" level="INFO">Volume 59379-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200911 13:04:39.371" starttime="20200911 13:04:39.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:04:39.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:04:39.372" starttime="20200911 13:04:39.371"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:39.372" starttime="20200911 13:04:37.067"></status>
</kw>
<msg timestamp="20200911 13:04:39.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:04:39.372" starttime="20200911 13:04:37.067"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:39.372" starttime="20200911 13:04:37.066"></status>
</kw>
<status status="PASS" endtime="20200911 13:04:39.372" starttime="20200911 13:03:10.413"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 13:04:39.373" critical="yes" starttime="20200911 13:03:10.409"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200911 13:04:39.374" starttime="20200911 13:03:10.225"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
