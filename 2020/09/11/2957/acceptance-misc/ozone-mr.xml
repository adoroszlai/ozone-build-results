<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200911 13:22:27.542" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:02.005" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:04.618" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 13:06:04.618" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200911 13:06:04.618" starttime="20200911 13:06:02.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:04.619" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200911 13:06:04.620" starttime="20200911 13:06:04.619"></status>
</kw>
<msg timestamp="20200911 13:06:04.620" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200911 13:06:04.620" starttime="20200911 13:06:01.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:04.626" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:06.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:06.984" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:06:06.984" starttime="20200911 13:06:04.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:06.985" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:06:06.985" starttime="20200911 13:06:06.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:06.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:06.986" starttime="20200911 13:06:06.985"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:06.986" starttime="20200911 13:06:04.622"></status>
</kw>
<msg timestamp="20200911 13:06:06.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:06.986" starttime="20200911 13:06:04.622"></status>
</kw>
<msg timestamp="20200911 13:06:06.987" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200911 13:06:06.987" starttime="20200911 13:06:04.621"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200911 13:06:06.987" starttime="20200911 13:06:06.987"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:06.987" starttime="20200911 13:06:04.621"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:06.987" starttime="20200911 13:06:04.620"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:06.993" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:09.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:09.269" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:06:09.269" starttime="20200911 13:06:06.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:09.270" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:06:09.271" starttime="20200911 13:06:09.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:09.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:09.271" starttime="20200911 13:06:09.271"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:09.272" starttime="20200911 13:06:06.990"></status>
</kw>
<msg timestamp="20200911 13:06:09.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:09.272" starttime="20200911 13:06:06.989"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:09.272" starttime="20200911 13:06:06.989"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:09.272" starttime="20200911 13:06:06.988"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:09.272" starttime="20200911 13:06:06.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200911 13:06:09.273" starttime="20200911 13:06:09.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:09.278" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:11.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:11.781" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T13:06:09.143Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200911 13:06:11.781" starttime="20200911 13:06:09.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:11.783" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T13:06:09.143Z",
  "modificationTime" : "2020-09-11T13:06:09.143Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200911 13:06:11.783" starttime="20200911 13:06:11.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:11.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:11.784" starttime="20200911 13:06:11.783"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:11.784" starttime="20200911 13:06:09.274"></status>
</kw>
<msg timestamp="20200911 13:06:11.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:11.784" starttime="20200911 13:06:09.274"></status>
</kw>
<msg timestamp="20200911 13:06:11.785" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T13:06:09.143Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200911 13:06:11.785" starttime="20200911 13:06:09.273"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200911 13:06:11.785" starttime="20200911 13:06:11.785"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:06:11.790" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:06:11.790" starttime="20200911 13:06:11.789"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:06:11.790" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:06:11.790" starttime="20200911 13:06:11.790"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:11.791" starttime="20200911 13:06:11.789"></status>
</kw>
<msg timestamp="20200911 13:06:11.791" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:06:11.791" starttime="20200911 13:06:11.788"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:11.791" starttime="20200911 13:06:11.787"></status>
</kw>
<msg timestamp="20200911 13:06:11.791" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200911 13:06:11.791" starttime="20200911 13:06:11.786"></status>
</kw>
<msg timestamp="20200911 13:06:11.792" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200911 13:06:11.792" starttime="20200911 13:06:11.785"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:11.797" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:13.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:13.997" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:06:13.997" starttime="20200911 13:06:11.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:13.998" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:06:13.998" starttime="20200911 13:06:13.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:13.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:13.999" starttime="20200911 13:06:13.998"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:13.999" starttime="20200911 13:06:11.793"></status>
</kw>
<msg timestamp="20200911 13:06:13.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:13.999" starttime="20200911 13:06:11.792"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:14.000" starttime="20200911 13:06:11.792"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:14.004" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:19.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:19.486" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:06:19.486" starttime="20200911 13:06:14.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:19.488" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:06:19.488" starttime="20200911 13:06:19.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:19.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:19.489" starttime="20200911 13:06:19.488"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:19.489" starttime="20200911 13:06:14.001"></status>
</kw>
<msg timestamp="20200911 13:06:19.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:19.489" starttime="20200911 13:06:14.001"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:19.490" starttime="20200911 13:06:14.000"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:19.494" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:23.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:23.986" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:06:23.986" starttime="20200911 13:06:19.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:23.987" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:06:23.987" starttime="20200911 13:06:23.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:23.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:23.988" starttime="20200911 13:06:23.987"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:23.988" starttime="20200911 13:06:19.491"></status>
</kw>
<msg timestamp="20200911 13:06:23.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:23.989" starttime="20200911 13:06:19.490"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:23.989" starttime="20200911 13:06:19.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:23.993" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:28.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:28.375" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:06:28.375" starttime="20200911 13:06:23.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:28.376" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:06:28.376" starttime="20200911 13:06:28.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:28.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:28.377" starttime="20200911 13:06:28.377"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:28.377" starttime="20200911 13:06:23.990"></status>
</kw>
<msg timestamp="20200911 13:06:28.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:28.378" starttime="20200911 13:06:23.990"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:28.378" starttime="20200911 13:06:23.989"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 13:06:28.378" critical="yes" starttime="20200911 13:06:01.998"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:06:28.384" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:06:28.384" starttime="20200911 13:06:28.383"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:06:28.384" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:06:28.384" starttime="20200911 13:06:28.384"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:28.385" starttime="20200911 13:06:28.382"></status>
</kw>
<msg timestamp="20200911 13:06:28.385" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:06:28.385" starttime="20200911 13:06:28.382"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:28.385" starttime="20200911 13:06:28.381"></status>
</kw>
<msg timestamp="20200911 13:06:28.385" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200911 13:06:28.385" starttime="20200911 13:06:28.381"></status>
</kw>
<msg timestamp="20200911 13:06:28.386" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200911 13:06:28.386" starttime="20200911 13:06:28.380"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:28.389" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:30.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:30.913" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:06:30.913" starttime="20200911 13:06:28.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:30.914" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:06:30.914" starttime="20200911 13:06:30.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:30.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:30.915" starttime="20200911 13:06:30.914"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:30.915" starttime="20200911 13:06:28.387"></status>
</kw>
<msg timestamp="20200911 13:06:30.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:30.916" starttime="20200911 13:06:28.386"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:30.916" starttime="20200911 13:06:28.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:30.920" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:33.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:33.475" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:06:33.475" starttime="20200911 13:06:30.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:33.476" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:06:33.476" starttime="20200911 13:06:33.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:33.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:33.477" starttime="20200911 13:06:33.476"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:33.478" starttime="20200911 13:06:30.917"></status>
</kw>
<msg timestamp="20200911 13:06:33.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:33.478" starttime="20200911 13:06:30.917"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:33.478" starttime="20200911 13:06:30.916"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 13:06:33.478" critical="yes" starttime="20200911 13:06:28.379"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200911 13:06:33.481" starttime="20200911 13:06:01.923"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:08:16.695" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:08:16.695" starttime="20200911 13:08:16.694"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:08:16.696" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:08:16.696" starttime="20200911 13:08:16.695"></status>
</kw>
<status status="PASS" endtime="20200911 13:08:16.696" starttime="20200911 13:08:16.693"></status>
</kw>
<msg timestamp="20200911 13:08:16.696" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:08:16.696" starttime="20200911 13:08:16.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:08:16.697" starttime="20200911 13:08:16.697"></status>
</kw>
<msg timestamp="20200911 13:08:16.697" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:08:16.697" starttime="20200911 13:08:16.696"></status>
</kw>
<status status="PASS" endtime="20200911 13:08:16.697" starttime="20200911 13:08:16.691"></status>
</kw>
<msg timestamp="20200911 13:08:16.698" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:08:16.698" starttime="20200911 13:08:16.691"></status>
</kw>
<msg timestamp="20200911 13:08:16.698" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:08:16.698" starttime="20200911 13:08:16.689"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:08:16.699" level="INFO">${random} = 60932</msg>
<status status="PASS" endtime="20200911 13:08:16.699" starttime="20200911 13:08:16.698"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:08:16.705" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-60932 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:08:20.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:08:20.508" level="INFO">${output} = 2020-09-11 13:08:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:08:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-11 ...</msg>
<status status="PASS" endtime="20200911 13:08:20.508" starttime="20200911 13:08:16.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:08:20.509" level="INFO">2020-09-11 13:08:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:08:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-11 13:08:18 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-11 13:08:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:08:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4424CDD600CB-&gt;7d59bba6-70d3-4b73-9330-db355bdb2b7e
2020-09-11 13:08:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200911 13:08:20.509" starttime="20200911 13:08:20.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:08:20.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:08:20.510" starttime="20200911 13:08:20.509"></status>
</kw>
<status status="PASS" endtime="20200911 13:08:20.510" starttime="20200911 13:08:16.700"></status>
</kw>
<msg timestamp="20200911 13:08:20.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:08:20.510" starttime="20200911 13:08:16.699"></status>
</kw>
<msg timestamp="20200911 13:08:20.510" level="INFO">${result} = 2020-09-11 13:08:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:08:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-11 ...</msg>
<status status="PASS" endtime="20200911 13:08:20.510" starttime="20200911 13:08:16.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:08:20.515" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:08:22.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:08:22.501" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-11 13:06 ofs://om/volume1/bucket1/ozone-52121
-rw-...</msg>
<status status="PASS" endtime="20200911 13:08:22.501" starttime="20200911 13:08:20.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:08:22.502" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-11 13:06 ofs://om/volume1/bucket1/ozone-52121
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-11 13:08 ofs://om/volume1/bucket1/ozone-60932
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:06 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:07 ofs://om/volume1/bucket1/wordcount-77.txt</msg>
<status status="PASS" endtime="20200911 13:08:22.502" starttime="20200911 13:08:22.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:08:22.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:08:22.503" starttime="20200911 13:08:22.503"></status>
</kw>
<status status="PASS" endtime="20200911 13:08:22.503" starttime="20200911 13:08:20.511"></status>
</kw>
<msg timestamp="20200911 13:08:22.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:08:22.504" starttime="20200911 13:08:20.511"></status>
</kw>
<msg timestamp="20200911 13:08:22.504" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-11 13:06 ofs://om/volume1/bucket1/ozone-52121
-rw-...</msg>
<status status="PASS" endtime="20200911 13:08:22.504" starttime="20200911 13:08:20.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:08:22.505" starttime="20200911 13:08:22.504"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200911 13:08:22.505" critical="yes" starttime="20200911 13:08:16.689"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200911 13:08:22.506" starttime="20200911 13:08:16.627"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:06:38.419" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:06:38.419" starttime="20200911 13:06:38.419"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:06:38.420" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:06:38.420" starttime="20200911 13:06:38.419"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:38.420" starttime="20200911 13:06:38.418"></status>
</kw>
<msg timestamp="20200911 13:06:38.420" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:06:38.420" starttime="20200911 13:06:38.418"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:38.420" starttime="20200911 13:06:38.417"></status>
</kw>
<msg timestamp="20200911 13:06:38.421" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:06:38.421" starttime="20200911 13:06:38.416"></status>
</kw>
<msg timestamp="20200911 13:06:38.421" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:06:38.421" starttime="20200911 13:06:38.415"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:06:38.422" level="INFO">${random} = 52121</msg>
<status status="PASS" endtime="20200911 13:06:38.422" starttime="20200911 13:06:38.421"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:38.429" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-52121 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:42.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:42.160" level="INFO">${output} = 2020-09-11 13:06:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:06:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-11 ...</msg>
<status status="PASS" endtime="20200911 13:06:42.160" starttime="20200911 13:06:38.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:42.161" level="INFO">2020-09-11 13:06:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:06:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-11 13:06:40 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-11 13:06:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:06:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5A142C762CFC-&gt;7d59bba6-70d3-4b73-9330-db355bdb2b7e
2020-09-11 13:06:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200911 13:06:42.161" starttime="20200911 13:06:42.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:42.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:42.162" starttime="20200911 13:06:42.161"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:42.162" starttime="20200911 13:06:38.423"></status>
</kw>
<msg timestamp="20200911 13:06:42.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:42.162" starttime="20200911 13:06:38.423"></status>
</kw>
<msg timestamp="20200911 13:06:42.163" level="INFO">${result} = 2020-09-11 13:06:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:06:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-11 ...</msg>
<status status="PASS" endtime="20200911 13:06:42.163" starttime="20200911 13:06:38.423"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:42.167" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:44.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:44.193" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-11 13:06 o3fs://bucket1.volume1.om/ozone-52121
dr...</msg>
<status status="PASS" endtime="20200911 13:06:44.194" starttime="20200911 13:06:42.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:44.195" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-11 13:06 o3fs://bucket1.volume1.om/ozone-52121
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:06 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200911 13:06:44.195" starttime="20200911 13:06:44.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:44.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:44.196" starttime="20200911 13:06:44.195"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:44.196" starttime="20200911 13:06:42.164"></status>
</kw>
<msg timestamp="20200911 13:06:44.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:44.196" starttime="20200911 13:06:42.163"></status>
</kw>
<msg timestamp="20200911 13:06:44.196" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-11 13:06 o3fs://bucket1.volume1.om/ozone-52121
dr...</msg>
<status status="PASS" endtime="20200911 13:06:44.196" starttime="20200911 13:06:42.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:06:44.197" starttime="20200911 13:06:44.197"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200911 13:06:44.197" critical="yes" starttime="20200911 13:06:38.414"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200911 13:06:44.198" starttime="20200911 13:06:38.355"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:08:27.403" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:08:27.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:08:27.409" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:08:27.409" starttime="20200911 13:08:27.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:08:27.410" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:08:27.410" starttime="20200911 13:08:27.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:08:27.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:08:27.411" starttime="20200911 13:08:27.410"></status>
</kw>
<status status="PASS" endtime="20200911 13:08:27.411" starttime="20200911 13:08:27.397"></status>
</kw>
<msg timestamp="20200911 13:08:27.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:08:27.411" starttime="20200911 13:08:27.397"></status>
</kw>
<msg timestamp="20200911 13:08:27.412" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:08:27.412" starttime="20200911 13:08:27.396"></status>
</kw>
<msg timestamp="20200911 13:08:27.412" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:08:27.412" starttime="20200911 13:08:27.396"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:08:27.415" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:08:27.415" starttime="20200911 13:08:27.415"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:08:27.416" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:08:27.416" starttime="20200911 13:08:27.416"></status>
</kw>
<status status="PASS" endtime="20200911 13:08:27.416" starttime="20200911 13:08:27.414"></status>
</kw>
<msg timestamp="20200911 13:08:27.417" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:08:27.417" starttime="20200911 13:08:27.414"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:08:27.418" starttime="20200911 13:08:27.417"></status>
</kw>
<msg timestamp="20200911 13:08:27.418" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:08:27.418" starttime="20200911 13:08:27.417"></status>
</kw>
<status status="PASS" endtime="20200911 13:08:27.418" starttime="20200911 13:08:27.413"></status>
</kw>
<msg timestamp="20200911 13:08:27.418" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:08:27.418" starttime="20200911 13:08:27.413"></status>
</kw>
<msg timestamp="20200911 13:08:27.418" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:08:27.418" starttime="20200911 13:08:27.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:08:27.423" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:09:04.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:09:04.716" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:08:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:08:29 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200911 13:09:04.716" starttime="20200911 13:08:27.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:09:04.718" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:08:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:08:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-11 13:08:29 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-11 13:08:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:08:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4A2EC665D101-&gt;7d59bba6-70d3-4b73-9330-db355bdb2b7e
2020-09-11 13:08:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-11 13:08:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-09-11 13:08:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:08:33 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-11 13:08:34 INFO  JobSubmitter:198 - number of splits:3
2020-09-11 13:08:34 INFO  JobSubmitter:287 - Submitting tokens for job: job_1599829530808_0003
2020-09-11 13:08:34 INFO  YarnClientImpl:273 - Submitted application application_1599829530808_0003
2020-09-11 13:08:34 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1599829530808_0003/
2020-09-11 13:08:34 INFO  Job:1339 - Running job: job_1599829530808_0003
2020-09-11 13:08:42 INFO  Job:1360 - Job job_1599829530808_0003 running in uber mode : false
2020-09-11 13:08:42 INFO  Job:1367 -  map 0% reduce 0%
2020-09-11 13:08:49 INFO  Job:1367 -  map 33% reduce 0%
2020-09-11 13:08:53 INFO  Job:1367 -  map 67% reduce 0%
2020-09-11 13:08:59 INFO  Job:1367 -  map 100% reduce 0%
2020-09-11 13:09:04 INFO  Job:1367 -  map 100% reduce 100%
2020-09-11 13:09:04 INFO  Job:1378 - Job job_1599829530808_0003 completed successfully
2020-09-11 13:09:04 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=613525
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43472
		Total time spent by all reduces in occupied slots (ms)=15688
		Total time spent by all map tasks (ms)=10868
		Total time spent by all reduce tasks (ms)=3922
		Total vcore-milliseconds taken by all map tasks=10868
		Total vcore-milliseconds taken by all reduce tasks=3922
		Total megabyte-milliseconds taken by all map tasks=44515328
		Total megabyte-milliseconds taken by all reduce tasks=16064512
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=640
		CPU time spent (ms)=7190
		Physical memory (bytes) snapshot=1106522112
		Virtual memory (bytes) snapshot=16043233280
		Total committed heap usage (bytes)=1064304640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.672 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200911 13:09:04.718" starttime="20200911 13:09:04.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:09:04.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:09:04.718" starttime="20200911 13:09:04.718"></status>
</kw>
<status status="PASS" endtime="20200911 13:09:04.719" starttime="20200911 13:08:27.419"></status>
</kw>
<msg timestamp="20200911 13:09:04.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:09:04.719" starttime="20200911 13:08:27.419"></status>
</kw>
<msg timestamp="20200911 13:09:04.719" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:08:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:08:29 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200911 13:09:04.720" starttime="20200911 13:08:27.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:09:04.720" starttime="20200911 13:09:04.720"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:09:04.720" critical="yes" starttime="20200911 13:08:27.395"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:09:04.726" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:09:04.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:09:04.731" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:09:04.731" starttime="20200911 13:09:04.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:09:04.732" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:09:04.733" starttime="20200911 13:09:04.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:09:04.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:09:04.733" starttime="20200911 13:09:04.733"></status>
</kw>
<status status="PASS" endtime="20200911 13:09:04.734" starttime="20200911 13:09:04.723"></status>
</kw>
<msg timestamp="20200911 13:09:04.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:09:04.734" starttime="20200911 13:09:04.722"></status>
</kw>
<msg timestamp="20200911 13:09:04.734" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:09:04.734" starttime="20200911 13:09:04.722"></status>
</kw>
<msg timestamp="20200911 13:09:04.734" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:09:04.734" starttime="20200911 13:09:04.722"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:09:04.735" level="INFO">${random} = 04</msg>
<status status="PASS" endtime="20200911 13:09:04.735" starttime="20200911 13:09:04.735"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:09:04.740" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:09:04.740" starttime="20200911 13:09:04.739"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:09:04.740" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:09:04.740" starttime="20200911 13:09:04.740"></status>
</kw>
<status status="PASS" endtime="20200911 13:09:04.741" starttime="20200911 13:09:04.738"></status>
</kw>
<msg timestamp="20200911 13:09:04.741" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:09:04.741" starttime="20200911 13:09:04.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:09:04.742" starttime="20200911 13:09:04.741"></status>
</kw>
<msg timestamp="20200911 13:09:04.742" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:09:04.742" starttime="20200911 13:09:04.741"></status>
</kw>
<status status="PASS" endtime="20200911 13:09:04.742" starttime="20200911 13:09:04.737"></status>
</kw>
<msg timestamp="20200911 13:09:04.742" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:09:04.742" starttime="20200911 13:09:04.736"></status>
</kw>
<msg timestamp="20200911 13:09:04.742" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:09:04.742" starttime="20200911 13:09:04.736"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:09:04.746" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:09:04.746" starttime="20200911 13:09:04.745"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:09:04.746" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:09:04.746" starttime="20200911 13:09:04.746"></status>
</kw>
<status status="PASS" endtime="20200911 13:09:04.747" starttime="20200911 13:09:04.745"></status>
</kw>
<msg timestamp="20200911 13:09:04.747" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:09:04.747" starttime="20200911 13:09:04.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:09:04.748" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200911 13:09:04.748" starttime="20200911 13:09:04.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:09:04.749" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200911 13:09:04.749" starttime="20200911 13:09:04.748"></status>
</kw>
<status status="PASS" endtime="20200911 13:09:04.749" starttime="20200911 13:09:04.747"></status>
</kw>
<msg timestamp="20200911 13:09:04.749" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200911 13:09:04.749" starttime="20200911 13:09:04.747"></status>
</kw>
<status status="PASS" endtime="20200911 13:09:04.750" starttime="20200911 13:09:04.744"></status>
</kw>
<msg timestamp="20200911 13:09:04.750" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200911 13:09:04.750" starttime="20200911 13:09:04.743"></status>
</kw>
<msg timestamp="20200911 13:09:04.750" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200911 13:09:04.750" starttime="20200911 13:09:04.743"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:09:04.753" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:09:04.753" starttime="20200911 13:09:04.753"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:09:04.754" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:09:04.754" starttime="20200911 13:09:04.754"></status>
</kw>
<status status="PASS" endtime="20200911 13:09:04.754" starttime="20200911 13:09:04.752"></status>
</kw>
<msg timestamp="20200911 13:09:04.754" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:09:04.754" starttime="20200911 13:09:04.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:09:04.756" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200911 13:09:04.756" starttime="20200911 13:09:04.756"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:09:04.757" level="INFO">${result} = /wordcount-04.txt</msg>
<status status="PASS" endtime="20200911 13:09:04.757" starttime="20200911 13:09:04.756"></status>
</kw>
<status status="PASS" endtime="20200911 13:09:04.757" starttime="20200911 13:09:04.755"></status>
</kw>
<msg timestamp="20200911 13:09:04.757" level="INFO">${path_with_leading} = /wordcount-04.txt</msg>
<status status="PASS" endtime="20200911 13:09:04.757" starttime="20200911 13:09:04.755"></status>
</kw>
<status status="PASS" endtime="20200911 13:09:04.757" starttime="20200911 13:09:04.751"></status>
</kw>
<msg timestamp="20200911 13:09:04.757" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-04.txt</msg>
<status status="PASS" endtime="20200911 13:09:04.757" starttime="20200911 13:09:04.751"></status>
</kw>
<msg timestamp="20200911 13:09:04.757" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-04.txt</msg>
<status status="PASS" endtime="20200911 13:09:04.757" starttime="20200911 13:09:04.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:09:04.762" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-04.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:09:42.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:09:42.604" level="INFO">${output} = 2020-09-11 13:09:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-09-11 13:09:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200911 13:09:42.605" starttime="20200911 13:09:04.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:09:42.606" level="INFO">2020-09-11 13:09:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-09-11 13:09:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:09:07 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:09:07 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-11 13:09:07 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-11 13:09:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:09:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-12B24D0736BC-&gt;7d59bba6-70d3-4b73-9330-db355bdb2b7e
2020-09-11 13:09:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-11 13:09:08 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-11 13:09:09 INFO  JobSubmitter:198 - number of splits:3
2020-09-11 13:09:09 INFO  JobSubmitter:287 - Submitting tokens for job: job_1599829530808_0004
2020-09-11 13:09:09 INFO  YarnClientImpl:273 - Submitted application application_1599829530808_0004
2020-09-11 13:09:09 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1599829530808_0004/
2020-09-11 13:09:09 INFO  Job:1339 - Running job: job_1599829530808_0004
2020-09-11 13:09:17 INFO  Job:1360 - Job job_1599829530808_0004 running in uber mode : false
2020-09-11 13:09:17 INFO  Job:1367 -  map 0% reduce 0%
2020-09-11 13:09:25 INFO  Job:1367 -  map 33% reduce 0%
2020-09-11 13:09:29 INFO  Job:1367 -  map 67% reduce 0%
2020-09-11 13:09:34 INFO  Job:1367 -  map 100% reduce 0%
2020-09-11 13:09:39 INFO  Job:1367 -  map 100% reduce 100%
2020-09-11 13:09:42 INFO  Job:1378 - Job job_1599829530808_0004 completed successfully
2020-09-11 13:09:42 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676285
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43700
		Total time spent by all reduces in occupied slots (ms)=16052
		Total time spent by all map tasks (ms)=10925
		Total time spent by all reduce tasks (ms)=4013
		Total vcore-milliseconds taken by all map tasks=10925
		Total vcore-milliseconds taken by all reduce tasks=4013
		Total megabyte-milliseconds taken by all map tasks=44748800
		Total megabyte-milliseconds taken by all reduce tasks=16437248
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=652
		CPU time spent (ms)=8000
		Physical memory (bytes) snapshot=1127129088
		Virtual memory (bytes) snapshot=16061636608
		Total committed heap usage (bytes)=967835648
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200911 13:09:42.606" starttime="20200911 13:09:42.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:09:42.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:09:42.607" starttime="20200911 13:09:42.606"></status>
</kw>
<status status="PASS" endtime="20200911 13:09:42.607" starttime="20200911 13:09:04.758"></status>
</kw>
<msg timestamp="20200911 13:09:42.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:09:42.607" starttime="20200911 13:09:04.758"></status>
</kw>
<msg timestamp="20200911 13:09:42.608" level="INFO">${output} = 2020-09-11 13:09:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-09-11 13:09:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200911 13:09:42.608" starttime="20200911 13:09:04.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200911 13:09:42.608" starttime="20200911 13:09:42.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:09:42.609" starttime="20200911 13:09:42.608"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:09:42.609" critical="yes" starttime="20200911 13:09:04.721"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200911 13:09:42.610" starttime="20200911 13:08:27.335"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:49.194" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:06:49.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:06:49.199" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:06:49.199" starttime="20200911 13:06:49.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:06:49.200" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:06:49.200" starttime="20200911 13:06:49.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:06:49.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:06:49.201" starttime="20200911 13:06:49.200"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:49.201" starttime="20200911 13:06:49.187"></status>
</kw>
<msg timestamp="20200911 13:06:49.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:06:49.201" starttime="20200911 13:06:49.187"></status>
</kw>
<msg timestamp="20200911 13:06:49.201" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:06:49.201" starttime="20200911 13:06:49.186"></status>
</kw>
<msg timestamp="20200911 13:06:49.201" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:06:49.202" starttime="20200911 13:06:49.186"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:06:49.205" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:06:49.205" starttime="20200911 13:06:49.205"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:06:49.206" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:06:49.206" starttime="20200911 13:06:49.205"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:49.206" starttime="20200911 13:06:49.204"></status>
</kw>
<msg timestamp="20200911 13:06:49.206" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:06:49.206" starttime="20200911 13:06:49.204"></status>
</kw>
<status status="PASS" endtime="20200911 13:06:49.207" starttime="20200911 13:06:49.203"></status>
</kw>
<msg timestamp="20200911 13:06:49.207" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:06:49.207" starttime="20200911 13:06:49.202"></status>
</kw>
<msg timestamp="20200911 13:06:49.207" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:06:49.207" starttime="20200911 13:06:49.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:06:49.211" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:07:33.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:07:33.451" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:06:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:06:51 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200911 13:07:33.451" starttime="20200911 13:06:49.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:07:33.452" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:06:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:06:51 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-11 13:06:51 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-11 13:06:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:06:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-29CB457D8B53-&gt;7d59bba6-70d3-4b73-9330-db355bdb2b7e
2020-09-11 13:06:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-11 13:06:52 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-09-11 13:06:55 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-11 13:06:58 INFO  JobSubmitter:198 - number of splits:3
2020-09-11 13:06:58 INFO  JobSubmitter:287 - Submitting tokens for job: job_1599829530808_0001
2020-09-11 13:06:59 INFO  YarnClientImpl:273 - Submitted application application_1599829530808_0001
2020-09-11 13:06:59 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1599829530808_0001/
2020-09-11 13:06:59 INFO  Job:1339 - Running job: job_1599829530808_0001
2020-09-11 13:07:10 INFO  Job:1360 - Job job_1599829530808_0001 running in uber mode : false
2020-09-11 13:07:10 INFO  Job:1367 -  map 0% reduce 0%
2020-09-11 13:07:16 INFO  Job:1367 -  map 33% reduce 0%
2020-09-11 13:07:21 INFO  Job:1367 -  map 67% reduce 0%
2020-09-11 13:07:26 INFO  Job:1367 -  map 100% reduce 0%
2020-09-11 13:07:31 INFO  Job:1367 -  map 100% reduce 100%
2020-09-11 13:07:32 INFO  Job:1378 - Job job_1599829530808_0001 completed successfully
2020-09-11 13:07:32 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=613737
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42840
		Total time spent by all reduces in occupied slots (ms)=17224
		Total time spent by all map tasks (ms)=10710
		Total time spent by all reduce tasks (ms)=4306
		Total vcore-milliseconds taken by all map tasks=10710
		Total vcore-milliseconds taken by all reduce tasks=4306
		Total megabyte-milliseconds taken by all map tasks=43868160
		Total megabyte-milliseconds taken by all reduce tasks=17637376
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=631
		CPU time spent (ms)=7450
		Physical memory (bytes) snapshot=1101242368
		Virtual memory (bytes) snapshot=16035225600
		Total committed heap usage (bytes)=1044905984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.022 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200911 13:07:33.453" starttime="20200911 13:07:33.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:07:33.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:07:33.453" starttime="20200911 13:07:33.453"></status>
</kw>
<status status="PASS" endtime="20200911 13:07:33.454" starttime="20200911 13:06:49.208"></status>
</kw>
<msg timestamp="20200911 13:07:33.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:07:33.454" starttime="20200911 13:06:49.208"></status>
</kw>
<msg timestamp="20200911 13:07:33.454" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:06:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:06:51 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200911 13:07:33.454" starttime="20200911 13:06:49.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:07:33.455" starttime="20200911 13:07:33.455"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:07:33.455" critical="yes" starttime="20200911 13:06:49.185"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:07:33.461" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:07:33.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:07:33.469" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:07:33.469" starttime="20200911 13:07:33.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:07:33.470" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:07:33.470" starttime="20200911 13:07:33.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:07:33.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:07:33.471" starttime="20200911 13:07:33.470"></status>
</kw>
<status status="PASS" endtime="20200911 13:07:33.471" starttime="20200911 13:07:33.458"></status>
</kw>
<msg timestamp="20200911 13:07:33.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:07:33.472" starttime="20200911 13:07:33.458"></status>
</kw>
<msg timestamp="20200911 13:07:33.472" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:07:33.472" starttime="20200911 13:07:33.457"></status>
</kw>
<msg timestamp="20200911 13:07:33.472" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200911 13:07:33.472" starttime="20200911 13:07:33.457"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:07:33.473" level="INFO">${random} = 77</msg>
<status status="PASS" endtime="20200911 13:07:33.473" starttime="20200911 13:07:33.473"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:07:33.477" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:07:33.477" starttime="20200911 13:07:33.477"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:07:33.478" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:07:33.478" starttime="20200911 13:07:33.478"></status>
</kw>
<status status="PASS" endtime="20200911 13:07:33.478" starttime="20200911 13:07:33.476"></status>
</kw>
<msg timestamp="20200911 13:07:33.478" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:07:33.478" starttime="20200911 13:07:33.476"></status>
</kw>
<status status="PASS" endtime="20200911 13:07:33.479" starttime="20200911 13:07:33.475"></status>
</kw>
<msg timestamp="20200911 13:07:33.479" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:07:33.479" starttime="20200911 13:07:33.474"></status>
</kw>
<msg timestamp="20200911 13:07:33.479" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:07:33.479" starttime="20200911 13:07:33.473"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:07:33.483" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:07:33.483" starttime="20200911 13:07:33.482"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:07:33.483" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:07:33.483" starttime="20200911 13:07:33.483"></status>
</kw>
<status status="PASS" endtime="20200911 13:07:33.483" starttime="20200911 13:07:33.482"></status>
</kw>
<msg timestamp="20200911 13:07:33.484" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:07:33.484" starttime="20200911 13:07:33.481"></status>
</kw>
<status status="PASS" endtime="20200911 13:07:33.484" starttime="20200911 13:07:33.481"></status>
</kw>
<msg timestamp="20200911 13:07:33.484" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200911 13:07:33.484" starttime="20200911 13:07:33.480"></status>
</kw>
<msg timestamp="20200911 13:07:33.484" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200911 13:07:33.484" starttime="20200911 13:07:33.479"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:07:33.487" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:07:33.487" starttime="20200911 13:07:33.487"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:07:33.488" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:07:33.488" starttime="20200911 13:07:33.488"></status>
</kw>
<status status="PASS" endtime="20200911 13:07:33.488" starttime="20200911 13:07:33.486"></status>
</kw>
<msg timestamp="20200911 13:07:33.488" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:07:33.489" starttime="20200911 13:07:33.486"></status>
</kw>
<status status="PASS" endtime="20200911 13:07:33.489" starttime="20200911 13:07:33.485"></status>
</kw>
<msg timestamp="20200911 13:07:33.489" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-77.txt</msg>
<status status="PASS" endtime="20200911 13:07:33.489" starttime="20200911 13:07:33.485"></status>
</kw>
<msg timestamp="20200911 13:07:33.489" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-77.txt</msg>
<status status="PASS" endtime="20200911 13:07:33.489" starttime="20200911 13:07:33.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:07:33.494" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-77.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:08:11.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:08:11.752" level="INFO">${output} = 2020-09-11 13:07:35 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-09-11 13:07:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200911 13:08:11.752" starttime="20200911 13:07:33.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:08:11.753" level="INFO">2020-09-11 13:07:35 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-09-11 13:07:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:07:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:07:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-11 13:07:36 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-11 13:07:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:07:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3027A6A4AEAC-&gt;7d59bba6-70d3-4b73-9330-db355bdb2b7e
2020-09-11 13:07:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-11 13:07:37 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-11 13:07:37 INFO  JobSubmitter:198 - number of splits:3
2020-09-11 13:07:37 INFO  JobSubmitter:287 - Submitting tokens for job: job_1599829530808_0002
2020-09-11 13:07:37 INFO  YarnClientImpl:273 - Submitted application application_1599829530808_0002
2020-09-11 13:07:37 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1599829530808_0002/
2020-09-11 13:07:37 INFO  Job:1339 - Running job: job_1599829530808_0002
2020-09-11 13:07:46 INFO  Job:1360 - Job job_1599829530808_0002 running in uber mode : false
2020-09-11 13:07:46 INFO  Job:1367 -  map 0% reduce 0%
2020-09-11 13:07:53 INFO  Job:1367 -  map 33% reduce 0%
2020-09-11 13:07:59 INFO  Job:1367 -  map 67% reduce 0%
2020-09-11 13:08:04 INFO  Job:1367 -  map 100% reduce 0%
2020-09-11 13:08:08 INFO  Job:1367 -  map 100% reduce 100%
2020-09-11 13:08:11 INFO  Job:1378 - Job job_1599829530808_0002 completed successfully
2020-09-11 13:08:11 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676369
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44188
		Total time spent by all reduces in occupied slots (ms)=15572
		Total time spent by all map tasks (ms)=11047
		Total time spent by all reduce tasks (ms)=3893
		Total vcore-milliseconds taken by all map tasks=11047
		Total vcore-milliseconds taken by all reduce tasks=3893
		Total megabyte-milliseconds taken by all map tasks=45248512
		Total megabyte-milliseconds taken by all reduce tasks=15945728
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=574
		CPU time spent (ms)=7690
		Physical memory (bytes) snapshot=1109565440
		Virtual memory (bytes) snapshot=16047288320
		Total committed heap usage (bytes)=1053294592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200911 13:08:11.754" starttime="20200911 13:08:11.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:08:11.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:08:11.755" starttime="20200911 13:08:11.754"></status>
</kw>
<status status="PASS" endtime="20200911 13:08:11.755" starttime="20200911 13:07:33.490"></status>
</kw>
<msg timestamp="20200911 13:08:11.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:08:11.755" starttime="20200911 13:07:33.490"></status>
</kw>
<msg timestamp="20200911 13:08:11.756" level="INFO">${output} = 2020-09-11 13:07:35 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-09-11 13:07:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200911 13:08:11.756" starttime="20200911 13:07:33.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200911 13:08:11.757" starttime="20200911 13:08:11.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:08:11.757" starttime="20200911 13:08:11.757"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:08:11.757" critical="yes" starttime="20200911 13:07:33.456"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200911 13:08:11.758" starttime="20200911 13:06:49.124"></status>
</suite>
<status status="PASS" elapsedtime="201189" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:10:50.750" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:10:53.494" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 13:10:53.494" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200911 13:10:53.494" starttime="20200911 13:10:50.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:10:53.495" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200911 13:10:53.495" starttime="20200911 13:10:53.495"></status>
</kw>
<msg timestamp="20200911 13:10:53.496" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200911 13:10:53.496" starttime="20200911 13:10:50.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:10:53.502" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:10:55.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:10:55.666" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:10:55.666" starttime="20200911 13:10:53.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:10:55.668" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:10:55.668" starttime="20200911 13:10:55.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:10:55.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:10:55.669" starttime="20200911 13:10:55.668"></status>
</kw>
<status status="PASS" endtime="20200911 13:10:55.669" starttime="20200911 13:10:53.498"></status>
</kw>
<msg timestamp="20200911 13:10:55.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:10:55.669" starttime="20200911 13:10:53.498"></status>
</kw>
<msg timestamp="20200911 13:10:55.670" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200911 13:10:55.670" starttime="20200911 13:10:53.497"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200911 13:10:55.670" starttime="20200911 13:10:55.670"></status>
</kw>
<status status="PASS" endtime="20200911 13:10:55.671" starttime="20200911 13:10:53.497"></status>
</kw>
<status status="PASS" endtime="20200911 13:10:55.671" starttime="20200911 13:10:53.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:10:55.676" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:10:57.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:10:57.803" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:10:57.803" starttime="20200911 13:10:55.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:10:57.805" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:10:57.805" starttime="20200911 13:10:57.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:10:57.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:10:57.806" starttime="20200911 13:10:57.805"></status>
</kw>
<status status="PASS" endtime="20200911 13:10:57.806" starttime="20200911 13:10:55.673"></status>
</kw>
<msg timestamp="20200911 13:10:57.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:10:57.806" starttime="20200911 13:10:55.673"></status>
</kw>
<status status="PASS" endtime="20200911 13:10:57.806" starttime="20200911 13:10:55.672"></status>
</kw>
<status status="PASS" endtime="20200911 13:10:57.806" starttime="20200911 13:10:55.671"></status>
</kw>
<status status="PASS" endtime="20200911 13:10:57.807" starttime="20200911 13:10:55.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200911 13:10:57.807" starttime="20200911 13:10:57.807"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:10:57.811" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:11:00.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:11:00.329" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T13:10:57.760Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200911 13:11:00.329" starttime="20200911 13:10:57.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:11:00.330" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T13:10:57.760Z",
  "modificationTime" : "2020-09-11T13:10:57.760Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200911 13:11:00.330" starttime="20200911 13:11:00.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:11:00.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:11:00.331" starttime="20200911 13:11:00.331"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:00.331" starttime="20200911 13:10:57.809"></status>
</kw>
<msg timestamp="20200911 13:11:00.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:11:00.332" starttime="20200911 13:10:57.808"></status>
</kw>
<msg timestamp="20200911 13:11:00.332" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T13:10:57.760Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200911 13:11:00.332" starttime="20200911 13:10:57.807"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200911 13:11:00.333" starttime="20200911 13:11:00.332"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:11:00.337" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:11:00.337" starttime="20200911 13:11:00.337"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:11:00.338" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:11:00.338" starttime="20200911 13:11:00.337"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:00.338" starttime="20200911 13:11:00.336"></status>
</kw>
<msg timestamp="20200911 13:11:00.338" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:11:00.338" starttime="20200911 13:11:00.335"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:00.339" starttime="20200911 13:11:00.335"></status>
</kw>
<msg timestamp="20200911 13:11:00.339" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200911 13:11:00.339" starttime="20200911 13:11:00.334"></status>
</kw>
<msg timestamp="20200911 13:11:00.340" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200911 13:11:00.340" starttime="20200911 13:11:00.333"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:11:00.344" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:11:02.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:11:02.802" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:11:02.802" starttime="20200911 13:11:00.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:11:02.804" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:11:02.804" starttime="20200911 13:11:02.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:11:02.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:11:02.805" starttime="20200911 13:11:02.804"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:02.805" starttime="20200911 13:11:00.341"></status>
</kw>
<msg timestamp="20200911 13:11:02.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:11:02.805" starttime="20200911 13:11:00.341"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:02.805" starttime="20200911 13:11:00.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:11:02.811" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:11:08.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:11:08.716" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:11:08.716" starttime="20200911 13:11:02.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:11:08.717" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:11:08.717" starttime="20200911 13:11:08.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:11:08.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:11:08.718" starttime="20200911 13:11:08.717"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:08.718" starttime="20200911 13:11:02.807"></status>
</kw>
<msg timestamp="20200911 13:11:08.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:11:08.719" starttime="20200911 13:11:02.806"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:08.719" starttime="20200911 13:11:02.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:11:08.723" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:11:12.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:11:12.949" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:11:12.949" starttime="20200911 13:11:08.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:11:12.950" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:11:12.950" starttime="20200911 13:11:12.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:11:12.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:11:12.951" starttime="20200911 13:11:12.950"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:12.951" starttime="20200911 13:11:08.720"></status>
</kw>
<msg timestamp="20200911 13:11:12.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:11:12.952" starttime="20200911 13:11:08.720"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:12.952" starttime="20200911 13:11:08.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:11:12.956" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:11:17.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:11:17.289" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:11:17.289" starttime="20200911 13:11:12.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:11:17.290" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:11:17.290" starttime="20200911 13:11:17.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:11:17.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:11:17.291" starttime="20200911 13:11:17.290"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:17.291" starttime="20200911 13:11:12.953"></status>
</kw>
<msg timestamp="20200911 13:11:17.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:11:17.291" starttime="20200911 13:11:12.953"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:17.291" starttime="20200911 13:11:12.952"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 13:11:17.292" critical="yes" starttime="20200911 13:10:50.742"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:11:17.298" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:11:17.298" starttime="20200911 13:11:17.297"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:11:17.299" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:11:17.299" starttime="20200911 13:11:17.298"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:17.299" starttime="20200911 13:11:17.296"></status>
</kw>
<msg timestamp="20200911 13:11:17.299" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:11:17.299" starttime="20200911 13:11:17.296"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:17.300" starttime="20200911 13:11:17.295"></status>
</kw>
<msg timestamp="20200911 13:11:17.300" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200911 13:11:17.300" starttime="20200911 13:11:17.294"></status>
</kw>
<msg timestamp="20200911 13:11:17.300" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200911 13:11:17.300" starttime="20200911 13:11:17.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:11:17.304" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:11:19.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:11:19.675" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:11:19.675" starttime="20200911 13:11:17.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:11:19.676" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:11:19.676" starttime="20200911 13:11:19.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:11:19.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:11:19.677" starttime="20200911 13:11:19.676"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:19.677" starttime="20200911 13:11:17.301"></status>
</kw>
<msg timestamp="20200911 13:11:19.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:11:19.677" starttime="20200911 13:11:17.301"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:19.678" starttime="20200911 13:11:17.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:11:19.682" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:11:21.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:11:21.892" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:11:21.892" starttime="20200911 13:11:19.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:11:21.893" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:11:21.893" starttime="20200911 13:11:21.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:11:21.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:11:21.894" starttime="20200911 13:11:21.893"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:21.895" starttime="20200911 13:11:19.679"></status>
</kw>
<msg timestamp="20200911 13:11:21.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:11:21.895" starttime="20200911 13:11:19.678"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:21.895" starttime="20200911 13:11:19.678"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 13:11:21.895" critical="yes" starttime="20200911 13:11:17.293"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200911 13:11:21.897" starttime="20200911 13:10:50.664"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:13:06.201" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:13:06.201" starttime="20200911 13:13:06.201"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:13:06.202" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:13:06.202" starttime="20200911 13:13:06.202"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:06.202" starttime="20200911 13:13:06.201"></status>
</kw>
<msg timestamp="20200911 13:13:06.202" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:13:06.202" starttime="20200911 13:13:06.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:13:06.203" starttime="20200911 13:13:06.203"></status>
</kw>
<msg timestamp="20200911 13:13:06.204" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:13:06.204" starttime="20200911 13:13:06.203"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:06.204" starttime="20200911 13:13:06.199"></status>
</kw>
<msg timestamp="20200911 13:13:06.204" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:13:06.204" starttime="20200911 13:13:06.199"></status>
</kw>
<msg timestamp="20200911 13:13:06.204" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:13:06.204" starttime="20200911 13:13:06.197"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:13:06.205" level="INFO">${random} = 12280</msg>
<status status="PASS" endtime="20200911 13:13:06.205" starttime="20200911 13:13:06.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:13:06.211" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-12280 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:13:10.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:13:10.088" level="INFO">${output} = 2020-09-11 13:13:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:13:10.088" starttime="20200911 13:13:06.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:13:10.090" level="INFO">2020-09-11 13:13:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:08 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-11 13:13:08 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:13:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:13:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:13:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:13:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BF608DE95B21-&gt;aa6da773-c506-46bc-a7c6-85fe7a639bee
2020-09-11 13:13:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-11 13:13:09 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200911 13:13:10.090" starttime="20200911 13:13:10.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:13:10.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:13:10.090" starttime="20200911 13:13:10.090"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:10.091" starttime="20200911 13:13:06.206"></status>
</kw>
<msg timestamp="20200911 13:13:10.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:13:10.091" starttime="20200911 13:13:06.206"></status>
</kw>
<msg timestamp="20200911 13:13:10.091" level="INFO">${result} = 2020-09-11 13:13:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:13:10.091" starttime="20200911 13:13:06.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:13:10.095" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:13:12.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:13:12.057" level="INFO">${output} = 2020-09-11 13:13:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:11 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:13:12.058" starttime="20200911 13:13:10.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:13:12.059" level="INFO">2020-09-11 13:13:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:11 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:11 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-11 13:13 ofs://om/volume1/bucket1/ozone-12280
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-11 13:11 ofs://om/volume1/bucket1/ozone-37002
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:11 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:12 ofs://om/volume1/bucket1/wordcount-74.txt
2020-09-11 13:13:12 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200911 13:13:12.059" starttime="20200911 13:13:12.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:13:12.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:13:12.060" starttime="20200911 13:13:12.059"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:12.060" starttime="20200911 13:13:10.092"></status>
</kw>
<msg timestamp="20200911 13:13:12.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:13:12.060" starttime="20200911 13:13:10.092"></status>
</kw>
<msg timestamp="20200911 13:13:12.060" level="INFO">${result} = 2020-09-11 13:13:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:11 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:13:12.061" starttime="20200911 13:13:10.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:13:12.061" starttime="20200911 13:13:12.061"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200911 13:13:12.061" critical="yes" starttime="20200911 13:13:06.197"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200911 13:13:12.063" starttime="20200911 13:13:06.136"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:11:26.952" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:11:26.952" starttime="20200911 13:11:26.951"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:11:26.952" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:11:26.952" starttime="20200911 13:11:26.952"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:26.952" starttime="20200911 13:11:26.951"></status>
</kw>
<msg timestamp="20200911 13:11:26.953" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:11:26.953" starttime="20200911 13:11:26.950"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:26.953" starttime="20200911 13:11:26.950"></status>
</kw>
<msg timestamp="20200911 13:11:26.953" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:11:26.953" starttime="20200911 13:11:26.949"></status>
</kw>
<msg timestamp="20200911 13:11:26.953" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:11:26.953" starttime="20200911 13:11:26.948"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:11:26.954" level="INFO">${random} = 37002</msg>
<status status="PASS" endtime="20200911 13:11:26.954" starttime="20200911 13:11:26.953"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:11:26.959" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-37002 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:11:30.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:11:30.930" level="INFO">${output} = 2020-09-11 13:11:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:11:30.930" starttime="20200911 13:11:26.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:11:30.931" level="INFO">2020-09-11 13:11:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:29 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-11 13:11:29 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:11:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:11:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:11:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:11:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E0441E9D960C-&gt;aa6da773-c506-46bc-a7c6-85fe7a639bee
2020-09-11 13:11:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-11 13:11:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200911 13:11:30.931" starttime="20200911 13:11:30.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:11:30.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:11:30.932" starttime="20200911 13:11:30.931"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:30.932" starttime="20200911 13:11:26.955"></status>
</kw>
<msg timestamp="20200911 13:11:30.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:11:30.932" starttime="20200911 13:11:26.954"></status>
</kw>
<msg timestamp="20200911 13:11:30.932" level="INFO">${result} = 2020-09-11 13:11:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:11:30.932" starttime="20200911 13:11:26.954"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:11:30.936" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:11:32.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:11:32.824" level="INFO">${output} = 2020-09-11 13:11:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:11:32.824" starttime="20200911 13:11:30.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:11:32.825" level="INFO">2020-09-11 13:11:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:32 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:11 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-11 13:11 o3fs://bucket1.volume1.om/ozone-37002
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:11 o3fs://bucket1.volume1.om/user
2020-09-11 13:11:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200911 13:11:32.826" starttime="20200911 13:11:32.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:11:32.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:11:32.826" starttime="20200911 13:11:32.826"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:32.827" starttime="20200911 13:11:30.933"></status>
</kw>
<msg timestamp="20200911 13:11:32.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:11:32.827" starttime="20200911 13:11:30.933"></status>
</kw>
<msg timestamp="20200911 13:11:32.827" level="INFO">${result} = 2020-09-11 13:11:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:11:32.827" starttime="20200911 13:11:30.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:11:32.828" starttime="20200911 13:11:32.827"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200911 13:11:32.828" critical="yes" starttime="20200911 13:11:26.947"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200911 13:11:32.829" starttime="20200911 13:11:26.882"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:13:17.052" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:13:17.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:13:17.058" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:13:17.058" starttime="20200911 13:13:17.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:13:17.059" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:13:17.060" starttime="20200911 13:13:17.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:13:17.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:13:17.060" starttime="20200911 13:13:17.060"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:17.061" starttime="20200911 13:13:17.046"></status>
</kw>
<msg timestamp="20200911 13:13:17.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:13:17.061" starttime="20200911 13:13:17.045"></status>
</kw>
<msg timestamp="20200911 13:13:17.061" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:13:17.061" starttime="20200911 13:13:17.044"></status>
</kw>
<msg timestamp="20200911 13:13:17.061" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:13:17.061" starttime="20200911 13:13:17.044"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:13:17.067" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:13:17.067" starttime="20200911 13:13:17.067"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:13:17.068" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:13:17.068" starttime="20200911 13:13:17.067"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:17.068" starttime="20200911 13:13:17.065"></status>
</kw>
<msg timestamp="20200911 13:13:17.068" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:13:17.068" starttime="20200911 13:13:17.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:13:17.069" starttime="20200911 13:13:17.069"></status>
</kw>
<msg timestamp="20200911 13:13:17.070" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:13:17.070" starttime="20200911 13:13:17.069"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:17.070" starttime="20200911 13:13:17.064"></status>
</kw>
<msg timestamp="20200911 13:13:17.070" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:13:17.070" starttime="20200911 13:13:17.063"></status>
</kw>
<msg timestamp="20200911 13:13:17.070" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:13:17.070" starttime="20200911 13:13:17.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:13:17.075" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:13:58.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:13:58.684" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:13:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13...</msg>
<status status="PASS" endtime="20200911 13:13:58.685" starttime="20200911 13:13:17.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:13:58.686" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:13:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:19 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-11 13:13:19 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:13:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:13:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:13:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:13:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B3C694166392-&gt;aa6da773-c506-46bc-a7c6-85fe7a639bee
2020-09-11 13:13:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-11 13:13:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-09-11 13:13:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:21 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:13:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:13:23 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:13:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599829830455_0003
2020-09-11 13:13:24 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-11 13:13:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:24 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:13:24 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-11 13:13:24 INFO  YarnClientImpl:324 - Submitted application application_1599829830455_0003
2020-09-11 13:13:24 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599829830455_0003/
2020-09-11 13:13:24 INFO  Job:1619 - Running job: job_1599829830455_0003
2020-09-11 13:13:32 INFO  Job:1640 - Job job_1599829830455_0003 running in uber mode : false
2020-09-11 13:13:32 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:13:39 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:13:45 INFO  Job:1647 -  map 67% reduce 0%
2020-09-11 13:13:51 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:13:56 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:13:57 INFO  Job:1658 - Job job_1599829830455_0003 completed successfully
2020-09-11 13:13:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1019437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43024
		Total time spent by all reduces in occupied slots (ms)=15604
		Total time spent by all map tasks (ms)=10756
		Total time spent by all reduce tasks (ms)=3901
		Total vcore-milliseconds taken by all map tasks=10756
		Total vcore-milliseconds taken by all reduce tasks=3901
		Total megabyte-milliseconds taken by all map tasks=44056576
		Total megabyte-milliseconds taken by all reduce tasks=15978496
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=616
		CPU time spent (ms)=7430
		Physical memory (bytes) snapshot=1151119360
		Virtual memory (bytes) snapshot=16059772928
		Total committed heap usage (bytes)=1065877504
		Peak Map Physical memory (bytes)=294903808
		Peak Map Virtual memory (bytes)=4015828992
		Peak Reduce Physical memory (bytes)=277508096
		Peak Reduce Virtual memory (bytes)=4022812672
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.426 seconds
2020-09-11 13:13:58 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-09-11 13:13:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200911 13:13:58.686" starttime="20200911 13:13:58.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:13:58.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:13:58.687" starttime="20200911 13:13:58.686"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:58.687" starttime="20200911 13:13:17.071"></status>
</kw>
<msg timestamp="20200911 13:13:58.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:13:58.687" starttime="20200911 13:13:17.071"></status>
</kw>
<msg timestamp="20200911 13:13:58.688" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:13:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13...</msg>
<status status="PASS" endtime="20200911 13:13:58.688" starttime="20200911 13:13:17.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:13:58.688" starttime="20200911 13:13:58.688"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:13:58.689" critical="yes" starttime="20200911 13:13:17.042"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:13:58.695" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:13:58.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:13:58.701" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:13:58.701" starttime="20200911 13:13:58.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:13:58.702" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:13:58.702" starttime="20200911 13:13:58.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:13:58.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:13:58.703" starttime="20200911 13:13:58.703"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:58.704" starttime="20200911 13:13:58.692"></status>
</kw>
<msg timestamp="20200911 13:13:58.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:13:58.704" starttime="20200911 13:13:58.691"></status>
</kw>
<msg timestamp="20200911 13:13:58.704" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:13:58.704" starttime="20200911 13:13:58.691"></status>
</kw>
<msg timestamp="20200911 13:13:58.704" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:13:58.704" starttime="20200911 13:13:58.690"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:13:58.705" level="INFO">${random} = 57</msg>
<status status="PASS" endtime="20200911 13:13:58.705" starttime="20200911 13:13:58.704"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:13:58.715" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:13:58.715" starttime="20200911 13:13:58.714"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:13:58.715" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:13:58.715" starttime="20200911 13:13:58.715"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:58.715" starttime="20200911 13:13:58.714"></status>
</kw>
<msg timestamp="20200911 13:13:58.716" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:13:58.716" starttime="20200911 13:13:58.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:13:58.717" starttime="20200911 13:13:58.716"></status>
</kw>
<msg timestamp="20200911 13:13:58.717" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:13:58.717" starttime="20200911 13:13:58.716"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:58.717" starttime="20200911 13:13:58.712"></status>
</kw>
<msg timestamp="20200911 13:13:58.717" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:13:58.717" starttime="20200911 13:13:58.711"></status>
</kw>
<msg timestamp="20200911 13:13:58.717" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:13:58.717" starttime="20200911 13:13:58.706"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:13:58.721" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:13:58.721" starttime="20200911 13:13:58.720"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:13:58.721" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:13:58.721" starttime="20200911 13:13:58.721"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:58.722" starttime="20200911 13:13:58.720"></status>
</kw>
<msg timestamp="20200911 13:13:58.722" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:13:58.722" starttime="20200911 13:13:58.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:13:58.723" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200911 13:13:58.723" starttime="20200911 13:13:58.723"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:13:58.724" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200911 13:13:58.724" starttime="20200911 13:13:58.724"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:58.724" starttime="20200911 13:13:58.723"></status>
</kw>
<msg timestamp="20200911 13:13:58.724" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200911 13:13:58.724" starttime="20200911 13:13:58.722"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:58.725" starttime="20200911 13:13:58.719"></status>
</kw>
<msg timestamp="20200911 13:13:58.725" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200911 13:13:58.725" starttime="20200911 13:13:58.718"></status>
</kw>
<msg timestamp="20200911 13:13:58.725" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200911 13:13:58.725" starttime="20200911 13:13:58.717"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:13:58.728" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:13:58.729" starttime="20200911 13:13:58.728"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:13:58.729" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:13:58.729" starttime="20200911 13:13:58.729"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:58.729" starttime="20200911 13:13:58.727"></status>
</kw>
<msg timestamp="20200911 13:13:58.729" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:13:58.729" starttime="20200911 13:13:58.727"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:13:58.731" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200911 13:13:58.731" starttime="20200911 13:13:58.730"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:13:58.732" level="INFO">${result} = /wordcount-57.txt</msg>
<status status="PASS" endtime="20200911 13:13:58.732" starttime="20200911 13:13:58.731"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:58.732" starttime="20200911 13:13:58.730"></status>
</kw>
<msg timestamp="20200911 13:13:58.732" level="INFO">${path_with_leading} = /wordcount-57.txt</msg>
<status status="PASS" endtime="20200911 13:13:58.732" starttime="20200911 13:13:58.730"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:58.732" starttime="20200911 13:13:58.726"></status>
</kw>
<msg timestamp="20200911 13:13:58.732" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-57.txt</msg>
<status status="PASS" endtime="20200911 13:13:58.732" starttime="20200911 13:13:58.726"></status>
</kw>
<msg timestamp="20200911 13:13:58.732" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-57.txt</msg>
<status status="PASS" endtime="20200911 13:13:58.732" starttime="20200911 13:13:58.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:13:58.738" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-57.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:14:39.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:14:39.574" level="INFO">${output} = 2020-09-11 13:13:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:14:39.574" starttime="20200911 13:13:58.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:14:39.575" level="INFO">2020-09-11 13:13:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-09-11 13:14:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:14:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:01 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-11 13:14:01 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:14:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:14:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:14:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:14:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7122D06DE770-&gt;aa6da773-c506-46bc-a7c6-85fe7a639bee
2020-09-11 13:14:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-11 13:14:02 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:14:02 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:14:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599829830455_0004
2020-09-11 13:14:03 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-11 13:14:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:03 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:14:03 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-11 13:14:03 INFO  YarnClientImpl:324 - Submitted application application_1599829830455_0004
2020-09-11 13:14:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599829830455_0004/
2020-09-11 13:14:03 INFO  Job:1619 - Running job: job_1599829830455_0004
2020-09-11 13:14:11 INFO  Job:1640 - Job job_1599829830455_0004 running in uber mode : false
2020-09-11 13:14:11 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:14:18 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:14:23 INFO  Job:1647 -  map 67% reduce 0%
2020-09-11 13:14:30 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:14:36 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:14:39 INFO  Job:1658 - Job job_1599829830455_0004 completed successfully
2020-09-11 13:14:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082117
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43200
		Total time spent by all reduces in occupied slots (ms)=16272
		Total time spent by all map tasks (ms)=10800
		Total time spent by all reduce tasks (ms)=4068
		Total vcore-milliseconds taken by all map tasks=10800
		Total vcore-milliseconds taken by all reduce tasks=4068
		Total megabyte-milliseconds taken by all map tasks=44236800
		Total megabyte-milliseconds taken by all reduce tasks=16662528
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=617
		CPU time spent (ms)=7670
		Physical memory (bytes) snapshot=1142902784
		Virtual memory (bytes) snapshot=16052187136
		Total committed heap usage (bytes)=1062207488
		Peak Map Physical memory (bytes)=289964032
		Peak Map Virtual memory (bytes)=4011941888
		Peak Reduce Physical memory (bytes)=299384832
		Peak Reduce Virtual memory (bytes)=4036669440
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-09-11 13:14:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200911 13:14:39.576" starttime="20200911 13:14:39.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:14:39.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:14:39.576" starttime="20200911 13:14:39.576"></status>
</kw>
<status status="PASS" endtime="20200911 13:14:39.576" starttime="20200911 13:13:58.733"></status>
</kw>
<msg timestamp="20200911 13:14:39.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:14:39.577" starttime="20200911 13:13:58.733"></status>
</kw>
<msg timestamp="20200911 13:14:39.577" level="INFO">${output} = 2020-09-11 13:13:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:14:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:14:39.577" starttime="20200911 13:13:58.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200911 13:14:39.578" starttime="20200911 13:14:39.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:14:39.579" starttime="20200911 13:14:39.578"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:14:39.579" critical="yes" starttime="20200911 13:13:58.689"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200911 13:14:39.580" starttime="20200911 13:13:16.981"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:11:37.871" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:11:37.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:11:37.875" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:11:37.875" starttime="20200911 13:11:37.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:11:37.876" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:11:37.876" starttime="20200911 13:11:37.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:11:37.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:11:37.877" starttime="20200911 13:11:37.876"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:37.877" starttime="20200911 13:11:37.864"></status>
</kw>
<msg timestamp="20200911 13:11:37.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:11:37.877" starttime="20200911 13:11:37.864"></status>
</kw>
<msg timestamp="20200911 13:11:37.878" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:11:37.878" starttime="20200911 13:11:37.864"></status>
</kw>
<msg timestamp="20200911 13:11:37.878" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:11:37.878" starttime="20200911 13:11:37.863"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:11:37.882" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:11:37.882" starttime="20200911 13:11:37.881"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:11:37.883" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:11:37.883" starttime="20200911 13:11:37.882"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:37.883" starttime="20200911 13:11:37.881"></status>
</kw>
<msg timestamp="20200911 13:11:37.883" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:11:37.883" starttime="20200911 13:11:37.880"></status>
</kw>
<status status="PASS" endtime="20200911 13:11:37.883" starttime="20200911 13:11:37.880"></status>
</kw>
<msg timestamp="20200911 13:11:37.883" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:11:37.883" starttime="20200911 13:11:37.879"></status>
</kw>
<msg timestamp="20200911 13:11:37.884" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:11:37.884" starttime="20200911 13:11:37.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:11:37.889" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:12:20.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:12:20.377" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:11:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11...</msg>
<status status="PASS" endtime="20200911 13:12:20.377" starttime="20200911 13:11:37.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:12:20.378" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:11:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:40 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-11 13:11:40 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:11:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:11:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:11:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:11:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2BBEA8D835A3-&gt;aa6da773-c506-46bc-a7c6-85fe7a639bee
2020-09-11 13:11:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-11 13:11:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-09-11 13:11:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:11:42 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:11:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599829830455_0001
2020-09-11 13:11:42 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-11 13:11:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:42 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:11:42 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-11 13:11:43 INFO  YarnClientImpl:324 - Submitted application application_1599829830455_0001
2020-09-11 13:11:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599829830455_0001/
2020-09-11 13:11:43 INFO  Job:1619 - Running job: job_1599829830455_0001
2020-09-11 13:11:54 INFO  Job:1640 - Job job_1599829830455_0001 running in uber mode : false
2020-09-11 13:11:54 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:12:01 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:12:07 INFO  Job:1647 -  map 67% reduce 0%
2020-09-11 13:12:13 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:12:18 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:12:19 INFO  Job:1658 - Job job_1599829830455_0001 completed successfully
2020-09-11 13:12:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1019657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43436
		Total time spent by all reduces in occupied slots (ms)=16736
		Total time spent by all map tasks (ms)=10859
		Total time spent by all reduce tasks (ms)=4184
		Total vcore-milliseconds taken by all map tasks=10859
		Total vcore-milliseconds taken by all reduce tasks=4184
		Total megabyte-milliseconds taken by all map tasks=44478464
		Total megabyte-milliseconds taken by all reduce tasks=17137664
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=588
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1138995200
		Virtual memory (bytes) snapshot=16044953600
		Total committed heap usage (bytes)=1061158912
		Peak Map Physical memory (bytes)=292524032
		Peak Map Virtual memory (bytes)=4013076480
		Peak Reduce Physical memory (bytes)=299372544
		Peak Reduce Virtual memory (bytes)=4034527232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.384 seconds
2020-09-11 13:12:19 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-09-11 13:12:20 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200911 13:12:20.378" starttime="20200911 13:12:20.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:12:20.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:12:20.379" starttime="20200911 13:12:20.379"></status>
</kw>
<status status="PASS" endtime="20200911 13:12:20.379" starttime="20200911 13:11:37.885"></status>
</kw>
<msg timestamp="20200911 13:12:20.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:12:20.380" starttime="20200911 13:11:37.884"></status>
</kw>
<msg timestamp="20200911 13:12:20.380" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:11:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:11...</msg>
<status status="PASS" endtime="20200911 13:12:20.380" starttime="20200911 13:11:37.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:12:20.381" starttime="20200911 13:12:20.380"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:12:20.381" critical="yes" starttime="20200911 13:11:37.862"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:12:20.386" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:12:20.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:12:20.393" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:12:20.393" starttime="20200911 13:12:20.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:12:20.394" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:12:20.394" starttime="20200911 13:12:20.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:12:20.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:12:20.395" starttime="20200911 13:12:20.395"></status>
</kw>
<status status="PASS" endtime="20200911 13:12:20.395" starttime="20200911 13:12:20.383"></status>
</kw>
<msg timestamp="20200911 13:12:20.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:12:20.396" starttime="20200911 13:12:20.383"></status>
</kw>
<msg timestamp="20200911 13:12:20.396" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:12:20.396" starttime="20200911 13:12:20.383"></status>
</kw>
<msg timestamp="20200911 13:12:20.396" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200911 13:12:20.396" starttime="20200911 13:12:20.382"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:12:20.397" level="INFO">${random} = 74</msg>
<status status="PASS" endtime="20200911 13:12:20.397" starttime="20200911 13:12:20.396"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:12:20.400" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:12:20.400" starttime="20200911 13:12:20.400"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:12:20.401" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:12:20.401" starttime="20200911 13:12:20.401"></status>
</kw>
<status status="PASS" endtime="20200911 13:12:20.401" starttime="20200911 13:12:20.400"></status>
</kw>
<msg timestamp="20200911 13:12:20.401" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:12:20.401" starttime="20200911 13:12:20.399"></status>
</kw>
<status status="PASS" endtime="20200911 13:12:20.402" starttime="20200911 13:12:20.398"></status>
</kw>
<msg timestamp="20200911 13:12:20.402" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:12:20.402" starttime="20200911 13:12:20.398"></status>
</kw>
<msg timestamp="20200911 13:12:20.402" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:12:20.402" starttime="20200911 13:12:20.397"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:12:20.405" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:12:20.405" starttime="20200911 13:12:20.405"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:12:20.406" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:12:20.406" starttime="20200911 13:12:20.406"></status>
</kw>
<status status="PASS" endtime="20200911 13:12:20.406" starttime="20200911 13:12:20.404"></status>
</kw>
<msg timestamp="20200911 13:12:20.406" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:12:20.406" starttime="20200911 13:12:20.404"></status>
</kw>
<status status="PASS" endtime="20200911 13:12:20.407" starttime="20200911 13:12:20.403"></status>
</kw>
<msg timestamp="20200911 13:12:20.407" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200911 13:12:20.407" starttime="20200911 13:12:20.403"></status>
</kw>
<msg timestamp="20200911 13:12:20.407" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200911 13:12:20.407" starttime="20200911 13:12:20.402"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:12:20.410" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:12:20.410" starttime="20200911 13:12:20.410"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:12:20.411" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:12:20.411" starttime="20200911 13:12:20.410"></status>
</kw>
<status status="PASS" endtime="20200911 13:12:20.411" starttime="20200911 13:12:20.409"></status>
</kw>
<msg timestamp="20200911 13:12:20.411" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:12:20.411" starttime="20200911 13:12:20.409"></status>
</kw>
<status status="PASS" endtime="20200911 13:12:20.411" starttime="20200911 13:12:20.408"></status>
</kw>
<msg timestamp="20200911 13:12:20.412" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-74.txt</msg>
<status status="PASS" endtime="20200911 13:12:20.412" starttime="20200911 13:12:20.408"></status>
</kw>
<msg timestamp="20200911 13:12:20.412" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-74.txt</msg>
<status status="PASS" endtime="20200911 13:12:20.412" starttime="20200911 13:12:20.407"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:12:20.416" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-74.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:13:01.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:13:01.203" level="INFO">${output} = 2020-09-11 13:12:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:13:01.203" starttime="20200911 13:12:20.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:13:01.205" level="INFO">2020-09-11 13:12:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-09-11 13:12:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:12:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:22 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-11 13:12:22 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-11 13:12:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:12:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:12:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:12:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7C3BF665193F-&gt;aa6da773-c506-46bc-a7c6-85fe7a639bee
2020-09-11 13:12:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-11 13:12:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:12:24 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:12:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599829830455_0002
2020-09-11 13:12:24 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-11 13:12:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:25 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:12:25 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-11 13:12:25 INFO  YarnClientImpl:324 - Submitted application application_1599829830455_0002
2020-09-11 13:12:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599829830455_0002/
2020-09-11 13:12:25 INFO  Job:1619 - Running job: job_1599829830455_0002
2020-09-11 13:12:34 INFO  Job:1640 - Job job_1599829830455_0002 running in uber mode : false
2020-09-11 13:12:34 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:12:40 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:12:46 INFO  Job:1647 -  map 67% reduce 0%
2020-09-11 13:12:52 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:12:57 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:13:00 INFO  Job:1658 - Job job_1599829830455_0002 completed successfully
2020-09-11 13:13:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:13:00 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082201
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45020
		Total time spent by all reduces in occupied slots (ms)=16416
		Total time spent by all map tasks (ms)=11255
		Total time spent by all reduce tasks (ms)=4104
		Total vcore-milliseconds taken by all map tasks=11255
		Total vcore-milliseconds taken by all reduce tasks=4104
		Total megabyte-milliseconds taken by all map tasks=46100480
		Total megabyte-milliseconds taken by all reduce tasks=16809984
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=593
		CPU time spent (ms)=7550
		Physical memory (bytes) snapshot=1150255104
		Virtual memory (bytes) snapshot=16037236736
		Total committed heap usage (bytes)=1052246016
		Peak Map Physical memory (bytes)=291680256
		Peak Map Virtual memory (bytes)=4012597248
		Peak Reduce Physical memory (bytes)=297648128
		Peak Reduce Virtual memory (bytes)=4021800960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-09-11 13:13:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200911 13:13:01.205" starttime="20200911 13:13:01.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:13:01.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:13:01.206" starttime="20200911 13:13:01.205"></status>
</kw>
<status status="PASS" endtime="20200911 13:13:01.206" starttime="20200911 13:12:20.413"></status>
</kw>
<msg timestamp="20200911 13:13:01.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:13:01.206" starttime="20200911 13:12:20.413"></status>
</kw>
<msg timestamp="20200911 13:13:01.207" level="INFO">${output} = 2020-09-11 13:12:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-11 13:12:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200911 13:13:01.207" starttime="20200911 13:12:20.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200911 13:13:01.207" starttime="20200911 13:13:01.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:13:01.208" starttime="20200911 13:13:01.208"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:13:01.208" critical="yes" starttime="20200911 13:12:20.382"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200911 13:13:01.209" starttime="20200911 13:11:37.802"></status>
</suite>
<status status="PASS" elapsedtime="209113" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:18:11.751" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:18:15.610" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 13:18:15.610" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200911 13:18:15.611" starttime="20200911 13:18:11.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:18:15.612" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200911 13:18:15.612" starttime="20200911 13:18:15.611"></status>
</kw>
<msg timestamp="20200911 13:18:15.612" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200911 13:18:15.612" starttime="20200911 13:18:11.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:18:15.618" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:18:19.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:18:19.281" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:18:19.282" starttime="20200911 13:18:15.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:18:19.283" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:18:19.283" starttime="20200911 13:18:19.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:18:19.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:18:19.284" starttime="20200911 13:18:19.283"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:19.284" starttime="20200911 13:18:15.614"></status>
</kw>
<msg timestamp="20200911 13:18:19.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:18:19.284" starttime="20200911 13:18:15.614"></status>
</kw>
<msg timestamp="20200911 13:18:19.284" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200911 13:18:19.284" starttime="20200911 13:18:15.614"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200911 13:18:19.285" starttime="20200911 13:18:19.285"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:19.285" starttime="20200911 13:18:15.613"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:19.285" starttime="20200911 13:18:15.613"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:18:19.291" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:18:22.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:18:22.701" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:18:22.701" starttime="20200911 13:18:19.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:18:22.702" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:18:22.702" starttime="20200911 13:18:22.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:18:22.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:18:22.703" starttime="20200911 13:18:22.702"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:22.703" starttime="20200911 13:18:19.287"></status>
</kw>
<msg timestamp="20200911 13:18:22.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:18:22.703" starttime="20200911 13:18:19.287"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:22.704" starttime="20200911 13:18:19.286"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:22.704" starttime="20200911 13:18:19.286"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:22.704" starttime="20200911 13:18:19.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200911 13:18:22.705" starttime="20200911 13:18:22.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:18:22.709" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:18:27.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:18:27.166" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T13:18:22.572Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200911 13:18:27.166" starttime="20200911 13:18:22.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:18:27.167" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T13:18:22.572Z",
  "modificationTime" : "2020-09-11T13:18:22.572Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200911 13:18:27.167" starttime="20200911 13:18:27.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:18:27.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:18:27.168" starttime="20200911 13:18:27.168"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:27.168" starttime="20200911 13:18:22.706"></status>
</kw>
<msg timestamp="20200911 13:18:27.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:18:27.169" starttime="20200911 13:18:22.705"></status>
</kw>
<msg timestamp="20200911 13:18:27.169" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T13:18:22.572Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200911 13:18:27.169" starttime="20200911 13:18:22.705"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200911 13:18:27.170" starttime="20200911 13:18:27.169"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:18:27.174" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:18:27.174" starttime="20200911 13:18:27.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:18:27.175" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:18:27.175" starttime="20200911 13:18:27.174"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:27.176" starttime="20200911 13:18:27.173"></status>
</kw>
<msg timestamp="20200911 13:18:27.176" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:18:27.176" starttime="20200911 13:18:27.172"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:27.176" starttime="20200911 13:18:27.172"></status>
</kw>
<msg timestamp="20200911 13:18:27.176" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200911 13:18:27.176" starttime="20200911 13:18:27.171"></status>
</kw>
<msg timestamp="20200911 13:18:27.177" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200911 13:18:27.177" starttime="20200911 13:18:27.170"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:18:27.181" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:18:30.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:18:30.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:18:30.926" starttime="20200911 13:18:27.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:18:30.927" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:18:30.927" starttime="20200911 13:18:30.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:18:30.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:18:30.928" starttime="20200911 13:18:30.928"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:30.928" starttime="20200911 13:18:27.178"></status>
</kw>
<msg timestamp="20200911 13:18:30.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:18:30.929" starttime="20200911 13:18:27.177"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:30.929" starttime="20200911 13:18:27.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:18:30.933" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:18:38.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:18:38.798" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:18:38.798" starttime="20200911 13:18:30.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:18:38.800" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:18:38.800" starttime="20200911 13:18:38.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:18:38.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:18:38.801" starttime="20200911 13:18:38.800"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:38.801" starttime="20200911 13:18:30.930"></status>
</kw>
<msg timestamp="20200911 13:18:38.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:18:38.801" starttime="20200911 13:18:30.930"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:38.801" starttime="20200911 13:18:30.929"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:18:38.805" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:18:44.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:18:44.710" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:18:44.710" starttime="20200911 13:18:38.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:18:44.711" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:18:44.711" starttime="20200911 13:18:44.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:18:44.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:18:44.712" starttime="20200911 13:18:44.711"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:44.712" starttime="20200911 13:18:38.803"></status>
</kw>
<msg timestamp="20200911 13:18:44.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:18:44.712" starttime="20200911 13:18:38.802"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:44.713" starttime="20200911 13:18:38.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:18:44.717" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:18:50.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:18:50.244" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:18:50.244" starttime="20200911 13:18:44.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:18:50.245" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:18:50.246" starttime="20200911 13:18:50.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:18:50.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:18:50.246" starttime="20200911 13:18:50.246"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:50.247" starttime="20200911 13:18:44.714"></status>
</kw>
<msg timestamp="20200911 13:18:50.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:18:50.247" starttime="20200911 13:18:44.713"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:50.247" starttime="20200911 13:18:44.713"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 13:18:50.247" critical="yes" starttime="20200911 13:18:11.742"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:18:50.253" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:18:50.253" starttime="20200911 13:18:50.253"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:18:50.254" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:18:50.254" starttime="20200911 13:18:50.254"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:50.254" starttime="20200911 13:18:50.252"></status>
</kw>
<msg timestamp="20200911 13:18:50.254" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:18:50.254" starttime="20200911 13:18:50.251"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:50.255" starttime="20200911 13:18:50.251"></status>
</kw>
<msg timestamp="20200911 13:18:50.255" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200911 13:18:50.255" starttime="20200911 13:18:50.250"></status>
</kw>
<msg timestamp="20200911 13:18:50.256" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200911 13:18:50.256" starttime="20200911 13:18:50.249"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:18:50.261" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:18:53.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:18:53.640" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:18:53.640" starttime="20200911 13:18:50.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:18:53.641" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:18:53.641" starttime="20200911 13:18:53.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:18:53.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:18:53.642" starttime="20200911 13:18:53.641"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:53.642" starttime="20200911 13:18:50.257"></status>
</kw>
<msg timestamp="20200911 13:18:53.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:18:53.642" starttime="20200911 13:18:50.256"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:53.642" starttime="20200911 13:18:50.256"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:18:53.648" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:18:57.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:18:57.153" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 13:18:57.153" starttime="20200911 13:18:53.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:18:57.154" level="INFO"></msg>
<status status="PASS" endtime="20200911 13:18:57.154" starttime="20200911 13:18:57.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:18:57.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:18:57.155" starttime="20200911 13:18:57.155"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:57.155" starttime="20200911 13:18:53.644"></status>
</kw>
<msg timestamp="20200911 13:18:57.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:18:57.156" starttime="20200911 13:18:53.643"></status>
</kw>
<status status="PASS" endtime="20200911 13:18:57.156" starttime="20200911 13:18:53.643"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 13:18:57.156" critical="yes" starttime="20200911 13:18:50.248"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200911 13:18:57.158" starttime="20200911 13:18:11.670"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:20:47.405" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:20:47.405" starttime="20200911 13:20:47.404"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:20:47.406" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:20:47.406" starttime="20200911 13:20:47.405"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:47.406" starttime="20200911 13:20:47.403"></status>
</kw>
<msg timestamp="20200911 13:20:47.406" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:20:47.406" starttime="20200911 13:20:47.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:20:47.407" starttime="20200911 13:20:47.407"></status>
</kw>
<msg timestamp="20200911 13:20:47.407" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:20:47.407" starttime="20200911 13:20:47.406"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:47.408" starttime="20200911 13:20:47.401"></status>
</kw>
<msg timestamp="20200911 13:20:47.408" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:20:47.408" starttime="20200911 13:20:47.401"></status>
</kw>
<msg timestamp="20200911 13:20:47.408" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:20:47.408" starttime="20200911 13:20:47.400"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:20:47.409" level="INFO">${random} = 98469</msg>
<status status="PASS" endtime="20200911 13:20:47.409" starttime="20200911 13:20:47.408"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:20:47.412" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-98469 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:20:51.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:20:51.430" level="INFO">${output} = 2020-09-11 13:20:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:20:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200911 13:20:51.431" starttime="20200911 13:20:47.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:20:51.432" level="INFO">2020-09-11 13:20:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:20:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:20:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:20:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:20:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E7541D0CBF85-&gt;91d716ed-cca4-4113-ac8a-f6ad9260f3cb
2020-09-11 13:20:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200911 13:20:51.432" starttime="20200911 13:20:51.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:20:51.432" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:20:51.433" starttime="20200911 13:20:51.432"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:51.433" starttime="20200911 13:20:47.410"></status>
</kw>
<msg timestamp="20200911 13:20:51.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:20:51.433" starttime="20200911 13:20:47.410"></status>
</kw>
<msg timestamp="20200911 13:20:51.434" level="INFO">${result} = 2020-09-11 13:20:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:20:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200911 13:20:51.434" starttime="20200911 13:20:47.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:20:51.438" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:20:53.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:20:53.398" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:19 ofs://om/volume1/bucket1/ozone-98050
-rw-...</msg>
<status status="PASS" endtime="20200911 13:20:53.398" starttime="20200911 13:20:51.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:20:53.399" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:19 ofs://om/volume1/bucket1/ozone-98050
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:20 ofs://om/volume1/bucket1/ozone-98469
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:18 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:20 ofs://om/volume1/bucket1/wordcount-83.txt</msg>
<status status="PASS" endtime="20200911 13:20:53.400" starttime="20200911 13:20:53.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:20:53.400" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:20:53.400" starttime="20200911 13:20:53.400"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:53.401" starttime="20200911 13:20:51.435"></status>
</kw>
<msg timestamp="20200911 13:20:53.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:20:53.401" starttime="20200911 13:20:51.435"></status>
</kw>
<msg timestamp="20200911 13:20:53.401" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:19 ofs://om/volume1/bucket1/ozone-98050
-rw-...</msg>
<status status="PASS" endtime="20200911 13:20:53.401" starttime="20200911 13:20:51.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:20:53.402" starttime="20200911 13:20:53.401"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200911 13:20:53.402" critical="yes" starttime="20200911 13:20:47.399"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200911 13:20:53.403" starttime="20200911 13:20:47.345"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:19:02.118" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:19:02.118" starttime="20200911 13:19:02.116"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:19:02.119" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:19:02.119" starttime="20200911 13:19:02.119"></status>
</kw>
<status status="PASS" endtime="20200911 13:19:02.119" starttime="20200911 13:19:02.116"></status>
</kw>
<msg timestamp="20200911 13:19:02.119" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:19:02.119" starttime="20200911 13:19:02.114"></status>
</kw>
<status status="PASS" endtime="20200911 13:19:02.120" starttime="20200911 13:19:02.114"></status>
</kw>
<msg timestamp="20200911 13:19:02.120" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:19:02.120" starttime="20200911 13:19:02.113"></status>
</kw>
<msg timestamp="20200911 13:19:02.120" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:19:02.120" starttime="20200911 13:19:02.112"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:19:02.121" level="INFO">${random} = 98050</msg>
<status status="PASS" endtime="20200911 13:19:02.121" starttime="20200911 13:19:02.120"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:19:02.124" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-98050 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:19:06.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:19:06.241" level="INFO">${output} = 2020-09-11 13:19:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:19:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200911 13:19:06.241" starttime="20200911 13:19:02.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:19:06.242" level="INFO">2020-09-11 13:19:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:19:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:19:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:19:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:19:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-754F7BA765C6-&gt;91d716ed-cca4-4113-ac8a-f6ad9260f3cb
2020-09-11 13:19:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200911 13:19:06.242" starttime="20200911 13:19:06.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:19:06.243" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:19:06.243" starttime="20200911 13:19:06.242"></status>
</kw>
<status status="PASS" endtime="20200911 13:19:06.243" starttime="20200911 13:19:02.122"></status>
</kw>
<msg timestamp="20200911 13:19:06.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:19:06.244" starttime="20200911 13:19:02.122"></status>
</kw>
<msg timestamp="20200911 13:19:06.244" level="INFO">${result} = 2020-09-11 13:19:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:19:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200911 13:19:06.244" starttime="20200911 13:19:02.121"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:19:06.247" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:19:08.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:19:08.312" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:19 o3fs://bucket1.volume1.om/ozone-98050
dr...</msg>
<status status="PASS" endtime="20200911 13:19:08.312" starttime="20200911 13:19:06.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:19:08.313" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:19 o3fs://bucket1.volume1.om/ozone-98050
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:18 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200911 13:19:08.313" starttime="20200911 13:19:08.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:19:08.314" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:19:08.314" starttime="20200911 13:19:08.313"></status>
</kw>
<status status="PASS" endtime="20200911 13:19:08.314" starttime="20200911 13:19:06.245"></status>
</kw>
<msg timestamp="20200911 13:19:08.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:19:08.315" starttime="20200911 13:19:06.245"></status>
</kw>
<msg timestamp="20200911 13:19:08.315" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-11 13:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-11 13:19 o3fs://bucket1.volume1.om/ozone-98050
dr...</msg>
<status status="PASS" endtime="20200911 13:19:08.315" starttime="20200911 13:19:06.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:19:08.316" starttime="20200911 13:19:08.315"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200911 13:19:08.316" critical="yes" starttime="20200911 13:19:02.111"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200911 13:19:08.317" starttime="20200911 13:19:02.057"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:20:58.277" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:20:58.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:20:58.285" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:20:58.285" starttime="20200911 13:20:58.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:20:58.286" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:20:58.286" starttime="20200911 13:20:58.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:20:58.287" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:20:58.287" starttime="20200911 13:20:58.287"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:58.287" starttime="20200911 13:20:58.275"></status>
</kw>
<msg timestamp="20200911 13:20:58.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:20:58.288" starttime="20200911 13:20:58.274"></status>
</kw>
<msg timestamp="20200911 13:20:58.288" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:20:58.288" starttime="20200911 13:20:58.274"></status>
</kw>
<msg timestamp="20200911 13:20:58.288" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:20:58.288" starttime="20200911 13:20:58.273"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:20:58.292" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:20:58.292" starttime="20200911 13:20:58.292"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:20:58.293" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:20:58.293" starttime="20200911 13:20:58.292"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:58.293" starttime="20200911 13:20:58.291"></status>
</kw>
<msg timestamp="20200911 13:20:58.293" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:20:58.293" starttime="20200911 13:20:58.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:20:58.294" starttime="20200911 13:20:58.294"></status>
</kw>
<msg timestamp="20200911 13:20:58.294" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:20:58.295" starttime="20200911 13:20:58.293"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:58.295" starttime="20200911 13:20:58.290"></status>
</kw>
<msg timestamp="20200911 13:20:58.295" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:20:58.295" starttime="20200911 13:20:58.289"></status>
</kw>
<msg timestamp="20200911 13:20:58.295" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:20:58.295" starttime="20200911 13:20:58.288"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:20:58.298" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:21:40.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:21:40.119" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:21:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:21:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200911 13:21:40.120" starttime="20200911 13:20:58.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:21:40.121" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:21:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:21:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:21:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:21:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:21:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1B1C7739FA12-&gt;91d716ed-cca4-4113-ac8a-f6ad9260f3cb
2020-09-11 13:21:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-11 13:21:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-11 13:21:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:21:05 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:21:05 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:21:05 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-11 13:21:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599830140767_0003
2020-09-11 13:21:05 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-11 13:21:05 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:21:05 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-11 13:21:05 INFO  YarnClientImpl:311 - Submitted application application_1599830140767_0003
2020-09-11 13:21:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599830140767_0003/
2020-09-11 13:21:06 INFO  Job:1619 - Running job: job_1599830140767_0003
2020-09-11 13:21:14 INFO  Job:1640 - Job job_1599830140767_0003 running in uber mode : false
2020-09-11 13:21:14 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:21:21 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:21:26 INFO  Job:1647 -  map 67% reduce 0%
2020-09-11 13:21:32 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:21:38 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:21:39 INFO  Job:1658 - Job job_1599830140767_0003 completed successfully
2020-09-11 13:21:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1042461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43924
		Total time spent by all reduces in occupied slots (ms)=16308
		Total time spent by all map tasks (ms)=10981
		Total time spent by all reduce tasks (ms)=4077
		Total vcore-milliseconds taken by all map tasks=10981
		Total vcore-milliseconds taken by all reduce tasks=4077
		Total megabyte-milliseconds taken by all map tasks=44978176
		Total megabyte-milliseconds taken by all reduce tasks=16699392
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=565
		CPU time spent (ms)=8030
		Physical memory (bytes) snapshot=1426284544
		Virtual memory (bytes) snapshot=16039366656
		Total committed heap usage (bytes)=1608515584
		Peak Map Physical memory (bytes)=364036096
		Peak Map Virtual memory (bytes)=4015480832
		Peak Reduce Physical memory (bytes)=361730048
		Peak Reduce Virtual memory (bytes)=4013449216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.017 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200911 13:21:40.121" starttime="20200911 13:21:40.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:21:40.121" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:21:40.122" starttime="20200911 13:21:40.121"></status>
</kw>
<status status="PASS" endtime="20200911 13:21:40.122" starttime="20200911 13:20:58.296"></status>
</kw>
<msg timestamp="20200911 13:21:40.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:21:40.122" starttime="20200911 13:20:58.296"></status>
</kw>
<msg timestamp="20200911 13:21:40.123" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:21:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:21:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200911 13:21:40.123" starttime="20200911 13:20:58.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:21:40.124" starttime="20200911 13:21:40.123"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:21:40.124" critical="yes" starttime="20200911 13:20:58.273"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:21:40.129" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:21:40.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:21:40.135" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:21:40.135" starttime="20200911 13:21:40.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:21:40.136" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:21:40.136" starttime="20200911 13:21:40.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:21:40.137" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:21:40.138" starttime="20200911 13:21:40.137"></status>
</kw>
<status status="PASS" endtime="20200911 13:21:40.138" starttime="20200911 13:21:40.127"></status>
</kw>
<msg timestamp="20200911 13:21:40.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:21:40.138" starttime="20200911 13:21:40.126"></status>
</kw>
<msg timestamp="20200911 13:21:40.139" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:21:40.139" starttime="20200911 13:21:40.126"></status>
</kw>
<msg timestamp="20200911 13:21:40.139" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:21:40.139" starttime="20200911 13:21:40.125"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:21:40.140" level="INFO">${random} = 76</msg>
<status status="PASS" endtime="20200911 13:21:40.140" starttime="20200911 13:21:40.139"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:21:40.144" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:21:40.144" starttime="20200911 13:21:40.143"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:21:40.145" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:21:40.145" starttime="20200911 13:21:40.144"></status>
</kw>
<status status="PASS" endtime="20200911 13:21:40.145" starttime="20200911 13:21:40.143"></status>
</kw>
<msg timestamp="20200911 13:21:40.145" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:21:40.145" starttime="20200911 13:21:40.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200911 13:21:40.146" starttime="20200911 13:21:40.146"></status>
</kw>
<msg timestamp="20200911 13:21:40.146" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200911 13:21:40.146" starttime="20200911 13:21:40.145"></status>
</kw>
<status status="PASS" endtime="20200911 13:21:40.147" starttime="20200911 13:21:40.142"></status>
</kw>
<msg timestamp="20200911 13:21:40.147" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:21:40.147" starttime="20200911 13:21:40.141"></status>
</kw>
<msg timestamp="20200911 13:21:40.147" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200911 13:21:40.147" starttime="20200911 13:21:40.140"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:21:40.151" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:21:40.151" starttime="20200911 13:21:40.150"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:21:40.152" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:21:40.152" starttime="20200911 13:21:40.151"></status>
</kw>
<status status="PASS" endtime="20200911 13:21:40.152" starttime="20200911 13:21:40.150"></status>
</kw>
<msg timestamp="20200911 13:21:40.152" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:21:40.152" starttime="20200911 13:21:40.149"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:21:40.154" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200911 13:21:40.154" starttime="20200911 13:21:40.154"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:21:40.155" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200911 13:21:40.155" starttime="20200911 13:21:40.154"></status>
</kw>
<status status="PASS" endtime="20200911 13:21:40.155" starttime="20200911 13:21:40.153"></status>
</kw>
<msg timestamp="20200911 13:21:40.155" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200911 13:21:40.155" starttime="20200911 13:21:40.152"></status>
</kw>
<status status="PASS" endtime="20200911 13:21:40.156" starttime="20200911 13:21:40.149"></status>
</kw>
<msg timestamp="20200911 13:21:40.156" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200911 13:21:40.156" starttime="20200911 13:21:40.148"></status>
</kw>
<msg timestamp="20200911 13:21:40.156" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200911 13:21:40.156" starttime="20200911 13:21:40.147"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200911 13:21:40.161" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200911 13:21:40.161" starttime="20200911 13:21:40.160"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:21:40.162" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200911 13:21:40.162" starttime="20200911 13:21:40.161"></status>
</kw>
<status status="PASS" endtime="20200911 13:21:40.162" starttime="20200911 13:21:40.160"></status>
</kw>
<msg timestamp="20200911 13:21:40.162" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200911 13:21:40.162" starttime="20200911 13:21:40.159"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:21:40.164" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200911 13:21:40.164" starttime="20200911 13:21:40.163"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:21:40.164" level="INFO">${result} = /wordcount-76.txt</msg>
<status status="PASS" endtime="20200911 13:21:40.164" starttime="20200911 13:21:40.164"></status>
</kw>
<status status="PASS" endtime="20200911 13:21:40.165" starttime="20200911 13:21:40.163"></status>
</kw>
<msg timestamp="20200911 13:21:40.165" level="INFO">${path_with_leading} = /wordcount-76.txt</msg>
<status status="PASS" endtime="20200911 13:21:40.165" starttime="20200911 13:21:40.162"></status>
</kw>
<status status="PASS" endtime="20200911 13:21:40.165" starttime="20200911 13:21:40.158"></status>
</kw>
<msg timestamp="20200911 13:21:40.165" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-76.txt</msg>
<status status="PASS" endtime="20200911 13:21:40.165" starttime="20200911 13:21:40.157"></status>
</kw>
<msg timestamp="20200911 13:21:40.166" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-76.txt</msg>
<status status="PASS" endtime="20200911 13:21:40.166" starttime="20200911 13:21:40.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:21:40.169" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-76.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:22:19.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:22:19.910" level="INFO">${output} = 2020-09-11 13:21:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-11 13:21:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200911 13:22:19.910" starttime="20200911 13:21:40.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:22:19.911" level="INFO">2020-09-11 13:21:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-11 13:21:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:21:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:21:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:21:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:21:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:21:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CDD507664D68-&gt;91d716ed-cca4-4113-ac8a-f6ad9260f3cb
2020-09-11 13:21:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-11 13:21:44 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:21:44 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:21:44 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-11 13:21:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599830140767_0004
2020-09-11 13:21:44 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-11 13:21:44 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:21:44 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-11 13:21:44 INFO  YarnClientImpl:311 - Submitted application application_1599830140767_0004
2020-09-11 13:21:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599830140767_0004/
2020-09-11 13:21:44 INFO  Job:1619 - Running job: job_1599830140767_0004
2020-09-11 13:21:53 INFO  Job:1640 - Job job_1599830140767_0004 running in uber mode : false
2020-09-11 13:21:53 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:22:00 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:22:06 INFO  Job:1647 -  map 67% reduce 0%
2020-09-11 13:22:12 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:22:18 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:22:19 INFO  Job:1658 - Job job_1599830140767_0004 completed successfully
2020-09-11 13:22:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105133
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46336
		Total time spent by all reduces in occupied slots (ms)=16356
		Total time spent by all map tasks (ms)=11584
		Total time spent by all reduce tasks (ms)=4089
		Total vcore-milliseconds taken by all map tasks=11584
		Total vcore-milliseconds taken by all reduce tasks=4089
		Total megabyte-milliseconds taken by all map tasks=47448064
		Total megabyte-milliseconds taken by all reduce tasks=16748544
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=657
		CPU time spent (ms)=8550
		Physical memory (bytes) snapshot=1370648576
		Virtual memory (bytes) snapshot=16059936768
		Total committed heap usage (bytes)=1442840576
		Peak Map Physical memory (bytes)=363319296
		Peak Map Virtual memory (bytes)=4015849472
		Peak Reduce Physical memory (bytes)=359981056
		Peak Reduce Virtual memory (bytes)=4021026816
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200911 13:22:19.911" starttime="20200911 13:22:19.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:22:19.912" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:22:19.912" starttime="20200911 13:22:19.912"></status>
</kw>
<status status="PASS" endtime="20200911 13:22:19.912" starttime="20200911 13:21:40.167"></status>
</kw>
<msg timestamp="20200911 13:22:19.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:22:19.913" starttime="20200911 13:21:40.166"></status>
</kw>
<msg timestamp="20200911 13:22:19.914" level="INFO">${output} = 2020-09-11 13:21:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-11 13:21:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200911 13:22:19.914" starttime="20200911 13:21:40.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200911 13:22:19.914" starttime="20200911 13:22:19.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:22:19.915" starttime="20200911 13:22:19.914"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:22:19.915" critical="yes" starttime="20200911 13:21:40.125"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200911 13:22:19.916" starttime="20200911 13:20:58.220"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:19:13.142" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:19:13.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:19:13.150" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:19:13.150" starttime="20200911 13:19:13.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:19:13.151" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:19:13.151" starttime="20200911 13:19:13.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:19:13.152" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:19:13.152" starttime="20200911 13:19:13.152"></status>
</kw>
<status status="PASS" endtime="20200911 13:19:13.153" starttime="20200911 13:19:13.140"></status>
</kw>
<msg timestamp="20200911 13:19:13.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:19:13.153" starttime="20200911 13:19:13.139"></status>
</kw>
<msg timestamp="20200911 13:19:13.153" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:19:13.153" starttime="20200911 13:19:13.139"></status>
</kw>
<msg timestamp="20200911 13:19:13.153" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:19:13.153" starttime="20200911 13:19:13.138"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:19:13.157" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:19:13.157" starttime="20200911 13:19:13.157"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:19:13.158" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:19:13.158" starttime="20200911 13:19:13.157"></status>
</kw>
<status status="PASS" endtime="20200911 13:19:13.158" starttime="20200911 13:19:13.156"></status>
</kw>
<msg timestamp="20200911 13:19:13.158" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:19:13.158" starttime="20200911 13:19:13.156"></status>
</kw>
<status status="PASS" endtime="20200911 13:19:13.159" starttime="20200911 13:19:13.155"></status>
</kw>
<msg timestamp="20200911 13:19:13.159" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:19:13.159" starttime="20200911 13:19:13.154"></status>
</kw>
<msg timestamp="20200911 13:19:13.159" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:19:13.160" starttime="20200911 13:19:13.153"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:19:13.162" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:20:02.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:20:02.648" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:19:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:19:15 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200911 13:20:02.648" starttime="20200911 13:19:13.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:20:02.649" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:19:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:19:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:19:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:19:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:19:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4BA9F500ED5B-&gt;91d716ed-cca4-4113-ac8a-f6ad9260f3cb
2020-09-11 13:19:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-11 13:19:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-11 13:19:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:19:17 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:19:17 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-11 13:19:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599830140767_0001
2020-09-11 13:19:20 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-11 13:19:20 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:19:20 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-11 13:19:21 INFO  YarnClientImpl:311 - Submitted application application_1599830140767_0001
2020-09-11 13:19:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599830140767_0001/
2020-09-11 13:19:21 INFO  Job:1619 - Running job: job_1599830140767_0001
2020-09-11 13:19:33 INFO  Job:1640 - Job job_1599830140767_0001 running in uber mode : false
2020-09-11 13:19:33 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:19:40 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:19:46 INFO  Job:1647 -  map 67% reduce 0%
2020-09-11 13:19:52 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:19:57 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:20:01 INFO  Job:1658 - Job job_1599830140767_0001 completed successfully
2020-09-11 13:20:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1042685
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44960
		Total time spent by all reduces in occupied slots (ms)=17272
		Total time spent by all map tasks (ms)=11240
		Total time spent by all reduce tasks (ms)=4318
		Total vcore-milliseconds taken by all map tasks=11240
		Total vcore-milliseconds taken by all reduce tasks=4318
		Total megabyte-milliseconds taken by all map tasks=46039040
		Total megabyte-milliseconds taken by all reduce tasks=17686528
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=599
		CPU time spent (ms)=8030
		Physical memory (bytes) snapshot=1432870912
		Virtual memory (bytes) snapshot=16040243200
		Total committed heap usage (bytes)=1602748416
		Peak Map Physical memory (bytes)=360185856
		Peak Map Virtual memory (bytes)=4009582592
		Peak Reduce Physical memory (bytes)=363044864
		Peak Reduce Virtual memory (bytes)=4015415296
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 45.056 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200911 13:20:02.650" starttime="20200911 13:20:02.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:20:02.650" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:20:02.650" starttime="20200911 13:20:02.650"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:02.651" starttime="20200911 13:19:13.161"></status>
</kw>
<msg timestamp="20200911 13:20:02.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:20:02.651" starttime="20200911 13:19:13.160"></status>
</kw>
<msg timestamp="20200911 13:20:02.652" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-11 13:19:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:19:15 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200911 13:20:02.652" starttime="20200911 13:19:13.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:20:02.652" starttime="20200911 13:20:02.652"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:20:02.652" critical="yes" starttime="20200911 13:19:13.138"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:20:02.657" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:20:02.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:20:02.663" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:20:02.664" starttime="20200911 13:20:02.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:20:02.665" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:20:02.665" starttime="20200911 13:20:02.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:20:02.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:20:02.665" starttime="20200911 13:20:02.665"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:02.666" starttime="20200911 13:20:02.655"></status>
</kw>
<msg timestamp="20200911 13:20:02.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:20:02.666" starttime="20200911 13:20:02.655"></status>
</kw>
<msg timestamp="20200911 13:20:02.666" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:20:02.666" starttime="20200911 13:20:02.654"></status>
</kw>
<msg timestamp="20200911 13:20:02.666" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200911 13:20:02.666" starttime="20200911 13:20:02.654"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 13:20:02.667" level="INFO">${random} = 83</msg>
<status status="PASS" endtime="20200911 13:20:02.667" starttime="20200911 13:20:02.667"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:20:02.671" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:20:02.671" starttime="20200911 13:20:02.671"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:20:02.672" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:20:02.672" starttime="20200911 13:20:02.671"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:02.672" starttime="20200911 13:20:02.670"></status>
</kw>
<msg timestamp="20200911 13:20:02.672" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:20:02.672" starttime="20200911 13:20:02.669"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:02.672" starttime="20200911 13:20:02.669"></status>
</kw>
<msg timestamp="20200911 13:20:02.673" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:20:02.673" starttime="20200911 13:20:02.668"></status>
</kw>
<msg timestamp="20200911 13:20:02.673" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200911 13:20:02.673" starttime="20200911 13:20:02.667"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:20:02.677" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:20:02.677" starttime="20200911 13:20:02.676"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:20:02.677" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:20:02.677" starttime="20200911 13:20:02.677"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:02.678" starttime="20200911 13:20:02.676"></status>
</kw>
<msg timestamp="20200911 13:20:02.678" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:20:02.678" starttime="20200911 13:20:02.675"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:02.678" starttime="20200911 13:20:02.674"></status>
</kw>
<msg timestamp="20200911 13:20:02.678" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200911 13:20:02.678" starttime="20200911 13:20:02.674"></status>
</kw>
<msg timestamp="20200911 13:20:02.678" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200911 13:20:02.678" starttime="20200911 13:20:02.673"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200911 13:20:02.682" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200911 13:20:02.682" starttime="20200911 13:20:02.682"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 13:20:02.683" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200911 13:20:02.683" starttime="20200911 13:20:02.682"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:02.683" starttime="20200911 13:20:02.681"></status>
</kw>
<msg timestamp="20200911 13:20:02.683" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200911 13:20:02.683" starttime="20200911 13:20:02.681"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:02.684" starttime="20200911 13:20:02.680"></status>
</kw>
<msg timestamp="20200911 13:20:02.684" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-83.txt</msg>
<status status="PASS" endtime="20200911 13:20:02.684" starttime="20200911 13:20:02.679"></status>
</kw>
<msg timestamp="20200911 13:20:02.684" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-83.txt</msg>
<status status="PASS" endtime="20200911 13:20:02.684" starttime="20200911 13:20:02.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 13:20:02.687" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-83.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 13:20:42.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 13:20:42.489" level="INFO">${output} = 2020-09-11 13:20:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-11 13:20:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200911 13:20:42.489" starttime="20200911 13:20:02.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 13:20:42.490" level="INFO">2020-09-11 13:20:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-11 13:20:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-11 13:20:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-11 13:20:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-11 13:20:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-11 13:20:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 13:20:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EF6ED89AC8DE-&gt;91d716ed-cca4-4113-ac8a-f6ad9260f3cb
2020-09-11 13:20:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-11 13:20:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-11 13:20:06 INFO  JobSubmitter:202 - number of splits:3
2020-09-11 13:20:06 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-11 13:20:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599830140767_0002
2020-09-11 13:20:07 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-11 13:20:07 INFO  Configuration:2752 - resource-types.xml not found
2020-09-11 13:20:07 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-11 13:20:07 INFO  YarnClientImpl:311 - Submitted application application_1599830140767_0002
2020-09-11 13:20:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599830140767_0002/
2020-09-11 13:20:07 INFO  Job:1619 - Running job: job_1599830140767_0002
2020-09-11 13:20:16 INFO  Job:1640 - Job job_1599830140767_0002 running in uber mode : false
2020-09-11 13:20:16 INFO  Job:1647 -  map 0% reduce 0%
2020-09-11 13:20:23 INFO  Job:1647 -  map 33% reduce 0%
2020-09-11 13:20:29 INFO  Job:1647 -  map 67% reduce 0%
2020-09-11 13:20:35 INFO  Job:1647 -  map 100% reduce 0%
2020-09-11 13:20:40 INFO  Job:1647 -  map 100% reduce 100%
2020-09-11 13:20:42 INFO  Job:1658 - Job job_1599830140767_0002 completed successfully
2020-09-11 13:20:42 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105217
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45900
		Total time spent by all reduces in occupied slots (ms)=16792
		Total time spent by all map tasks (ms)=11475
		Total time spent by all reduce tasks (ms)=4198
		Total vcore-milliseconds taken by all map tasks=11475
		Total vcore-milliseconds taken by all reduce tasks=4198
		Total megabyte-milliseconds taken by all map tasks=47001600
		Total megabyte-milliseconds taken by all reduce tasks=17195008
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=568
		CPU time spent (ms)=8200
		Physical memory (bytes) snapshot=1435373568
		Virtual memory (bytes) snapshot=16053366784
		Total committed heap usage (bytes)=1600651264
		Peak Map Physical memory (bytes)=358912000
		Peak Map Virtual memory (bytes)=4011364352
		Peak Reduce Physical memory (bytes)=361476096
		Peak Reduce Virtual memory (bytes)=4025049088
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200911 13:20:42.490" starttime="20200911 13:20:42.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 13:20:42.491" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 13:20:42.491" starttime="20200911 13:20:42.490"></status>
</kw>
<status status="PASS" endtime="20200911 13:20:42.491" starttime="20200911 13:20:02.685"></status>
</kw>
<msg timestamp="20200911 13:20:42.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 13:20:42.491" starttime="20200911 13:20:02.685"></status>
</kw>
<msg timestamp="20200911 13:20:42.492" level="INFO">${output} = 2020-09-11 13:20:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-11 13:20:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200911 13:20:42.492" starttime="20200911 13:20:02.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200911 13:20:42.493" starttime="20200911 13:20:42.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200911 13:20:42.493" starttime="20200911 13:20:42.493"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200911 13:20:42.494" critical="yes" starttime="20200911 13:20:02.653"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200911 13:20:42.495" starttime="20200911 13:19:13.087"></status>
</suite>
<status status="PASS" elapsedtime="228910" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="639212" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
