<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200911 09:44:24.069" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:29:54.384" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:29:54.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:29:54.387" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:29:54.387" starttime="20200911 09:29:54.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:29:54.388" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:29:54.388" starttime="20200911 09:29:54.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:29:54.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:29:54.389" starttime="20200911 09:29:54.389"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.389" starttime="20200911 09:29:54.379"></status>
</kw>
<msg timestamp="20200911 09:29:54.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:29:54.390" starttime="20200911 09:29:54.378"></status>
</kw>
<msg timestamp="20200911 09:29:54.390" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:29:54.390" starttime="20200911 09:29:54.378"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:29:54.394" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:29:54.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:29:54.413" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:29:54.413" starttime="20200911 09:29:54.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:29:54.414" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:29:54.414" starttime="20200911 09:29:54.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:29:54.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:29:54.415" starttime="20200911 09:29:54.414"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.415" starttime="20200911 09:29:54.392"></status>
</kw>
<msg timestamp="20200911 09:29:54.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:29:54.415" starttime="20200911 09:29:54.391"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.416" starttime="20200911 09:29:54.391"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.416" starttime="20200911 09:29:54.390"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.416" starttime="20200911 09:29:54.378"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.416" starttime="20200911 09:29:54.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:29:54.421" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:29:54.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:29:54.563" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20200911 09:29:54.563" starttime="20200911 09:29:54.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:29:54.564" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Fri, 11 Sep 2020 09:29:54 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCSPVU/Rd2r66RJkDc95Bvd4LrLmr/ATZWn36h1+Ct5C/q+b7hZbS9LH2Gad7FPmwYqdroPxUrzo/wUru200UslN1m
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1599852594549&amp;s=NSAQbih+VGk3rfExPH+cMxfac9dv2ulu73C1iM3UeF4="; Path=/; HttpOnly
Last-Modified: Fri, 11 Sep 2020 09:16:16 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200911 09:29:54.564" starttime="20200911 09:29:54.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:29:54.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:29:54.565" starttime="20200911 09:29:54.565"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.566" starttime="20200911 09:29:54.417"></status>
</kw>
<msg timestamp="20200911 09:29:54.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:29:54.566" starttime="20200911 09:29:54.417"></status>
</kw>
<msg timestamp="20200911 09:29:54.566" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20200911 09:29:54.566" starttime="20200911 09:29:54.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200911 09:29:54.567" starttime="20200911 09:29:54.566"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200911 09:29:54.567" critical="yes" starttime="20200911 09:29:54.376"></status>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:29:54.575" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:29:54.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:29:54.579" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:29:54.579" starttime="20200911 09:29:54.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:29:54.580" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:29:54.580" starttime="20200911 09:29:54.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:29:54.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:29:54.581" starttime="20200911 09:29:54.580"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.582" starttime="20200911 09:29:54.571"></status>
</kw>
<msg timestamp="20200911 09:29:54.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:29:54.582" starttime="20200911 09:29:54.571"></status>
</kw>
<msg timestamp="20200911 09:29:54.582" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:29:54.582" starttime="20200911 09:29:54.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:29:54.584" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:29:54.584" starttime="20200911 09:29:54.582"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:29:54.589" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:29:54.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:29:54.606" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:29:54.606" starttime="20200911 09:29:54.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:29:54.608" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:29:54.608" starttime="20200911 09:29:54.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:29:54.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:29:54.609" starttime="20200911 09:29:54.608"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.609" starttime="20200911 09:29:54.586"></status>
</kw>
<msg timestamp="20200911 09:29:54.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:29:54.609" starttime="20200911 09:29:54.585"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.609" starttime="20200911 09:29:54.585"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.610" starttime="20200911 09:29:54.584"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.610" starttime="20200911 09:29:54.570"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:54.610" starttime="20200911 09:29:54.569"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:29:54.615" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:30:47.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:30:47.782" level="INFO">${output} = 2020-09-11 09:29:56,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-11 09:29:56,963 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200911 09:30:47.783" starttime="20200911 09:29:54.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:30:47.784" level="INFO">2020-09-11 09:29:56,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-11 09:29:56,963 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-11 09:29:56,964 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-11 09:29:59,963 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-09-11 09:29:59,964 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-09-11 09:29:59,964 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-09-11 09:29:59,964 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-09-11 09:29:59,964 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-09-11 09:29:59,964 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-09-11 09:29:59,964 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-09-11 09:29:59,967 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-09-11 09:29:59,969 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-09-11 09:29:59,980 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-09-11 09:30:00,025 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-59512, with testuser/scm@EXAMPLE.COM as owner.
2020-09-11 09:30:00,348 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-38711, with testuser/scm@EXAMPLE.COM as owner.
2020-09-11 09:30:00,387 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-61345, with testuser/scm@EXAMPLE.COM as owner.
2020-09-11 09:30:00,412 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-56883, with testuser/scm@EXAMPLE.COM as owner.
2020-09-11 09:30:00,430 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-51563, with testuser/scm@EXAMPLE.COM as owner.
2020-09-11 09:30:00,450 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-59512/bucket-0-75343, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,539 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-38711/bucket-0-15395, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,552 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-61345/bucket-0-55551, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,564 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-56883/bucket-0-66625, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,571 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-51563/bucket-0-10360, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,589 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-59512/bucket-1-34445, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,597 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-38711/bucket-1-84756, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,604 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-61345/bucket-1-95020, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-56883/bucket-1-45275, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,621 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-51563/bucket-1-80543, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,626 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-59512/bucket-2-32294, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,634 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-38711/bucket-2-39305, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,641 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-61345/bucket-2-34172, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,646 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-56883/bucket-2-71688, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,651 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-51563/bucket-2-58195, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,657 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-59512/bucket-3-27459, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,663 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-38711/bucket-3-54914, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,668 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-61345/bucket-3-44510, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,674 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-56883/bucket-3-87100, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,680 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-51563/bucket-3-62211, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,684 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-59512/bucket-4-98785, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,694 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-38711/bucket-4-24979, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,700 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-61345/bucket-4-27826, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,705 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-56883/bucket-4-29575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,711 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-51563/bucket-4-90103, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-11 09:30:00,986 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-09-11 09:30:01,935 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-11 09:30:01,986 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-09-11 09:30:02,379 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-11 09:30:02,380 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-0584431C9B1F-&gt;7c1fe1c0-c3cf-4be8-9724-1d6bd5a5356b
2020-09-11 09:30:02,381 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-11 09:30:02,987 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-11 09:30:03,987 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-11 09:30:04,988 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-11 09:30:05,989 [Thread-8] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-09-11 09:30:06,989 [Thread-8] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-09-11 09:30:08,026 [Thread-8] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-09-11 09:30:09,027 [Thread-8] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-09-11 09:30:10,028 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-09-11 09:30:11,029 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-09-11 09:30:12,029 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-09-11 09:30:13,030 [Thread-8] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-09-11 09:30:14,031 [Thread-8] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-09-11 09:30:15,031 [Thread-8] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-09-11 09:30:16,032 [Thread-8] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-09-11 09:30:17,034 [Thread-8] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-09-11 09:30:18,034 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-09-11 09:30:19,035 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-09-11 09:30:20,035 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-09-11 09:30:21,036 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-09-11 09:30:22,037 [Thread-8] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-09-11 09:30:23,037 [Thread-8] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-09-11 09:30:24,039 [Thread-8] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-09-11 09:30:25,040 [Thread-8] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-09-11 09:30:26,041 [Thread-8] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-09-11 09:30:27,041 [Thread-8] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-09-11 09:30:28,048 [Thread-8] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-09-11 09:30:29,048 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-09-11 09:30:30,049 [Thread-8] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-09-11 09:30:31,049 [Thread-8] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-09-11 09:30:32,050 [Thread-8] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-09-11 09:30:33,051 [Thread-8] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-09-11 09:30:34,058 [Thread-8] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-09-11 09:30:35,059 [Thread-8] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-09-11 09:30:36,059 [Thread-8] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-09-11 09:30:37,067 [Thread-8] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-09-11 09:30:38,068 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-09-11 09:30:39,069 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-09-11 09:30:40,069 [Thread-8] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-09-11 09:30:41,070 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-09-11 09:30:42,075 [Thread-8] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-09-11 09:30:43,076 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,354
Average Time spent in bucket creation: 00:00:00,177
Average Time spent in key creation: 00:00:04,734
Average Time spent in key write: 00:00:00,862
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:50,250
***************************************************</msg>
<status status="PASS" endtime="20200911 09:30:47.784" starttime="20200911 09:30:47.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:30:47.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:30:47.785" starttime="20200911 09:30:47.784"></status>
</kw>
<status status="PASS" endtime="20200911 09:30:47.786" starttime="20200911 09:29:54.611"></status>
</kw>
<msg timestamp="20200911 09:30:47.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:30:47.786" starttime="20200911 09:29:54.611"></status>
</kw>
<msg timestamp="20200911 09:30:47.787" level="INFO">${result} = 2020-09-11 09:29:56,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-11 09:29:56,963 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200911 09:30:47.787" starttime="20200911 09:29:54.610"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200911 09:30:47.788" starttime="20200911 09:30:47.787"></status>
</kw>
<status status="PASS" endtime="20200911 09:30:47.788" starttime="20200911 09:30:47.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200911 09:30:47.789" starttime="20200911 09:30:47.789"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200911 09:30:47.789" critical="yes" starttime="20200911 09:29:54.568"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200911 09:30:47.791" starttime="20200911 09:29:54.343"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s2" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 09:30:47.807" level="INFO">${random} = 94480</msg>
<status status="PASS" endtime="20200911 09:30:47.807" starttime="20200911 09:30:47.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20200911 09:30:47.809" level="INFO">${source} = 94480-source</msg>
<status status="PASS" endtime="20200911 09:30:47.809" starttime="20200911 09:30:47.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20200911 09:30:47.810" level="INFO">${target} = 94480-target</msg>
<status status="PASS" endtime="20200911 09:30:47.810" starttime="20200911 09:30:47.809"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:30:47.814" level="INFO">Running command 'ozone sh volume create 94480-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:30:52.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:30:52.050" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:30:52.050" starttime="20200911 09:30:47.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:30:52.056" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:30:52.056" starttime="20200911 09:30:52.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:30:52.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:30:52.057" starttime="20200911 09:30:52.056"></status>
</kw>
<status status="PASS" endtime="20200911 09:30:52.058" starttime="20200911 09:30:47.811"></status>
</kw>
<msg timestamp="20200911 09:30:52.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:30:52.058" starttime="20200911 09:30:47.811"></status>
</kw>
<status status="PASS" endtime="20200911 09:30:52.058" starttime="20200911 09:30:47.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:30:52.064" level="INFO">Running command 'ozone sh volume create 94480-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:30:56.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:30:56.043" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:30:56.044" starttime="20200911 09:30:52.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:30:56.045" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:30:56.045" starttime="20200911 09:30:56.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:30:56.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:30:56.046" starttime="20200911 09:30:56.045"></status>
</kw>
<status status="PASS" endtime="20200911 09:30:56.046" starttime="20200911 09:30:52.059"></status>
</kw>
<msg timestamp="20200911 09:30:56.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:30:56.046" starttime="20200911 09:30:52.059"></status>
</kw>
<status status="PASS" endtime="20200911 09:30:56.047" starttime="20200911 09:30:52.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:30:56.053" level="INFO">Running command 'ozone sh bucket create 94480-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:00.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:00.086" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:00.086" starttime="20200911 09:30:56.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:00.088" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:31:00.088" starttime="20200911 09:31:00.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:00.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:00.088" starttime="20200911 09:31:00.088"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:00.089" starttime="20200911 09:30:56.049"></status>
</kw>
<msg timestamp="20200911 09:31:00.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:00.089" starttime="20200911 09:30:56.049"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:00.089" starttime="20200911 09:30:56.048"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:00.093" level="INFO">Running command 'ozone sh key put 94480-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:09.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:09.187" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:09.187" starttime="20200911 09:31:00.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:09.189" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:31:09.189" starttime="20200911 09:31:09.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:09.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:09.189" starttime="20200911 09:31:09.189"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:09.190" starttime="20200911 09:31:00.090"></status>
</kw>
<msg timestamp="20200911 09:31:09.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:09.190" starttime="20200911 09:31:00.090"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:09.190" starttime="20200911 09:31:00.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:09.195" level="INFO">Running command 'ozone sh bucket create 94480-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:13.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:13.318" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:13.318" starttime="20200911 09:31:09.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:13.320" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:31:13.320" starttime="20200911 09:31:13.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:13.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:13.320" starttime="20200911 09:31:13.320"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:13.321" starttime="20200911 09:31:09.192"></status>
</kw>
<msg timestamp="20200911 09:31:13.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:13.321" starttime="20200911 09:31:09.191"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:13.321" starttime="20200911 09:31:09.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:13.325" level="INFO">Running command 'ozone sh bucket link 94480-source/readable-bucket 94480-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:17.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:17.408" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:17.408" starttime="20200911 09:31:13.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:17.409" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:31:17.409" starttime="20200911 09:31:17.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:17.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:17.410" starttime="20200911 09:31:17.410"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:17.411" starttime="20200911 09:31:13.322"></status>
</kw>
<msg timestamp="20200911 09:31:17.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:17.411" starttime="20200911 09:31:13.322"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:17.412" starttime="20200911 09:31:13.321"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:17.416" level="INFO">Running command 'ozone sh bucket link 94480-source/readable-bucket 94480-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:21.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:21.039" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:21.039" starttime="20200911 09:31:17.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:21.040" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:31:21.040" starttime="20200911 09:31:21.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:21.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:21.041" starttime="20200911 09:31:21.041"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:21.042" starttime="20200911 09:31:17.413"></status>
</kw>
<msg timestamp="20200911 09:31:21.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:21.042" starttime="20200911 09:31:17.413"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:21.042" starttime="20200911 09:31:17.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:21.046" level="INFO">Running command 'ozone sh bucket link 94480-source/unreadable-bucket 94480-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:24.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:24.833" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:24.833" starttime="20200911 09:31:21.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:24.834" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:31:24.834" starttime="20200911 09:31:24.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:24.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:24.835" starttime="20200911 09:31:24.834"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:24.835" starttime="20200911 09:31:21.043"></status>
</kw>
<msg timestamp="20200911 09:31:24.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:24.836" starttime="20200911 09:31:21.043"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:24.836" starttime="20200911 09:31:21.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:24.841" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94480-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:28.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:28.987" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:28.987" starttime="20200911 09:31:24.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:28.988" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200911 09:31:28.988" starttime="20200911 09:31:28.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:28.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:28.989" starttime="20200911 09:31:28.989"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:28.990" starttime="20200911 09:31:24.837"></status>
</kw>
<msg timestamp="20200911 09:31:28.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:28.990" starttime="20200911 09:31:24.837"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:28.990" starttime="20200911 09:31:24.836"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:28.995" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 94480-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:32.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:32.673" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:32.673" starttime="20200911 09:31:28.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:32.674" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200911 09:31:32.675" starttime="20200911 09:31:32.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:32.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:32.675" starttime="20200911 09:31:32.675"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:32.676" starttime="20200911 09:31:28.991"></status>
</kw>
<msg timestamp="20200911 09:31:32.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:32.676" starttime="20200911 09:31:28.991"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:32.677" starttime="20200911 09:31:28.990"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:32.681" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 94480-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:37.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:37.538" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:37.538" starttime="20200911 09:31:32.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:37.540" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200911 09:31:37.540" starttime="20200911 09:31:37.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:37.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:37.540" starttime="20200911 09:31:37.540"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:37.541" starttime="20200911 09:31:32.678"></status>
</kw>
<msg timestamp="20200911 09:31:37.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:37.541" starttime="20200911 09:31:32.678"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:37.541" starttime="20200911 09:31:32.677"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:37.545" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94480-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:41.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:41.567" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:41.567" starttime="20200911 09:31:37.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:41.568" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200911 09:31:41.569" starttime="20200911 09:31:41.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:41.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:41.569" starttime="20200911 09:31:41.569"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:41.570" starttime="20200911 09:31:37.542"></status>
</kw>
<msg timestamp="20200911 09:31:41.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:41.570" starttime="20200911 09:31:37.542"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:41.570" starttime="20200911 09:31:37.541"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:41.574" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94480-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:45.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:45.675" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:45.675" starttime="20200911 09:31:41.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:45.685" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200911 09:31:45.685" starttime="20200911 09:31:45.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:45.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:45.686" starttime="20200911 09:31:45.685"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:45.686" starttime="20200911 09:31:41.571"></status>
</kw>
<msg timestamp="20200911 09:31:45.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:45.686" starttime="20200911 09:31:41.571"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:45.687" starttime="20200911 09:31:41.570"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:45.687" starttime="20200911 09:30:56.047"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:45.687" starttime="20200911 09:30:56.047"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:45.687" starttime="20200911 09:30:47.807"></status>
</kw>
<test id="s1-s1-s2-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:45.697" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:45.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:45.702" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:31:45.702" starttime="20200911 09:31:45.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:45.703" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:31:45.703" starttime="20200911 09:31:45.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:45.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:45.704" starttime="20200911 09:31:45.703"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:45.704" starttime="20200911 09:31:45.691"></status>
</kw>
<msg timestamp="20200911 09:31:45.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:45.704" starttime="20200911 09:31:45.690"></status>
</kw>
<msg timestamp="20200911 09:31:45.705" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:31:45.705" starttime="20200911 09:31:45.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:31:45.706" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:31:45.706" starttime="20200911 09:31:45.705"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:45.712" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:45.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:45.728" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:31:45.728" starttime="20200911 09:31:45.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:45.729" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:31:45.729" starttime="20200911 09:31:45.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:45.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:45.730" starttime="20200911 09:31:45.729"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:45.731" starttime="20200911 09:31:45.708"></status>
</kw>
<msg timestamp="20200911 09:31:45.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:45.731" starttime="20200911 09:31:45.708"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:45.731" starttime="20200911 09:31:45.707"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:45.731" starttime="20200911 09:31:45.707"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:45.731" starttime="20200911 09:31:45.689"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:45.731" starttime="20200911 09:31:45.689"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:45.736" level="INFO">Running command 'ozone sh bucket link 94480-source/no-such-bucket 94480-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:49.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:49.841" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:49.841" starttime="20200911 09:31:45.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:49.842" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:31:49.842" starttime="20200911 09:31:49.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:49.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:49.843" starttime="20200911 09:31:49.843"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:49.844" starttime="20200911 09:31:45.733"></status>
</kw>
<msg timestamp="20200911 09:31:49.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:49.844" starttime="20200911 09:31:45.733"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:49.844" starttime="20200911 09:31:45.732"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:49.847" level="INFO">Running command 'ozone sh key list 94480-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:53.769" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:31:53.769" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:53.769" starttime="20200911 09:31:49.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:53.770" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20200911 09:31:53.770" starttime="20200911 09:31:53.769"></status>
</kw>
<msg timestamp="20200911 09:31:53.771" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:53.771" starttime="20200911 09:31:49.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200911 09:31:53.771" starttime="20200911 09:31:53.771"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:31:53.772" critical="yes" starttime="20200911 09:31:45.687"></status>
</test>
<test id="s1-s1-s2-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:53.780" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:53.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:53.783" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:31:53.784" starttime="20200911 09:31:53.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:53.785" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:31:53.785" starttime="20200911 09:31:53.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:53.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:53.786" starttime="20200911 09:31:53.785"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:53.786" starttime="20200911 09:31:53.777"></status>
</kw>
<msg timestamp="20200911 09:31:53.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:53.786" starttime="20200911 09:31:53.777"></status>
</kw>
<msg timestamp="20200911 09:31:53.787" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:31:53.787" starttime="20200911 09:31:53.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:31:53.787" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:31:53.787" starttime="20200911 09:31:53.787"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:53.792" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:53.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:53.811" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:31:53.811" starttime="20200911 09:31:53.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:53.812" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:31:53.812" starttime="20200911 09:31:53.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:53.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:53.813" starttime="20200911 09:31:53.813"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:53.813" starttime="20200911 09:31:53.789"></status>
</kw>
<msg timestamp="20200911 09:31:53.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:53.814" starttime="20200911 09:31:53.789"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:53.814" starttime="20200911 09:31:53.788"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:53.814" starttime="20200911 09:31:53.788"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:53.814" starttime="20200911 09:31:53.774"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:53.814" starttime="20200911 09:31:53.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:53.819" level="INFO">Running command 'ozone sh bucket link 94480-source/bucket1 94480-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:31:57.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:31:57.995" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:31:57.995" starttime="20200911 09:31:53.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:31:57.996" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:31:57.996" starttime="20200911 09:31:57.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:31:57.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:31:57.997" starttime="20200911 09:31:57.997"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:57.997" starttime="20200911 09:31:53.816"></status>
</kw>
<msg timestamp="20200911 09:31:57.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:31:57.998" starttime="20200911 09:31:53.815"></status>
</kw>
<status status="PASS" endtime="20200911 09:31:57.998" starttime="20200911 09:31:53.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:31:58.004" level="INFO">Running command 'ozone sh bucket create 94480-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:02.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:02.250" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:32:02.250" starttime="20200911 09:31:58.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:02.253" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:32:02.254" starttime="20200911 09:32:02.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:02.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:02.256" starttime="20200911 09:32:02.255"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:02.256" starttime="20200911 09:31:57.999"></status>
</kw>
<msg timestamp="20200911 09:32:02.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:02.256" starttime="20200911 09:31:57.999"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:02.257" starttime="20200911 09:31:57.998"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:02.261" level="INFO">Running command 'ozone sh key put 94480-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:08.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:08.845" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:32:08.845" starttime="20200911 09:32:02.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:08.846" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:32:08.846" starttime="20200911 09:32:08.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:08.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:08.847" starttime="20200911 09:32:08.846"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:08.847" starttime="20200911 09:32:02.258"></status>
</kw>
<msg timestamp="20200911 09:32:08.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:08.848" starttime="20200911 09:32:02.258"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:08.848" starttime="20200911 09:32:02.257"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200911 09:32:08.850" level="INFO">${postfix} = 76343</msg>
<status status="PASS" endtime="20200911 09:32:08.850" starttime="20200911 09:32:08.850"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200911 09:32:08.851" level="INFO">${tmpfile} = /tmp/tempkey-76343</msg>
<status status="PASS" endtime="20200911 09:32:08.851" starttime="20200911 09:32:08.850"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:08.855" level="INFO">Running command 'ozone sh key get -f 94480-target/link1/key1 /tmp/tempkey-76343 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:14.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:14.869" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:32:14.869" starttime="20200911 09:32:08.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:14.870" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:32:14.870" starttime="20200911 09:32:14.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:14.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:14.871" starttime="20200911 09:32:14.871"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:14.872" starttime="20200911 09:32:08.852"></status>
</kw>
<msg timestamp="20200911 09:32:14.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:14.872" starttime="20200911 09:32:08.852"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:14.872" starttime="20200911 09:32:08.851"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200911 09:32:14.875" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-76343 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:14.880" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200911 09:32:14.880" starttime="20200911 09:32:14.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:14.886" level="INFO">Running command 'rm -f /tmp/tempkey-76343 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:14.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:14.888" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:32:14.889" starttime="20200911 09:32:14.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:14.890" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:32:14.890" starttime="20200911 09:32:14.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:14.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:14.891" starttime="20200911 09:32:14.890"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:14.891" starttime="20200911 09:32:14.882"></status>
</kw>
<msg timestamp="20200911 09:32:14.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:14.892" starttime="20200911 09:32:14.881"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:14.892" starttime="20200911 09:32:14.880"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 09:32:14.893" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200911 09:32:14.893" starttime="20200911 09:32:14.892"></status>
</kw>
<msg timestamp="20200911 09:32:14.893" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200911 09:32:14.893" starttime="20200911 09:32:08.849"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:32:14.894" starttime="20200911 09:32:14.893"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:14.894" starttime="20200911 09:32:08.848"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:32:14.894" critical="yes" starttime="20200911 09:31:53.773"></status>
</test>
<test id="s1-s1-s2-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:14.902" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:14.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:14.905" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:32:14.905" starttime="20200911 09:32:14.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:14.906" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:32:14.906" starttime="20200911 09:32:14.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:14.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:14.907" starttime="20200911 09:32:14.906"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:14.907" starttime="20200911 09:32:14.899"></status>
</kw>
<msg timestamp="20200911 09:32:14.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:14.907" starttime="20200911 09:32:14.898"></status>
</kw>
<msg timestamp="20200911 09:32:14.908" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:32:14.908" starttime="20200911 09:32:14.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:32:14.908" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:32:14.908" starttime="20200911 09:32:14.908"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:14.917" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:14.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:14.932" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:32:14.932" starttime="20200911 09:32:14.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:14.933" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:32:14.933" starttime="20200911 09:32:14.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:14.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:14.934" starttime="20200911 09:32:14.934"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:14.935" starttime="20200911 09:32:14.911"></status>
</kw>
<msg timestamp="20200911 09:32:14.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:14.935" starttime="20200911 09:32:14.910"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:14.935" starttime="20200911 09:32:14.909"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:14.935" starttime="20200911 09:32:14.909"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:14.935" starttime="20200911 09:32:14.897"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:14.936" starttime="20200911 09:32:14.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:14.940" level="INFO">Running command 'ozone sh key put 94480-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:21.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:21.268" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:32:21.268" starttime="20200911 09:32:14.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:21.269" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:32:21.269" starttime="20200911 09:32:21.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:21.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:21.271" starttime="20200911 09:32:21.270"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:21.271" starttime="20200911 09:32:14.937"></status>
</kw>
<msg timestamp="20200911 09:32:21.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:21.271" starttime="20200911 09:32:14.937"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:21.272" starttime="20200911 09:32:14.936"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200911 09:32:21.274" level="INFO">${postfix} = 34022</msg>
<status status="PASS" endtime="20200911 09:32:21.274" starttime="20200911 09:32:21.273"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200911 09:32:21.274" level="INFO">${tmpfile} = /tmp/tempkey-34022</msg>
<status status="PASS" endtime="20200911 09:32:21.274" starttime="20200911 09:32:21.274"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:21.280" level="INFO">Running command 'ozone sh key get -f 94480-source/bucket1/key2 /tmp/tempkey-34022 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:27.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:27.531" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:32:27.531" starttime="20200911 09:32:21.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:27.533" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:32:27.533" starttime="20200911 09:32:27.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:27.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:27.534" starttime="20200911 09:32:27.534"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:27.535" starttime="20200911 09:32:21.276"></status>
</kw>
<msg timestamp="20200911 09:32:27.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:27.535" starttime="20200911 09:32:21.275"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:27.536" starttime="20200911 09:32:21.275"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200911 09:32:27.539" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-34022 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:27.542" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200911 09:32:27.542" starttime="20200911 09:32:27.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:27.547" level="INFO">Running command 'rm -f /tmp/tempkey-34022 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:27.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:27.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:32:27.551" starttime="20200911 09:32:27.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:27.553" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:32:27.553" starttime="20200911 09:32:27.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:27.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:27.554" starttime="20200911 09:32:27.553"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:27.554" starttime="20200911 09:32:27.544"></status>
</kw>
<msg timestamp="20200911 09:32:27.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:27.554" starttime="20200911 09:32:27.543"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:27.554" starttime="20200911 09:32:27.542"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 09:32:27.555" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200911 09:32:27.555" starttime="20200911 09:32:27.555"></status>
</kw>
<msg timestamp="20200911 09:32:27.555" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200911 09:32:27.555" starttime="20200911 09:32:21.273"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:32:27.556" starttime="20200911 09:32:27.556"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:27.556" starttime="20200911 09:32:21.272"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:32:27.557" critical="yes" starttime="20200911 09:32:14.896"></status>
</test>
<test id="s1-s1-s2-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:27.564" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:27.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:27.567" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:32:27.567" starttime="20200911 09:32:27.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:27.568" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:32:27.568" starttime="20200911 09:32:27.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:27.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:27.569" starttime="20200911 09:32:27.568"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:27.569" starttime="20200911 09:32:27.560"></status>
</kw>
<msg timestamp="20200911 09:32:27.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:27.570" starttime="20200911 09:32:27.560"></status>
</kw>
<msg timestamp="20200911 09:32:27.570" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:32:27.570" starttime="20200911 09:32:27.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:32:27.571" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:32:27.571" starttime="20200911 09:32:27.570"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:27.576" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:27.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:27.593" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:32:27.593" starttime="20200911 09:32:27.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:27.594" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:32:27.594" starttime="20200911 09:32:27.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:27.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:27.595" starttime="20200911 09:32:27.594"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:27.595" starttime="20200911 09:32:27.573"></status>
</kw>
<msg timestamp="20200911 09:32:27.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:27.595" starttime="20200911 09:32:27.572"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:27.596" starttime="20200911 09:32:27.572"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:27.596" starttime="20200911 09:32:27.571"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:27.596" starttime="20200911 09:32:27.559"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:27.596" starttime="20200911 09:32:27.558"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:27.604" level="INFO">Running command 'ozone sh key list 94480-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:31.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:31.854" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20200911 09:32:31.854" starttime="20200911 09:32:27.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:31.856" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20200911 09:32:31.856" starttime="20200911 09:32:31.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:31.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:31.857" starttime="20200911 09:32:31.856"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:31.857" starttime="20200911 09:32:27.598"></status>
</kw>
<msg timestamp="20200911 09:32:31.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:31.857" starttime="20200911 09:32:27.597"></status>
</kw>
<msg timestamp="20200911 09:32:31.857" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20200911 09:32:31.857" starttime="20200911 09:32:27.597"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:31.862" level="INFO">Running command 'ozone sh key list 94480-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:36.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:36.664" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20200911 09:32:36.664" starttime="20200911 09:32:31.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:36.666" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20200911 09:32:36.666" starttime="20200911 09:32:36.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:36.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:36.667" starttime="20200911 09:32:36.666"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:36.667" starttime="20200911 09:32:31.859"></status>
</kw>
<msg timestamp="20200911 09:32:36.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:36.667" starttime="20200911 09:32:31.858"></status>
</kw>
<msg timestamp="20200911 09:32:36.668" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20200911 09:32:36.668" starttime="20200911 09:32:31.858"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:32:36.668" starttime="20200911 09:32:36.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200911 09:32:36.669" starttime="20200911 09:32:36.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200911 09:32:36.670" starttime="20200911 09:32:36.669"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:32:36.670" critical="yes" starttime="20200911 09:32:27.557"></status>
</test>
<test id="s1-s1-s2-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:36.678" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:36.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:36.681" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:32:36.682" starttime="20200911 09:32:36.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:36.683" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:32:36.683" starttime="20200911 09:32:36.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:36.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:36.684" starttime="20200911 09:32:36.683"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:36.684" starttime="20200911 09:32:36.675"></status>
</kw>
<msg timestamp="20200911 09:32:36.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:36.684" starttime="20200911 09:32:36.674"></status>
</kw>
<msg timestamp="20200911 09:32:36.685" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:32:36.685" starttime="20200911 09:32:36.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:32:36.685" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:32:36.685" starttime="20200911 09:32:36.685"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:36.691" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:36.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:36.706" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:32:36.706" starttime="20200911 09:32:36.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:36.708" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:32:36.708" starttime="20200911 09:32:36.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:36.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:36.709" starttime="20200911 09:32:36.708"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:36.709" starttime="20200911 09:32:36.687"></status>
</kw>
<msg timestamp="20200911 09:32:36.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:36.709" starttime="20200911 09:32:36.687"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:36.710" starttime="20200911 09:32:36.686"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:36.710" starttime="20200911 09:32:36.686"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:36.710" starttime="20200911 09:32:36.673"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:36.710" starttime="20200911 09:32:36.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:36.716" level="INFO">Running command 'ozone sh key delete 94480-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:40.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:40.852" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:32:40.852" starttime="20200911 09:32:36.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:40.854" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:32:40.854" starttime="20200911 09:32:40.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:40.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:40.855" starttime="20200911 09:32:40.854"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:40.855" starttime="20200911 09:32:36.711"></status>
</kw>
<msg timestamp="20200911 09:32:40.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:40.855" starttime="20200911 09:32:36.711"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:40.856" starttime="20200911 09:32:36.710"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:40.861" level="INFO">Running command 'ozone sh key list 94480-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:45.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:45.395" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200911 09:32:45.396" starttime="20200911 09:32:40.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:45.397" level="INFO">key1</msg>
<status status="PASS" endtime="20200911 09:32:45.397" starttime="20200911 09:32:45.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:45.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:45.398" starttime="20200911 09:32:45.397"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:45.398" starttime="20200911 09:32:40.857"></status>
</kw>
<msg timestamp="20200911 09:32:45.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:45.398" starttime="20200911 09:32:40.857"></status>
</kw>
<msg timestamp="20200911 09:32:45.399" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20200911 09:32:45.399" starttime="20200911 09:32:40.856"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200911 09:32:45.399" starttime="20200911 09:32:45.399"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:32:45.400" critical="yes" starttime="20200911 09:32:36.671"></status>
</test>
<test id="s1-s1-s2-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:45.408" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:45.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:45.410" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:32:45.410" starttime="20200911 09:32:45.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:45.411" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:32:45.412" starttime="20200911 09:32:45.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:45.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:45.412" starttime="20200911 09:32:45.412"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:45.413" starttime="20200911 09:32:45.404"></status>
</kw>
<msg timestamp="20200911 09:32:45.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:45.413" starttime="20200911 09:32:45.403"></status>
</kw>
<msg timestamp="20200911 09:32:45.413" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:32:45.413" starttime="20200911 09:32:45.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:32:45.414" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:32:45.414" starttime="20200911 09:32:45.413"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:45.420" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:45.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:45.435" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:32:45.435" starttime="20200911 09:32:45.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:45.436" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:32:45.436" starttime="20200911 09:32:45.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:45.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:45.437" starttime="20200911 09:32:45.436"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:45.437" starttime="20200911 09:32:45.416"></status>
</kw>
<msg timestamp="20200911 09:32:45.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:45.438" starttime="20200911 09:32:45.415"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:45.438" starttime="20200911 09:32:45.415"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:45.438" starttime="20200911 09:32:45.414"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:45.438" starttime="20200911 09:32:45.402"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:45.438" starttime="20200911 09:32:45.402"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:45.445" level="INFO">Running command 'ozone sh bucket list 94480-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:49.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:49.661" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:32:49.661" starttime="20200911 09:32:45.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:49.662" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:31:49.712Z",
  "modificationTime" : "2020-09-11T09:31:49.712Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:31:24.761Z",
  "modificationTime" : "2020-09-11T09:31:24.761Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:31:57.830Z",
  "modificationTime" : "2020-09-11T09:31:57.830Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:31:17.242Z",
  "modificationTime" : "2020-09-11T09:31:17.242Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:31:20.924Z",
  "modificationTime" : "2020-09-11T09:31:20.924Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200911 09:32:49.662" starttime="20200911 09:32:49.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:49.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:49.663" starttime="20200911 09:32:49.662"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:49.663" starttime="20200911 09:32:45.440"></status>
</kw>
<msg timestamp="20200911 09:32:49.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:49.664" starttime="20200911 09:32:45.439"></status>
</kw>
<msg timestamp="20200911 09:32:49.664" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:32:49.664" starttime="20200911 09:32:45.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200911 09:32:49.665" starttime="20200911 09:32:49.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20200911 09:32:49.665" starttime="20200911 09:32:49.665"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:32:49.666" critical="yes" starttime="20200911 09:32:45.401"></status>
</test>
<test id="s1-s1-s2-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:49.674" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:49.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:49.676" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:32:49.676" starttime="20200911 09:32:49.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:49.677" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:32:49.677" starttime="20200911 09:32:49.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:49.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:49.678" starttime="20200911 09:32:49.677"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:49.678" starttime="20200911 09:32:49.670"></status>
</kw>
<msg timestamp="20200911 09:32:49.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:49.679" starttime="20200911 09:32:49.669"></status>
</kw>
<msg timestamp="20200911 09:32:49.679" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:32:49.679" starttime="20200911 09:32:49.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:32:49.680" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:32:49.680" starttime="20200911 09:32:49.679"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:49.685" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:49.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:49.701" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:32:49.701" starttime="20200911 09:32:49.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:49.703" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:32:49.703" starttime="20200911 09:32:49.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:49.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:49.703" starttime="20200911 09:32:49.703"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:49.704" starttime="20200911 09:32:49.682"></status>
</kw>
<msg timestamp="20200911 09:32:49.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:49.704" starttime="20200911 09:32:49.682"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:49.704" starttime="20200911 09:32:49.681"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:49.704" starttime="20200911 09:32:49.680"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:49.705" starttime="20200911 09:32:49.668"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:49.705" starttime="20200911 09:32:49.667"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:49.711" level="INFO">Running command 'ozone sh bucket info 94480-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:54.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:54.275" level="INFO">${output} = 94480-source bucket1</msg>
<status status="PASS" endtime="20200911 09:32:54.275" starttime="20200911 09:32:49.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:54.276" level="INFO">94480-source bucket1</msg>
<status status="PASS" endtime="20200911 09:32:54.277" starttime="20200911 09:32:54.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:54.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:54.278" starttime="20200911 09:32:54.277"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:54.278" starttime="20200911 09:32:49.707"></status>
</kw>
<msg timestamp="20200911 09:32:54.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:54.279" starttime="20200911 09:32:49.706"></status>
</kw>
<msg timestamp="20200911 09:32:54.279" level="INFO">${result} = 94480-source bucket1</msg>
<status status="PASS" endtime="20200911 09:32:54.279" starttime="20200911 09:32:49.705"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20200911 09:32:54.280" starttime="20200911 09:32:54.279"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:32:54.280" critical="yes" starttime="20200911 09:32:49.666"></status>
</test>
<test id="s1-s1-s2-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:54.290" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:54.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:54.294" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:32:54.294" starttime="20200911 09:32:54.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:54.295" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:32:54.295" starttime="20200911 09:32:54.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:54.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:54.296" starttime="20200911 09:32:54.295"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:54.296" starttime="20200911 09:32:54.285"></status>
</kw>
<msg timestamp="20200911 09:32:54.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:54.297" starttime="20200911 09:32:54.285"></status>
</kw>
<msg timestamp="20200911 09:32:54.297" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:32:54.297" starttime="20200911 09:32:54.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:32:54.298" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:32:54.298" starttime="20200911 09:32:54.297"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:54.306" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:54.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:54.325" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:32:54.326" starttime="20200911 09:32:54.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:54.327" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:32:54.327" starttime="20200911 09:32:54.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:54.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:54.328" starttime="20200911 09:32:54.327"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:54.328" starttime="20200911 09:32:54.300"></status>
</kw>
<msg timestamp="20200911 09:32:54.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:54.328" starttime="20200911 09:32:54.300"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:54.329" starttime="20200911 09:32:54.299"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:54.329" starttime="20200911 09:32:54.298"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:54.329" starttime="20200911 09:32:54.284"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:54.329" starttime="20200911 09:32:54.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:54.336" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 94480-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:32:58.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:32:58.498" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:32:58.498" starttime="20200911 09:32:54.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:32:58.499" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200911 09:32:58.500" starttime="20200911 09:32:58.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:32:58.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:32:58.500" starttime="20200911 09:32:58.500"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:58.501" starttime="20200911 09:32:54.331"></status>
</kw>
<msg timestamp="20200911 09:32:58.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:32:58.501" starttime="20200911 09:32:54.330"></status>
</kw>
<status status="PASS" endtime="20200911 09:32:58.501" starttime="20200911 09:32:54.329"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:32:58.507" level="INFO">Running command 'ozone sh bucket getacl 94480-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:02.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:02.696" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200911 09:33:02.696" starttime="20200911 09:32:58.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:02.698" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200911 09:33:02.698" starttime="20200911 09:33:02.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:02.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:02.699" starttime="20200911 09:33:02.698"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:02.699" starttime="20200911 09:32:58.504"></status>
</kw>
<msg timestamp="20200911 09:33:02.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:02.699" starttime="20200911 09:32:58.503"></status>
</kw>
<msg timestamp="20200911 09:33:02.699" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200911 09:33:02.699" starttime="20200911 09:32:58.502"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:33:02.700" starttime="20200911 09:33:02.700"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:02.700" starttime="20200911 09:32:58.502"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:02.708" level="INFO">Running command 'ozone sh bucket getacl 94480-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:06.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:06.971" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:06.972" starttime="20200911 09:33:02.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:06.973" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:06.973" starttime="20200911 09:33:06.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:06.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:06.974" starttime="20200911 09:33:06.973"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:06.974" starttime="20200911 09:33:02.703"></status>
</kw>
<msg timestamp="20200911 09:33:06.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:06.975" starttime="20200911 09:33:02.702"></status>
</kw>
<msg timestamp="20200911 09:33:06.975" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200911 09:33:06.975" starttime="20200911 09:33:02.701"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:33:06.976" starttime="20200911 09:33:06.975"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:06.976" starttime="20200911 09:33:02.701"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:06.982" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 94480-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:10.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:10.748" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:10.748" starttime="20200911 09:33:06.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:10.750" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200911 09:33:10.750" starttime="20200911 09:33:10.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:10.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:10.750" starttime="20200911 09:33:10.750"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:10.751" starttime="20200911 09:33:06.977"></status>
</kw>
<msg timestamp="20200911 09:33:10.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:10.751" starttime="20200911 09:33:06.977"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:10.751" starttime="20200911 09:33:06.976"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:10.756" level="INFO">Running command 'ozone sh bucket getacl 94480-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:14.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:14.978" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:14.978" starttime="20200911 09:33:10.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:14.979" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:14.979" starttime="20200911 09:33:14.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:14.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:14.980" starttime="20200911 09:33:14.980"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:14.981" starttime="20200911 09:33:10.754"></status>
</kw>
<msg timestamp="20200911 09:33:14.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:14.981" starttime="20200911 09:33:10.753"></status>
</kw>
<msg timestamp="20200911 09:33:14.981" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200911 09:33:14.981" starttime="20200911 09:33:10.752"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:33:14.982" starttime="20200911 09:33:14.981"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:14.982" starttime="20200911 09:33:10.751"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:14.989" level="INFO">Running command 'ozone sh bucket getacl 94480-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:19.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:19.090" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20200911 09:33:19.090" starttime="20200911 09:33:14.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:19.092" level="INFO">READ</msg>
<status status="PASS" endtime="20200911 09:33:19.092" starttime="20200911 09:33:19.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:19.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:19.092" starttime="20200911 09:33:19.092"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:19.093" starttime="20200911 09:33:14.984"></status>
</kw>
<msg timestamp="20200911 09:33:19.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:19.093" starttime="20200911 09:33:14.984"></status>
</kw>
<msg timestamp="20200911 09:33:19.093" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20200911 09:33:19.093" starttime="20200911 09:33:14.983"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:33:19.094" starttime="20200911 09:33:19.094"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:19.094" starttime="20200911 09:33:14.982"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:33:19.095" critical="yes" starttime="20200911 09:32:54.282"></status>
</test>
<test id="s1-s1-s2-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:19.104" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:19.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:19.106" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:33:19.106" starttime="20200911 09:33:19.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:19.107" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:33:19.107" starttime="20200911 09:33:19.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:19.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:19.108" starttime="20200911 09:33:19.107"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:19.108" starttime="20200911 09:33:19.099"></status>
</kw>
<msg timestamp="20200911 09:33:19.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:19.109" starttime="20200911 09:33:19.098"></status>
</kw>
<msg timestamp="20200911 09:33:19.109" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:33:19.109" starttime="20200911 09:33:19.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:33:19.110" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:33:19.110" starttime="20200911 09:33:19.109"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:19.115" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:19.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:19.134" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:19.134" starttime="20200911 09:33:19.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:19.136" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:19.136" starttime="20200911 09:33:19.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:19.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:19.137" starttime="20200911 09:33:19.136"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:19.137" starttime="20200911 09:33:19.111"></status>
</kw>
<msg timestamp="20200911 09:33:19.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:19.138" starttime="20200911 09:33:19.111"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:19.138" starttime="20200911 09:33:19.110"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:19.138" starttime="20200911 09:33:19.110"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:19.138" starttime="20200911 09:33:19.097"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:19.138" starttime="20200911 09:33:19.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:19.144" level="INFO">Running command 'ozone sh bucket link 94480-source/bucket2 94480-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:23.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:23.102" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:23.102" starttime="20200911 09:33:19.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:23.103" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:33:23.103" starttime="20200911 09:33:23.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:23.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:23.104" starttime="20200911 09:33:23.104"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:23.105" starttime="20200911 09:33:19.140"></status>
</kw>
<msg timestamp="20200911 09:33:23.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:23.105" starttime="20200911 09:33:19.139"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:23.105" starttime="20200911 09:33:19.138"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:23.109" level="INFO">Running command 'ozone sh bucket create 94480-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:27.039" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:33:27.039" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:27.039" starttime="20200911 09:33:23.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:27.040" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200911 09:33:27.040" starttime="20200911 09:33:27.039"></status>
</kw>
<msg timestamp="20200911 09:33:27.041" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:27.041" starttime="20200911 09:33:23.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200911 09:33:27.041" starttime="20200911 09:33:27.041"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:27.047" level="INFO">Running command 'ozone sh bucket create 94480-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:30.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:30.703" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:30.703" starttime="20200911 09:33:27.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:30.704" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:33:30.704" starttime="20200911 09:33:30.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:30.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:30.705" starttime="20200911 09:33:30.705"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:30.706" starttime="20200911 09:33:27.043"></status>
</kw>
<msg timestamp="20200911 09:33:30.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:30.706" starttime="20200911 09:33:27.042"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:30.706" starttime="20200911 09:33:27.042"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:30.709" level="INFO">Running command 'ozone sh bucket link 94480-source/bucket1 94480-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:34.945" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:33:34.945" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:34.945" starttime="20200911 09:33:30.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:34.947" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200911 09:33:34.947" starttime="20200911 09:33:34.946"></status>
</kw>
<msg timestamp="20200911 09:33:34.947" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:34.947" starttime="20200911 09:33:30.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200911 09:33:34.948" starttime="20200911 09:33:34.948"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:33:34.948" critical="yes" starttime="20200911 09:33:19.095"></status>
</test>
<test id="s1-s1-s2-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:34.956" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:34.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:34.958" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:33:34.958" starttime="20200911 09:33:34.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:34.959" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:33:34.960" starttime="20200911 09:33:34.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:34.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:34.961" starttime="20200911 09:33:34.960"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:34.961" starttime="20200911 09:33:34.952"></status>
</kw>
<msg timestamp="20200911 09:33:34.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:34.961" starttime="20200911 09:33:34.952"></status>
</kw>
<msg timestamp="20200911 09:33:34.962" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:33:34.962" starttime="20200911 09:33:34.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:33:34.962" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:33:34.962" starttime="20200911 09:33:34.962"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:34.968" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:34.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:34.993" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:34.993" starttime="20200911 09:33:34.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:34.995" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:34.995" starttime="20200911 09:33:34.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:34.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:34.998" starttime="20200911 09:33:34.996"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:34.998" starttime="20200911 09:33:34.964"></status>
</kw>
<msg timestamp="20200911 09:33:34.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:34.998" starttime="20200911 09:33:34.964"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:34.999" starttime="20200911 09:33:34.963"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:34.999" starttime="20200911 09:33:34.963"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:34.999" starttime="20200911 09:33:34.951"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:34.999" starttime="20200911 09:33:34.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:35.013" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:35.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:35.030" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:35.030" starttime="20200911 09:33:35.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:35.032" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:35.032" starttime="20200911 09:33:35.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:35.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:35.033" starttime="20200911 09:33:35.032"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:35.033" starttime="20200911 09:33:35.002"></status>
</kw>
<msg timestamp="20200911 09:33:35.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:35.034" starttime="20200911 09:33:35.002"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:35.034" starttime="20200911 09:33:35.001"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:35.042" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:35.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:35.044" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:33:35.044" starttime="20200911 09:33:35.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:35.045" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:33:35.046" starttime="20200911 09:33:35.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:35.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:35.046" starttime="20200911 09:33:35.046"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:35.047" starttime="20200911 09:33:35.037"></status>
</kw>
<msg timestamp="20200911 09:33:35.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:35.047" starttime="20200911 09:33:35.037"></status>
</kw>
<msg timestamp="20200911 09:33:35.047" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:33:35.047" starttime="20200911 09:33:35.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:33:35.048" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:33:35.048" starttime="20200911 09:33:35.047"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:35.053" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:35.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:35.070" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:35.071" starttime="20200911 09:33:35.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:35.072" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:35.072" starttime="20200911 09:33:35.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:35.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:35.073" starttime="20200911 09:33:35.072"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:35.073" starttime="20200911 09:33:35.050"></status>
</kw>
<msg timestamp="20200911 09:33:35.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:35.074" starttime="20200911 09:33:35.050"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:35.074" starttime="20200911 09:33:35.049"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:35.074" starttime="20200911 09:33:35.048"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:35.074" starttime="20200911 09:33:35.035"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:35.074" starttime="20200911 09:33:35.034"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:35.078" level="INFO">Running command 'ozone sh key list 94480-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:39.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:39.401" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:39.401" starttime="20200911 09:33:35.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:39.402" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "94480-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-09-11T09:31:03.934Z",
  "modificationTime" : "2020-09-11T09:31:08.624Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20200911 09:33:39.403" starttime="20200911 09:33:39.402"></status>
</kw>
<msg timestamp="20200911 09:33:39.403" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:39.403" starttime="20200911 09:33:35.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200911 09:33:39.404" starttime="20200911 09:33:39.403"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.404" starttime="20200911 09:33:35.000"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.404" starttime="20200911 09:33:34.999"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:33:39.404" critical="yes" starttime="20200911 09:33:34.949"></status>
</test>
<test id="s1-s1-s2-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:39.414" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:39.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:39.415" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:33:39.415" starttime="20200911 09:33:39.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:39.416" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:33:39.416" starttime="20200911 09:33:39.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:39.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:39.417" starttime="20200911 09:33:39.417"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.418" starttime="20200911 09:33:39.409"></status>
</kw>
<msg timestamp="20200911 09:33:39.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:39.418" starttime="20200911 09:33:39.408"></status>
</kw>
<msg timestamp="20200911 09:33:39.418" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:33:39.418" starttime="20200911 09:33:39.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:33:39.419" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:33:39.419" starttime="20200911 09:33:39.418"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:39.424" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:39.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:39.447" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:39.447" starttime="20200911 09:33:39.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:39.448" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:39.448" starttime="20200911 09:33:39.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:39.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:39.449" starttime="20200911 09:33:39.448"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.449" starttime="20200911 09:33:39.421"></status>
</kw>
<msg timestamp="20200911 09:33:39.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:39.450" starttime="20200911 09:33:39.421"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.450" starttime="20200911 09:33:39.420"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.450" starttime="20200911 09:33:39.419"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.450" starttime="20200911 09:33:39.407"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.450" starttime="20200911 09:33:39.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:39.456" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:39.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:39.460" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:39.460" starttime="20200911 09:33:39.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:39.461" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:39.461" starttime="20200911 09:33:39.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:39.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:39.462" starttime="20200911 09:33:39.461"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.462" starttime="20200911 09:33:39.453"></status>
</kw>
<msg timestamp="20200911 09:33:39.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:39.463" starttime="20200911 09:33:39.452"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.463" starttime="20200911 09:33:39.452"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:39.469" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:39.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:39.471" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:33:39.471" starttime="20200911 09:33:39.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:39.473" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:33:39.473" starttime="20200911 09:33:39.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:39.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:39.474" starttime="20200911 09:33:39.473"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.474" starttime="20200911 09:33:39.465"></status>
</kw>
<msg timestamp="20200911 09:33:39.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:39.474" starttime="20200911 09:33:39.465"></status>
</kw>
<msg timestamp="20200911 09:33:39.474" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:33:39.474" starttime="20200911 09:33:39.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:33:39.475" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:33:39.475" starttime="20200911 09:33:39.475"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:39.480" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:39.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:39.499" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:39.499" starttime="20200911 09:33:39.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:39.500" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:39.500" starttime="20200911 09:33:39.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:39.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:39.501" starttime="20200911 09:33:39.500"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.501" starttime="20200911 09:33:39.477"></status>
</kw>
<msg timestamp="20200911 09:33:39.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:39.502" starttime="20200911 09:33:39.477"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.502" starttime="20200911 09:33:39.476"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.502" starttime="20200911 09:33:39.475"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.502" starttime="20200911 09:33:39.464"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:39.502" starttime="20200911 09:33:39.463"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:39.506" level="INFO">Running command 'ozone sh key list 94480-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:43.499" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:33:43.499" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:43.499" starttime="20200911 09:33:39.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:43.500" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20200911 09:33:43.500" starttime="20200911 09:33:43.499"></status>
</kw>
<msg timestamp="20200911 09:33:43.501" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:43.501" starttime="20200911 09:33:39.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200911 09:33:43.501" starttime="20200911 09:33:43.501"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.501" starttime="20200911 09:33:39.451"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.502" starttime="20200911 09:33:39.451"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:33:43.502" critical="yes" starttime="20200911 09:33:39.405"></status>
</test>
<test id="s1-s1-s2-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:43.509" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:43.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:43.512" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:33:43.512" starttime="20200911 09:33:43.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:43.513" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:33:43.513" starttime="20200911 09:33:43.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:43.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:43.514" starttime="20200911 09:33:43.513"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.514" starttime="20200911 09:33:43.506"></status>
</kw>
<msg timestamp="20200911 09:33:43.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:43.515" starttime="20200911 09:33:43.505"></status>
</kw>
<msg timestamp="20200911 09:33:43.515" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:33:43.515" starttime="20200911 09:33:43.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:33:43.516" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:33:43.516" starttime="20200911 09:33:43.515"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:43.522" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:43.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:43.539" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:43.539" starttime="20200911 09:33:43.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:43.540" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:43.540" starttime="20200911 09:33:43.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:43.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:43.541" starttime="20200911 09:33:43.541"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.542" starttime="20200911 09:33:43.517"></status>
</kw>
<msg timestamp="20200911 09:33:43.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:43.542" starttime="20200911 09:33:43.517"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.542" starttime="20200911 09:33:43.516"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.542" starttime="20200911 09:33:43.516"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.543" starttime="20200911 09:33:43.504"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.543" starttime="20200911 09:33:43.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:43.548" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:43.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:43.553" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:43.553" starttime="20200911 09:33:43.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:43.554" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:43.554" starttime="20200911 09:33:43.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:43.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:43.555" starttime="20200911 09:33:43.555"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.556" starttime="20200911 09:33:43.545"></status>
</kw>
<msg timestamp="20200911 09:33:43.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:43.556" starttime="20200911 09:33:43.545"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.556" starttime="20200911 09:33:43.544"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:43.563" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:43.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:43.564" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:33:43.564" starttime="20200911 09:33:43.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:43.565" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:33:43.566" starttime="20200911 09:33:43.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:43.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:43.566" starttime="20200911 09:33:43.566"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.567" starttime="20200911 09:33:43.558"></status>
</kw>
<msg timestamp="20200911 09:33:43.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:43.567" starttime="20200911 09:33:43.558"></status>
</kw>
<msg timestamp="20200911 09:33:43.567" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:33:43.567" starttime="20200911 09:33:43.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:33:43.568" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:33:43.568" starttime="20200911 09:33:43.568"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:43.575" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:43.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:43.590" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:43.590" starttime="20200911 09:33:43.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:43.591" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:43.592" starttime="20200911 09:33:43.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:43.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:43.592" starttime="20200911 09:33:43.592"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.593" starttime="20200911 09:33:43.570"></status>
</kw>
<msg timestamp="20200911 09:33:43.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:43.593" starttime="20200911 09:33:43.570"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.593" starttime="20200911 09:33:43.569"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.593" starttime="20200911 09:33:43.569"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.594" starttime="20200911 09:33:43.557"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:43.594" starttime="20200911 09:33:43.556"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:43.600" level="INFO">Running command 'ozone sh bucket info 94480-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:47.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:47.820" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:47.820" starttime="20200911 09:33:43.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:47.822" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:31:24.761Z",
  "modificationTime" : "2020-09-11T09:31:24.761Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "unreadable-bucket"
}</msg>
<status status="PASS" endtime="20200911 09:33:47.822" starttime="20200911 09:33:47.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:47.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:47.823" starttime="20200911 09:33:47.822"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:47.823" starttime="20200911 09:33:43.595"></status>
</kw>
<msg timestamp="20200911 09:33:47.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:47.823" starttime="20200911 09:33:43.594"></status>
</kw>
<msg timestamp="20200911 09:33:47.824" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:47.824" starttime="20200911 09:33:43.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200911 09:33:47.824" starttime="20200911 09:33:47.824"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200911 09:33:47.825" starttime="20200911 09:33:47.824"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:47.829" level="INFO">Running command 'ozone sh key list 94480-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:51.561" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:33:51.561" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:51.561" starttime="20200911 09:33:47.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:51.562" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20200911 09:33:51.562" starttime="20200911 09:33:51.561"></status>
</kw>
<msg timestamp="20200911 09:33:51.563" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:51.563" starttime="20200911 09:33:47.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200911 09:33:51.563" starttime="20200911 09:33:51.563"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:51.564" starttime="20200911 09:33:43.544"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:51.564" starttime="20200911 09:33:43.543"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:33:51.564" critical="yes" starttime="20200911 09:33:43.503"></status>
</test>
<test id="s1-s1-s2-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:51.572" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:51.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:51.575" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:33:51.575" starttime="20200911 09:33:51.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:51.576" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:33:51.576" starttime="20200911 09:33:51.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:51.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:51.577" starttime="20200911 09:33:51.576"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:51.577" starttime="20200911 09:33:51.568"></status>
</kw>
<msg timestamp="20200911 09:33:51.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:51.578" starttime="20200911 09:33:51.568"></status>
</kw>
<msg timestamp="20200911 09:33:51.578" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:33:51.578" starttime="20200911 09:33:51.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:33:51.579" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:33:51.579" starttime="20200911 09:33:51.578"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:51.584" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:51.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:51.605" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:33:51.605" starttime="20200911 09:33:51.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:51.606" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:33:51.606" starttime="20200911 09:33:51.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:51.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:51.607" starttime="20200911 09:33:51.607"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:51.608" starttime="20200911 09:33:51.581"></status>
</kw>
<msg timestamp="20200911 09:33:51.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:51.608" starttime="20200911 09:33:51.580"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:51.608" starttime="20200911 09:33:51.579"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:51.608" starttime="20200911 09:33:51.579"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:51.608" starttime="20200911 09:33:51.566"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:51.609" starttime="20200911 09:33:51.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:51.613" level="INFO">Running command 'ozone sh bucket link 94480-target/loop1 94480-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:55.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:55.249" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:55.249" starttime="20200911 09:33:51.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:55.251" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:33:55.251" starttime="20200911 09:33:55.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:55.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:55.252" starttime="20200911 09:33:55.252"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:55.253" starttime="20200911 09:33:51.610"></status>
</kw>
<msg timestamp="20200911 09:33:55.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:55.253" starttime="20200911 09:33:51.610"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:55.253" starttime="20200911 09:33:51.609"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:55.258" level="INFO">Running command 'ozone sh bucket link 94480-target/loop2 94480-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:33:59.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:33:59.171" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:33:59.171" starttime="20200911 09:33:55.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:33:59.173" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:33:59.173" starttime="20200911 09:33:59.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:33:59.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:33:59.174" starttime="20200911 09:33:59.173"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:59.174" starttime="20200911 09:33:55.255"></status>
</kw>
<msg timestamp="20200911 09:33:59.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:33:59.174" starttime="20200911 09:33:55.254"></status>
</kw>
<status status="PASS" endtime="20200911 09:33:59.174" starttime="20200911 09:33:55.253"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:33:59.180" level="INFO">Running command 'ozone sh bucket link 94480-target/loop3 94480-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:03.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:03.139" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:03.139" starttime="20200911 09:33:59.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:03.140" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:34:03.140" starttime="20200911 09:34:03.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:03.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:03.141" starttime="20200911 09:34:03.141"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:03.142" starttime="20200911 09:33:59.176"></status>
</kw>
<msg timestamp="20200911 09:34:03.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:03.142" starttime="20200911 09:33:59.175"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:03.142" starttime="20200911 09:33:59.175"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:03.146" level="INFO">Running command 'ozone sh key list 94480-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:07.061" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:34:07.061" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:07.061" starttime="20200911 09:34:03.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:07.063" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20200911 09:34:07.064" starttime="20200911 09:34:07.062"></status>
</kw>
<msg timestamp="20200911 09:34:07.064" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:07.064" starttime="20200911 09:34:03.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20200911 09:34:07.065" starttime="20200911 09:34:07.065"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:34:07.065" critical="yes" starttime="20200911 09:33:51.565"></status>
</test>
<test id="s1-s1-s2-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:07.079" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:07.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:07.082" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:34:07.082" starttime="20200911 09:34:07.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:07.083" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:34:07.083" starttime="20200911 09:34:07.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:07.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:07.085" starttime="20200911 09:34:07.084"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:07.085" starttime="20200911 09:34:07.075"></status>
</kw>
<msg timestamp="20200911 09:34:07.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:07.086" starttime="20200911 09:34:07.074"></status>
</kw>
<msg timestamp="20200911 09:34:07.086" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:34:07.086" starttime="20200911 09:34:07.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:34:07.087" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:34:07.087" starttime="20200911 09:34:07.086"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:07.092" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:07.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:07.107" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:34:07.107" starttime="20200911 09:34:07.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:07.109" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:34:07.109" starttime="20200911 09:34:07.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:07.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:07.110" starttime="20200911 09:34:07.109"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:07.111" starttime="20200911 09:34:07.088"></status>
</kw>
<msg timestamp="20200911 09:34:07.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:07.111" starttime="20200911 09:34:07.088"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:07.111" starttime="20200911 09:34:07.087"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:07.111" starttime="20200911 09:34:07.087"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:07.111" starttime="20200911 09:34:07.073"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:07.112" starttime="20200911 09:34:07.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:07.116" level="INFO">Running command 'ozone sh bucket link 94480-source/bucket1 94480-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:10.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:10.697" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:10.697" starttime="20200911 09:34:07.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:10.698" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:34:10.698" starttime="20200911 09:34:10.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:10.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:10.699" starttime="20200911 09:34:10.699"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:10.700" starttime="20200911 09:34:07.113"></status>
</kw>
<msg timestamp="20200911 09:34:10.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:10.700" starttime="20200911 09:34:07.113"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:10.700" starttime="20200911 09:34:07.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:10.704" level="INFO">Running command 'ozone sh key put 94480-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:16.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:16.851" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:16.852" starttime="20200911 09:34:10.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:16.853" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:34:16.853" starttime="20200911 09:34:16.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:16.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:16.854" starttime="20200911 09:34:16.853"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:16.854" starttime="20200911 09:34:10.701"></status>
</kw>
<msg timestamp="20200911 09:34:16.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:16.854" starttime="20200911 09:34:10.701"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:16.855" starttime="20200911 09:34:10.700"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200911 09:34:16.857" level="INFO">${postfix} = 91493</msg>
<status status="PASS" endtime="20200911 09:34:16.857" starttime="20200911 09:34:16.857"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200911 09:34:16.858" level="INFO">${tmpfile} = /tmp/tempkey-91493</msg>
<status status="PASS" endtime="20200911 09:34:16.858" starttime="20200911 09:34:16.857"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:16.862" level="INFO">Running command 'ozone sh key get -f 94480-target/link1/key3 /tmp/tempkey-91493 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:22.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:22.900" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:22.900" starttime="20200911 09:34:16.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:22.901" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:34:22.901" starttime="20200911 09:34:22.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:22.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:22.902" starttime="20200911 09:34:22.901"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:22.902" starttime="20200911 09:34:16.859"></status>
</kw>
<msg timestamp="20200911 09:34:22.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:22.903" starttime="20200911 09:34:16.859"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:22.903" starttime="20200911 09:34:16.858"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200911 09:34:22.906" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-91493 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:22.909" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200911 09:34:22.909" starttime="20200911 09:34:22.903"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:22.914" level="INFO">Running command 'rm -f /tmp/tempkey-91493 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:22.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:22.917" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:34:22.917" starttime="20200911 09:34:22.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:22.918" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:34:22.918" starttime="20200911 09:34:22.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:22.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:22.919" starttime="20200911 09:34:22.918"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:22.919" starttime="20200911 09:34:22.911"></status>
</kw>
<msg timestamp="20200911 09:34:22.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:22.919" starttime="20200911 09:34:22.911"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:22.919" starttime="20200911 09:34:22.909"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 09:34:22.920" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200911 09:34:22.920" starttime="20200911 09:34:22.920"></status>
</kw>
<msg timestamp="20200911 09:34:22.921" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200911 09:34:22.921" starttime="20200911 09:34:16.856"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:34:22.921" starttime="20200911 09:34:22.921"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:22.922" starttime="20200911 09:34:16.855"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:34:22.922" critical="yes" starttime="20200911 09:34:07.066"></status>
</test>
<test id="s1-s1-s2-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:22.929" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:22.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:22.931" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:34:22.931" starttime="20200911 09:34:22.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:22.932" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:34:22.932" starttime="20200911 09:34:22.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:22.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:22.933" starttime="20200911 09:34:22.932"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:22.933" starttime="20200911 09:34:22.925"></status>
</kw>
<msg timestamp="20200911 09:34:22.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:22.933" starttime="20200911 09:34:22.925"></status>
</kw>
<msg timestamp="20200911 09:34:22.934" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:34:22.934" starttime="20200911 09:34:22.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:34:22.934" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:34:22.934" starttime="20200911 09:34:22.934"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:22.940" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:22.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:22.958" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:34:22.958" starttime="20200911 09:34:22.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:22.959" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:34:22.959" starttime="20200911 09:34:22.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:22.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:22.960" starttime="20200911 09:34:22.959"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:22.960" starttime="20200911 09:34:22.936"></status>
</kw>
<msg timestamp="20200911 09:34:22.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:22.961" starttime="20200911 09:34:22.936"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:22.961" starttime="20200911 09:34:22.935"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:22.961" starttime="20200911 09:34:22.935"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:22.961" starttime="20200911 09:34:22.924"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:22.961" starttime="20200911 09:34:22.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:22.966" level="INFO">Running command 'ozone sh bucket delete 94480-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:26.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:26.809" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:26.809" starttime="20200911 09:34:22.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:26.810" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:34:26.810" starttime="20200911 09:34:26.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:26.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:26.811" starttime="20200911 09:34:26.811"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:26.812" starttime="20200911 09:34:22.963"></status>
</kw>
<msg timestamp="20200911 09:34:26.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:26.812" starttime="20200911 09:34:22.962"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:26.812" starttime="20200911 09:34:22.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:26.818" level="INFO">Running command 'ozone sh bucket list 94480-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:30.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:30.899" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:30.899" starttime="20200911 09:34:26.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:30.900" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:33:30.637Z",
  "modificationTime" : "2020-09-11T09:33:30.637Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:31:49.712Z",
  "modificationTime" : "2020-09-11T09:31:49.712Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:31:24.761Z",
  "modificationTime" : "2020-09-11T09:31:24.761Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:33:23.026Z",
  "modificationTime" : "2020-09-11T09:33:23.026Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "bucket2"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:34:10.510Z",
  "modificationTime" : "2020-09-11T09:34:10.510Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:34:03.008Z",
  "modificationTime" : "2020-09-11T09:34:03.008Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-target",
  "sourceBucket" : "loop3"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:33:55.033Z",
  "modificationTime" : "2020-09-11T09:33:55.033Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-target",
  "sourceBucket" : "loop1"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:33:59.002Z",
  "modificationTime" : "2020-09-11T09:33:59.002Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-target",
  "sourceBucket" : "loop2"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:31:17.242Z",
  "modificationTime" : "2020-09-11T09:31:17.242Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "94480-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-11T09:31:20.924Z",
  "modificationTime" : "2020-09-11T09:31:20.924Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94480-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200911 09:34:30.900" starttime="20200911 09:34:30.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:30.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:30.901" starttime="20200911 09:34:30.901"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:30.902" starttime="20200911 09:34:26.814"></status>
</kw>
<msg timestamp="20200911 09:34:30.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:30.902" starttime="20200911 09:34:26.813"></status>
</kw>
<msg timestamp="20200911 09:34:30.902" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:30.902" starttime="20200911 09:34:26.813"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200911 09:34:30.903" starttime="20200911 09:34:30.903"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:30.909" level="INFO">Running command 'ozone sh key list 94480-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:35.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:35.246" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20200911 09:34:35.246" starttime="20200911 09:34:30.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:35.247" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20200911 09:34:35.247" starttime="20200911 09:34:35.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:35.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:35.248" starttime="20200911 09:34:35.247"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:35.248" starttime="20200911 09:34:30.904"></status>
</kw>
<msg timestamp="20200911 09:34:35.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:35.248" starttime="20200911 09:34:30.904"></status>
</kw>
<msg timestamp="20200911 09:34:35.249" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20200911 09:34:35.249" starttime="20200911 09:34:30.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200911 09:34:35.250" starttime="20200911 09:34:35.249"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:34:35.250" critical="yes" starttime="20200911 09:34:22.923"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20200911 09:34:35.254" starttime="20200911 09:30:47.794"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s3" name="Ozone-Shell-Single">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 09:34:35.284" level="INFO">${random} = 44344</msg>
<status status="PASS" endtime="20200911 09:34:35.284" starttime="20200911 09:34:35.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200911 09:34:35.285" level="INFO">${prefix} = 44344</msg>
<status status="PASS" endtime="20200911 09:34:35.285" starttime="20200911 09:34:35.284"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:35.285" starttime="20200911 09:34:35.283"></status>
</kw>
<test id="s1-s1-s3-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:35.291" level="INFO">Running command 'ozone sh volume info /44344-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:39.049" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:34:39.049" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:39.049" starttime="20200911 09:34:35.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:39.051" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 44344-rpcbasic is not found</msg>
<status status="PASS" endtime="20200911 09:34:39.051" starttime="20200911 09:34:39.050"></status>
</kw>
<msg timestamp="20200911 09:34:39.051" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:39.051" starttime="20200911 09:34:35.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200911 09:34:39.052" starttime="20200911 09:34:39.052"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:39.057" level="INFO">Running command 'ozone sh volume create /44344-rpcbasic --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:43.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:43.101" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:43.101" starttime="20200911 09:34:39.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:43.102" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:34:43.102" starttime="20200911 09:34:43.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:43.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:43.103" starttime="20200911 09:34:43.102"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:43.103" starttime="20200911 09:34:39.054"></status>
</kw>
<msg timestamp="20200911 09:34:43.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:43.104" starttime="20200911 09:34:39.053"></status>
</kw>
<msg timestamp="20200911 09:34:43.104" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:43.104" starttime="20200911 09:34:39.052"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200911 09:34:43.105" starttime="20200911 09:34:43.104"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:43.110" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="44344-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:47.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:47.617" level="INFO">${output} = {
  "metadata": {},
  "name": "44344-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200911 09:34:47.617" starttime="20200911 09:34:43.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:47.618" level="INFO">{
  "metadata": {},
  "name": "44344-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T09:34:43.018Z",
  "modificationTime": "2020-09-11T09:34:43.018Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200911 09:34:47.619" starttime="20200911 09:34:47.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:47.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:47.619" starttime="20200911 09:34:47.619"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:47.620" starttime="20200911 09:34:43.106"></status>
</kw>
<msg timestamp="20200911 09:34:47.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:47.620" starttime="20200911 09:34:43.106"></status>
</kw>
<msg timestamp="20200911 09:34:47.620" level="INFO">${result} = {
  "metadata": {},
  "name": "44344-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200911 09:34:47.620" starttime="20200911 09:34:43.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:34:47.621" starttime="20200911 09:34:47.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:47.626" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="44344-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:51.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:51.902" level="INFO">${output} = {
  "metadata": {},
  "name": "44344-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200911 09:34:51.902" starttime="20200911 09:34:47.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:51.904" level="INFO">{
  "metadata": {},
  "name": "44344-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T09:34:43.018Z",
  "modificationTime": "2020-09-11T09:34:43.018Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200911 09:34:51.904" starttime="20200911 09:34:51.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:51.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:51.904" starttime="20200911 09:34:51.904"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:51.905" starttime="20200911 09:34:47.622"></status>
</kw>
<msg timestamp="20200911 09:34:51.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:51.905" starttime="20200911 09:34:47.622"></status>
</kw>
<msg timestamp="20200911 09:34:51.905" level="INFO">${result} = {
  "metadata": {},
  "name": "44344-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200911 09:34:51.905" starttime="20200911 09:34:47.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:34:51.906" starttime="20200911 09:34:51.906"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:51.912" level="INFO">Running command 'ozone sh volume update /44344-rpcbasic --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:34:56.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:34:56.133" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:34:56.133" starttime="20200911 09:34:51.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:34:56.134" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "44344-rpcbasic",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-11T09:34:43.018Z",
  "modificationTime" : "2020-09-11T09:34:55.669Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20200911 09:34:56.134" starttime="20200911 09:34:56.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:34:56.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:34:56.135" starttime="20200911 09:34:56.134"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:56.135" starttime="20200911 09:34:51.907"></status>
</kw>
<msg timestamp="20200911 09:34:56.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:34:56.135" starttime="20200911 09:34:51.907"></status>
</kw>
<status status="PASS" endtime="20200911 09:34:56.136" starttime="20200911 09:34:51.906"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:34:56.141" level="INFO">Running command 'ozone sh volume info /44344-rpcbasic | jq -r '. | select(.name=="44344-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:00.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:00.460" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200911 09:35:00.460" starttime="20200911 09:34:56.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:00.462" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200911 09:35:00.462" starttime="20200911 09:35:00.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:00.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:00.463" starttime="20200911 09:35:00.462"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:00.463" starttime="20200911 09:34:56.137"></status>
</kw>
<msg timestamp="20200911 09:35:00.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:00.464" starttime="20200911 09:34:56.137"></status>
</kw>
<msg timestamp="20200911 09:35:00.464" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200911 09:35:00.464" starttime="20200911 09:34:56.136"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200911 09:35:00.465" starttime="20200911 09:35:00.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:00.472" level="INFO">Running command 'ozone sh bucket create /44344-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:04.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:04.672" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:35:04.672" starttime="20200911 09:35:00.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:04.674" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:35:04.674" starttime="20200911 09:35:04.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:04.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:04.675" starttime="20200911 09:35:04.674"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:04.675" starttime="20200911 09:35:00.466"></status>
</kw>
<msg timestamp="20200911 09:35:04.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:04.675" starttime="20200911 09:35:00.466"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:04.675" starttime="20200911 09:35:00.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:04.681" level="INFO">Running command 'ozone sh bucket info /44344-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:08.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:08.931" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200911 09:35:08.931" starttime="20200911 09:35:04.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:08.932" level="INFO">DISK</msg>
<status status="PASS" endtime="20200911 09:35:08.932" starttime="20200911 09:35:08.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:08.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:08.933" starttime="20200911 09:35:08.932"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:08.933" starttime="20200911 09:35:04.677"></status>
</kw>
<msg timestamp="20200911 09:35:08.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:08.934" starttime="20200911 09:35:04.677"></status>
</kw>
<msg timestamp="20200911 09:35:08.934" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200911 09:35:08.934" starttime="20200911 09:35:04.676"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200911 09:35:08.935" starttime="20200911 09:35:08.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:08.939" level="INFO">Running command 'ozone sh bucket list /44344-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:13.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:13.137" level="INFO">${output} = 44344-rpcbasic</msg>
<status status="PASS" endtime="20200911 09:35:13.137" starttime="20200911 09:35:08.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:13.138" level="INFO">44344-rpcbasic</msg>
<status status="PASS" endtime="20200911 09:35:13.139" starttime="20200911 09:35:13.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:13.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:13.139" starttime="20200911 09:35:13.139"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:13.140" starttime="20200911 09:35:08.936"></status>
</kw>
<msg timestamp="20200911 09:35:13.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:13.140" starttime="20200911 09:35:08.936"></status>
</kw>
<msg timestamp="20200911 09:35:13.140" level="INFO">${result} = 44344-rpcbasic</msg>
<status status="PASS" endtime="20200911 09:35:13.140" starttime="20200911 09:35:08.935"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:35:13.141" starttime="20200911 09:35:13.141"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:13.146" level="INFO">Running command 'ozone sh key put /44344-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:19.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:19.725" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:35:19.725" starttime="20200911 09:35:13.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:19.726" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:35:19.726" starttime="20200911 09:35:19.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:19.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:19.728" starttime="20200911 09:35:19.726"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:19.728" starttime="20200911 09:35:13.143"></status>
</kw>
<msg timestamp="20200911 09:35:19.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:19.728" starttime="20200911 09:35:13.143"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:19.728" starttime="20200911 09:35:13.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:19.732" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:19.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:19.735" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:35:19.735" starttime="20200911 09:35:19.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:19.736" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:35:19.737" starttime="20200911 09:35:19.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:19.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:19.737" starttime="20200911 09:35:19.737"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:19.738" starttime="20200911 09:35:19.729"></status>
</kw>
<msg timestamp="20200911 09:35:19.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:19.738" starttime="20200911 09:35:19.729"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:19.738" starttime="20200911 09:35:19.729"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:19.743" level="INFO">Running command 'ozone sh key get /44344-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:25.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:25.706" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:35:25.707" starttime="20200911 09:35:19.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:25.708" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:35:25.709" starttime="20200911 09:35:25.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:25.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:25.713" starttime="20200911 09:35:25.709"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:25.713" starttime="20200911 09:35:19.740"></status>
</kw>
<msg timestamp="20200911 09:35:25.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:25.717" starttime="20200911 09:35:19.739"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:25.718" starttime="20200911 09:35:19.738"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:25.725" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:25.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:25.728" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:35:25.728" starttime="20200911 09:35:25.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:25.729" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:35:25.729" starttime="20200911 09:35:25.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:25.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:25.730" starttime="20200911 09:35:25.729"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:25.730" starttime="20200911 09:35:25.719"></status>
</kw>
<msg timestamp="20200911 09:35:25.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:25.731" starttime="20200911 09:35:25.719"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:25.731" starttime="20200911 09:35:25.718"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:25.735" level="INFO">Running command 'ozone sh key put -t RATIS /44344-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:32.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:32.054" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:35:32.055" starttime="20200911 09:35:25.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:32.056" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:35:32.057" starttime="20200911 09:35:32.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:32.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:32.057" starttime="20200911 09:35:32.057"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:32.058" starttime="20200911 09:35:25.732"></status>
</kw>
<msg timestamp="20200911 09:35:32.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:32.058" starttime="20200911 09:35:25.732"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:32.058" starttime="20200911 09:35:25.731"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:32.062" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:32.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:32.065" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:35:32.065" starttime="20200911 09:35:32.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:32.066" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:35:32.066" starttime="20200911 09:35:32.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:32.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:32.067" starttime="20200911 09:35:32.066"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:32.067" starttime="20200911 09:35:32.059"></status>
</kw>
<msg timestamp="20200911 09:35:32.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:32.068" starttime="20200911 09:35:32.059"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:32.068" starttime="20200911 09:35:32.058"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:32.072" level="INFO">Running command 'ozone sh key get /44344-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:37.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:37.899" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:35:37.899" starttime="20200911 09:35:32.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:37.901" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:35:37.901" starttime="20200911 09:35:37.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:37.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:37.901" starttime="20200911 09:35:37.901"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:37.902" starttime="20200911 09:35:32.069"></status>
</kw>
<msg timestamp="20200911 09:35:37.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:37.902" starttime="20200911 09:35:32.069"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:37.902" starttime="20200911 09:35:32.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:37.907" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:37.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:37.910" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:35:37.910" starttime="20200911 09:35:37.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:37.911" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:35:37.912" starttime="20200911 09:35:37.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:37.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:37.913" starttime="20200911 09:35:37.912"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:37.913" starttime="20200911 09:35:37.903"></status>
</kw>
<msg timestamp="20200911 09:35:37.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:37.913" starttime="20200911 09:35:37.903"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:37.914" starttime="20200911 09:35:37.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:37.918" level="INFO">Running command 'ozone sh key info /44344-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:42.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:42.253" level="INFO">${output} = {
  "volumeName": "44344-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:35:29.721Z",
  "modificationTime": "2020-09-11T09:35:31.654Z",
...</msg>
<status status="PASS" endtime="20200911 09:35:42.253" starttime="20200911 09:35:37.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:42.255" level="INFO">{
  "volumeName": "44344-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:35:29.721Z",
  "modificationTime": "2020-09-11T09:35:31.654Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104845602305736830,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200911 09:35:42.255" starttime="20200911 09:35:42.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:42.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:42.256" starttime="20200911 09:35:42.256"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:42.257" starttime="20200911 09:35:37.915"></status>
</kw>
<msg timestamp="20200911 09:35:42.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:42.257" starttime="20200911 09:35:37.915"></status>
</kw>
<msg timestamp="20200911 09:35:42.257" level="INFO">${result} = {
  "volumeName": "44344-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:35:29.721Z",
  "modificationTime": "2020-09-11T09:35:31.654Z",
...</msg>
<status status="PASS" endtime="20200911 09:35:42.257" starttime="20200911 09:35:37.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200911 09:35:42.258" starttime="20200911 09:35:42.258"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:42.264" level="INFO">Running command 'ozone sh key delete /44344-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:46.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:46.132" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:35:46.132" starttime="20200911 09:35:42.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:46.133" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:35:46.133" starttime="20200911 09:35:46.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:46.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:46.134" starttime="20200911 09:35:46.134"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:46.135" starttime="20200911 09:35:42.259"></status>
</kw>
<msg timestamp="20200911 09:35:46.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:46.135" starttime="20200911 09:35:42.259"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:46.136" starttime="20200911 09:35:42.258"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:46.140" level="INFO">Running command 'ozone sh key cp /44344-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:52.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:52.371" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:35:52.371" starttime="20200911 09:35:46.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:52.372" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:35:52.373" starttime="20200911 09:35:52.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:52.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:52.373" starttime="20200911 09:35:52.373"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:52.374" starttime="20200911 09:35:46.137"></status>
</kw>
<msg timestamp="20200911 09:35:52.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:52.374" starttime="20200911 09:35:46.137"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:52.374" starttime="20200911 09:35:46.136"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:52.380" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:52.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:52.382" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:35:52.382" starttime="20200911 09:35:52.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:52.383" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:35:52.383" starttime="20200911 09:35:52.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:52.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:52.384" starttime="20200911 09:35:52.383"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:52.385" starttime="20200911 09:35:52.375"></status>
</kw>
<msg timestamp="20200911 09:35:52.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:52.385" starttime="20200911 09:35:52.375"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:52.385" starttime="20200911 09:35:52.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:52.392" level="INFO">Running command 'ozone sh key get /44344-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:58.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:58.589" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:35:58.589" starttime="20200911 09:35:52.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:58.590" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:35:58.590" starttime="20200911 09:35:58.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:58.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:58.591" starttime="20200911 09:35:58.590"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:58.591" starttime="20200911 09:35:52.387"></status>
</kw>
<msg timestamp="20200911 09:35:58.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:58.592" starttime="20200911 09:35:52.386"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:58.592" starttime="20200911 09:35:52.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:58.596" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:35:58.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:35:58.600" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:35:58.600" starttime="20200911 09:35:58.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:35:58.601" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:35:58.602" starttime="20200911 09:35:58.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:35:58.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:35:58.602" starttime="20200911 09:35:58.602"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:58.603" starttime="20200911 09:35:58.593"></status>
</kw>
<msg timestamp="20200911 09:35:58.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:35:58.603" starttime="20200911 09:35:58.593"></status>
</kw>
<status status="PASS" endtime="20200911 09:35:58.603" starttime="20200911 09:35:58.592"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:35:58.609" level="INFO">Running command 'ozone sh key delete /44344-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:02.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:02.391" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:02.391" starttime="20200911 09:35:58.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:02.393" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:36:02.393" starttime="20200911 09:36:02.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:02.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:02.394" starttime="20200911 09:36:02.393"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:02.394" starttime="20200911 09:35:58.604"></status>
</kw>
<msg timestamp="20200911 09:36:02.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:02.394" starttime="20200911 09:35:58.604"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:02.395" starttime="20200911 09:35:58.603"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:02.398" level="INFO">Running command 'ozone sh key get /44344-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:06.182" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:36:06.182" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:06.182" starttime="20200911 09:36:02.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:06.183" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200911 09:36:06.183" starttime="20200911 09:36:06.183"></status>
</kw>
<msg timestamp="20200911 09:36:06.184" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:06.184" starttime="20200911 09:36:02.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200911 09:36:06.185" starttime="20200911 09:36:06.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:06.189" level="INFO">Running command 'ozone sh key get --force /44344-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:11.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:11.853" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:11.853" starttime="20200911 09:36:06.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:11.854" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:36:11.854" starttime="20200911 09:36:11.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:11.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:11.855" starttime="20200911 09:36:11.854"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:11.855" starttime="20200911 09:36:06.186"></status>
</kw>
<msg timestamp="20200911 09:36:11.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:11.856" starttime="20200911 09:36:06.186"></status>
</kw>
<msg timestamp="20200911 09:36:11.856" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:11.856" starttime="20200911 09:36:06.185"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200911 09:36:11.857" starttime="20200911 09:36:11.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:11.862" level="INFO">Running command 'ozone sh key info /44344-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:15.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:15.799" level="INFO">${output} = {
  "volumeName": "44344-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:35:16.871Z",
  "modificationTime": "2020-09-11T09:35:19.157Z",
  "rep...</msg>
<status status="PASS" endtime="20200911 09:36:15.799" starttime="20200911 09:36:11.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:15.800" level="INFO">{
  "volumeName": "44344-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:35:16.871Z",
  "modificationTime": "2020-09-11T09:35:19.157Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104845601463730300,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200911 09:36:15.801" starttime="20200911 09:36:15.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:15.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:15.801" starttime="20200911 09:36:15.801"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:15.802" starttime="20200911 09:36:11.859"></status>
</kw>
<msg timestamp="20200911 09:36:15.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:15.802" starttime="20200911 09:36:11.858"></status>
</kw>
<msg timestamp="20200911 09:36:15.802" level="INFO">${result} = {
  "volumeName": "44344-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:35:16.871Z",
  "modificationTime": "2020-09-11T09:35:19.157Z",
  "rep...</msg>
<status status="PASS" endtime="20200911 09:36:15.802" starttime="20200911 09:36:11.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:36:15.803" starttime="20200911 09:36:15.803"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:15.807" level="INFO">Running command 'ozone sh key list /44344-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:19.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:19.771" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200911 09:36:19.771" starttime="20200911 09:36:15.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:19.772" level="INFO">key1</msg>
<status status="PASS" endtime="20200911 09:36:19.772" starttime="20200911 09:36:19.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:19.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:19.773" starttime="20200911 09:36:19.773"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:19.774" starttime="20200911 09:36:15.805"></status>
</kw>
<msg timestamp="20200911 09:36:19.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:19.774" starttime="20200911 09:36:15.804"></status>
</kw>
<msg timestamp="20200911 09:36:19.774" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200911 09:36:19.774" starttime="20200911 09:36:15.803"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200911 09:36:19.775" starttime="20200911 09:36:19.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:19.780" level="INFO">Running command 'ozone sh key rename /44344-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:23.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:23.526" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:23.526" starttime="20200911 09:36:19.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:23.527" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:36:23.527" starttime="20200911 09:36:23.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:23.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:23.528" starttime="20200911 09:36:23.527"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:23.529" starttime="20200911 09:36:19.776"></status>
</kw>
<msg timestamp="20200911 09:36:23.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:23.529" starttime="20200911 09:36:19.776"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:23.529" starttime="20200911 09:36:19.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:23.533" level="INFO">Running command 'ozone sh key list /44344-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:27.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:27.697" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200911 09:36:27.697" starttime="20200911 09:36:23.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:27.698" level="INFO">key2</msg>
<status status="PASS" endtime="20200911 09:36:27.698" starttime="20200911 09:36:27.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:27.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:27.699" starttime="20200911 09:36:27.698"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:27.699" starttime="20200911 09:36:23.531"></status>
</kw>
<msg timestamp="20200911 09:36:27.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:27.699" starttime="20200911 09:36:23.530"></status>
</kw>
<msg timestamp="20200911 09:36:27.700" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200911 09:36:27.700" starttime="20200911 09:36:23.529"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200911 09:36:27.700" starttime="20200911 09:36:27.700"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:27.705" level="INFO">Running command 'ozone sh key delete /44344-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:31.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:31.286" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:31.286" starttime="20200911 09:36:27.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:31.287" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:36:31.288" starttime="20200911 09:36:31.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:31.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:31.288" starttime="20200911 09:36:31.288"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:31.289" starttime="20200911 09:36:27.702"></status>
</kw>
<msg timestamp="20200911 09:36:31.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:31.289" starttime="20200911 09:36:27.701"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:31.289" starttime="20200911 09:36:27.700"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:31.289" starttime="20200911 09:35:13.142"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:31.290" starttime="20200911 09:35:13.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:31.295" level="INFO">Running command 'ozone sh bucket delete /44344-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:35.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:35.169" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:35.169" starttime="20200911 09:36:31.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:35.170" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:36:35.171" starttime="20200911 09:36:35.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:35.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:35.171" starttime="20200911 09:36:35.171"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:35.172" starttime="20200911 09:36:31.291"></status>
</kw>
<msg timestamp="20200911 09:36:35.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:35.172" starttime="20200911 09:36:31.290"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:35.172" starttime="20200911 09:36:31.290"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:35.177" level="INFO">Running command 'ozone sh volume delete /44344-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:35.287" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200911 09:36:35.287" starttime="20200911 09:36:35.174"></status>
</kw>
<status status="FAIL" endtime="20200911 09:36:35.288" starttime="20200911 09:36:35.174"></status>
</kw>
<msg timestamp="20200911 09:36:35.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200911 09:36:35.288" starttime="20200911 09:36:35.173"></status>
</kw>
<status status="FAIL" endtime="20200911 09:36:35.288" starttime="20200911 09:36:35.173"></status>
</kw>
<status status="FAIL" endtime="20200911 09:36:35.288" starttime="20200911 09:34:35.286"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200911 09:36:35.289" critical="yes" starttime="20200911 09:34:35.285">Test timeout 2 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20200911 09:36:35.290" starttime="20200911 09:34:35.263"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s4" name="Ozone-Shell">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200911 09:36:35.303" level="INFO">${random} = 31294</msg>
<status status="PASS" endtime="20200911 09:36:35.303" starttime="20200911 09:36:35.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200911 09:36:35.304" level="INFO">${prefix} = 31294</msg>
<status status="PASS" endtime="20200911 09:36:35.304" starttime="20200911 09:36:35.303"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:35.305" starttime="20200911 09:36:35.302"></status>
</kw>
<test id="s1-s1-s4-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:35.311" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:35.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:35.314" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:36:35.314" starttime="20200911 09:36:35.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:35.315" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:36:35.316" starttime="20200911 09:36:35.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:35.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:35.316" starttime="20200911 09:36:35.316"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:35.317" starttime="20200911 09:36:35.307"></status>
</kw>
<msg timestamp="20200911 09:36:35.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:35.317" starttime="20200911 09:36:35.307"></status>
</kw>
<msg timestamp="20200911 09:36:35.317" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:36:35.317" starttime="20200911 09:36:35.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:36:35.319" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:36:35.319" starttime="20200911 09:36:35.318"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:35.324" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:35.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:35.349" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:36:35.349" starttime="20200911 09:36:35.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:35.351" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:36:35.351" starttime="20200911 09:36:35.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:35.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:35.352" starttime="20200911 09:36:35.351"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:35.352" starttime="20200911 09:36:35.321"></status>
</kw>
<msg timestamp="20200911 09:36:35.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:35.352" starttime="20200911 09:36:35.321"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:35.352" starttime="20200911 09:36:35.320"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:35.353" starttime="20200911 09:36:35.319"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:35.353" starttime="20200911 09:36:35.306"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:35.353" starttime="20200911 09:36:35.306"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:35.367" level="INFO">Running command 'ozone sh volume info o3://om:9862/31294-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:42.638" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:36:42.638" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:42.638" starttime="20200911 09:36:35.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:42.640" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 31294-rpcwoport is not found</msg>
<status status="PASS" endtime="20200911 09:36:42.640" starttime="20200911 09:36:42.639"></status>
</kw>
<msg timestamp="20200911 09:36:42.640" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:42.640" starttime="20200911 09:36:35.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200911 09:36:42.641" starttime="20200911 09:36:42.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:42.645" level="INFO">Running command 'ozone sh volume create o3://om:9862/31294-rpcwoport --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:46.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:46.608" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:46.608" starttime="20200911 09:36:42.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:46.610" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:36:46.610" starttime="20200911 09:36:46.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:46.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:46.611" starttime="20200911 09:36:46.610"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:46.611" starttime="20200911 09:36:42.642"></status>
</kw>
<msg timestamp="20200911 09:36:46.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:46.611" starttime="20200911 09:36:42.642"></status>
</kw>
<msg timestamp="20200911 09:36:46.611" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:46.611" starttime="20200911 09:36:42.641"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200911 09:36:46.612" starttime="20200911 09:36:46.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:46.619" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="31294-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:50.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:50.579" level="INFO">${output} = {
  "metadata": {},
  "name": "31294-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200911 09:36:50.579" starttime="20200911 09:36:46.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:50.582" level="INFO">{
  "metadata": {},
  "name": "31294-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T09:36:46.321Z",
  "modificationTime": "2020-09-11T09:36:46.321Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200911 09:36:50.582" starttime="20200911 09:36:50.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:50.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:50.584" starttime="20200911 09:36:50.583"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:50.584" starttime="20200911 09:36:46.614"></status>
</kw>
<msg timestamp="20200911 09:36:50.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:50.584" starttime="20200911 09:36:46.613"></status>
</kw>
<msg timestamp="20200911 09:36:50.584" level="INFO">${result} = {
  "metadata": {},
  "name": "31294-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200911 09:36:50.585" starttime="20200911 09:36:46.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:36:50.585" starttime="20200911 09:36:50.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:50.591" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="31294-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:54.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:54.549" level="INFO">${output} = {
  "metadata": {},
  "name": "31294-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200911 09:36:54.549" starttime="20200911 09:36:50.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:54.550" level="INFO">{
  "metadata": {},
  "name": "31294-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T09:36:46.321Z",
  "modificationTime": "2020-09-11T09:36:46.321Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200911 09:36:54.550" starttime="20200911 09:36:54.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:54.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:54.551" starttime="20200911 09:36:54.550"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:54.551" starttime="20200911 09:36:50.586"></status>
</kw>
<msg timestamp="20200911 09:36:54.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:54.551" starttime="20200911 09:36:50.586"></status>
</kw>
<msg timestamp="20200911 09:36:54.552" level="INFO">${result} = {
  "metadata": {},
  "name": "31294-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200911 09:36:54.552" starttime="20200911 09:36:50.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:36:54.553" starttime="20200911 09:36:54.552"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:54.557" level="INFO">Running command 'ozone sh volume update o3://om:9862/31294-rpcwoport --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:36:58.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:36:58.677" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:36:58.677" starttime="20200911 09:36:54.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:36:58.678" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "31294-rpcwoport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-11T09:36:46.321Z",
  "modificationTime" : "2020-09-11T09:36:58.297Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20200911 09:36:58.678" starttime="20200911 09:36:58.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:36:58.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:36:58.679" starttime="20200911 09:36:58.679"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:58.680" starttime="20200911 09:36:54.554"></status>
</kw>
<msg timestamp="20200911 09:36:58.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:36:58.680" starttime="20200911 09:36:54.553"></status>
</kw>
<status status="PASS" endtime="20200911 09:36:58.680" starttime="20200911 09:36:54.553"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:36:58.685" level="INFO">Running command 'ozone sh volume info o3://om:9862/31294-rpcwoport | jq -r '. | select(.name=="31294-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:02.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:02.666" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200911 09:37:02.666" starttime="20200911 09:36:58.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:02.667" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200911 09:37:02.667" starttime="20200911 09:37:02.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:02.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:02.668" starttime="20200911 09:37:02.667"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:02.668" starttime="20200911 09:36:58.682"></status>
</kw>
<msg timestamp="20200911 09:37:02.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:02.669" starttime="20200911 09:36:58.681"></status>
</kw>
<msg timestamp="20200911 09:37:02.669" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200911 09:37:02.669" starttime="20200911 09:36:58.680"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200911 09:37:02.670" starttime="20200911 09:37:02.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:02.686" level="INFO">Running command 'ozone sh bucket create o3://om:9862/31294-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:06.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:06.571" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:37:06.571" starttime="20200911 09:37:02.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:06.573" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:37:06.573" starttime="20200911 09:37:06.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:06.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:06.574" starttime="20200911 09:37:06.573"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:06.574" starttime="20200911 09:37:02.671"></status>
</kw>
<msg timestamp="20200911 09:37:06.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:06.575" starttime="20200911 09:37:02.670"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:06.575" starttime="20200911 09:37:02.670"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:06.580" level="INFO">Running command 'ozone sh bucket info o3://om:9862/31294-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:10.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:10.773" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200911 09:37:10.773" starttime="20200911 09:37:06.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:10.774" level="INFO">DISK</msg>
<status status="PASS" endtime="20200911 09:37:10.774" starttime="20200911 09:37:10.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:10.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:10.775" starttime="20200911 09:37:10.774"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:10.775" starttime="20200911 09:37:06.577"></status>
</kw>
<msg timestamp="20200911 09:37:10.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:10.776" starttime="20200911 09:37:06.576"></status>
</kw>
<msg timestamp="20200911 09:37:10.776" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200911 09:37:10.776" starttime="20200911 09:37:06.575"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200911 09:37:10.777" starttime="20200911 09:37:10.776"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:10.783" level="INFO">Running command 'ozone sh bucket list o3://om:9862/31294-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:14.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:14.856" level="INFO">${output} = 31294-rpcwoport</msg>
<status status="PASS" endtime="20200911 09:37:14.856" starttime="20200911 09:37:10.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:14.858" level="INFO">31294-rpcwoport</msg>
<status status="PASS" endtime="20200911 09:37:14.858" starttime="20200911 09:37:14.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:14.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:14.859" starttime="20200911 09:37:14.858"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:14.859" starttime="20200911 09:37:10.778"></status>
</kw>
<msg timestamp="20200911 09:37:14.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:14.859" starttime="20200911 09:37:10.778"></status>
</kw>
<msg timestamp="20200911 09:37:14.860" level="INFO">${result} = 31294-rpcwoport</msg>
<status status="PASS" endtime="20200911 09:37:14.860" starttime="20200911 09:37:10.777"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:37:14.860" starttime="20200911 09:37:14.860"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:14.866" level="INFO">Running command 'ozone sh key put o3://om:9862/31294-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:20.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:20.913" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:37:20.913" starttime="20200911 09:37:14.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:20.914" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:37:20.914" starttime="20200911 09:37:20.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:20.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:20.915" starttime="20200911 09:37:20.915"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:20.916" starttime="20200911 09:37:14.863"></status>
</kw>
<msg timestamp="20200911 09:37:20.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:20.916" starttime="20200911 09:37:14.863"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:20.916" starttime="20200911 09:37:14.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:20.920" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:20.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:20.923" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:37:20.923" starttime="20200911 09:37:20.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:20.924" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:37:20.925" starttime="20200911 09:37:20.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:20.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:20.925" starttime="20200911 09:37:20.925"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:20.926" starttime="20200911 09:37:20.917"></status>
</kw>
<msg timestamp="20200911 09:37:20.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:20.926" starttime="20200911 09:37:20.917"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:20.926" starttime="20200911 09:37:20.916"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:20.932" level="INFO">Running command 'ozone sh key get o3://om:9862/31294-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:26.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:26.602" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:37:26.602" starttime="20200911 09:37:20.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:26.603" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:37:26.603" starttime="20200911 09:37:26.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:26.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:26.604" starttime="20200911 09:37:26.603"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:26.604" starttime="20200911 09:37:20.927"></status>
</kw>
<msg timestamp="20200911 09:37:26.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:26.605" starttime="20200911 09:37:20.927"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:26.605" starttime="20200911 09:37:20.926"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:26.611" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:26.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:26.612" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:37:26.612" starttime="20200911 09:37:26.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:26.613" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:37:26.614" starttime="20200911 09:37:26.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:26.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:26.615" starttime="20200911 09:37:26.614"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:26.615" starttime="20200911 09:37:26.606"></status>
</kw>
<msg timestamp="20200911 09:37:26.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:26.615" starttime="20200911 09:37:26.606"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:26.615" starttime="20200911 09:37:26.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:26.621" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/31294-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:32.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:32.802" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:37:32.803" starttime="20200911 09:37:26.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:32.804" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:37:32.804" starttime="20200911 09:37:32.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:32.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:32.805" starttime="20200911 09:37:32.804"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:32.805" starttime="20200911 09:37:26.617"></status>
</kw>
<msg timestamp="20200911 09:37:32.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:32.806" starttime="20200911 09:37:26.617"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:32.806" starttime="20200911 09:37:26.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:32.810" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:32.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:32.813" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:37:32.813" starttime="20200911 09:37:32.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:32.814" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:37:32.814" starttime="20200911 09:37:32.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:32.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:32.815" starttime="20200911 09:37:32.814"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:32.815" starttime="20200911 09:37:32.807"></status>
</kw>
<msg timestamp="20200911 09:37:32.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:32.815" starttime="20200911 09:37:32.807"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:32.816" starttime="20200911 09:37:32.806"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:32.822" level="INFO">Running command 'ozone sh key get o3://om:9862/31294-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:38.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:38.814" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:37:38.814" starttime="20200911 09:37:32.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:38.816" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:37:38.816" starttime="20200911 09:37:38.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:38.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:38.817" starttime="20200911 09:37:38.816"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:38.817" starttime="20200911 09:37:32.817"></status>
</kw>
<msg timestamp="20200911 09:37:38.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:38.817" starttime="20200911 09:37:32.817"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:38.818" starttime="20200911 09:37:32.816"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:38.823" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:38.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:38.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:37:38.826" starttime="20200911 09:37:38.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:38.828" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:37:38.828" starttime="20200911 09:37:38.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:38.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:38.829" starttime="20200911 09:37:38.828"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:38.829" starttime="20200911 09:37:38.819"></status>
</kw>
<msg timestamp="20200911 09:37:38.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:38.830" starttime="20200911 09:37:38.819"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:38.830" starttime="20200911 09:37:38.818"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:38.835" level="INFO">Running command 'ozone sh key info o3://om:9862/31294-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:43.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:43.098" level="INFO">${output} = {
  "volumeName": "31294-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:37:30.342Z",
  "modificationTime": "2020-09-11T09:37:32.237Z",...</msg>
<status status="PASS" endtime="20200911 09:37:43.098" starttime="20200911 09:37:38.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:43.099" level="INFO">{
  "volumeName": "31294-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:37:30.342Z",
  "modificationTime": "2020-09-11T09:37:32.237Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104845610210951300,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200911 09:37:43.100" starttime="20200911 09:37:43.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:43.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:43.100" starttime="20200911 09:37:43.100"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:43.101" starttime="20200911 09:37:38.832"></status>
</kw>
<msg timestamp="20200911 09:37:43.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:43.101" starttime="20200911 09:37:38.831"></status>
</kw>
<msg timestamp="20200911 09:37:43.101" level="INFO">${result} = {
  "volumeName": "31294-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:37:30.342Z",
  "modificationTime": "2020-09-11T09:37:32.237Z",...</msg>
<status status="PASS" endtime="20200911 09:37:43.101" starttime="20200911 09:37:38.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200911 09:37:43.102" starttime="20200911 09:37:43.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:43.106" level="INFO">Running command 'ozone sh key delete o3://om:9862/31294-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:47.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:47.177" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:37:47.177" starttime="20200911 09:37:43.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:47.179" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:37:47.179" starttime="20200911 09:37:47.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:47.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:47.180" starttime="20200911 09:37:47.179"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:47.180" starttime="20200911 09:37:43.103"></status>
</kw>
<msg timestamp="20200911 09:37:47.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:47.180" starttime="20200911 09:37:43.103"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:47.181" starttime="20200911 09:37:43.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:47.185" level="INFO">Running command 'ozone sh key cp o3://om:9862/31294-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:53.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:53.525" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:37:53.525" starttime="20200911 09:37:47.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:53.527" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:37:53.527" starttime="20200911 09:37:53.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:53.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:53.528" starttime="20200911 09:37:53.527"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:53.528" starttime="20200911 09:37:47.182"></status>
</kw>
<msg timestamp="20200911 09:37:53.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:53.528" starttime="20200911 09:37:47.182"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:53.529" starttime="20200911 09:37:47.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:53.533" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:53.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:53.536" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:37:53.536" starttime="20200911 09:37:53.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:53.537" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:37:53.538" starttime="20200911 09:37:53.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:53.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:53.538" starttime="20200911 09:37:53.538"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:53.539" starttime="20200911 09:37:53.530"></status>
</kw>
<msg timestamp="20200911 09:37:53.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:53.539" starttime="20200911 09:37:53.529"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:53.539" starttime="20200911 09:37:53.529"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:53.543" level="INFO">Running command 'ozone sh key get o3://om:9862/31294-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:59.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:59.351" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:37:59.351" starttime="20200911 09:37:53.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:59.353" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:37:59.353" starttime="20200911 09:37:59.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:59.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:59.354" starttime="20200911 09:37:59.353"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:59.354" starttime="20200911 09:37:53.540"></status>
</kw>
<msg timestamp="20200911 09:37:59.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:59.354" starttime="20200911 09:37:53.540"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:59.355" starttime="20200911 09:37:53.539"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:59.359" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:37:59.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:37:59.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:37:59.362" starttime="20200911 09:37:59.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:37:59.363" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:37:59.363" starttime="20200911 09:37:59.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:37:59.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:37:59.364" starttime="20200911 09:37:59.363"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:59.364" starttime="20200911 09:37:59.356"></status>
</kw>
<msg timestamp="20200911 09:37:59.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:37:59.365" starttime="20200911 09:37:59.356"></status>
</kw>
<status status="PASS" endtime="20200911 09:37:59.365" starttime="20200911 09:37:59.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:37:59.370" level="INFO">Running command 'ozone sh key delete o3://om:9862/31294-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:03.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:03.091" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:03.091" starttime="20200911 09:37:59.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:03.092" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:38:03.092" starttime="20200911 09:38:03.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:03.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:03.093" starttime="20200911 09:38:03.093"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:03.093" starttime="20200911 09:37:59.366"></status>
</kw>
<msg timestamp="20200911 09:38:03.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:03.094" starttime="20200911 09:37:59.366"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:03.094" starttime="20200911 09:37:59.365"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:03.099" level="INFO">Running command 'ozone sh key get o3://om:9862/31294-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:06.998" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:38:06.998" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:06.998" starttime="20200911 09:38:03.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:06.999" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200911 09:38:06.999" starttime="20200911 09:38:06.998"></status>
</kw>
<msg timestamp="20200911 09:38:07.000" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:07.000" starttime="20200911 09:38:03.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200911 09:38:07.001" starttime="20200911 09:38:07.000"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:07.006" level="INFO">Running command 'ozone sh key get --force o3://om:9862/31294-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:13.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:13.229" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:13.229" starttime="20200911 09:38:07.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:13.230" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:38:13.230" starttime="20200911 09:38:13.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:13.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:13.231" starttime="20200911 09:38:13.230"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:13.231" starttime="20200911 09:38:07.002"></status>
</kw>
<msg timestamp="20200911 09:38:13.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:13.231" starttime="20200911 09:38:07.002"></status>
</kw>
<msg timestamp="20200911 09:38:13.232" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:13.232" starttime="20200911 09:38:07.001"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200911 09:38:13.232" starttime="20200911 09:38:13.232"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:13.238" level="INFO">Running command 'ozone sh key info o3://om:9862/31294-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:17.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:17.338" level="INFO">${output} = {
  "volumeName": "31294-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:37:18.653Z",
  "modificationTime": "2020-09-11T09:37:20.501Z",
  "re...</msg>
<status status="PASS" endtime="20200911 09:38:17.338" starttime="20200911 09:38:13.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:17.340" level="INFO">{
  "volumeName": "31294-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:37:18.653Z",
  "modificationTime": "2020-09-11T09:37:20.501Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104845609444901000,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200911 09:38:17.340" starttime="20200911 09:38:17.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:17.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:17.341" starttime="20200911 09:38:17.340"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:17.341" starttime="20200911 09:38:13.234"></status>
</kw>
<msg timestamp="20200911 09:38:17.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:17.341" starttime="20200911 09:38:13.234"></status>
</kw>
<msg timestamp="20200911 09:38:17.342" level="INFO">${result} = {
  "volumeName": "31294-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:37:18.653Z",
  "modificationTime": "2020-09-11T09:37:20.501Z",
  "re...</msg>
<status status="PASS" endtime="20200911 09:38:17.342" starttime="20200911 09:38:13.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:38:17.342" starttime="20200911 09:38:17.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:17.349" level="INFO">Running command 'ozone sh key list o3://om:9862/31294-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:21.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:21.350" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200911 09:38:21.350" starttime="20200911 09:38:17.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:21.351" level="INFO">key1</msg>
<status status="PASS" endtime="20200911 09:38:21.352" starttime="20200911 09:38:21.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:21.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:21.353" starttime="20200911 09:38:21.352"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:21.353" starttime="20200911 09:38:17.344"></status>
</kw>
<msg timestamp="20200911 09:38:21.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:21.353" starttime="20200911 09:38:17.343"></status>
</kw>
<msg timestamp="20200911 09:38:21.353" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200911 09:38:21.353" starttime="20200911 09:38:17.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200911 09:38:21.354" starttime="20200911 09:38:21.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:21.360" level="INFO">Running command 'ozone sh key rename o3://om:9862/31294-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:25.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:25.113" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:25.113" starttime="20200911 09:38:21.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:25.115" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:38:25.115" starttime="20200911 09:38:25.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:25.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:25.116" starttime="20200911 09:38:25.115"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:25.117" starttime="20200911 09:38:21.355"></status>
</kw>
<msg timestamp="20200911 09:38:25.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:25.117" starttime="20200911 09:38:21.355"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:25.117" starttime="20200911 09:38:21.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:25.121" level="INFO">Running command 'ozone sh key list o3://om:9862/31294-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:29.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:29.251" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200911 09:38:29.251" starttime="20200911 09:38:25.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:29.252" level="INFO">key2</msg>
<status status="PASS" endtime="20200911 09:38:29.252" starttime="20200911 09:38:29.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:29.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:29.253" starttime="20200911 09:38:29.253"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:29.254" starttime="20200911 09:38:25.118"></status>
</kw>
<msg timestamp="20200911 09:38:29.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:29.254" starttime="20200911 09:38:25.118"></status>
</kw>
<msg timestamp="20200911 09:38:29.254" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200911 09:38:29.254" starttime="20200911 09:38:25.117"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200911 09:38:29.255" starttime="20200911 09:38:29.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:29.260" level="INFO">Running command 'ozone sh key delete o3://om:9862/31294-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:33.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:33.033" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:33.034" starttime="20200911 09:38:29.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:33.035" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:38:33.035" starttime="20200911 09:38:33.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:33.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:33.036" starttime="20200911 09:38:33.035"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:33.036" starttime="20200911 09:38:29.257"></status>
</kw>
<msg timestamp="20200911 09:38:33.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:33.036" starttime="20200911 09:38:29.256"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:33.037" starttime="20200911 09:38:29.255"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:33.037" starttime="20200911 09:37:14.861"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:33.037" starttime="20200911 09:37:14.860"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:33.043" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/31294-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:35.308" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200911 09:38:35.308" starttime="20200911 09:38:33.039"></status>
</kw>
<status status="FAIL" endtime="20200911 09:38:35.309" starttime="20200911 09:38:33.038"></status>
</kw>
<msg timestamp="20200911 09:38:35.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200911 09:38:35.309" starttime="20200911 09:38:33.038"></status>
</kw>
<status status="FAIL" endtime="20200911 09:38:35.309" starttime="20200911 09:38:33.037"></status>
</kw>
<status status="FAIL" endtime="20200911 09:38:35.310" starttime="20200911 09:36:35.353"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200911 09:38:35.310" critical="yes" starttime="20200911 09:36:35.305">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s4-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:35.338" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:35.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:35.349" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:38:35.349" starttime="20200911 09:38:35.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:35.350" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:38:35.350" starttime="20200911 09:38:35.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:35.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:35.351" starttime="20200911 09:38:35.350"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:35.352" starttime="20200911 09:38:35.319"></status>
</kw>
<msg timestamp="20200911 09:38:35.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:35.352" starttime="20200911 09:38:35.315"></status>
</kw>
<msg timestamp="20200911 09:38:35.352" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:38:35.352" starttime="20200911 09:38:35.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:38:35.353" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:38:35.353" starttime="20200911 09:38:35.353"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:35.370" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:35.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:35.394" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:38:35.394" starttime="20200911 09:38:35.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:35.396" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:38:35.396" starttime="20200911 09:38:35.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:35.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:35.397" starttime="20200911 09:38:35.396"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:35.397" starttime="20200911 09:38:35.358"></status>
</kw>
<msg timestamp="20200911 09:38:35.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:35.398" starttime="20200911 09:38:35.358"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:35.398" starttime="20200911 09:38:35.354"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:35.398" starttime="20200911 09:38:35.354"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:35.398" starttime="20200911 09:38:35.314"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:35.398" starttime="20200911 09:38:35.313"></status>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:35.413" level="INFO">Running command 'ozone sh volume create o3://om:9862/31294-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:40.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:40.711" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:40.711" starttime="20200911 09:38:35.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:40.712" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:38:40.713" starttime="20200911 09:38:40.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:40.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:40.713" starttime="20200911 09:38:40.713"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:40.714" starttime="20200911 09:38:35.400"></status>
</kw>
<msg timestamp="20200911 09:38:40.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:40.714" starttime="20200911 09:38:35.400"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:40.714" starttime="20200911 09:38:35.399"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:40.719" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/31294-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:44.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:44.676" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:44.676" starttime="20200911 09:38:40.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:44.677" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:38:44.677" starttime="20200911 09:38:44.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:44.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:44.680" starttime="20200911 09:38:44.678"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:44.681" starttime="20200911 09:38:40.716"></status>
</kw>
<msg timestamp="20200911 09:38:44.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:44.681" starttime="20200911 09:38:40.715"></status>
</kw>
<msg timestamp="20200911 09:38:44.681" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:44.681" starttime="20200911 09:38:40.714"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200911 09:38:44.683" starttime="20200911 09:38:44.682"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:44.687" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/31294-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:48.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:48.527" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:48.527" starttime="20200911 09:38:44.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:48.528" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20200911 09:38:48.528" starttime="20200911 09:38:48.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:48.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:48.529" starttime="20200911 09:38:48.528"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:48.529" starttime="20200911 09:38:44.684"></status>
</kw>
<msg timestamp="20200911 09:38:48.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:48.530" starttime="20200911 09:38:44.683"></status>
</kw>
<msg timestamp="20200911 09:38:48.530" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:48.530" starttime="20200911 09:38:44.683"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:48.534" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/31294-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:52.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:52.320" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:52.320" starttime="20200911 09:38:48.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:52.321" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:38:52.322" starttime="20200911 09:38:52.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:52.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:52.323" starttime="20200911 09:38:52.322"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:52.323" starttime="20200911 09:38:48.531"></status>
</kw>
<msg timestamp="20200911 09:38:52.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:52.323" starttime="20200911 09:38:48.531"></status>
</kw>
<msg timestamp="20200911 09:38:52.323" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:52.324" starttime="20200911 09:38:48.530"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200911 09:38:52.325" starttime="20200911 09:38:52.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:52.331" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/31294-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:55.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:55.927" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:55.927" starttime="20200911 09:38:52.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:55.928" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20200911 09:38:55.929" starttime="20200911 09:38:55.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:55.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:55.929" starttime="20200911 09:38:55.929"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:55.930" starttime="20200911 09:38:52.326"></status>
</kw>
<msg timestamp="20200911 09:38:55.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:55.930" starttime="20200911 09:38:52.326"></status>
</kw>
<msg timestamp="20200911 09:38:55.931" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:55.931" starttime="20200911 09:38:52.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:55.935" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/31294-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:38:59.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:38:59.909" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:59.909" starttime="20200911 09:38:55.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:38:59.910" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:38:59.910" starttime="20200911 09:38:59.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:38:59.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:38:59.911" starttime="20200911 09:38:59.910"></status>
</kw>
<status status="PASS" endtime="20200911 09:38:59.911" starttime="20200911 09:38:55.932"></status>
</kw>
<msg timestamp="20200911 09:38:59.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:38:59.912" starttime="20200911 09:38:55.932"></status>
</kw>
<msg timestamp="20200911 09:38:59.912" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:38:59.912" starttime="20200911 09:38:55.931"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200911 09:38:59.913" starttime="20200911 09:38:59.912"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:38:59.918" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/31294-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:04.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:04.163" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:04.164" starttime="20200911 09:38:59.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:04.165" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" endtime="20200911 09:39:04.165" starttime="20200911 09:39:04.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:04.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:04.166" starttime="20200911 09:39:04.165"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:04.166" starttime="20200911 09:38:59.915"></status>
</kw>
<msg timestamp="20200911 09:39:04.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:04.167" starttime="20200911 09:38:59.914"></status>
</kw>
<msg timestamp="20200911 09:39:04.167" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:04.167" starttime="20200911 09:38:59.914"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:04.172" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/31294-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:08.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:08.038" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:08.038" starttime="20200911 09:39:04.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:08.039" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:39:08.039" starttime="20200911 09:39:08.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:08.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:08.040" starttime="20200911 09:39:08.040"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:08.041" starttime="20200911 09:39:04.169"></status>
</kw>
<msg timestamp="20200911 09:39:08.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:08.041" starttime="20200911 09:39:04.168"></status>
</kw>
<msg timestamp="20200911 09:39:08.041" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:08.041" starttime="20200911 09:39:04.167"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200911 09:39:08.042" starttime="20200911 09:39:08.041"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200911 09:39:08.043" starttime="20200911 09:39:08.042"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:08.043" starttime="20200911 09:38:35.398"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:39:08.044" critical="yes" starttime="20200911 09:38:35.312"></status>
</test>
<test id="s1-s1-s4-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:08.051" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:08.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:08.055" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:39:08.055" starttime="20200911 09:39:08.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:08.056" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:39:08.056" starttime="20200911 09:39:08.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:08.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:08.057" starttime="20200911 09:39:08.056"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:08.057" starttime="20200911 09:39:08.048"></status>
</kw>
<msg timestamp="20200911 09:39:08.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:08.058" starttime="20200911 09:39:08.048"></status>
</kw>
<msg timestamp="20200911 09:39:08.058" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:39:08.058" starttime="20200911 09:39:08.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:39:08.059" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:39:08.059" starttime="20200911 09:39:08.058"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:08.064" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:08.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:08.086" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:39:08.086" starttime="20200911 09:39:08.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:08.088" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:39:08.088" starttime="20200911 09:39:08.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:08.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:08.088" starttime="20200911 09:39:08.088"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:08.089" starttime="20200911 09:39:08.061"></status>
</kw>
<msg timestamp="20200911 09:39:08.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:08.089" starttime="20200911 09:39:08.060"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:08.089" starttime="20200911 09:39:08.060"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:08.089" starttime="20200911 09:39:08.059"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:08.090" starttime="20200911 09:39:08.046"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:08.090" starttime="20200911 09:39:08.046"></status>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:08.096" level="INFO">Running command 'ozone sh bucket create o3://om:9862/31294-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:11.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:11.896" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:11.896" starttime="20200911 09:39:08.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:11.897" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:39:11.898" starttime="20200911 09:39:11.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:11.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:11.899" starttime="20200911 09:39:11.898"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:11.899" starttime="20200911 09:39:08.092"></status>
</kw>
<msg timestamp="20200911 09:39:11.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:11.900" starttime="20200911 09:39:08.091"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:11.900" starttime="20200911 09:39:08.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:11.904" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/31294-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:15.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:15.784" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:15.784" starttime="20200911 09:39:11.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:15.785" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:39:15.786" starttime="20200911 09:39:15.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:15.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:15.786" starttime="20200911 09:39:15.786"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:15.787" starttime="20200911 09:39:11.901"></status>
</kw>
<msg timestamp="20200911 09:39:15.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:15.787" starttime="20200911 09:39:11.901"></status>
</kw>
<msg timestamp="20200911 09:39:15.788" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:15.788" starttime="20200911 09:39:11.900"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200911 09:39:15.788" starttime="20200911 09:39:15.788"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:15.792" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/31294-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:19.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:19.575" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:19.575" starttime="20200911 09:39:15.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:19.576" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20200911 09:39:19.577" starttime="20200911 09:39:19.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:19.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:19.577" starttime="20200911 09:39:19.577"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:19.578" starttime="20200911 09:39:15.790"></status>
</kw>
<msg timestamp="20200911 09:39:19.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:19.578" starttime="20200911 09:39:15.789"></status>
</kw>
<msg timestamp="20200911 09:39:19.578" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:19.579" starttime="20200911 09:39:15.789"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:19.583" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/31294-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:23.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:23.661" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:23.661" starttime="20200911 09:39:19.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:23.663" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:39:23.663" starttime="20200911 09:39:23.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:23.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:23.664" starttime="20200911 09:39:23.663"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:23.664" starttime="20200911 09:39:19.580"></status>
</kw>
<msg timestamp="20200911 09:39:23.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:23.664" starttime="20200911 09:39:19.580"></status>
</kw>
<msg timestamp="20200911 09:39:23.665" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:23.665" starttime="20200911 09:39:19.579"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200911 09:39:23.666" starttime="20200911 09:39:23.665"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:23.672" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/31294-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:27.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:27.289" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:27.289" starttime="20200911 09:39:23.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:27.291" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20200911 09:39:27.291" starttime="20200911 09:39:27.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:27.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:27.292" starttime="20200911 09:39:27.291"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:27.292" starttime="20200911 09:39:23.667"></status>
</kw>
<msg timestamp="20200911 09:39:27.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:27.293" starttime="20200911 09:39:23.667"></status>
</kw>
<msg timestamp="20200911 09:39:27.293" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:27.293" starttime="20200911 09:39:23.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:27.298" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/31294-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:31.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:31.074" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:31.074" starttime="20200911 09:39:27.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:31.075" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:39:31.076" starttime="20200911 09:39:31.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:31.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:31.076" starttime="20200911 09:39:31.076"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:31.077" starttime="20200911 09:39:27.295"></status>
</kw>
<msg timestamp="20200911 09:39:31.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:31.077" starttime="20200911 09:39:27.294"></status>
</kw>
<msg timestamp="20200911 09:39:31.077" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:31.077" starttime="20200911 09:39:27.293"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200911 09:39:31.078" starttime="20200911 09:39:31.078"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:31.084" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/31294-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:34.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:34.729" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:34.729" starttime="20200911 09:39:31.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:34.731" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" endtime="20200911 09:39:34.731" starttime="20200911 09:39:34.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:34.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:34.732" starttime="20200911 09:39:34.731"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:34.732" starttime="20200911 09:39:31.080"></status>
</kw>
<msg timestamp="20200911 09:39:34.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:34.732" starttime="20200911 09:39:31.079"></status>
</kw>
<msg timestamp="20200911 09:39:34.733" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:34.733" starttime="20200911 09:39:31.079"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:34.738" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/31294-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:38.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:38.711" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:38.711" starttime="20200911 09:39:34.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:38.712" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:39:38.713" starttime="20200911 09:39:38.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:38.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:38.713" starttime="20200911 09:39:38.713"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:38.714" starttime="20200911 09:39:34.734"></status>
</kw>
<msg timestamp="20200911 09:39:38.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:38.714" starttime="20200911 09:39:34.734"></status>
</kw>
<msg timestamp="20200911 09:39:38.714" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:38.714" starttime="20200911 09:39:34.733"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200911 09:39:38.715" starttime="20200911 09:39:38.714"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200911 09:39:38.716" starttime="20200911 09:39:38.715"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:38.716" starttime="20200911 09:39:08.090"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:39:38.716" critical="yes" starttime="20200911 09:39:08.045"></status>
</test>
<test id="s1-s1-s4-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:38.723" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:38.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:38.727" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:39:38.727" starttime="20200911 09:39:38.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:38.728" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:39:38.728" starttime="20200911 09:39:38.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:38.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:38.729" starttime="20200911 09:39:38.728"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:38.729" starttime="20200911 09:39:38.720"></status>
</kw>
<msg timestamp="20200911 09:39:38.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:38.729" starttime="20200911 09:39:38.720"></status>
</kw>
<msg timestamp="20200911 09:39:38.730" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:39:38.730" starttime="20200911 09:39:38.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:39:38.730" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:39:38.730" starttime="20200911 09:39:38.730"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:38.736" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:38.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:38.760" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:39:38.760" starttime="20200911 09:39:38.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:38.762" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:39:38.762" starttime="20200911 09:39:38.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:38.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:38.763" starttime="20200911 09:39:38.763"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:38.764" starttime="20200911 09:39:38.732"></status>
</kw>
<msg timestamp="20200911 09:39:38.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:38.764" starttime="20200911 09:39:38.732"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:38.764" starttime="20200911 09:39:38.731"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:38.764" starttime="20200911 09:39:38.731"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:38.764" starttime="20200911 09:39:38.719"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:38.764" starttime="20200911 09:39:38.718"></status>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:38.769" level="INFO">Running command 'ozone sh key put o3://om:9862/31294-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:45.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:45.130" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:45.130" starttime="20200911 09:39:38.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:45.131" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:39:45.131" starttime="20200911 09:39:45.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:45.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:45.132" starttime="20200911 09:39:45.131"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:45.132" starttime="20200911 09:39:38.766"></status>
</kw>
<msg timestamp="20200911 09:39:45.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:45.133" starttime="20200911 09:39:38.766"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:45.133" starttime="20200911 09:39:38.765"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:45.138" level="INFO">Running command 'ozone sh key getacl o3://om:9862/31294-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:49.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:49.007" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:49.007" starttime="20200911 09:39:45.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:49.009" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:39:49.009" starttime="20200911 09:39:49.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:49.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:49.010" starttime="20200911 09:39:49.009"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:49.010" starttime="20200911 09:39:45.134"></status>
</kw>
<msg timestamp="20200911 09:39:49.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:49.011" starttime="20200911 09:39:45.134"></status>
</kw>
<msg timestamp="20200911 09:39:49.011" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:49.011" starttime="20200911 09:39:45.133"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200911 09:39:49.012" starttime="20200911 09:39:49.011"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:49.016" level="INFO">Running command 'ozone sh key addacl o3://om:9862/31294-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:52.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:52.631" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:52.631" starttime="20200911 09:39:49.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:52.632" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200911 09:39:52.632" starttime="20200911 09:39:52.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:52.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:52.633" starttime="20200911 09:39:52.632"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:52.633" starttime="20200911 09:39:49.013"></status>
</kw>
<msg timestamp="20200911 09:39:52.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:52.633" starttime="20200911 09:39:49.013"></status>
</kw>
<msg timestamp="20200911 09:39:52.634" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:52.634" starttime="20200911 09:39:49.012"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:52.638" level="INFO">Running command 'ozone sh key getacl o3://om:9862/31294-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:39:56.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:39:56.338" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:56.338" starttime="20200911 09:39:52.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:39:56.339" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:39:56.339" starttime="20200911 09:39:56.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:39:56.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:39:56.340" starttime="20200911 09:39:56.339"></status>
</kw>
<status status="PASS" endtime="20200911 09:39:56.340" starttime="20200911 09:39:52.635"></status>
</kw>
<msg timestamp="20200911 09:39:56.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:39:56.341" starttime="20200911 09:39:52.635"></status>
</kw>
<msg timestamp="20200911 09:39:56.341" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:39:56.341" starttime="20200911 09:39:52.634"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200911 09:39:56.342" starttime="20200911 09:39:56.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:39:56.348" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/31294-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:00.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:00.004" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:00.004" starttime="20200911 09:39:56.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:00.006" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20200911 09:40:00.006" starttime="20200911 09:40:00.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:00.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:00.007" starttime="20200911 09:40:00.006"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:00.007" starttime="20200911 09:39:56.344"></status>
</kw>
<msg timestamp="20200911 09:40:00.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:00.008" starttime="20200911 09:39:56.343"></status>
</kw>
<msg timestamp="20200911 09:40:00.008" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:00.008" starttime="20200911 09:39:56.343"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:00.013" level="INFO">Running command 'ozone sh key getacl o3://om:9862/31294-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:04.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:04.173" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:04.173" starttime="20200911 09:40:00.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:04.175" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:40:04.175" starttime="20200911 09:40:04.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:04.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:04.175" starttime="20200911 09:40:04.175"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:04.176" starttime="20200911 09:40:00.009"></status>
</kw>
<msg timestamp="20200911 09:40:04.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:04.176" starttime="20200911 09:40:00.009"></status>
</kw>
<msg timestamp="20200911 09:40:04.176" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:04.177" starttime="20200911 09:40:00.008"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200911 09:40:04.177" starttime="20200911 09:40:04.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:04.182" level="INFO">Running command 'ozone sh key setacl o3://om:9862/31294-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:07.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:07.969" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:07.969" starttime="20200911 09:40:04.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:07.971" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" endtime="20200911 09:40:07.971" starttime="20200911 09:40:07.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:07.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:07.972" starttime="20200911 09:40:07.971"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:07.972" starttime="20200911 09:40:04.179"></status>
</kw>
<msg timestamp="20200911 09:40:07.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:07.972" starttime="20200911 09:40:04.179"></status>
</kw>
<msg timestamp="20200911 09:40:07.973" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:07.973" starttime="20200911 09:40:04.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:07.978" level="INFO">Running command 'ozone sh key getacl o3://om:9862/31294-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:11.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:11.989" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:11.989" starttime="20200911 09:40:07.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:11.990" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200911 09:40:11.991" starttime="20200911 09:40:11.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:11.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:11.991" starttime="20200911 09:40:11.991"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:11.992" starttime="20200911 09:40:07.974"></status>
</kw>
<msg timestamp="20200911 09:40:11.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:11.992" starttime="20200911 09:40:07.974"></status>
</kw>
<msg timestamp="20200911 09:40:11.992" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:11.992" starttime="20200911 09:40:07.973"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200911 09:40:11.993" starttime="20200911 09:40:11.993"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200911 09:40:11.994" starttime="20200911 09:40:11.993"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:11.994" starttime="20200911 09:39:38.765"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:40:11.995" critical="yes" starttime="20200911 09:39:38.717"></status>
</test>
<test id="s1-s1-s4-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:12.003" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:12.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:12.006" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:40:12.006" starttime="20200911 09:40:12.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:12.007" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:40:12.007" starttime="20200911 09:40:12.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:12.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:12.008" starttime="20200911 09:40:12.008"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:12.008" starttime="20200911 09:40:11.999"></status>
</kw>
<msg timestamp="20200911 09:40:12.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:12.009" starttime="20200911 09:40:11.998"></status>
</kw>
<msg timestamp="20200911 09:40:12.009" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:40:12.009" starttime="20200911 09:40:11.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:40:12.010" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:40:12.010" starttime="20200911 09:40:12.009"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:12.016" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:12.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:12.034" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:40:12.034" starttime="20200911 09:40:12.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:12.035" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:40:12.035" starttime="20200911 09:40:12.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:12.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:12.036" starttime="20200911 09:40:12.035"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:12.036" starttime="20200911 09:40:12.011"></status>
</kw>
<msg timestamp="20200911 09:40:12.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:12.037" starttime="20200911 09:40:12.011"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:12.037" starttime="20200911 09:40:12.011"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:12.037" starttime="20200911 09:40:12.010"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:12.037" starttime="20200911 09:40:11.997"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:12.037" starttime="20200911 09:40:11.997"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:12.042" level="INFO">Running command 'ozone sh volume info o3:///31294-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:15.678" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:40:15.679" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:15.679" starttime="20200911 09:40:12.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:15.680" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 31294-rpcwport is not found</msg>
<status status="PASS" endtime="20200911 09:40:15.680" starttime="20200911 09:40:15.679"></status>
</kw>
<msg timestamp="20200911 09:40:15.681" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:15.681" starttime="20200911 09:40:12.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200911 09:40:15.681" starttime="20200911 09:40:15.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:15.686" level="INFO">Running command 'ozone sh volume create o3:///31294-rpcwport --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:19.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:19.333" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:19.333" starttime="20200911 09:40:15.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:19.334" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:40:19.334" starttime="20200911 09:40:19.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:19.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:19.335" starttime="20200911 09:40:19.335"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:19.336" starttime="20200911 09:40:15.683"></status>
</kw>
<msg timestamp="20200911 09:40:19.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:19.336" starttime="20200911 09:40:15.682"></status>
</kw>
<msg timestamp="20200911 09:40:19.337" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:19.337" starttime="20200911 09:40:15.682"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200911 09:40:19.337" starttime="20200911 09:40:19.337"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:19.344" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="31294-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:23.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:23.293" level="INFO">${output} = {
  "metadata": {},
  "name": "31294-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200911 09:40:23.293" starttime="20200911 09:40:19.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:23.294" level="INFO">{
  "metadata": {},
  "name": "31294-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T09:40:19.273Z",
  "modificationTime": "2020-09-11T09:40:19.273Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200911 09:40:23.294" starttime="20200911 09:40:23.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:23.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:23.295" starttime="20200911 09:40:23.294"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:23.295" starttime="20200911 09:40:19.339"></status>
</kw>
<msg timestamp="20200911 09:40:23.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:23.295" starttime="20200911 09:40:19.338"></status>
</kw>
<msg timestamp="20200911 09:40:23.296" level="INFO">${result} = {
  "metadata": {},
  "name": "31294-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200911 09:40:23.296" starttime="20200911 09:40:19.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:40:23.297" starttime="20200911 09:40:23.296"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:23.301" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="31294-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:27.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:27.279" level="INFO">${output} = {
  "metadata": {},
  "name": "31294-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200911 09:40:27.279" starttime="20200911 09:40:23.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:27.280" level="INFO">{
  "metadata": {},
  "name": "31294-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T09:40:19.273Z",
  "modificationTime": "2020-09-11T09:40:19.273Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200911 09:40:27.280" starttime="20200911 09:40:27.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:27.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:27.281" starttime="20200911 09:40:27.281"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:27.282" starttime="20200911 09:40:23.298"></status>
</kw>
<msg timestamp="20200911 09:40:27.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:27.282" starttime="20200911 09:40:23.298"></status>
</kw>
<msg timestamp="20200911 09:40:27.282" level="INFO">${result} = {
  "metadata": {},
  "name": "31294-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200911 09:40:27.282" starttime="20200911 09:40:23.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:40:27.283" starttime="20200911 09:40:27.282"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:27.287" level="INFO">Running command 'ozone sh volume update o3:///31294-rpcwport --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:31.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:31.048" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:31.048" starttime="20200911 09:40:27.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:31.050" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "31294-rpcwport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-11T09:40:19.273Z",
  "modificationTime" : "2020-09-11T09:40:30.712Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20200911 09:40:31.050" starttime="20200911 09:40:31.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:31.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:31.051" starttime="20200911 09:40:31.050"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:31.051" starttime="20200911 09:40:27.284"></status>
</kw>
<msg timestamp="20200911 09:40:31.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:31.052" starttime="20200911 09:40:27.284"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:31.052" starttime="20200911 09:40:27.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:31.057" level="INFO">Running command 'ozone sh volume info o3:///31294-rpcwport | jq -r '. | select(.name=="31294-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:35.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:35.100" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200911 09:40:35.100" starttime="20200911 09:40:31.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:35.101" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200911 09:40:35.101" starttime="20200911 09:40:35.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:35.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:35.102" starttime="20200911 09:40:35.102"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:35.103" starttime="20200911 09:40:31.054"></status>
</kw>
<msg timestamp="20200911 09:40:35.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:35.103" starttime="20200911 09:40:31.053"></status>
</kw>
<msg timestamp="20200911 09:40:35.103" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200911 09:40:35.103" starttime="20200911 09:40:31.052"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200911 09:40:35.104" starttime="20200911 09:40:35.104"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:35.110" level="INFO">Running command 'ozone sh bucket create o3:///31294-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:38.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:38.747" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:38.748" starttime="20200911 09:40:35.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:38.749" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:40:38.749" starttime="20200911 09:40:38.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:38.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:38.750" starttime="20200911 09:40:38.749"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:38.750" starttime="20200911 09:40:35.106"></status>
</kw>
<msg timestamp="20200911 09:40:38.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:38.750" starttime="20200911 09:40:35.105"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:38.751" starttime="20200911 09:40:35.104"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:38.757" level="INFO">Running command 'ozone sh bucket info o3:///31294-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:42.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:42.539" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200911 09:40:42.539" starttime="20200911 09:40:38.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:42.540" level="INFO">DISK</msg>
<status status="PASS" endtime="20200911 09:40:42.540" starttime="20200911 09:40:42.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:42.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:42.541" starttime="20200911 09:40:42.540"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:42.541" starttime="20200911 09:40:38.752"></status>
</kw>
<msg timestamp="20200911 09:40:42.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:42.542" starttime="20200911 09:40:38.752"></status>
</kw>
<msg timestamp="20200911 09:40:42.542" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200911 09:40:42.542" starttime="20200911 09:40:38.751"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200911 09:40:42.543" starttime="20200911 09:40:42.542"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:42.547" level="INFO">Running command 'ozone sh bucket list o3:///31294-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:46.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:46.796" level="INFO">${output} = 31294-rpcwport</msg>
<status status="PASS" endtime="20200911 09:40:46.796" starttime="20200911 09:40:42.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:46.798" level="INFO">31294-rpcwport</msg>
<status status="PASS" endtime="20200911 09:40:46.798" starttime="20200911 09:40:46.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:46.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:46.799" starttime="20200911 09:40:46.798"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:46.799" starttime="20200911 09:40:42.544"></status>
</kw>
<msg timestamp="20200911 09:40:46.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:46.799" starttime="20200911 09:40:42.544"></status>
</kw>
<msg timestamp="20200911 09:40:46.799" level="INFO">${result} = 31294-rpcwport</msg>
<status status="PASS" endtime="20200911 09:40:46.800" starttime="20200911 09:40:42.543"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:40:46.800" starttime="20200911 09:40:46.800"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:46.807" level="INFO">Running command 'ozone sh key put o3:///31294-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:55.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:55.606" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:40:55.606" starttime="20200911 09:40:46.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:55.608" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:40:55.608" starttime="20200911 09:40:55.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:55.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:55.610" starttime="20200911 09:40:55.608"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:55.610" starttime="20200911 09:40:46.803"></status>
</kw>
<msg timestamp="20200911 09:40:55.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:55.610" starttime="20200911 09:40:46.802"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:55.610" starttime="20200911 09:40:46.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:55.615" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:40:55.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:40:55.618" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:40:55.618" starttime="20200911 09:40:55.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:40:55.619" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:40:55.619" starttime="20200911 09:40:55.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:40:55.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:40:55.620" starttime="20200911 09:40:55.619"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:55.620" starttime="20200911 09:40:55.612"></status>
</kw>
<msg timestamp="20200911 09:40:55.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:40:55.620" starttime="20200911 09:40:55.611"></status>
</kw>
<status status="PASS" endtime="20200911 09:40:55.621" starttime="20200911 09:40:55.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:40:55.626" level="INFO">Running command 'ozone sh key get o3:///31294-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:01.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:01.447" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:01.448" starttime="20200911 09:40:55.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:01.449" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:41:01.449" starttime="20200911 09:41:01.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:01.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:01.450" starttime="20200911 09:41:01.449"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:01.450" starttime="20200911 09:40:55.622"></status>
</kw>
<msg timestamp="20200911 09:41:01.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:01.451" starttime="20200911 09:40:55.622"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:01.451" starttime="20200911 09:40:55.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:01.457" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:01.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:01.458" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:41:01.458" starttime="20200911 09:41:01.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:01.459" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:41:01.460" starttime="20200911 09:41:01.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:01.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:01.461" starttime="20200911 09:41:01.460"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:01.461" starttime="20200911 09:41:01.452"></status>
</kw>
<msg timestamp="20200911 09:41:01.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:01.461" starttime="20200911 09:41:01.452"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:01.461" starttime="20200911 09:41:01.451"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:01.466" level="INFO">Running command 'ozone sh key put -t RATIS o3:///31294-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:07.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:07.599" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:07.599" starttime="20200911 09:41:01.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:07.601" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:41:07.601" starttime="20200911 09:41:07.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:07.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:07.602" starttime="20200911 09:41:07.601"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:07.602" starttime="20200911 09:41:01.463"></status>
</kw>
<msg timestamp="20200911 09:41:07.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:07.602" starttime="20200911 09:41:01.462"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:07.603" starttime="20200911 09:41:01.462"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:07.607" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:07.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:07.610" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:41:07.610" starttime="20200911 09:41:07.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:07.611" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:41:07.611" starttime="20200911 09:41:07.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:07.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:07.612" starttime="20200911 09:41:07.611"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:07.612" starttime="20200911 09:41:07.604"></status>
</kw>
<msg timestamp="20200911 09:41:07.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:07.612" starttime="20200911 09:41:07.603"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:07.613" starttime="20200911 09:41:07.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:07.624" level="INFO">Running command 'ozone sh key get o3:///31294-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:13.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:13.060" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:13.060" starttime="20200911 09:41:07.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:13.062" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:41:13.062" starttime="20200911 09:41:13.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:13.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:13.063" starttime="20200911 09:41:13.062"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:13.063" starttime="20200911 09:41:07.614"></status>
</kw>
<msg timestamp="20200911 09:41:13.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:13.063" starttime="20200911 09:41:07.613"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:13.064" starttime="20200911 09:41:07.613"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:13.068" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:13.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:13.071" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:41:13.071" starttime="20200911 09:41:13.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:13.072" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:41:13.072" starttime="20200911 09:41:13.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:13.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:13.073" starttime="20200911 09:41:13.072"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:13.073" starttime="20200911 09:41:13.065"></status>
</kw>
<msg timestamp="20200911 09:41:13.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:13.074" starttime="20200911 09:41:13.065"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:13.074" starttime="20200911 09:41:13.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:13.079" level="INFO">Running command 'ozone sh key info o3:///31294-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:17.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:17.320" level="INFO">${output} = {
  "volumeName": "31294-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:41:05.207Z",
  "modificationTime": "2020-09-11T09:41:07.132Z",
...</msg>
<status status="PASS" endtime="20200911 09:41:17.320" starttime="20200911 09:41:13.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:17.322" level="INFO">{
  "volumeName": "31294-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:41:05.207Z",
  "modificationTime": "2020-09-11T09:41:07.132Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104845624292278420,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200911 09:41:17.322" starttime="20200911 09:41:17.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:17.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:17.323" starttime="20200911 09:41:17.322"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:17.323" starttime="20200911 09:41:13.075"></status>
</kw>
<msg timestamp="20200911 09:41:17.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:17.324" starttime="20200911 09:41:13.075"></status>
</kw>
<msg timestamp="20200911 09:41:17.324" level="INFO">${result} = {
  "volumeName": "31294-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:41:05.207Z",
  "modificationTime": "2020-09-11T09:41:07.132Z",
...</msg>
<status status="PASS" endtime="20200911 09:41:17.324" starttime="20200911 09:41:13.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200911 09:41:17.325" starttime="20200911 09:41:17.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:17.330" level="INFO">Running command 'ozone sh key delete o3:///31294-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:21.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:21.125" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:21.125" starttime="20200911 09:41:17.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:21.127" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:41:21.127" starttime="20200911 09:41:21.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:21.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:21.127" starttime="20200911 09:41:21.127"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:21.128" starttime="20200911 09:41:17.326"></status>
</kw>
<msg timestamp="20200911 09:41:21.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:21.128" starttime="20200911 09:41:17.326"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:21.128" starttime="20200911 09:41:17.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:21.133" level="INFO">Running command 'ozone sh key cp o3:///31294-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:27.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:27.351" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:27.351" starttime="20200911 09:41:21.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:27.353" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:41:27.353" starttime="20200911 09:41:27.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:27.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:27.354" starttime="20200911 09:41:27.353"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:27.354" starttime="20200911 09:41:21.130"></status>
</kw>
<msg timestamp="20200911 09:41:27.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:27.355" starttime="20200911 09:41:21.129"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:27.355" starttime="20200911 09:41:21.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:27.360" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:27.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:27.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:41:27.362" starttime="20200911 09:41:27.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:27.363" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:41:27.364" starttime="20200911 09:41:27.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:27.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:27.364" starttime="20200911 09:41:27.364"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:27.365" starttime="20200911 09:41:27.356"></status>
</kw>
<msg timestamp="20200911 09:41:27.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:27.365" starttime="20200911 09:41:27.356"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:27.365" starttime="20200911 09:41:27.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:27.370" level="INFO">Running command 'ozone sh key get o3:///31294-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:32.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:32.922" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:32.922" starttime="20200911 09:41:27.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:32.923" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:41:32.923" starttime="20200911 09:41:32.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:32.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:32.924" starttime="20200911 09:41:32.923"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:32.924" starttime="20200911 09:41:27.366"></status>
</kw>
<msg timestamp="20200911 09:41:32.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:32.925" starttime="20200911 09:41:27.366"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:32.925" starttime="20200911 09:41:27.365"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:32.929" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:32.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:32.932" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:41:32.933" starttime="20200911 09:41:32.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:32.933" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:41:32.934" starttime="20200911 09:41:32.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:32.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:32.934" starttime="20200911 09:41:32.934"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:32.935" starttime="20200911 09:41:32.926"></status>
</kw>
<msg timestamp="20200911 09:41:32.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:32.935" starttime="20200911 09:41:32.926"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:32.935" starttime="20200911 09:41:32.925"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:32.941" level="INFO">Running command 'ozone sh key delete o3:///31294-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:36.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:36.635" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:36.635" starttime="20200911 09:41:32.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:36.636" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:41:36.637" starttime="20200911 09:41:36.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:36.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:36.638" starttime="20200911 09:41:36.637"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:36.638" starttime="20200911 09:41:32.937"></status>
</kw>
<msg timestamp="20200911 09:41:36.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:36.638" starttime="20200911 09:41:32.936"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:36.638" starttime="20200911 09:41:32.935"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:36.643" level="INFO">Running command 'ozone sh key get o3:///31294-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:40.566" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:41:40.566" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:40.566" starttime="20200911 09:41:36.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:40.567" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200911 09:41:40.568" starttime="20200911 09:41:40.567"></status>
</kw>
<msg timestamp="20200911 09:41:40.568" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:40.568" starttime="20200911 09:41:36.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200911 09:41:40.569" starttime="20200911 09:41:40.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:40.573" level="INFO">Running command 'ozone sh key get --force o3:///31294-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:46.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:46.368" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:46.368" starttime="20200911 09:41:40.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:46.369" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:41:46.369" starttime="20200911 09:41:46.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:46.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:46.370" starttime="20200911 09:41:46.369"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:46.370" starttime="20200911 09:41:40.570"></status>
</kw>
<msg timestamp="20200911 09:41:46.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:46.371" starttime="20200911 09:41:40.570"></status>
</kw>
<msg timestamp="20200911 09:41:46.371" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:46.371" starttime="20200911 09:41:40.569"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200911 09:41:46.372" starttime="20200911 09:41:46.371"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:46.377" level="INFO">Running command 'ozone sh key info o3:///31294-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:50.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:50.283" level="INFO">${output} = {
  "volumeName": "31294-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:40:50.612Z",
  "modificationTime": "2020-09-11T09:40:54.920Z",
  "rep...</msg>
<status status="PASS" endtime="20200911 09:41:50.283" starttime="20200911 09:41:46.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:50.285" level="INFO">{
  "volumeName": "31294-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:40:50.612Z",
  "modificationTime": "2020-09-11T09:40:54.920Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104845623335846020,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200911 09:41:50.285" starttime="20200911 09:41:50.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:50.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:50.286" starttime="20200911 09:41:50.285"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:50.286" starttime="20200911 09:41:46.374"></status>
</kw>
<msg timestamp="20200911 09:41:50.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:50.286" starttime="20200911 09:41:46.373"></status>
</kw>
<msg timestamp="20200911 09:41:50.287" level="INFO">${result} = {
  "volumeName": "31294-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:40:50.612Z",
  "modificationTime": "2020-09-11T09:40:54.920Z",
  "rep...</msg>
<status status="PASS" endtime="20200911 09:41:50.287" starttime="20200911 09:41:46.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:41:50.288" starttime="20200911 09:41:50.287"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:50.294" level="INFO">Running command 'ozone sh key list o3:///31294-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:54.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:54.385" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200911 09:41:54.385" starttime="20200911 09:41:50.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:54.387" level="INFO">key1</msg>
<status status="PASS" endtime="20200911 09:41:54.387" starttime="20200911 09:41:54.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:54.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:54.388" starttime="20200911 09:41:54.387"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:54.388" starttime="20200911 09:41:50.289"></status>
</kw>
<msg timestamp="20200911 09:41:54.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:54.388" starttime="20200911 09:41:50.289"></status>
</kw>
<msg timestamp="20200911 09:41:54.389" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200911 09:41:54.389" starttime="20200911 09:41:50.288"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200911 09:41:54.389" starttime="20200911 09:41:54.389"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:54.393" level="INFO">Running command 'ozone sh key rename o3:///31294-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:41:57.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:41:57.878" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:41:57.878" starttime="20200911 09:41:54.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:41:57.880" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:41:57.880" starttime="20200911 09:41:57.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:41:57.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:41:57.881" starttime="20200911 09:41:57.880"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:57.882" starttime="20200911 09:41:54.390"></status>
</kw>
<msg timestamp="20200911 09:41:57.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:41:57.882" starttime="20200911 09:41:54.390"></status>
</kw>
<status status="PASS" endtime="20200911 09:41:57.882" starttime="20200911 09:41:54.389"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:41:57.888" level="INFO">Running command 'ozone sh key list o3:///31294-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:01.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:01.832" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200911 09:42:01.832" starttime="20200911 09:41:57.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:01.833" level="INFO">key2</msg>
<status status="PASS" endtime="20200911 09:42:01.833" starttime="20200911 09:42:01.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:01.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:01.836" starttime="20200911 09:42:01.833"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:01.836" starttime="20200911 09:41:57.884"></status>
</kw>
<msg timestamp="20200911 09:42:01.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:01.837" starttime="20200911 09:41:57.883"></status>
</kw>
<msg timestamp="20200911 09:42:01.837" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200911 09:42:01.837" starttime="20200911 09:41:57.883"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200911 09:42:01.838" starttime="20200911 09:42:01.837"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:01.843" level="INFO">Running command 'ozone sh key delete o3:///31294-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:05.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:05.529" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:42:05.529" starttime="20200911 09:42:01.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:05.531" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:42:05.531" starttime="20200911 09:42:05.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:05.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:05.532" starttime="20200911 09:42:05.531"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:05.532" starttime="20200911 09:42:01.839"></status>
</kw>
<msg timestamp="20200911 09:42:05.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:05.532" starttime="20200911 09:42:01.838"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:05.533" starttime="20200911 09:42:01.838"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:05.533" starttime="20200911 09:40:46.801"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:05.533" starttime="20200911 09:40:46.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:05.537" level="INFO">Running command 'ozone sh bucket delete o3:///31294-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:09.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:09.083" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:42:09.083" starttime="20200911 09:42:05.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:09.084" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:42:09.085" starttime="20200911 09:42:09.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:09.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:09.086" starttime="20200911 09:42:09.085"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:09.086" starttime="20200911 09:42:05.534"></status>
</kw>
<msg timestamp="20200911 09:42:09.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:09.086" starttime="20200911 09:42:05.534"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:09.087" starttime="20200911 09:42:05.533"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:09.091" level="INFO">Running command 'ozone sh volume delete o3:///31294-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:11.997" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200911 09:42:11.998" starttime="20200911 09:42:09.089"></status>
</kw>
<status status="FAIL" endtime="20200911 09:42:11.998" starttime="20200911 09:42:09.088"></status>
</kw>
<msg timestamp="20200911 09:42:11.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200911 09:42:11.998" starttime="20200911 09:42:09.088"></status>
</kw>
<status status="FAIL" endtime="20200911 09:42:11.999" starttime="20200911 09:42:09.087"></status>
</kw>
<status status="FAIL" endtime="20200911 09:42:11.999" starttime="20200911 09:40:12.038"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200911 09:42:11.999" critical="yes" starttime="20200911 09:40:11.996">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s4-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:12.024" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:12.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:12.037" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:42:12.037" starttime="20200911 09:42:12.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:12.038" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:42:12.038" starttime="20200911 09:42:12.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:12.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:12.039" starttime="20200911 09:42:12.038"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:12.039" starttime="20200911 09:42:12.006"></status>
</kw>
<msg timestamp="20200911 09:42:12.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:12.040" starttime="20200911 09:42:12.005"></status>
</kw>
<msg timestamp="20200911 09:42:12.040" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:42:12.040" starttime="20200911 09:42:12.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:42:12.041" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:42:12.041" starttime="20200911 09:42:12.040"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:12.057" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:12.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:12.087" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:42:12.087" starttime="20200911 09:42:12.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:12.089" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:42:12.089" starttime="20200911 09:42:12.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:12.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:12.090" starttime="20200911 09:42:12.089"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:12.090" starttime="20200911 09:42:12.045"></status>
</kw>
<msg timestamp="20200911 09:42:12.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:12.090" starttime="20200911 09:42:12.044"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:12.091" starttime="20200911 09:42:12.042"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:12.091" starttime="20200911 09:42:12.041"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:12.091" starttime="20200911 09:42:12.004"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:12.091" starttime="20200911 09:42:12.003"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:12.108" level="INFO">Running command 'ozone sh volume info /31294-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:16.343" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:42:16.343" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:42:16.343" starttime="20200911 09:42:12.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:16.345" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 31294-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200911 09:42:16.345" starttime="20200911 09:42:16.344"></status>
</kw>
<msg timestamp="20200911 09:42:16.345" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:42:16.345" starttime="20200911 09:42:12.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200911 09:42:16.346" starttime="20200911 09:42:16.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:16.351" level="INFO">Running command 'ozone sh volume create /31294-rpcwoscheme --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:19.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:19.764" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:42:19.764" starttime="20200911 09:42:16.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:19.766" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:42:19.766" starttime="20200911 09:42:19.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:19.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:19.767" starttime="20200911 09:42:19.766"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:19.767" starttime="20200911 09:42:16.347"></status>
</kw>
<msg timestamp="20200911 09:42:19.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:19.767" starttime="20200911 09:42:16.347"></status>
</kw>
<msg timestamp="20200911 09:42:19.767" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:42:19.768" starttime="20200911 09:42:16.346"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200911 09:42:19.768" starttime="20200911 09:42:19.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:19.773" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="31294-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:23.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:23.644" level="INFO">${output} = {
  "metadata": {},
  "name": "31294-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200911 09:42:23.644" starttime="20200911 09:42:19.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:23.645" level="INFO">{
  "metadata": {},
  "name": "31294-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T09:42:19.701Z",
  "modificationTime": "2020-09-11T09:42:19.701Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200911 09:42:23.645" starttime="20200911 09:42:23.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:23.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:23.646" starttime="20200911 09:42:23.645"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:23.646" starttime="20200911 09:42:19.770"></status>
</kw>
<msg timestamp="20200911 09:42:23.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:23.647" starttime="20200911 09:42:19.769"></status>
</kw>
<msg timestamp="20200911 09:42:23.647" level="INFO">${result} = {
  "metadata": {},
  "name": "31294-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200911 09:42:23.647" starttime="20200911 09:42:19.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:42:23.648" starttime="20200911 09:42:23.647"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:23.652" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="31294-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:27.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:27.813" level="INFO">${output} = {
  "metadata": {},
  "name": "31294-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200911 09:42:27.813" starttime="20200911 09:42:23.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:27.814" level="INFO">{
  "metadata": {},
  "name": "31294-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-11T09:42:19.701Z",
  "modificationTime": "2020-09-11T09:42:19.701Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200911 09:42:27.814" starttime="20200911 09:42:27.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:27.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:27.815" starttime="20200911 09:42:27.815"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:27.816" starttime="20200911 09:42:23.649"></status>
</kw>
<msg timestamp="20200911 09:42:27.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:27.816" starttime="20200911 09:42:23.649"></status>
</kw>
<msg timestamp="20200911 09:42:27.816" level="INFO">${result} = {
  "metadata": {},
  "name": "31294-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200911 09:42:27.816" starttime="20200911 09:42:23.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:42:27.817" starttime="20200911 09:42:27.816"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:27.823" level="INFO">Running command 'ozone sh volume update /31294-rpcwoscheme --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:31.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:31.868" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:42:31.868" starttime="20200911 09:42:27.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:31.869" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "31294-rpcwoscheme",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-11T09:42:19.701Z",
  "modificationTime" : "2020-09-11T09:42:31.415Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20200911 09:42:31.870" starttime="20200911 09:42:31.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:31.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:31.870" starttime="20200911 09:42:31.870"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:31.871" starttime="20200911 09:42:27.818"></status>
</kw>
<msg timestamp="20200911 09:42:31.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:31.871" starttime="20200911 09:42:27.818"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:31.871" starttime="20200911 09:42:27.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:31.876" level="INFO">Running command 'ozone sh volume info /31294-rpcwoscheme | jq -r '. | select(.name=="31294-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:36.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:36.185" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200911 09:42:36.185" starttime="20200911 09:42:31.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:36.186" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200911 09:42:36.187" starttime="20200911 09:42:36.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:36.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:36.187" starttime="20200911 09:42:36.187"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:36.188" starttime="20200911 09:42:31.873"></status>
</kw>
<msg timestamp="20200911 09:42:36.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:36.188" starttime="20200911 09:42:31.873"></status>
</kw>
<msg timestamp="20200911 09:42:36.188" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200911 09:42:36.188" starttime="20200911 09:42:31.871"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200911 09:42:36.189" starttime="20200911 09:42:36.189"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:36.194" level="INFO">Running command 'ozone sh bucket create /31294-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:39.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:39.908" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:42:39.908" starttime="20200911 09:42:36.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:39.910" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:42:39.910" starttime="20200911 09:42:39.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:39.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:39.911" starttime="20200911 09:42:39.910"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:39.911" starttime="20200911 09:42:36.191"></status>
</kw>
<msg timestamp="20200911 09:42:39.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:39.911" starttime="20200911 09:42:36.190"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:39.911" starttime="20200911 09:42:36.189"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:39.916" level="INFO">Running command 'ozone sh bucket info /31294-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:43.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:43.963" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200911 09:42:43.963" starttime="20200911 09:42:39.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:43.964" level="INFO">DISK</msg>
<status status="PASS" endtime="20200911 09:42:43.964" starttime="20200911 09:42:43.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:43.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:43.965" starttime="20200911 09:42:43.965"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:43.966" starttime="20200911 09:42:39.913"></status>
</kw>
<msg timestamp="20200911 09:42:43.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:43.966" starttime="20200911 09:42:39.913"></status>
</kw>
<msg timestamp="20200911 09:42:43.966" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200911 09:42:43.966" starttime="20200911 09:42:39.912"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200911 09:42:43.967" starttime="20200911 09:42:43.966"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:43.971" level="INFO">Running command 'ozone sh bucket list /31294-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:47.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:47.986" level="INFO">${output} = 31294-rpcwoscheme</msg>
<status status="PASS" endtime="20200911 09:42:47.987" starttime="20200911 09:42:43.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:47.988" level="INFO">31294-rpcwoscheme</msg>
<status status="PASS" endtime="20200911 09:42:47.988" starttime="20200911 09:42:47.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:47.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:47.989" starttime="20200911 09:42:47.988"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:47.989" starttime="20200911 09:42:43.968"></status>
</kw>
<msg timestamp="20200911 09:42:47.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:47.989" starttime="20200911 09:42:43.968"></status>
</kw>
<msg timestamp="20200911 09:42:47.990" level="INFO">${result} = 31294-rpcwoscheme</msg>
<status status="PASS" endtime="20200911 09:42:47.990" starttime="20200911 09:42:43.967"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200911 09:42:47.991" starttime="20200911 09:42:47.990"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:47.998" level="INFO">Running command 'ozone sh key put /31294-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:53.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:53.758" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:42:53.758" starttime="20200911 09:42:47.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:53.760" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:42:53.760" starttime="20200911 09:42:53.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:53.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:53.761" starttime="20200911 09:42:53.760"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:53.761" starttime="20200911 09:42:47.993"></status>
</kw>
<msg timestamp="20200911 09:42:53.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:53.762" starttime="20200911 09:42:47.993"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:53.762" starttime="20200911 09:42:47.992"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:53.766" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:53.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:53.769" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:42:53.769" starttime="20200911 09:42:53.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:53.770" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:42:53.770" starttime="20200911 09:42:53.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:53.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:53.771" starttime="20200911 09:42:53.770"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:53.771" starttime="20200911 09:42:53.763"></status>
</kw>
<msg timestamp="20200911 09:42:53.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:53.772" starttime="20200911 09:42:53.763"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:53.772" starttime="20200911 09:42:53.762"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:53.777" level="INFO">Running command 'ozone sh key get /31294-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:59.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:59.668" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:42:59.668" starttime="20200911 09:42:53.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:59.670" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:42:59.670" starttime="20200911 09:42:59.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:59.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:59.671" starttime="20200911 09:42:59.670"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:59.671" starttime="20200911 09:42:53.773"></status>
</kw>
<msg timestamp="20200911 09:42:59.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:59.671" starttime="20200911 09:42:53.773"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:59.671" starttime="20200911 09:42:53.772"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:59.676" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:42:59.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:42:59.679" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:42:59.679" starttime="20200911 09:42:59.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:42:59.680" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:42:59.680" starttime="20200911 09:42:59.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:42:59.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:42:59.681" starttime="20200911 09:42:59.680"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:59.681" starttime="20200911 09:42:59.673"></status>
</kw>
<msg timestamp="20200911 09:42:59.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:42:59.681" starttime="20200911 09:42:59.672"></status>
</kw>
<status status="PASS" endtime="20200911 09:42:59.681" starttime="20200911 09:42:59.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:42:59.686" level="INFO">Running command 'ozone sh key put -t RATIS /31294-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:08.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:08.068" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:43:08.068" starttime="20200911 09:42:59.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:08.070" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:43:08.070" starttime="20200911 09:43:08.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:08.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:08.071" starttime="20200911 09:43:08.070"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:08.071" starttime="20200911 09:42:59.683"></status>
</kw>
<msg timestamp="20200911 09:43:08.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:08.071" starttime="20200911 09:42:59.682"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:08.072" starttime="20200911 09:42:59.682"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:08.076" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:08.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:08.079" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:43:08.079" starttime="20200911 09:43:08.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:08.080" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:43:08.080" starttime="20200911 09:43:08.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:08.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:08.081" starttime="20200911 09:43:08.080"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:08.081" starttime="20200911 09:43:08.073"></status>
</kw>
<msg timestamp="20200911 09:43:08.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:08.081" starttime="20200911 09:43:08.073"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:08.081" starttime="20200911 09:43:08.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:08.085" level="INFO">Running command 'ozone sh key get /31294-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:13.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:13.746" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:43:13.746" starttime="20200911 09:43:08.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:13.748" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:43:13.748" starttime="20200911 09:43:13.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:13.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:13.749" starttime="20200911 09:43:13.748"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:13.749" starttime="20200911 09:43:08.082"></status>
</kw>
<msg timestamp="20200911 09:43:13.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:13.749" starttime="20200911 09:43:08.082"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:13.750" starttime="20200911 09:43:08.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:13.754" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:13.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:13.757" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:43:13.757" starttime="20200911 09:43:13.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:13.758" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:43:13.758" starttime="20200911 09:43:13.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:13.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:13.759" starttime="20200911 09:43:13.758"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:13.759" starttime="20200911 09:43:13.751"></status>
</kw>
<msg timestamp="20200911 09:43:13.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:13.759" starttime="20200911 09:43:13.750"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:13.760" starttime="20200911 09:43:13.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:13.764" level="INFO">Running command 'ozone sh key info /31294-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:17.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:17.917" level="INFO">${output} = {
  "volumeName": "31294-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:43:03.309Z",
  "modificationTime": "2020-09-11T09:43:07.669Z...</msg>
<status status="PASS" endtime="20200911 09:43:17.917" starttime="20200911 09:43:13.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:17.919" level="INFO">{
  "volumeName": "31294-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:43:03.309Z",
  "modificationTime": "2020-09-11T09:43:07.669Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104845632032276620,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200911 09:43:17.919" starttime="20200911 09:43:17.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:17.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:17.920" starttime="20200911 09:43:17.919"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:17.920" starttime="20200911 09:43:13.761"></status>
</kw>
<msg timestamp="20200911 09:43:17.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:17.921" starttime="20200911 09:43:13.761"></status>
</kw>
<msg timestamp="20200911 09:43:17.921" level="INFO">${result} = {
  "volumeName": "31294-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:43:03.309Z",
  "modificationTime": "2020-09-11T09:43:07.669Z...</msg>
<status status="PASS" endtime="20200911 09:43:17.921" starttime="20200911 09:43:13.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200911 09:43:17.921" starttime="20200911 09:43:17.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:17.926" level="INFO">Running command 'ozone sh key delete /31294-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:21.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:21.640" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:43:21.640" starttime="20200911 09:43:17.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:21.641" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:43:21.642" starttime="20200911 09:43:21.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:21.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:21.642" starttime="20200911 09:43:21.642"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:21.643" starttime="20200911 09:43:17.923"></status>
</kw>
<msg timestamp="20200911 09:43:21.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:21.643" starttime="20200911 09:43:17.922"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:21.643" starttime="20200911 09:43:17.922"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:21.649" level="INFO">Running command 'ozone sh key cp /31294-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:28.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:28.005" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:43:28.005" starttime="20200911 09:43:21.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:28.007" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:43:28.007" starttime="20200911 09:43:28.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:28.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:28.008" starttime="20200911 09:43:28.008"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:28.009" starttime="20200911 09:43:21.645"></status>
</kw>
<msg timestamp="20200911 09:43:28.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:28.009" starttime="20200911 09:43:21.644"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:28.009" starttime="20200911 09:43:21.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:28.014" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:28.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:28.016" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:43:28.017" starttime="20200911 09:43:28.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:28.018" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:43:28.018" starttime="20200911 09:43:28.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:28.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:28.018" starttime="20200911 09:43:28.018"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:28.019" starttime="20200911 09:43:28.010"></status>
</kw>
<msg timestamp="20200911 09:43:28.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:28.019" starttime="20200911 09:43:28.010"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:28.019" starttime="20200911 09:43:28.009"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:28.025" level="INFO">Running command 'ozone sh key get /31294-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:33.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:33.364" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:43:33.364" starttime="20200911 09:43:28.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:33.366" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:43:33.366" starttime="20200911 09:43:33.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:33.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:33.367" starttime="20200911 09:43:33.366"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:33.367" starttime="20200911 09:43:28.022"></status>
</kw>
<msg timestamp="20200911 09:43:33.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:33.367" starttime="20200911 09:43:28.021"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:33.367" starttime="20200911 09:43:28.019"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:33.372" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:33.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:33.375" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:43:33.375" starttime="20200911 09:43:33.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:33.377" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:43:33.377" starttime="20200911 09:43:33.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:33.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:33.378" starttime="20200911 09:43:33.377"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:33.378" starttime="20200911 09:43:33.369"></status>
</kw>
<msg timestamp="20200911 09:43:33.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:33.379" starttime="20200911 09:43:33.368"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:33.379" starttime="20200911 09:43:33.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:33.386" level="INFO">Running command 'ozone sh key delete /31294-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:37.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:37.219" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:43:37.219" starttime="20200911 09:43:33.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:37.221" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:43:37.221" starttime="20200911 09:43:37.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:37.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:37.221" starttime="20200911 09:43:37.221"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:37.222" starttime="20200911 09:43:33.380"></status>
</kw>
<msg timestamp="20200911 09:43:37.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:37.222" starttime="20200911 09:43:33.380"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:37.222" starttime="20200911 09:43:33.379"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:37.226" level="INFO">Running command 'ozone sh key get /31294-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:41.010" level="INFO">${rc} = 255</msg>
<msg timestamp="20200911 09:43:41.010" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:43:41.010" starttime="20200911 09:43:37.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:41.011" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200911 09:43:41.011" starttime="20200911 09:43:41.011"></status>
</kw>
<msg timestamp="20200911 09:43:41.012" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:43:41.012" starttime="20200911 09:43:37.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200911 09:43:41.013" starttime="20200911 09:43:41.012"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:41.017" level="INFO">Running command 'ozone sh key get --force /31294-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:46.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:46.527" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:43:46.527" starttime="20200911 09:43:41.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:46.529" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:43:46.529" starttime="20200911 09:43:46.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:46.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:46.530" starttime="20200911 09:43:46.529"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:46.530" starttime="20200911 09:43:41.014"></status>
</kw>
<msg timestamp="20200911 09:43:46.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:46.531" starttime="20200911 09:43:41.014"></status>
</kw>
<msg timestamp="20200911 09:43:46.531" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:43:46.531" starttime="20200911 09:43:41.013"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200911 09:43:46.532" starttime="20200911 09:43:46.531"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:46.537" level="INFO">Running command 'ozone sh key info /31294-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:50.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:50.644" level="INFO">${output} = {
  "volumeName": "31294-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:42:51.424Z",
  "modificationTime": "2020-09-11T09:42:53.190Z",
  "...</msg>
<status status="PASS" endtime="20200911 09:43:50.644" starttime="20200911 09:43:46.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:50.646" level="INFO">{
  "volumeName": "31294-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:42:51.424Z",
  "modificationTime": "2020-09-11T09:42:53.190Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104845631253446800,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200911 09:43:50.646" starttime="20200911 09:43:50.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:50.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:50.647" starttime="20200911 09:43:50.646"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:50.647" starttime="20200911 09:43:46.534"></status>
</kw>
<msg timestamp="20200911 09:43:50.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:50.647" starttime="20200911 09:43:46.533"></status>
</kw>
<msg timestamp="20200911 09:43:50.648" level="INFO">${result} = {
  "volumeName": "31294-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-11T09:42:51.424Z",
  "modificationTime": "2020-09-11T09:42:53.190Z",
  "...</msg>
<status status="PASS" endtime="20200911 09:43:50.648" starttime="20200911 09:43:46.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200911 09:43:50.648" starttime="20200911 09:43:50.648"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:50.653" level="INFO">Running command 'ozone sh key list /31294-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:54.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:54.850" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200911 09:43:54.850" starttime="20200911 09:43:50.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:54.851" level="INFO">key1</msg>
<status status="PASS" endtime="20200911 09:43:54.852" starttime="20200911 09:43:54.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:54.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:54.853" starttime="20200911 09:43:54.852"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:54.853" starttime="20200911 09:43:50.650"></status>
</kw>
<msg timestamp="20200911 09:43:54.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:54.853" starttime="20200911 09:43:50.650"></status>
</kw>
<msg timestamp="20200911 09:43:54.854" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200911 09:43:54.854" starttime="20200911 09:43:50.649"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200911 09:43:54.854" starttime="20200911 09:43:54.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:54.860" level="INFO">Running command 'ozone sh key rename /31294-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:43:58.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:43:58.705" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:43:58.706" starttime="20200911 09:43:54.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:43:58.707" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:43:58.707" starttime="20200911 09:43:58.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:43:58.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:43:58.708" starttime="20200911 09:43:58.707"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:58.708" starttime="20200911 09:43:54.856"></status>
</kw>
<msg timestamp="20200911 09:43:58.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:43:58.708" starttime="20200911 09:43:54.855"></status>
</kw>
<status status="PASS" endtime="20200911 09:43:58.709" starttime="20200911 09:43:54.855"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:43:58.714" level="INFO">Running command 'ozone sh key list /31294-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:44:02.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:44:02.721" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200911 09:44:02.721" starttime="20200911 09:43:58.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:44:02.723" level="INFO">key2</msg>
<status status="PASS" endtime="20200911 09:44:02.723" starttime="20200911 09:44:02.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:44:02.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:44:02.724" starttime="20200911 09:44:02.723"></status>
</kw>
<status status="PASS" endtime="20200911 09:44:02.724" starttime="20200911 09:43:58.711"></status>
</kw>
<msg timestamp="20200911 09:44:02.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:44:02.725" starttime="20200911 09:43:58.710"></status>
</kw>
<msg timestamp="20200911 09:44:02.725" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200911 09:44:02.725" starttime="20200911 09:43:58.709"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200911 09:44:02.726" starttime="20200911 09:44:02.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:44:02.731" level="INFO">Running command 'ozone sh key delete /31294-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:44:06.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:44:06.603" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:44:06.603" starttime="20200911 09:44:02.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:44:06.604" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:44:06.604" starttime="20200911 09:44:06.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:44:06.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:44:06.605" starttime="20200911 09:44:06.604"></status>
</kw>
<status status="PASS" endtime="20200911 09:44:06.605" starttime="20200911 09:44:02.727"></status>
</kw>
<msg timestamp="20200911 09:44:06.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:44:06.606" starttime="20200911 09:44:02.727"></status>
</kw>
<status status="PASS" endtime="20200911 09:44:06.606" starttime="20200911 09:44:02.726"></status>
</kw>
<status status="PASS" endtime="20200911 09:44:06.606" starttime="20200911 09:42:47.991"></status>
</kw>
<status status="PASS" endtime="20200911 09:44:06.606" starttime="20200911 09:42:47.991"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:44:06.611" level="INFO">Running command 'ozone sh bucket delete /31294-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:44:10.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:44:10.233" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200911 09:44:10.233" starttime="20200911 09:44:06.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:44:10.235" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200911 09:44:10.235" starttime="20200911 09:44:10.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:44:10.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:44:10.236" starttime="20200911 09:44:10.235"></status>
</kw>
<status status="PASS" endtime="20200911 09:44:10.236" starttime="20200911 09:44:06.608"></status>
</kw>
<msg timestamp="20200911 09:44:10.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:44:10.236" starttime="20200911 09:44:06.607"></status>
</kw>
<status status="PASS" endtime="20200911 09:44:10.237" starttime="20200911 09:44:06.607"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:44:10.243" level="INFO">Running command 'ozone sh volume delete /31294-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:44:12.003" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200911 09:44:12.003" starttime="20200911 09:44:10.239"></status>
</kw>
<status status="FAIL" endtime="20200911 09:44:12.004" starttime="20200911 09:44:10.238"></status>
</kw>
<msg timestamp="20200911 09:44:12.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200911 09:44:12.004" starttime="20200911 09:44:10.238"></status>
</kw>
<status status="FAIL" endtime="20200911 09:44:12.004" starttime="20200911 09:44:10.237"></status>
</kw>
<status status="FAIL" endtime="20200911 09:44:12.005" starttime="20200911 09:42:12.091"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200911 09:44:12.005" critical="yes" starttime="20200911 09:42:12.001">Test timeout 2 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20200911 09:44:12.009" starttime="20200911 09:36:35.292"></status>
</suite>
<status status="FAIL" endtime="20200911 09:44:12.026" starttime="20200911 09:29:54.309"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:29:48.574" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:29:48.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:29:48.576" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200911 09:29:48.576" starttime="20200911 09:29:48.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:29:48.577" level="INFO">scm</msg>
<status status="PASS" endtime="20200911 09:29:48.577" starttime="20200911 09:29:48.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:29:48.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:29:48.578" starttime="20200911 09:29:48.578"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:48.578" starttime="20200911 09:29:48.568"></status>
</kw>
<msg timestamp="20200911 09:29:48.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:29:48.579" starttime="20200911 09:29:48.567"></status>
</kw>
<msg timestamp="20200911 09:29:48.579" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200911 09:29:48.579" starttime="20200911 09:29:48.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200911 09:29:48.580" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200911 09:29:48.580" starttime="20200911 09:29:48.579"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200911 09:29:48.585" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200911 09:29:48.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20200911 09:29:48.603" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200911 09:29:48.603" starttime="20200911 09:29:48.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200911 09:29:48.604" level="INFO"></msg>
<status status="PASS" endtime="20200911 09:29:48.604" starttime="20200911 09:29:48.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200911 09:29:48.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200911 09:29:48.605" starttime="20200911 09:29:48.604"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:48.605" starttime="20200911 09:29:48.581"></status>
</kw>
<msg timestamp="20200911 09:29:48.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200911 09:29:48.606" starttime="20200911 09:29:48.581"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:48.606" starttime="20200911 09:29:48.580"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:48.606" starttime="20200911 09:29:48.580"></status>
</kw>
<status status="PASS" endtime="20200911 09:29:48.606" starttime="20200911 09:29:48.566"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200911 09:29:48.606" critical="yes" starttime="20200911 09:29:48.565"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200911 09:29:48.607" starttime="20200911 09:29:48.502"></status>
</suite>
<status status="FAIL" elapsedtime="857822" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="4" pass="21">Critical Tests</stat>
<stat fail="4" pass="21">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="4" id="s1" name="ozonesecure" pass="21">ozonesecure</stat>
<stat fail="4" id="s1-s1" name="Basic" pass="20">ozonesecure.Basic</stat>
<stat fail="0" id="s1-s1-s1" name="Basic" pass="2">ozonesecure.Basic.Basic</stat>
<stat fail="0" id="s1-s1-s2" name="Links" pass="15">ozonesecure.Basic.Links</stat>
<stat fail="1" id="s1-s1-s3" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="3" id="s1-s1-s4" name="Ozone-Shell" pass="3">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
