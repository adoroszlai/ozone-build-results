<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200901 02:05:10.860" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 02:04:30.616" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 02:04:41.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 02:04:41.451" level="INFO">${output} = 2020-09-01 02:04:32,436 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:32,634 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200901 02:04:41.451" starttime="20200901 02:04:30.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 02:04:41.453" level="INFO">2020-09-01 02:04:32,436 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:32,634 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-01 02:04:32,634 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-01 02:04:35,044 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-09-01 02:04:35,045 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-09-01 02:04:35,045 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-09-01 02:04:35,045 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-09-01 02:04:35,045 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-09-01 02:04:35,045 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-09-01 02:04:35,045 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-09-01 02:04:35,051 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-09-01 02:04:35,061 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:35,096 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-53745, with testuser/scm@EXAMPLE.COM as owner.
2020-09-01 02:04:35,580 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-53745/bucket-0-90130, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-01 02:04:36,063 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:37,066 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:38,078 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:38,686 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-01 02:04:39,081 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:40,082 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,469
Average Time spent in bucket creation: 00:00:00,224
Average Time spent in key creation: 00:00:01,394
Average Time spent in key write: 00:00:02,222
Total bytes written: 10240
Total Execution time: 00:00:08,170
***************************************************</msg>
<status status="PASS" endtime="20200901 02:04:41.454" starttime="20200901 02:04:41.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 02:04:41.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 02:04:41.455" starttime="20200901 02:04:41.454"></status>
</kw>
<status status="PASS" endtime="20200901 02:04:41.455" starttime="20200901 02:04:30.611"></status>
</kw>
<msg timestamp="20200901 02:04:41.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 02:04:41.455" starttime="20200901 02:04:30.611"></status>
</kw>
<msg timestamp="20200901 02:04:41.456" level="INFO">${result} = 2020-09-01 02:04:32,436 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:32,634 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200901 02:04:41.456" starttime="20200901 02:04:30.610"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200901 02:04:41.457" starttime="20200901 02:04:41.457"></status>
</kw>
<status status="PASS" endtime="20200901 02:04:41.457" starttime="20200901 02:04:41.456"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200901 02:04:41.457" critical="yes" starttime="20200901 02:04:30.609"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 02:04:41.463" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 02:04:52.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 02:04:52.102" level="INFO">${output} = 2020-09-01 02:04:43,473 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:43,667 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200901 02:04:52.102" starttime="20200901 02:04:41.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 02:04:52.105" level="INFO">2020-09-01 02:04:43,473 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:43,667 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-01 02:04:43,667 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-01 02:04:43,807 [main] INFO freon.BaseFreonGenerator: Executing test with prefix csgk5lpr2r
2020-09-01 02:04:43,824 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-01 02:04:44,832 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:45,393 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-09-01 02:04:45,464 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-01 02:04:45,833 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:46,098 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-01 02:04:46,833 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:47,835 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:48,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:49,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:50,837 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-01 02:04:51,724 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5262.747003, max=5262.747003, mean=5262.747003, stddev=0.0, median=5262.747003, p75=5262.747003, p95=5262.747003, p98=5262.747003, p99=5262.747003, p999=5262.747003, mean_rate=0.16170048216519214, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-01 02:04:51,725 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2020-09-01 02:04:51,725 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-01 02:04:51,725 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200901 02:04:52.105" starttime="20200901 02:04:52.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 02:04:52.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 02:04:52.106" starttime="20200901 02:04:52.105"></status>
</kw>
<status status="PASS" endtime="20200901 02:04:52.106" starttime="20200901 02:04:41.460"></status>
</kw>
<msg timestamp="20200901 02:04:52.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 02:04:52.106" starttime="20200901 02:04:41.460"></status>
</kw>
<msg timestamp="20200901 02:04:52.107" level="INFO">${result} = 2020-09-01 02:04:43,473 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:43,667 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200901 02:04:52.107" starttime="20200901 02:04:41.459"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200901 02:04:52.108" starttime="20200901 02:04:52.107"></status>
</kw>
<status status="PASS" endtime="20200901 02:04:52.108" starttime="20200901 02:04:52.107"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200901 02:04:52.108" critical="yes" starttime="20200901 02:04:41.458"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 02:04:52.113" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 02:04:57.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 02:04:57.625" level="INFO">${output} = 2020-09-01 02:04:54,005 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:54,234 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200901 02:04:57.625" starttime="20200901 02:04:52.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 02:04:57.626" level="INFO">2020-09-01 02:04:54,005 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:54,234 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-01 02:04:54,234 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-01 02:04:54,428 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 2we42rnnwc
2020-09-01 02:04:54,439 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-01 02:04:55,443 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:56,446 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:04:57,446 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-01 02:04:57,589 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=285.101483, max=285.101483, mean=285.101483, stddev=0.0, median=285.101483, p75=285.101483, p95=285.101483, p98=285.101483, p99=285.101483, p999=285.101483, mean_rate=0.6837413725667452, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-01 02:04:57,591 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-09-01 02:04:57,591 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-01 02:04:57,591 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200901 02:04:57.626" starttime="20200901 02:04:57.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 02:04:57.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 02:04:57.627" starttime="20200901 02:04:57.626"></status>
</kw>
<status status="PASS" endtime="20200901 02:04:57.627" starttime="20200901 02:04:52.111"></status>
</kw>
<msg timestamp="20200901 02:04:57.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 02:04:57.628" starttime="20200901 02:04:52.111"></status>
</kw>
<msg timestamp="20200901 02:04:57.628" level="INFO">${result} = 2020-09-01 02:04:54,005 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:54,234 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200901 02:04:57.628" starttime="20200901 02:04:52.110"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200901 02:04:57.629" starttime="20200901 02:04:57.629"></status>
</kw>
<status status="PASS" endtime="20200901 02:04:57.629" starttime="20200901 02:04:57.628"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200901 02:04:57.630" critical="yes" starttime="20200901 02:04:52.109"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 02:04:57.636" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 02:05:02.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 02:05:02.531" level="INFO">${output} = 2020-09-01 02:04:59,503 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:59,700 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200901 02:05:02.531" starttime="20200901 02:04:57.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 02:05:02.532" level="INFO">2020-09-01 02:04:59,503 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:59,700 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-01 02:04:59,700 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-01 02:04:59,864 [main] INFO freon.BaseFreonGenerator: Executing test with prefix i32eadngzd
2020-09-01 02:04:59,874 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-01 02:05:00,880 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-01 02:05:01,881 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-01 02:05:02,498 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=85.436398, max=85.436398, mean=85.436398, stddev=0.0, median=85.436398, p75=85.436398, p95=85.436398, p98=85.436398, p99=85.436398, p999=85.436398, mean_rate=0.879568185358004, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-01 02:05:02,498 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-09-01 02:05:02,498 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-01 02:05:02,498 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200901 02:05:02.533" starttime="20200901 02:05:02.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 02:05:02.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 02:05:02.533" starttime="20200901 02:05:02.533"></status>
</kw>
<status status="PASS" endtime="20200901 02:05:02.534" starttime="20200901 02:04:57.633"></status>
</kw>
<msg timestamp="20200901 02:05:02.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 02:05:02.534" starttime="20200901 02:04:57.633"></status>
</kw>
<msg timestamp="20200901 02:05:02.534" level="INFO">${result} = 2020-09-01 02:04:59,503 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-01 02:04:59,700 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200901 02:05:02.535" starttime="20200901 02:04:57.632"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200901 02:05:02.536" starttime="20200901 02:05:02.535"></status>
</kw>
<status status="PASS" endtime="20200901 02:05:02.536" starttime="20200901 02:05:02.535"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200901 02:05:02.536" critical="yes" starttime="20200901 02:04:57.631"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200901 02:05:02.538" starttime="20200901 02:04:30.580"></status>
</suite>
<status status="PASS" endtime="20200901 02:05:02.542" starttime="20200901 02:04:30.548"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 02:04:23.475" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 02:04:23.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 02:04:23.485" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200901 02:04:23.485" starttime="20200901 02:04:23.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 02:04:23.486" level="INFO">scm</msg>
<status status="PASS" endtime="20200901 02:04:23.486" starttime="20200901 02:04:23.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 02:04:23.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 02:04:23.492" starttime="20200901 02:04:23.486"></status>
</kw>
<status status="PASS" endtime="20200901 02:04:23.492" starttime="20200901 02:04:23.465"></status>
</kw>
<msg timestamp="20200901 02:04:23.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 02:04:23.492" starttime="20200901 02:04:23.464"></status>
</kw>
<msg timestamp="20200901 02:04:23.492" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200901 02:04:23.492" starttime="20200901 02:04:23.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200901 02:04:23.494" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200901 02:04:23.494" starttime="20200901 02:04:23.493"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 02:04:23.506" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 02:04:23.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 02:04:23.538" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 02:04:23.538" starttime="20200901 02:04:23.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 02:04:23.539" level="INFO"></msg>
<status status="PASS" endtime="20200901 02:04:23.539" starttime="20200901 02:04:23.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 02:04:23.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 02:04:23.540" starttime="20200901 02:04:23.539"></status>
</kw>
<status status="PASS" endtime="20200901 02:04:23.541" starttime="20200901 02:04:23.496"></status>
</kw>
<msg timestamp="20200901 02:04:23.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 02:04:23.541" starttime="20200901 02:04:23.495"></status>
</kw>
<status status="PASS" endtime="20200901 02:04:23.541" starttime="20200901 02:04:23.495"></status>
</kw>
<status status="PASS" endtime="20200901 02:04:23.541" starttime="20200901 02:04:23.494"></status>
</kw>
<status status="PASS" endtime="20200901 02:04:23.541" starttime="20200901 02:04:23.463"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200901 02:04:23.542" critical="yes" starttime="20200901 02:04:23.461"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200901 02:04:23.543" starttime="20200901 02:04:23.182"></status>
</suite>
<status status="PASS" elapsedtime="32355" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="5">Critical Tests</stat>
<stat fail="0" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="5">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
