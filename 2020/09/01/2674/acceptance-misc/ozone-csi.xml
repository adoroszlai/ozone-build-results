<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200901 01:14:45.508" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:14:34.281" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:14:34.282" level="INFO">${rc} = 1</msg>
<msg timestamp="20200901 01:14:34.282" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:14:34.282" starttime="20200901 01:14:34.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:14:34.283" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:14:34.283" starttime="20200901 01:14:34.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:14:34.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200901 01:14:34.284" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200901 01:14:34.284" starttime="20200901 01:14:34.284"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:34.285" starttime="20200901 01:14:34.274"></status>
</kw>
<msg timestamp="20200901 01:14:34.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200901 01:14:34.285" starttime="20200901 01:14:34.274"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:34.285" starttime="20200901 01:14:34.273"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:34.285" starttime="20200901 01:14:34.273"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:14:35.293" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:14:35.296" level="INFO">${rc} = 1</msg>
<msg timestamp="20200901 01:14:35.296" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:14:35.296" starttime="20200901 01:14:35.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:14:35.297" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:14:35.297" starttime="20200901 01:14:35.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:14:35.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200901 01:14:35.298" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200901 01:14:35.298" starttime="20200901 01:14:35.297"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:35.299" starttime="20200901 01:14:35.288"></status>
</kw>
<msg timestamp="20200901 01:14:35.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200901 01:14:35.299" starttime="20200901 01:14:35.288"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:35.299" starttime="20200901 01:14:35.287"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:35.299" starttime="20200901 01:14:35.286"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:14:36.305" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:14:36.307" level="INFO">${rc} = 1</msg>
<msg timestamp="20200901 01:14:36.307" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:14:36.307" starttime="20200901 01:14:36.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:14:36.308" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:14:36.308" starttime="20200901 01:14:36.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:14:36.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200901 01:14:36.309" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200901 01:14:36.309" starttime="20200901 01:14:36.308"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:36.310" starttime="20200901 01:14:36.302"></status>
</kw>
<msg timestamp="20200901 01:14:36.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200901 01:14:36.310" starttime="20200901 01:14:36.301"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:36.310" starttime="20200901 01:14:36.301"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:36.310" starttime="20200901 01:14:36.300"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:14:37.315" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:14:37.320" level="INFO">${rc} = 1</msg>
<msg timestamp="20200901 01:14:37.320" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:14:37.320" starttime="20200901 01:14:37.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:14:37.321" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:14:37.322" starttime="20200901 01:14:37.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:14:37.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200901 01:14:37.323" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200901 01:14:37.323" starttime="20200901 01:14:37.322"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:37.323" starttime="20200901 01:14:37.312"></status>
</kw>
<msg timestamp="20200901 01:14:37.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200901 01:14:37.323" starttime="20200901 01:14:37.312"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:37.323" starttime="20200901 01:14:37.311"></status>
</kw>
<status status="FAIL" endtime="20200901 01:14:37.324" starttime="20200901 01:14:37.311"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:14:38.329" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:14:38.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:14:38.330" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:14:38.330" starttime="20200901 01:14:38.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:14:38.331" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:14:38.331" starttime="20200901 01:14:38.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:14:38.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:14:38.332" starttime="20200901 01:14:38.331"></status>
</kw>
<status status="PASS" endtime="20200901 01:14:38.333" starttime="20200901 01:14:38.326"></status>
</kw>
<msg timestamp="20200901 01:14:38.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:14:38.333" starttime="20200901 01:14:38.325"></status>
</kw>
<status status="PASS" endtime="20200901 01:14:38.333" starttime="20200901 01:14:38.325"></status>
</kw>
<status status="PASS" endtime="20200901 01:14:38.333" starttime="20200901 01:14:38.324"></status>
</kw>
<status status="PASS" endtime="20200901 01:14:38.333" starttime="20200901 01:14:34.272"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20200901 01:14:38.334" critical="yes" starttime="20200901 01:14:34.271"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:14:38.338" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:14:38.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:14:38.673" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20200901 01:14:38.673" starttime="20200901 01:14:38.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:14:38.675" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20200901 01:14:38.675" starttime="20200901 01:14:38.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:14:38.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:14:38.676" starttime="20200901 01:14:38.675"></status>
</kw>
<status status="PASS" endtime="20200901 01:14:38.676" starttime="20200901 01:14:38.336"></status>
</kw>
<msg timestamp="20200901 01:14:38.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:14:38.676" starttime="20200901 01:14:38.336"></status>
</kw>
<msg timestamp="20200901 01:14:38.676" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20200901 01:14:38.677" starttime="20200901 01:14:38.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20200901 01:14:38.677" starttime="20200901 01:14:38.677"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20200901 01:14:38.677" critical="yes" starttime="20200901 01:14:38.334"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20200901 01:14:38.679" starttime="20200901 01:14:34.200"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
