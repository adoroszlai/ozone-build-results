<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200901 01:17:07.198" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200901 01:15:38.228" level="INFO">${random} = 47450</msg>
<status status="PASS" endtime="20200901 01:15:38.228" starttime="20200901 01:15:38.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200901 01:15:38.229" level="INFO">${prefix} = 47450</msg>
<status status="PASS" endtime="20200901 01:15:38.229" starttime="20200901 01:15:38.228"></status>
</kw>
<status status="PASS" endtime="20200901 01:15:38.229" starttime="20200901 01:15:38.227"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:15:38.237" level="INFO">Running command 'ozone sh volume info /47450-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:15:44.844" level="INFO">${rc} = 255</msg>
<msg timestamp="20200901 01:15:44.844" level="INFO">${output} = VOLUME_NOT_FOUND Volume 47450-rpcbasic is not found</msg>
<status status="PASS" endtime="20200901 01:15:44.844" starttime="20200901 01:15:38.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:15:44.846" level="INFO">VOLUME_NOT_FOUND Volume 47450-rpcbasic is not found</msg>
<status status="PASS" endtime="20200901 01:15:44.846" starttime="20200901 01:15:44.845"></status>
</kw>
<msg timestamp="20200901 01:15:44.846" level="INFO">${result} = VOLUME_NOT_FOUND Volume 47450-rpcbasic is not found</msg>
<status status="PASS" endtime="20200901 01:15:44.846" starttime="20200901 01:15:38.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200901 01:15:44.847" starttime="20200901 01:15:44.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:15:44.851" level="INFO">Running command 'ozone sh volume create /47450-rpcbasic --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:15:47.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:15:47.750" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:15:47.750" starttime="20200901 01:15:44.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:15:47.751" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:15:47.751" starttime="20200901 01:15:47.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:15:47.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:15:47.754" starttime="20200901 01:15:47.752"></status>
</kw>
<status status="PASS" endtime="20200901 01:15:47.755" starttime="20200901 01:15:44.848"></status>
</kw>
<msg timestamp="20200901 01:15:47.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:15:47.755" starttime="20200901 01:15:44.848"></status>
</kw>
<msg timestamp="20200901 01:15:47.755" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200901 01:15:47.755" starttime="20200901 01:15:44.847"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200901 01:15:47.756" starttime="20200901 01:15:47.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:15:47.768" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="47450-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:15:50.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:15:50.443" level="INFO">${output} = {
  "metadata": {},
  "name": "47450-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-01T01:15:47.486Z",
  "modificationTime": "2020-09-01T01:15:47.486Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200901 01:15:50.443" starttime="20200901 01:15:47.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:15:50.445" level="INFO">{
  "metadata": {},
  "name": "47450-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-01T01:15:47.486Z",
  "modificationTime": "2020-09-01T01:15:47.486Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200901 01:15:50.445" starttime="20200901 01:15:50.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:15:50.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:15:50.446" starttime="20200901 01:15:50.445"></status>
</kw>
<status status="PASS" endtime="20200901 01:15:50.446" starttime="20200901 01:15:47.757"></status>
</kw>
<msg timestamp="20200901 01:15:50.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:15:50.446" starttime="20200901 01:15:47.757"></status>
</kw>
<msg timestamp="20200901 01:15:50.446" level="INFO">${result} = {
  "metadata": {},
  "name": "47450-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-01T01:15:47.486Z",
  "modificationTime": "2020-09-01T01:15:47.486Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200901 01:15:50.447" starttime="20200901 01:15:47.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200901 01:15:50.447" starttime="20200901 01:15:50.447"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:15:50.452" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="47450-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:15:52.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:15:52.826" level="INFO">${output} = {
  "metadata": {},
  "name": "47450-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-01T01:15:47.486Z",
  "modificationTime": "2020-09-01T01:15:47.486Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200901 01:15:52.826" starttime="20200901 01:15:50.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:15:52.827" level="INFO">{
  "metadata": {},
  "name": "47450-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-01T01:15:47.486Z",
  "modificationTime": "2020-09-01T01:15:47.486Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200901 01:15:52.828" starttime="20200901 01:15:52.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:15:52.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:15:52.828" starttime="20200901 01:15:52.828"></status>
</kw>
<status status="PASS" endtime="20200901 01:15:52.829" starttime="20200901 01:15:50.448"></status>
</kw>
<msg timestamp="20200901 01:15:52.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:15:52.829" starttime="20200901 01:15:50.448"></status>
</kw>
<msg timestamp="20200901 01:15:52.829" level="INFO">${result} = {
  "metadata": {},
  "name": "47450-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-01T01:15:47.486Z",
  "modificationTime": "2020-09-01T01:15:47.486Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200901 01:15:52.829" starttime="20200901 01:15:50.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200901 01:15:52.830" starttime="20200901 01:15:52.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:15:52.835" level="INFO">Running command 'ozone sh volume update /47450-rpcbasic --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:15:55.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:15:55.319" level="INFO">${output} = {
  "metadata" : { },
  "name" : "47450-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-09-01T01:15:47.486Z",
  "modificationTime" : "2020-09-01T01:15:54.921Z",
  "acls...</msg>
<status status="PASS" endtime="20200901 01:15:55.319" starttime="20200901 01:15:52.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:15:55.321" level="INFO">{
  "metadata" : { },
  "name" : "47450-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-09-01T01:15:47.486Z",
  "modificationTime" : "2020-09-01T01:15:54.921Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200901 01:15:55.321" starttime="20200901 01:15:55.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:15:55.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:15:55.321" starttime="20200901 01:15:55.321"></status>
</kw>
<status status="PASS" endtime="20200901 01:15:55.322" starttime="20200901 01:15:52.831"></status>
</kw>
<msg timestamp="20200901 01:15:55.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:15:55.322" starttime="20200901 01:15:52.831"></status>
</kw>
<status status="PASS" endtime="20200901 01:15:55.322" starttime="20200901 01:15:52.830"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:15:55.327" level="INFO">Running command 'ozone sh volume info /47450-rpcbasic | jq -r '. | select(.name=="47450-rpcbasic") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:15:57.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:15:57.731" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200901 01:15:57.731" starttime="20200901 01:15:55.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:15:57.732" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200901 01:15:57.732" starttime="20200901 01:15:57.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:15:57.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:15:57.733" starttime="20200901 01:15:57.732"></status>
</kw>
<status status="PASS" endtime="20200901 01:15:57.733" starttime="20200901 01:15:55.324"></status>
</kw>
<msg timestamp="20200901 01:15:57.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:15:57.734" starttime="20200901 01:15:55.323"></status>
</kw>
<msg timestamp="20200901 01:15:57.734" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200901 01:15:57.734" starttime="20200901 01:15:55.322"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200901 01:15:57.734" starttime="20200901 01:15:57.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:15:57.738" level="INFO">Running command 'ozone sh bucket create /47450-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:15:59.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:15:59.922" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:15:59.922" starttime="20200901 01:15:57.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:15:59.923" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:15:59.923" starttime="20200901 01:15:59.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:15:59.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:15:59.924" starttime="20200901 01:15:59.924"></status>
</kw>
<status status="PASS" endtime="20200901 01:15:59.925" starttime="20200901 01:15:57.736"></status>
</kw>
<msg timestamp="20200901 01:15:59.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:15:59.925" starttime="20200901 01:15:57.735"></status>
</kw>
<status status="PASS" endtime="20200901 01:15:59.925" starttime="20200901 01:15:57.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:15:59.930" level="INFO">Running command 'ozone sh bucket info /47450-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:02.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:02.257" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200901 01:16:02.257" starttime="20200901 01:15:59.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:02.259" level="INFO">DISK</msg>
<status status="PASS" endtime="20200901 01:16:02.259" starttime="20200901 01:16:02.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:02.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:02.260" starttime="20200901 01:16:02.259"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:02.260" starttime="20200901 01:15:59.927"></status>
</kw>
<msg timestamp="20200901 01:16:02.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:02.260" starttime="20200901 01:15:59.926"></status>
</kw>
<msg timestamp="20200901 01:16:02.260" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200901 01:16:02.260" starttime="20200901 01:15:59.925"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200901 01:16:02.261" starttime="20200901 01:16:02.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:02.266" level="INFO">Running command 'ozone sh bucket list /47450-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:04.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:04.580" level="INFO">${output} = 47450-rpcbasic</msg>
<status status="PASS" endtime="20200901 01:16:04.580" starttime="20200901 01:16:02.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:04.581" level="INFO">47450-rpcbasic</msg>
<status status="PASS" endtime="20200901 01:16:04.581" starttime="20200901 01:16:04.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:04.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:04.582" starttime="20200901 01:16:04.581"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:04.582" starttime="20200901 01:16:02.263"></status>
</kw>
<msg timestamp="20200901 01:16:04.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:04.583" starttime="20200901 01:16:02.262"></status>
</kw>
<msg timestamp="20200901 01:16:04.583" level="INFO">${result} = 47450-rpcbasic</msg>
<status status="PASS" endtime="20200901 01:16:04.583" starttime="20200901 01:16:02.261"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200901 01:16:04.584" starttime="20200901 01:16:04.583"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:04.591" level="INFO">Running command 'ozone sh key put /47450-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:10.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:10.931" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:10.932" starttime="20200901 01:16:04.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:10.933" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:10.933" starttime="20200901 01:16:10.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:10.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:10.934" starttime="20200901 01:16:10.933"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:10.934" starttime="20200901 01:16:04.586"></status>
</kw>
<msg timestamp="20200901 01:16:10.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:10.935" starttime="20200901 01:16:04.586"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:10.935" starttime="20200901 01:16:04.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:10.939" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:10.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:10.943" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:10.943" starttime="20200901 01:16:10.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:10.944" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:10.945" starttime="20200901 01:16:10.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:10.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:10.945" starttime="20200901 01:16:10.945"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:10.946" starttime="20200901 01:16:10.936"></status>
</kw>
<msg timestamp="20200901 01:16:10.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:10.946" starttime="20200901 01:16:10.936"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:10.946" starttime="20200901 01:16:10.935"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:10.950" level="INFO">Running command 'ozone sh key get /47450-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:15.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:15.628" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:15.628" starttime="20200901 01:16:10.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:15.629" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:15.629" starttime="20200901 01:16:15.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:15.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:15.630" starttime="20200901 01:16:15.629"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:15.630" starttime="20200901 01:16:10.948"></status>
</kw>
<msg timestamp="20200901 01:16:15.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:15.631" starttime="20200901 01:16:10.947"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:15.631" starttime="20200901 01:16:10.946"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:15.634" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:15.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:15.639" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:15.639" starttime="20200901 01:16:15.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:15.640" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:15.640" starttime="20200901 01:16:15.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:15.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:15.641" starttime="20200901 01:16:15.640"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:15.641" starttime="20200901 01:16:15.632"></status>
</kw>
<msg timestamp="20200901 01:16:15.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:15.641" starttime="20200901 01:16:15.632"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:15.641" starttime="20200901 01:16:15.631"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:15.649" level="INFO">Running command 'ozone sh key put -t RATIS /47450-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:19.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:19.760" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:19.760" starttime="20200901 01:16:15.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:19.762" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:19.762" starttime="20200901 01:16:19.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:19.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:19.763" starttime="20200901 01:16:19.762"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:19.763" starttime="20200901 01:16:15.642"></status>
</kw>
<msg timestamp="20200901 01:16:19.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:19.764" starttime="20200901 01:16:15.642"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:19.764" starttime="20200901 01:16:15.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:19.768" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:19.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:19.771" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:19.771" starttime="20200901 01:16:19.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:19.773" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:19.773" starttime="20200901 01:16:19.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:19.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:19.774" starttime="20200901 01:16:19.774"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:19.775" starttime="20200901 01:16:19.765"></status>
</kw>
<msg timestamp="20200901 01:16:19.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:19.775" starttime="20200901 01:16:19.765"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:19.775" starttime="20200901 01:16:19.764"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:19.779" level="INFO">Running command 'ozone sh key get /47450-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:23.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:23.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:23.719" starttime="20200901 01:16:19.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:23.720" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:23.721" starttime="20200901 01:16:23.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:23.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:23.721" starttime="20200901 01:16:23.721"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:23.722" starttime="20200901 01:16:19.776"></status>
</kw>
<msg timestamp="20200901 01:16:23.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:23.722" starttime="20200901 01:16:19.776"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:23.722" starttime="20200901 01:16:19.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:23.726" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:23.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:23.729" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:23.729" starttime="20200901 01:16:23.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:23.730" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:23.730" starttime="20200901 01:16:23.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:23.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:23.730" starttime="20200901 01:16:23.730"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:23.731" starttime="20200901 01:16:23.723"></status>
</kw>
<msg timestamp="20200901 01:16:23.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:23.731" starttime="20200901 01:16:23.723"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:23.731" starttime="20200901 01:16:23.722"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:23.735" level="INFO">Running command 'ozone sh key info /47450-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:26.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:26.015" level="INFO">${output} = {
  "volumeName": "47450-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-01T01:16:17.604Z",
  "modificationTime": "2020-09-01T01:16:19.374Z",
...</msg>
<status status="PASS" endtime="20200901 01:16:26.015" starttime="20200901 01:16:23.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:26.016" level="INFO">{
  "volumeName": "47450-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-01T01:16:17.604Z",
  "modificationTime": "2020-09-01T01:16:19.374Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104787016260059140,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200901 01:16:26.016" starttime="20200901 01:16:26.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:26.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:26.017" starttime="20200901 01:16:26.016"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:26.017" starttime="20200901 01:16:23.733"></status>
</kw>
<msg timestamp="20200901 01:16:26.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:26.018" starttime="20200901 01:16:23.732"></status>
</kw>
<msg timestamp="20200901 01:16:26.018" level="INFO">${result} = {
  "volumeName": "47450-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-01T01:16:17.604Z",
  "modificationTime": "2020-09-01T01:16:19.374Z",
...</msg>
<status status="PASS" endtime="20200901 01:16:26.018" starttime="20200901 01:16:23.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200901 01:16:26.018" starttime="20200901 01:16:26.018"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:26.022" level="INFO">Running command 'ozone sh key delete /47450-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:28.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:28.001" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:28.001" starttime="20200901 01:16:26.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:28.002" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:28.003" starttime="20200901 01:16:28.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:28.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:28.003" starttime="20200901 01:16:28.003"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:28.004" starttime="20200901 01:16:26.020"></status>
</kw>
<msg timestamp="20200901 01:16:28.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:28.004" starttime="20200901 01:16:26.019"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:28.004" starttime="20200901 01:16:26.019"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:28.008" level="INFO">Running command 'ozone sh key cp /47450-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:32.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:32.603" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:32.603" starttime="20200901 01:16:28.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:32.604" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:32.604" starttime="20200901 01:16:32.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:32.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:32.605" starttime="20200901 01:16:32.604"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:32.605" starttime="20200901 01:16:28.005"></status>
</kw>
<msg timestamp="20200901 01:16:32.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:32.606" starttime="20200901 01:16:28.005"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:32.606" starttime="20200901 01:16:28.004"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:32.610" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:32.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:32.613" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:32.613" starttime="20200901 01:16:32.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:32.614" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:32.615" starttime="20200901 01:16:32.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:32.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:32.615" starttime="20200901 01:16:32.615"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:32.616" starttime="20200901 01:16:32.607"></status>
</kw>
<msg timestamp="20200901 01:16:32.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:32.616" starttime="20200901 01:16:32.607"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:32.616" starttime="20200901 01:16:32.606"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:32.621" level="INFO">Running command 'ozone sh key get /47450-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:36.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:36.548" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:36.548" starttime="20200901 01:16:32.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:36.549" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:36.549" starttime="20200901 01:16:36.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:36.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:36.550" starttime="20200901 01:16:36.549"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:36.550" starttime="20200901 01:16:32.617"></status>
</kw>
<msg timestamp="20200901 01:16:36.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:36.550" starttime="20200901 01:16:32.617"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:36.551" starttime="20200901 01:16:32.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:36.555" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:36.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:36.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:36.559" starttime="20200901 01:16:36.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:36.559" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:36.560" starttime="20200901 01:16:36.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:36.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:36.560" starttime="20200901 01:16:36.560"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:36.561" starttime="20200901 01:16:36.552"></status>
</kw>
<msg timestamp="20200901 01:16:36.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:36.561" starttime="20200901 01:16:36.551"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:36.561" starttime="20200901 01:16:36.551"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:36.564" level="INFO">Running command 'ozone sh key delete /47450-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:38.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:38.689" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:38.689" starttime="20200901 01:16:36.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:38.691" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:38.691" starttime="20200901 01:16:38.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:38.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:38.691" starttime="20200901 01:16:38.691"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:38.692" starttime="20200901 01:16:36.562"></status>
</kw>
<msg timestamp="20200901 01:16:38.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:38.692" starttime="20200901 01:16:36.562"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:38.692" starttime="20200901 01:16:36.561"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:38.697" level="INFO">Running command 'ozone sh key get /47450-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:40.774" level="INFO">${rc} = 255</msg>
<msg timestamp="20200901 01:16:40.774" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200901 01:16:40.774" starttime="20200901 01:16:38.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:40.775" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200901 01:16:40.775" starttime="20200901 01:16:40.774"></status>
</kw>
<msg timestamp="20200901 01:16:40.776" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200901 01:16:40.776" starttime="20200901 01:16:38.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200901 01:16:40.777" starttime="20200901 01:16:40.776"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:40.781" level="INFO">Running command 'ozone sh key get --force /47450-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:44.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:44.614" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:44.614" starttime="20200901 01:16:40.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:44.615" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:44.615" starttime="20200901 01:16:44.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:44.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:44.616" starttime="20200901 01:16:44.615"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:44.616" starttime="20200901 01:16:40.778"></status>
</kw>
<msg timestamp="20200901 01:16:44.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:44.616" starttime="20200901 01:16:40.778"></status>
</kw>
<msg timestamp="20200901 01:16:44.617" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200901 01:16:44.617" starttime="20200901 01:16:40.777"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200901 01:16:44.618" starttime="20200901 01:16:44.617"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:44.622" level="INFO">Running command 'ozone sh key info /47450-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:46.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:46.864" level="INFO">${output} = {
  "volumeName": "47450-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-01T01:16:06.857Z",
  "modificationTime": "2020-09-01T01:16:10.488Z",
  "rep...</msg>
<status status="PASS" endtime="20200901 01:16:46.864" starttime="20200901 01:16:44.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:46.865" level="INFO">{
  "volumeName": "47450-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-01T01:16:06.857Z",
  "modificationTime": "2020-09-01T01:16:10.488Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104787015553318910,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200901 01:16:46.865" starttime="20200901 01:16:46.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:46.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:46.866" starttime="20200901 01:16:46.865"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:46.866" starttime="20200901 01:16:44.620"></status>
</kw>
<msg timestamp="20200901 01:16:46.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:46.866" starttime="20200901 01:16:44.619"></status>
</kw>
<msg timestamp="20200901 01:16:46.867" level="INFO">${result} = {
  "volumeName": "47450-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-01T01:16:06.857Z",
  "modificationTime": "2020-09-01T01:16:10.488Z",
  "rep...</msg>
<status status="PASS" endtime="20200901 01:16:46.867" starttime="20200901 01:16:44.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200901 01:16:46.867" starttime="20200901 01:16:46.867"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:46.873" level="INFO">Running command 'ozone sh key list /47450-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:49.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:49.207" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200901 01:16:49.207" starttime="20200901 01:16:46.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:49.208" level="INFO">key1</msg>
<status status="PASS" endtime="20200901 01:16:49.208" starttime="20200901 01:16:49.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:49.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:49.209" starttime="20200901 01:16:49.209"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:49.209" starttime="20200901 01:16:46.869"></status>
</kw>
<msg timestamp="20200901 01:16:49.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:49.210" starttime="20200901 01:16:46.868"></status>
</kw>
<msg timestamp="20200901 01:16:49.210" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200901 01:16:49.210" starttime="20200901 01:16:46.868"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200901 01:16:49.211" starttime="20200901 01:16:49.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:49.215" level="INFO">Running command 'ozone sh key rename /47450-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:51.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:51.463" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:51.463" starttime="20200901 01:16:49.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:51.464" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:51.464" starttime="20200901 01:16:51.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:51.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:51.465" starttime="20200901 01:16:51.465"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:51.466" starttime="20200901 01:16:49.212"></status>
</kw>
<msg timestamp="20200901 01:16:51.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:51.466" starttime="20200901 01:16:49.212"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:51.466" starttime="20200901 01:16:49.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:51.470" level="INFO">Running command 'ozone sh key list /47450-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:53.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:53.716" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200901 01:16:53.716" starttime="20200901 01:16:51.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:53.717" level="INFO">key2</msg>
<status status="PASS" endtime="20200901 01:16:53.718" starttime="20200901 01:16:53.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:53.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:53.719" starttime="20200901 01:16:53.718"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:53.719" starttime="20200901 01:16:51.468"></status>
</kw>
<msg timestamp="20200901 01:16:53.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:53.719" starttime="20200901 01:16:51.467"></status>
</kw>
<msg timestamp="20200901 01:16:53.719" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200901 01:16:53.719" starttime="20200901 01:16:51.466"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200901 01:16:53.720" starttime="20200901 01:16:53.720"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:53.725" level="INFO">Running command 'ozone sh key delete /47450-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:55.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:55.763" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:55.763" starttime="20200901 01:16:53.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:55.764" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:55.764" starttime="20200901 01:16:55.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:55.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:55.765" starttime="20200901 01:16:55.765"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:55.766" starttime="20200901 01:16:53.721"></status>
</kw>
<msg timestamp="20200901 01:16:55.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:55.766" starttime="20200901 01:16:53.721"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:55.766" starttime="20200901 01:16:53.720"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:55.766" starttime="20200901 01:16:04.584"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:55.766" starttime="20200901 01:16:04.584"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:55.771" level="INFO">Running command 'ozone sh bucket delete /47450-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:57.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:57.912" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 01:16:57.912" starttime="20200901 01:16:55.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:57.913" level="INFO"></msg>
<status status="PASS" endtime="20200901 01:16:57.913" starttime="20200901 01:16:57.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:57.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:57.914" starttime="20200901 01:16:57.913"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:57.914" starttime="20200901 01:16:55.767"></status>
</kw>
<msg timestamp="20200901 01:16:57.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:57.915" starttime="20200901 01:16:55.767"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:57.915" starttime="20200901 01:16:55.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 01:16:57.920" level="INFO">Running command 'ozone sh volume delete /47450-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 01:16:59.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 01:16:59.989" level="INFO">${output} = Volume 47450-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200901 01:16:59.989" starttime="20200901 01:16:57.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 01:16:59.990" level="INFO">Volume 47450-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200901 01:16:59.990" starttime="20200901 01:16:59.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 01:16:59.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 01:16:59.991" starttime="20200901 01:16:59.990"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:59.991" starttime="20200901 01:16:57.916"></status>
</kw>
<msg timestamp="20200901 01:16:59.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 01:16:59.992" starttime="20200901 01:16:57.916"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:59.992" starttime="20200901 01:16:57.915"></status>
</kw>
<status status="PASS" endtime="20200901 01:16:59.992" starttime="20200901 01:15:38.230"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200901 01:16:59.992" critical="yes" starttime="20200901 01:15:38.229"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200901 01:16:59.994" starttime="20200901 01:15:38.117"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
