<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200901 02:08:32.231" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite id="s1" name="upgrade">
<suite source="/opt/ozone/smoketest/topology/loaddata.robot" id="s1-s1" name="Loaddata">
<test id="s1-s1-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1 --quota 100TB</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 02:06:25.963" level="INFO">Running command 'ozone sh volume create topvol1 --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 02:06:28.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 02:06:28.472" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 02:06:28.473" starttime="20200901 02:06:25.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 02:06:28.474" level="INFO"></msg>
<status status="PASS" endtime="20200901 02:06:28.474" starttime="20200901 02:06:28.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 02:06:28.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 02:06:28.475" starttime="20200901 02:06:28.474"></status>
</kw>
<status status="PASS" endtime="20200901 02:06:28.475" starttime="20200901 02:06:25.961"></status>
</kw>
<msg timestamp="20200901 02:06:28.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 02:06:28.475" starttime="20200901 02:06:25.961"></status>
</kw>
<msg timestamp="20200901 02:06:28.476" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 02:06:28.476" starttime="20200901 02:06:25.961"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200901 02:06:28.476" starttime="20200901 02:06:28.476"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 02:06:28.480" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 02:06:30.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 02:06:30.640" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 02:06:30.640" starttime="20200901 02:06:28.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 02:06:30.641" level="INFO"></msg>
<status status="PASS" endtime="20200901 02:06:30.641" starttime="20200901 02:06:30.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 02:06:30.642" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 02:06:30.642" starttime="20200901 02:06:30.641"></status>
</kw>
<status status="PASS" endtime="20200901 02:06:30.642" starttime="20200901 02:06:28.478"></status>
</kw>
<msg timestamp="20200901 02:06:30.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 02:06:30.642" starttime="20200901 02:06:28.477"></status>
</kw>
<msg timestamp="20200901 02:06:30.643" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 02:06:30.643" starttime="20200901 02:06:28.477"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200901 02:06:30.643" starttime="20200901 02:06:30.643"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 02:06:30.646" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 02:06:35.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 02:06:35.251" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 02:06:35.251" starttime="20200901 02:06:30.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 02:06:35.252" level="INFO"></msg>
<status status="PASS" endtime="20200901 02:06:35.252" starttime="20200901 02:06:35.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 02:06:35.253" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 02:06:35.253" starttime="20200901 02:06:35.252"></status>
</kw>
<status status="PASS" endtime="20200901 02:06:35.253" starttime="20200901 02:06:30.644"></status>
</kw>
<msg timestamp="20200901 02:06:35.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 02:06:35.254" starttime="20200901 02:06:30.644"></status>
</kw>
<msg timestamp="20200901 02:06:35.254" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 02:06:35.254" starttime="20200901 02:06:30.643"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200901 02:06:35.255" starttime="20200901 02:06:35.254"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200901 02:06:35.255" critical="yes" starttime="20200901 02:06:25.960"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200901 02:06:35.257" starttime="20200901 02:06:25.912"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s2" name="Readdata">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200901 02:08:20.305" level="INFO">${random} = 10463</msg>
<status status="PASS" endtime="20200901 02:08:20.305" starttime="20200901 02:08:20.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200901 02:08:20.311" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-10463 2&gt;&amp;1'.</msg>
<msg timestamp="20200901 02:08:24.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200901 02:08:24.523" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 02:08:24.523" starttime="20200901 02:08:20.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200901 02:08:24.524" level="INFO"></msg>
<status status="PASS" endtime="20200901 02:08:24.524" starttime="20200901 02:08:24.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200901 02:08:24.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200901 02:08:24.525" starttime="20200901 02:08:24.524"></status>
</kw>
<status status="PASS" endtime="20200901 02:08:24.526" starttime="20200901 02:08:20.306"></status>
</kw>
<msg timestamp="20200901 02:08:24.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200901 02:08:24.526" starttime="20200901 02:08:20.306"></status>
</kw>
<msg timestamp="20200901 02:08:24.526" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200901 02:08:24.526" starttime="20200901 02:08:20.305"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200901 02:08:24.527" starttime="20200901 02:08:24.526"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200901 02:08:24.527" critical="yes" starttime="20200901 02:08:20.303"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200901 02:08:24.529" starttime="20200901 02:08:20.243"></status>
</suite>
<status status="PASS" elapsedtime="13631" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="upgrade" pass="2">upgrade</stat>
<stat fail="0" id="s1-s1" name="Loaddata" pass="1">upgrade.Loaddata</stat>
<stat fail="0" id="s1-s2" name="Readdata" pass="1">upgrade.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
