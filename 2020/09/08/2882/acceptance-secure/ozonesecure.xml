<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200908 07:07:37.190" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:52:53.718" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:52:53.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:52:53.721" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:52:53.721" starttime="20200908 06:52:53.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:52:53.722" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:52:53.722" starttime="20200908 06:52:53.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:52:53.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:52:53.723" starttime="20200908 06:52:53.722"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:53.723" starttime="20200908 06:52:53.649"></status>
</kw>
<msg timestamp="20200908 06:52:53.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:52:53.723" starttime="20200908 06:52:53.649"></status>
</kw>
<msg timestamp="20200908 06:52:53.723" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:52:53.723" starttime="20200908 06:52:53.648"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:52:53.728" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:52:53.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:52:53.740" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:52:53.740" starttime="20200908 06:52:53.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:52:53.742" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:52:53.742" starttime="20200908 06:52:53.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:52:53.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:52:53.742" starttime="20200908 06:52:53.742"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:53.743" starttime="20200908 06:52:53.725"></status>
</kw>
<msg timestamp="20200908 06:52:53.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:52:53.743" starttime="20200908 06:52:53.725"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:53.743" starttime="20200908 06:52:53.724"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:53.743" starttime="20200908 06:52:53.724"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:53.743" starttime="20200908 06:52:53.648"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:53.743" starttime="20200908 06:52:53.647"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:52:53.748" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:52:53.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:52:53.913" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20200908 06:52:53.913" starttime="20200908 06:52:53.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:52:53.914" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Tue, 08 Sep 2020 06:52:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCOtJN+MIH4RoMKFL0quqDY9/pfc7woiNOAChlVel71aHyciw2JquJvpyvXJgopN1EjeSeUKmIb/9dnoBYyVjMVBdr
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1599583973894&amp;s=1epS+HO3RPd8BjC4eedOBYchyUfv2SES+ssAEpmAG1M="; Path=/; HttpOnly
Last-Modified: Tue, 08 Sep 2020 06:22:12 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200908 06:52:53.914" starttime="20200908 06:52:53.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:52:53.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:52:53.915" starttime="20200908 06:52:53.914"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:53.915" starttime="20200908 06:52:53.745"></status>
</kw>
<msg timestamp="20200908 06:52:53.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:52:53.916" starttime="20200908 06:52:53.744"></status>
</kw>
<msg timestamp="20200908 06:52:53.916" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20200908 06:52:53.916" starttime="20200908 06:52:53.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200908 06:52:53.918" starttime="20200908 06:52:53.916"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200908 06:52:53.918" critical="yes" starttime="20200908 06:52:53.646"></status>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:52:53.951" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:52:53.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:52:53.956" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:52:53.956" starttime="20200908 06:52:53.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:52:53.958" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:52:53.958" starttime="20200908 06:52:53.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:52:53.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:52:53.959" starttime="20200908 06:52:53.958"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:53.959" starttime="20200908 06:52:53.930"></status>
</kw>
<msg timestamp="20200908 06:52:53.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:52:53.967" starttime="20200908 06:52:53.929"></status>
</kw>
<msg timestamp="20200908 06:52:53.968" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:52:53.968" starttime="20200908 06:52:53.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:52:53.970" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:52:53.970" starttime="20200908 06:52:53.968"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:52:53.979" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:52:53.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:52:53.998" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:52:53.998" starttime="20200908 06:52:53.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:52:53.999" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:52:54.000" starttime="20200908 06:52:53.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:52:54.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:52:54.001" starttime="20200908 06:52:54.000"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:54.001" starttime="20200908 06:52:53.976"></status>
</kw>
<msg timestamp="20200908 06:52:54.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:52:54.001" starttime="20200908 06:52:53.975"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:54.001" starttime="20200908 06:52:53.973"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:54.002" starttime="20200908 06:52:53.970"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:54.002" starttime="20200908 06:52:53.922"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:54.002" starttime="20200908 06:52:53.922"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:52:54.007" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:07.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:07.542" level="INFO">${output} = 2020-09-08 06:52:55,840 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-08 06:52:56,072 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200908 06:54:07.542" starttime="20200908 06:52:54.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:07.543" level="INFO">2020-09-08 06:52:55,840 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-08 06:52:56,072 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-08 06:52:56,072 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-08 06:52:58,638 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-09-08 06:52:58,638 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-09-08 06:52:58,638 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-09-08 06:52:58,638 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-09-08 06:52:58,638 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-09-08 06:52:58,639 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-09-08 06:52:58,639 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-09-08 06:52:58,651 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-09-08 06:52:58,652 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-09-08 06:52:58,661 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-09-08 06:52:58,791 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-61898, with testuser/scm@EXAMPLE.COM as owner.
2020-09-08 06:52:59,145 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-69240, with testuser/scm@EXAMPLE.COM as owner.
2020-09-08 06:52:59,187 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-73647, with testuser/scm@EXAMPLE.COM as owner.
2020-09-08 06:52:59,302 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-54812, with testuser/scm@EXAMPLE.COM as owner.
2020-09-08 06:52:59,350 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-57381, with testuser/scm@EXAMPLE.COM as owner.
2020-09-08 06:52:59,378 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-61898/bucket-0-55350, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,479 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-69240/bucket-0-74167, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,491 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73647/bucket-0-01026, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,498 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54812/bucket-0-74293, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,513 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-57381/bucket-0-52203, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,521 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-61898/bucket-1-81636, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,527 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-69240/bucket-1-68135, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,532 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73647/bucket-1-25329, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,546 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54812/bucket-1-67475, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,551 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-57381/bucket-1-96215, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,555 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-61898/bucket-2-24476, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,560 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-69240/bucket-2-67858, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,564 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73647/bucket-2-28741, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,569 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54812/bucket-2-34486, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,573 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-57381/bucket-2-11172, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,581 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-61898/bucket-3-40127, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,586 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-69240/bucket-3-39452, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,599 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73647/bucket-3-63531, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,605 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54812/bucket-3-82152, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,611 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-57381/bucket-3-04411, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,615 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-61898/bucket-4-62319, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,621 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-69240/bucket-4-59986, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,624 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73647/bucket-4-92291, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,633 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54812/bucket-4-48036, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,640 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-57381/bucket-4-67344, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-08 06:52:59,667 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-09-08 06:53:00,667 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-09-08 06:53:01,196 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-08 06:53:01,667 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-08 06:53:01,669 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-08 06:53:01,670 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-FF68B6E82E8C-&gt;b7cc2833-d17d-4c53-bc12-5863a45a12b1
2020-09-08 06:53:01,671 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-08 06:53:02,668 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-08 06:53:03,668 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-08 06:53:04,669 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-08 06:53:05,669 [Thread-8] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-09-08 06:53:06,677 [Thread-8] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-09-08 06:53:07,677 [Thread-8] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-09-08 06:53:08,678 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-09-08 06:53:09,678 [Thread-8] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-09-08 06:53:10,679 [Thread-8] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-09-08 06:53:11,680 [Thread-8] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-09-08 06:53:12,680 [Thread-8] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-09-08 06:53:13,681 [Thread-8] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-09-08 06:53:14,681 [Thread-8] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-09-08 06:53:15,682 [Thread-8] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-09-08 06:53:16,682 [Thread-8] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-09-08 06:53:17,683 [Thread-8] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-09-08 06:53:18,684 [Thread-8] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-09-08 06:53:19,684 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-09-08 06:53:20,685 [Thread-8] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-09-08 06:53:21,685 [Thread-8] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-09-08 06:53:22,686 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-09-08 06:53:23,693 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-09-08 06:53:24,694 [Thread-8] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-09-08 06:53:25,694 [Thread-8] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-09-08 06:53:26,694 [Thread-8] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-09-08 06:53:27,697 [Thread-8] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-09-08 06:53:28,697 [Thread-8] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-09-08 06:53:29,698 [Thread-8] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-09-08 06:53:30,698 [Thread-8] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-09-08 06:53:31,699 [Thread-8] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-09-08 06:53:32,700 [Thread-8] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-09-08 06:53:33,700 [Thread-8] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-09-08 06:53:34,701 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-09-08 06:53:35,702 [Thread-8] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-09-08 06:53:36,702 [Thread-8] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-09-08 06:53:37,703 [Thread-8] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-09-08 06:53:38,703 [Thread-8] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-09-08 06:53:39,704 [Thread-8] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-09-08 06:53:40,704 [Thread-8] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-09-08 06:53:41,705 [Thread-8] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-09-08 06:53:42,705 [Thread-8] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-09-08 06:53:43,706 [Thread-8] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-09-08 06:53:44,706 [Thread-8] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-09-08 06:53:45,710 [Thread-8] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-09-08 06:53:46,710 [Thread-8] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-09-08 06:53:47,710 [Thread-8] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-09-08 06:53:48,711 [Thread-8] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-09-08 06:53:49,711 [Thread-8] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-09-08 06:53:50,712 [Thread-8] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-09-08 06:53:51,713 [Thread-8] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-09-08 06:53:52,714 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-09-08 06:53:53,714 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-09-08 06:53:54,715 [Thread-8] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-09-08 06:53:55,716 [Thread-8] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-09-08 06:53:56,716 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-09-08 06:53:57,717 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-09-08 06:53:58,717 [Thread-8] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-09-08 06:53:59,718 [Thread-8] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-09-08 06:54:00,718 [Thread-8] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-09-08 06:54:01,718 [Thread-8] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-09-08 06:54:02,719 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,501
Average Time spent in bucket creation: 00:00:00,199
Average Time spent in key creation: 00:00:04,243
Average Time spent in key write: 00:00:01,234
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:10,926
***************************************************</msg>
<status status="PASS" endtime="20200908 06:54:07.543" starttime="20200908 06:54:07.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:07.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:07.544" starttime="20200908 06:54:07.543"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:07.544" starttime="20200908 06:52:54.003"></status>
</kw>
<msg timestamp="20200908 06:54:07.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:07.544" starttime="20200908 06:52:54.003"></status>
</kw>
<msg timestamp="20200908 06:54:07.545" level="INFO">${result} = 2020-09-08 06:52:55,840 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-08 06:52:56,072 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200908 06:54:07.545" starttime="20200908 06:52:54.002"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200908 06:54:07.546" starttime="20200908 06:54:07.546"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:07.546" starttime="20200908 06:54:07.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200908 06:54:07.547" starttime="20200908 06:54:07.547"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200908 06:54:07.547" critical="yes" starttime="20200908 06:52:53.920"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200908 06:54:07.548" starttime="20200908 06:52:53.614"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s2" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200908 06:54:07.563" level="INFO">${random} = 56773</msg>
<status status="PASS" endtime="20200908 06:54:07.563" starttime="20200908 06:54:07.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20200908 06:54:07.564" level="INFO">${source} = 56773-source</msg>
<status status="PASS" endtime="20200908 06:54:07.564" starttime="20200908 06:54:07.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20200908 06:54:07.565" level="INFO">${target} = 56773-target</msg>
<status status="PASS" endtime="20200908 06:54:07.565" starttime="20200908 06:54:07.564"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:07.569" level="INFO">Running command 'ozone sh volume create 56773-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:10.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:10.997" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:10.997" starttime="20200908 06:54:07.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:10.998" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:54:10.998" starttime="20200908 06:54:10.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:10.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:10.998" starttime="20200908 06:54:10.998"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:10.999" starttime="20200908 06:54:07.566"></status>
</kw>
<msg timestamp="20200908 06:54:10.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:10.999" starttime="20200908 06:54:07.566"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:10.999" starttime="20200908 06:54:07.565"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:11.003" level="INFO">Running command 'ozone sh volume create 56773-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:14.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:14.540" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:14.540" starttime="20200908 06:54:11.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:14.541" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:54:14.541" starttime="20200908 06:54:14.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:14.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:14.542" starttime="20200908 06:54:14.541"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:14.542" starttime="20200908 06:54:11.000"></status>
</kw>
<msg timestamp="20200908 06:54:14.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:14.542" starttime="20200908 06:54:11.000"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:14.543" starttime="20200908 06:54:10.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:14.548" level="INFO">Running command 'ozone sh bucket create 56773-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:18.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:18.078" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:18.078" starttime="20200908 06:54:14.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:18.079" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:54:18.079" starttime="20200908 06:54:18.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:18.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:18.080" starttime="20200908 06:54:18.079"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:18.080" starttime="20200908 06:54:14.545"></status>
</kw>
<msg timestamp="20200908 06:54:18.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:18.080" starttime="20200908 06:54:14.544"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:18.081" starttime="20200908 06:54:14.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:18.084" level="INFO">Running command 'ozone sh key put 56773-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:23.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:23.749" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:23.749" starttime="20200908 06:54:18.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:23.750" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:54:23.750" starttime="20200908 06:54:23.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:23.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:23.750" starttime="20200908 06:54:23.750"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:23.751" starttime="20200908 06:54:18.082"></status>
</kw>
<msg timestamp="20200908 06:54:23.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:23.751" starttime="20200908 06:54:18.081"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:23.751" starttime="20200908 06:54:18.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:23.755" level="INFO">Running command 'ozone sh bucket create 56773-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:27.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:27.901" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:27.901" starttime="20200908 06:54:23.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:27.902" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:54:27.902" starttime="20200908 06:54:27.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:27.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:27.903" starttime="20200908 06:54:27.902"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:27.903" starttime="20200908 06:54:23.752"></status>
</kw>
<msg timestamp="20200908 06:54:27.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:27.904" starttime="20200908 06:54:23.752"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:27.904" starttime="20200908 06:54:23.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:27.909" level="INFO">Running command 'ozone sh bucket link 56773-source/readable-bucket 56773-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:31.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:31.238" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:31.239" starttime="20200908 06:54:27.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:31.240" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:54:31.240" starttime="20200908 06:54:31.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:31.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:31.241" starttime="20200908 06:54:31.241"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:31.242" starttime="20200908 06:54:27.905"></status>
</kw>
<msg timestamp="20200908 06:54:31.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:31.242" starttime="20200908 06:54:27.905"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:31.242" starttime="20200908 06:54:27.904"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:31.246" level="INFO">Running command 'ozone sh bucket link 56773-source/readable-bucket 56773-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:35.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:35.203" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:35.203" starttime="20200908 06:54:31.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:35.204" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:54:35.204" starttime="20200908 06:54:35.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:35.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:35.205" starttime="20200908 06:54:35.204"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:35.205" starttime="20200908 06:54:31.243"></status>
</kw>
<msg timestamp="20200908 06:54:35.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:35.206" starttime="20200908 06:54:31.243"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:35.206" starttime="20200908 06:54:31.242"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:35.211" level="INFO">Running command 'ozone sh bucket link 56773-source/unreadable-bucket 56773-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:38.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:38.749" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:38.749" starttime="20200908 06:54:35.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:38.750" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:54:38.750" starttime="20200908 06:54:38.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:38.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:38.751" starttime="20200908 06:54:38.750"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:38.751" starttime="20200908 06:54:35.207"></status>
</kw>
<msg timestamp="20200908 06:54:38.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:38.751" starttime="20200908 06:54:35.207"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:38.751" starttime="20200908 06:54:35.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:38.757" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 56773-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:42.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:42.339" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:42.339" starttime="20200908 06:54:38.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:42.340" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200908 06:54:42.340" starttime="20200908 06:54:42.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:42.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:42.341" starttime="20200908 06:54:42.340"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:42.341" starttime="20200908 06:54:38.753"></status>
</kw>
<msg timestamp="20200908 06:54:42.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:42.341" starttime="20200908 06:54:38.752"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:42.342" starttime="20200908 06:54:38.752"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:42.348" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 56773-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:45.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:45.724" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:45.724" starttime="20200908 06:54:42.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:45.725" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200908 06:54:45.725" starttime="20200908 06:54:45.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:45.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:45.726" starttime="20200908 06:54:45.725"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:45.726" starttime="20200908 06:54:42.343"></status>
</kw>
<msg timestamp="20200908 06:54:45.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:45.727" starttime="20200908 06:54:42.342"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:45.727" starttime="20200908 06:54:42.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:45.732" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 56773-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:49.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:49.198" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:49.198" starttime="20200908 06:54:45.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:49.199" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200908 06:54:49.199" starttime="20200908 06:54:49.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:49.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:49.200" starttime="20200908 06:54:49.199"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:49.200" starttime="20200908 06:54:45.728"></status>
</kw>
<msg timestamp="20200908 06:54:49.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:49.200" starttime="20200908 06:54:45.728"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:49.201" starttime="20200908 06:54:45.727"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:49.205" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 56773-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:52.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:52.778" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:52.778" starttime="20200908 06:54:49.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:52.779" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200908 06:54:52.779" starttime="20200908 06:54:52.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:52.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:52.780" starttime="20200908 06:54:52.780"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:52.780" starttime="20200908 06:54:49.202"></status>
</kw>
<msg timestamp="20200908 06:54:52.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:52.781" starttime="20200908 06:54:49.201"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:52.781" starttime="20200908 06:54:49.201"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:52.786" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 56773-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:56.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:56.487" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:54:56.487" starttime="20200908 06:54:52.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:56.488" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200908 06:54:56.488" starttime="20200908 06:54:56.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:56.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:56.489" starttime="20200908 06:54:56.489"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:56.489" starttime="20200908 06:54:52.782"></status>
</kw>
<msg timestamp="20200908 06:54:56.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:56.490" starttime="20200908 06:54:52.782"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:56.490" starttime="20200908 06:54:52.781"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:56.490" starttime="20200908 06:54:14.543"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:56.490" starttime="20200908 06:54:14.543"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:56.490" starttime="20200908 06:54:07.562"></status>
</kw>
<test id="s1-s1-s2-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:56.497" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:56.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:56.500" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:54:56.500" starttime="20200908 06:54:56.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:56.501" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:54:56.501" starttime="20200908 06:54:56.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:56.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:56.502" starttime="20200908 06:54:56.501"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:56.502" starttime="20200908 06:54:56.494"></status>
</kw>
<msg timestamp="20200908 06:54:56.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:56.502" starttime="20200908 06:54:56.493"></status>
</kw>
<msg timestamp="20200908 06:54:56.503" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:54:56.503" starttime="20200908 06:54:56.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:54:56.504" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:54:56.504" starttime="20200908 06:54:56.503"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:56.510" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:54:56.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:54:56.525" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:54:56.525" starttime="20200908 06:54:56.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:54:56.526" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:54:56.527" starttime="20200908 06:54:56.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:54:56.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:54:56.527" starttime="20200908 06:54:56.527"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:56.528" starttime="20200908 06:54:56.506"></status>
</kw>
<msg timestamp="20200908 06:54:56.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:54:56.528" starttime="20200908 06:54:56.506"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:56.528" starttime="20200908 06:54:56.505"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:56.528" starttime="20200908 06:54:56.505"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:56.528" starttime="20200908 06:54:56.492"></status>
</kw>
<status status="PASS" endtime="20200908 06:54:56.529" starttime="20200908 06:54:56.492"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:54:56.533" level="INFO">Running command 'ozone sh bucket link 56773-source/no-such-bucket 56773-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:00.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:00.161" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:00.161" starttime="20200908 06:54:56.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:00.162" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:55:00.163" starttime="20200908 06:55:00.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:00.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:00.163" starttime="20200908 06:55:00.163"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:00.164" starttime="20200908 06:54:56.530"></status>
</kw>
<msg timestamp="20200908 06:55:00.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:00.164" starttime="20200908 06:54:56.529"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:00.164" starttime="20200908 06:54:56.529"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:00.169" level="INFO">Running command 'ozone sh key list 56773-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:04.634" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 06:55:04.634" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:04.635" starttime="20200908 06:55:00.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:04.636" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20200908 06:55:04.636" starttime="20200908 06:55:04.635"></status>
</kw>
<msg timestamp="20200908 06:55:04.636" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:04.636" starttime="20200908 06:55:00.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200908 06:55:04.637" starttime="20200908 06:55:04.637"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:55:04.637" critical="yes" starttime="20200908 06:54:56.491"></status>
</test>
<test id="s1-s1-s2-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:04.645" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:04.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:04.648" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:55:04.648" starttime="20200908 06:55:04.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:04.649" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:55:04.650" starttime="20200908 06:55:04.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:04.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:04.651" starttime="20200908 06:55:04.650"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:04.651" starttime="20200908 06:55:04.642"></status>
</kw>
<msg timestamp="20200908 06:55:04.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:04.651" starttime="20200908 06:55:04.642"></status>
</kw>
<msg timestamp="20200908 06:55:04.652" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:55:04.652" starttime="20200908 06:55:04.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:55:04.653" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:55:04.653" starttime="20200908 06:55:04.652"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:04.658" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:04.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:04.668" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:55:04.669" starttime="20200908 06:55:04.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:04.670" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:55:04.670" starttime="20200908 06:55:04.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:04.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:04.670" starttime="20200908 06:55:04.670"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:04.671" starttime="20200908 06:55:04.654"></status>
</kw>
<msg timestamp="20200908 06:55:04.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:04.671" starttime="20200908 06:55:04.654"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:04.671" starttime="20200908 06:55:04.653"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:04.671" starttime="20200908 06:55:04.653"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:04.671" starttime="20200908 06:55:04.639"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:04.671" starttime="20200908 06:55:04.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:04.676" level="INFO">Running command 'ozone sh bucket link 56773-source/bucket1 56773-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:08.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:08.035" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:08.035" starttime="20200908 06:55:04.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:08.037" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:55:08.037" starttime="20200908 06:55:08.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:08.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:08.038" starttime="20200908 06:55:08.037"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:08.038" starttime="20200908 06:55:04.673"></status>
</kw>
<msg timestamp="20200908 06:55:08.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:08.038" starttime="20200908 06:55:04.672"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:08.039" starttime="20200908 06:55:04.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:08.044" level="INFO">Running command 'ozone sh bucket create 56773-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:12.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:12.325" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:12.325" starttime="20200908 06:55:08.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:12.327" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:55:12.327" starttime="20200908 06:55:12.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:12.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:12.328" starttime="20200908 06:55:12.327"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:12.329" starttime="20200908 06:55:08.040"></status>
</kw>
<msg timestamp="20200908 06:55:12.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:12.329" starttime="20200908 06:55:08.039"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:12.329" starttime="20200908 06:55:08.039"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:12.334" level="INFO">Running command 'ozone sh key put 56773-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:19.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:19.797" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:19.797" starttime="20200908 06:55:12.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:19.798" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:55:19.798" starttime="20200908 06:55:19.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:19.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:19.799" starttime="20200908 06:55:19.798"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:19.799" starttime="20200908 06:55:12.331"></status>
</kw>
<msg timestamp="20200908 06:55:19.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:19.800" starttime="20200908 06:55:12.330"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:19.800" starttime="20200908 06:55:12.330"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200908 06:55:19.802" level="INFO">${postfix} = 74104</msg>
<status status="PASS" endtime="20200908 06:55:19.802" starttime="20200908 06:55:19.801"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200908 06:55:19.803" level="INFO">${tmpfile} = /tmp/tempkey-74104</msg>
<status status="PASS" endtime="20200908 06:55:19.803" starttime="20200908 06:55:19.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:19.808" level="INFO">Running command 'ozone sh key get -f 56773-target/link1/key1 /tmp/tempkey-74104 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:26.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:26.218" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:26.218" starttime="20200908 06:55:19.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:26.220" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:55:26.220" starttime="20200908 06:55:26.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:26.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:26.221" starttime="20200908 06:55:26.220"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:26.221" starttime="20200908 06:55:19.804"></status>
</kw>
<msg timestamp="20200908 06:55:26.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:26.221" starttime="20200908 06:55:19.803"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:26.222" starttime="20200908 06:55:19.803"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200908 06:55:26.226" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-74104 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:26.229" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200908 06:55:26.229" starttime="20200908 06:55:26.222"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:26.234" level="INFO">Running command 'rm -f /tmp/tempkey-74104 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:26.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:26.236" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:55:26.236" starttime="20200908 06:55:26.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:26.237" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:55:26.237" starttime="20200908 06:55:26.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:26.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:26.238" starttime="20200908 06:55:26.237"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:26.239" starttime="20200908 06:55:26.231"></status>
</kw>
<msg timestamp="20200908 06:55:26.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:26.239" starttime="20200908 06:55:26.230"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:26.239" starttime="20200908 06:55:26.229"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200908 06:55:26.240" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200908 06:55:26.240" starttime="20200908 06:55:26.239"></status>
</kw>
<msg timestamp="20200908 06:55:26.240" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200908 06:55:26.240" starttime="20200908 06:55:19.801"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200908 06:55:26.241" starttime="20200908 06:55:26.241"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:26.241" starttime="20200908 06:55:19.800"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:55:26.241" critical="yes" starttime="20200908 06:55:04.638"></status>
</test>
<test id="s1-s1-s2-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:26.249" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:26.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:26.251" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:55:26.251" starttime="20200908 06:55:26.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:26.252" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:55:26.252" starttime="20200908 06:55:26.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:26.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:26.253" starttime="20200908 06:55:26.252"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:26.253" starttime="20200908 06:55:26.245"></status>
</kw>
<msg timestamp="20200908 06:55:26.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:26.253" starttime="20200908 06:55:26.245"></status>
</kw>
<msg timestamp="20200908 06:55:26.253" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:55:26.253" starttime="20200908 06:55:26.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:55:26.254" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:55:26.254" starttime="20200908 06:55:26.254"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:26.261" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:26.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:26.272" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:55:26.272" starttime="20200908 06:55:26.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:26.273" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:55:26.273" starttime="20200908 06:55:26.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:26.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:26.274" starttime="20200908 06:55:26.273"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:26.274" starttime="20200908 06:55:26.256"></status>
</kw>
<msg timestamp="20200908 06:55:26.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:26.275" starttime="20200908 06:55:26.256"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:26.275" starttime="20200908 06:55:26.255"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:26.275" starttime="20200908 06:55:26.254"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:26.275" starttime="20200908 06:55:26.244"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:26.275" starttime="20200908 06:55:26.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:26.280" level="INFO">Running command 'ozone sh key put 56773-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:33.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:33.192" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:33.192" starttime="20200908 06:55:26.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:33.194" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:55:33.194" starttime="20200908 06:55:33.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:33.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:33.195" starttime="20200908 06:55:33.194"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:33.195" starttime="20200908 06:55:26.276"></status>
</kw>
<msg timestamp="20200908 06:55:33.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:33.195" starttime="20200908 06:55:26.276"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:33.196" starttime="20200908 06:55:26.276"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200908 06:55:33.198" level="INFO">${postfix} = 21521</msg>
<status status="PASS" endtime="20200908 06:55:33.198" starttime="20200908 06:55:33.198"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200908 06:55:33.199" level="INFO">${tmpfile} = /tmp/tempkey-21521</msg>
<status status="PASS" endtime="20200908 06:55:33.199" starttime="20200908 06:55:33.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:33.207" level="INFO">Running command 'ozone sh key get -f 56773-source/bucket1/key2 /tmp/tempkey-21521 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:39.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:39.156" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:39.156" starttime="20200908 06:55:33.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:39.157" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:55:39.157" starttime="20200908 06:55:39.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:39.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:39.158" starttime="20200908 06:55:39.157"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:39.159" starttime="20200908 06:55:33.200"></status>
</kw>
<msg timestamp="20200908 06:55:39.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:39.159" starttime="20200908 06:55:33.200"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:39.159" starttime="20200908 06:55:33.199"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200908 06:55:39.162" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-21521 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:39.164" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200908 06:55:39.164" starttime="20200908 06:55:39.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:39.170" level="INFO">Running command 'rm -f /tmp/tempkey-21521 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:39.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:39.172" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:55:39.172" starttime="20200908 06:55:39.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:39.173" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:55:39.173" starttime="20200908 06:55:39.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:39.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:39.174" starttime="20200908 06:55:39.173"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:39.174" starttime="20200908 06:55:39.166"></status>
</kw>
<msg timestamp="20200908 06:55:39.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:39.174" starttime="20200908 06:55:39.165"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:39.175" starttime="20200908 06:55:39.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200908 06:55:39.175" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200908 06:55:39.175" starttime="20200908 06:55:39.175"></status>
</kw>
<msg timestamp="20200908 06:55:39.176" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200908 06:55:39.176" starttime="20200908 06:55:33.197"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200908 06:55:39.176" starttime="20200908 06:55:39.176"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:39.177" starttime="20200908 06:55:33.196"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:55:39.177" critical="yes" starttime="20200908 06:55:26.242"></status>
</test>
<test id="s1-s1-s2-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:39.185" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:39.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:39.188" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:55:39.188" starttime="20200908 06:55:39.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:39.189" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:55:39.189" starttime="20200908 06:55:39.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:39.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:39.190" starttime="20200908 06:55:39.189"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:39.190" starttime="20200908 06:55:39.181"></status>
</kw>
<msg timestamp="20200908 06:55:39.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:39.190" starttime="20200908 06:55:39.181"></status>
</kw>
<msg timestamp="20200908 06:55:39.191" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:55:39.191" starttime="20200908 06:55:39.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:55:39.192" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:55:39.192" starttime="20200908 06:55:39.191"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:39.197" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:39.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:39.208" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:55:39.208" starttime="20200908 06:55:39.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:39.209" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:55:39.209" starttime="20200908 06:55:39.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:39.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:39.210" starttime="20200908 06:55:39.210"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:39.211" starttime="20200908 06:55:39.193"></status>
</kw>
<msg timestamp="20200908 06:55:39.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:39.211" starttime="20200908 06:55:39.193"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:39.211" starttime="20200908 06:55:39.192"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:39.211" starttime="20200908 06:55:39.192"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:39.211" starttime="20200908 06:55:39.179"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:39.212" starttime="20200908 06:55:39.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:39.217" level="INFO">Running command 'ozone sh key list 56773-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:43.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:43.038" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20200908 06:55:43.038" starttime="20200908 06:55:39.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:43.039" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20200908 06:55:43.039" starttime="20200908 06:55:43.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:43.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:43.040" starttime="20200908 06:55:43.039"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:43.040" starttime="20200908 06:55:39.213"></status>
</kw>
<msg timestamp="20200908 06:55:43.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:43.040" starttime="20200908 06:55:39.213"></status>
</kw>
<msg timestamp="20200908 06:55:43.041" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20200908 06:55:43.041" starttime="20200908 06:55:39.212"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:43.046" level="INFO">Running command 'ozone sh key list 56773-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:47.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:47.037" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20200908 06:55:47.037" starttime="20200908 06:55:43.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:47.038" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20200908 06:55:47.038" starttime="20200908 06:55:47.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:47.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:47.039" starttime="20200908 06:55:47.038"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:47.039" starttime="20200908 06:55:43.042"></status>
</kw>
<msg timestamp="20200908 06:55:47.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:47.039" starttime="20200908 06:55:43.042"></status>
</kw>
<msg timestamp="20200908 06:55:47.039" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20200908 06:55:47.040" starttime="20200908 06:55:43.041"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20200908 06:55:47.040" starttime="20200908 06:55:47.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200908 06:55:47.041" starttime="20200908 06:55:47.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200908 06:55:47.042" starttime="20200908 06:55:47.041"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:55:47.042" critical="yes" starttime="20200908 06:55:39.178"></status>
</test>
<test id="s1-s1-s2-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:47.050" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:47.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:47.051" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:55:47.051" starttime="20200908 06:55:47.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:47.052" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:55:47.053" starttime="20200908 06:55:47.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:47.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:47.054" starttime="20200908 06:55:47.053"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:47.054" starttime="20200908 06:55:47.046"></status>
</kw>
<msg timestamp="20200908 06:55:47.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:47.054" starttime="20200908 06:55:47.045"></status>
</kw>
<msg timestamp="20200908 06:55:47.055" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:55:47.055" starttime="20200908 06:55:47.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:55:47.056" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:55:47.056" starttime="20200908 06:55:47.055"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:47.061" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:47.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:47.080" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:55:47.080" starttime="20200908 06:55:47.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:47.081" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:55:47.081" starttime="20200908 06:55:47.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:47.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:47.082" starttime="20200908 06:55:47.081"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:47.082" starttime="20200908 06:55:47.058"></status>
</kw>
<msg timestamp="20200908 06:55:47.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:47.083" starttime="20200908 06:55:47.057"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:47.083" starttime="20200908 06:55:47.056"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:47.083" starttime="20200908 06:55:47.056"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:47.083" starttime="20200908 06:55:47.044"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:47.083" starttime="20200908 06:55:47.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:47.089" level="INFO">Running command 'ozone sh key delete 56773-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:50.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:50.607" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:50.607" starttime="20200908 06:55:47.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:50.608" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:55:50.608" starttime="20200908 06:55:50.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:50.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:50.609" starttime="20200908 06:55:50.609"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:50.609" starttime="20200908 06:55:47.085"></status>
</kw>
<msg timestamp="20200908 06:55:50.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:50.610" starttime="20200908 06:55:47.085"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:50.610" starttime="20200908 06:55:47.084"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:50.615" level="INFO">Running command 'ozone sh key list 56773-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:54.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:54.157" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200908 06:55:54.157" starttime="20200908 06:55:50.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:54.158" level="INFO">key1</msg>
<status status="PASS" endtime="20200908 06:55:54.158" starttime="20200908 06:55:54.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:54.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:54.159" starttime="20200908 06:55:54.158"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:54.159" starttime="20200908 06:55:50.612"></status>
</kw>
<msg timestamp="20200908 06:55:54.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:54.159" starttime="20200908 06:55:50.611"></status>
</kw>
<msg timestamp="20200908 06:55:54.160" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20200908 06:55:54.160" starttime="20200908 06:55:50.610"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200908 06:55:54.160" starttime="20200908 06:55:54.160"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:55:54.161" critical="yes" starttime="20200908 06:55:47.043"></status>
</test>
<test id="s1-s1-s2-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:54.169" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:54.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:54.170" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:55:54.170" starttime="20200908 06:55:54.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:54.171" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:55:54.171" starttime="20200908 06:55:54.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:54.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:54.172" starttime="20200908 06:55:54.171"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:54.172" starttime="20200908 06:55:54.165"></status>
</kw>
<msg timestamp="20200908 06:55:54.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:54.172" starttime="20200908 06:55:54.164"></status>
</kw>
<msg timestamp="20200908 06:55:54.173" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:55:54.173" starttime="20200908 06:55:54.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:55:54.173" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:55:54.173" starttime="20200908 06:55:54.173"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:54.179" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:54.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:54.190" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:55:54.190" starttime="20200908 06:55:54.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:54.191" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:55:54.191" starttime="20200908 06:55:54.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:54.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:54.192" starttime="20200908 06:55:54.191"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:54.192" starttime="20200908 06:55:54.175"></status>
</kw>
<msg timestamp="20200908 06:55:54.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:54.192" starttime="20200908 06:55:54.175"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:54.193" starttime="20200908 06:55:54.174"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:54.193" starttime="20200908 06:55:54.174"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:54.193" starttime="20200908 06:55:54.163"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:54.193" starttime="20200908 06:55:54.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:54.199" level="INFO">Running command 'ozone sh bucket list 56773-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:57.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:57.961" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:57.961" starttime="20200908 06:55:54.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:57.963" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:55:00.101Z",
  "modificationTime" : "2020-09-08T06:55:00.101Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:54:38.578Z",
  "modificationTime" : "2020-09-08T06:54:38.578Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:55:07.859Z",
  "modificationTime" : "2020-09-08T06:55:07.859Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:54:31.168Z",
  "modificationTime" : "2020-09-08T06:54:31.168Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:54:35.044Z",
  "modificationTime" : "2020-09-08T06:54:35.044Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200908 06:55:57.963" starttime="20200908 06:55:57.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:57.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:57.964" starttime="20200908 06:55:57.963"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:57.964" starttime="20200908 06:55:54.195"></status>
</kw>
<msg timestamp="20200908 06:55:57.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:57.964" starttime="20200908 06:55:54.194"></status>
</kw>
<msg timestamp="20200908 06:55:57.964" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:55:57.965" starttime="20200908 06:55:54.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200908 06:55:57.965" starttime="20200908 06:55:57.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20200908 06:55:57.966" starttime="20200908 06:55:57.965"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:55:57.966" critical="yes" starttime="20200908 06:55:54.162"></status>
</test>
<test id="s1-s1-s2-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:57.973" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:57.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:57.976" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:55:57.976" starttime="20200908 06:55:57.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:57.977" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:55:57.977" starttime="20200908 06:55:57.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:57.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:57.978" starttime="20200908 06:55:57.977"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:57.978" starttime="20200908 06:55:57.970"></status>
</kw>
<msg timestamp="20200908 06:55:57.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:57.978" starttime="20200908 06:55:57.970"></status>
</kw>
<msg timestamp="20200908 06:55:57.978" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:55:57.979" starttime="20200908 06:55:57.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:55:57.979" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:55:57.979" starttime="20200908 06:55:57.979"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:57.985" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:55:57.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:55:57.995" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:55:57.995" starttime="20200908 06:55:57.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:55:57.996" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:55:57.996" starttime="20200908 06:55:57.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:55:57.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:55:57.997" starttime="20200908 06:55:57.997"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:57.997" starttime="20200908 06:55:57.981"></status>
</kw>
<msg timestamp="20200908 06:55:57.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:55:57.998" starttime="20200908 06:55:57.981"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:57.998" starttime="20200908 06:55:57.980"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:57.998" starttime="20200908 06:55:57.979"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:57.998" starttime="20200908 06:55:57.969"></status>
</kw>
<status status="PASS" endtime="20200908 06:55:57.998" starttime="20200908 06:55:57.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:55:58.004" level="INFO">Running command 'ozone sh bucket info 56773-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:01.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:01.964" level="INFO">${output} = 56773-source bucket1</msg>
<status status="PASS" endtime="20200908 06:56:01.964" starttime="20200908 06:55:58.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:01.965" level="INFO">56773-source bucket1</msg>
<status status="PASS" endtime="20200908 06:56:01.966" starttime="20200908 06:56:01.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:01.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:01.966" starttime="20200908 06:56:01.966"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:01.967" starttime="20200908 06:55:58.000"></status>
</kw>
<msg timestamp="20200908 06:56:01.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:01.967" starttime="20200908 06:55:57.999"></status>
</kw>
<msg timestamp="20200908 06:56:01.967" level="INFO">${result} = 56773-source bucket1</msg>
<status status="PASS" endtime="20200908 06:56:01.967" starttime="20200908 06:55:57.999"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:01.968" starttime="20200908 06:56:01.967"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:56:01.968" critical="yes" starttime="20200908 06:55:57.967"></status>
</test>
<test id="s1-s1-s2-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:01.976" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:01.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:01.977" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:56:01.977" starttime="20200908 06:56:01.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:01.978" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:56:01.978" starttime="20200908 06:56:01.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:01.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:01.979" starttime="20200908 06:56:01.978"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:01.979" starttime="20200908 06:56:01.972"></status>
</kw>
<msg timestamp="20200908 06:56:01.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:01.980" starttime="20200908 06:56:01.972"></status>
</kw>
<msg timestamp="20200908 06:56:01.980" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:56:01.980" starttime="20200908 06:56:01.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:56:01.981" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:56:01.981" starttime="20200908 06:56:01.980"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:01.987" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:02.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:02.003" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:02.003" starttime="20200908 06:56:01.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:02.005" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:02.005" starttime="20200908 06:56:02.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:02.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:02.005" starttime="20200908 06:56:02.005"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:02.006" starttime="20200908 06:56:01.983"></status>
</kw>
<msg timestamp="20200908 06:56:02.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:02.006" starttime="20200908 06:56:01.983"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:02.006" starttime="20200908 06:56:01.982"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:02.006" starttime="20200908 06:56:01.981"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:02.007" starttime="20200908 06:56:01.971"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:02.007" starttime="20200908 06:56:01.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:02.012" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 56773-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:05.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:05.751" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:05.751" starttime="20200908 06:56:02.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:05.752" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200908 06:56:05.752" starttime="20200908 06:56:05.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:05.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:05.753" starttime="20200908 06:56:05.753"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:05.754" starttime="20200908 06:56:02.008"></status>
</kw>
<msg timestamp="20200908 06:56:05.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:05.754" starttime="20200908 06:56:02.007"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:05.754" starttime="20200908 06:56:02.007"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:05.761" level="INFO">Running command 'ozone sh bucket getacl 56773-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:09.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:09.425" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200908 06:56:09.425" starttime="20200908 06:56:05.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:09.426" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200908 06:56:09.427" starttime="20200908 06:56:09.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:09.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:09.427" starttime="20200908 06:56:09.427"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:09.428" starttime="20200908 06:56:05.756"></status>
</kw>
<msg timestamp="20200908 06:56:09.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:09.428" starttime="20200908 06:56:05.756"></status>
</kw>
<msg timestamp="20200908 06:56:09.428" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200908 06:56:09.428" starttime="20200908 06:56:05.755"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:09.429" starttime="20200908 06:56:09.429"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:09.429" starttime="20200908 06:56:05.754"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:09.435" level="INFO">Running command 'ozone sh bucket getacl 56773-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:13.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:13.065" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:13.065" starttime="20200908 06:56:09.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:13.067" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:13.067" starttime="20200908 06:56:13.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:13.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:13.068" starttime="20200908 06:56:13.067"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:13.068" starttime="20200908 06:56:09.431"></status>
</kw>
<msg timestamp="20200908 06:56:13.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:13.068" starttime="20200908 06:56:09.431"></status>
</kw>
<msg timestamp="20200908 06:56:13.069" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200908 06:56:13.069" starttime="20200908 06:56:09.430"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:13.069" starttime="20200908 06:56:13.069"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:13.070" starttime="20200908 06:56:09.429"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:13.075" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 56773-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:16.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:16.579" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:16.580" starttime="20200908 06:56:13.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:16.581" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200908 06:56:16.581" starttime="20200908 06:56:16.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:16.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:16.582" starttime="20200908 06:56:16.581"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:16.582" starttime="20200908 06:56:13.071"></status>
</kw>
<msg timestamp="20200908 06:56:16.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:16.582" starttime="20200908 06:56:13.070"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:16.583" starttime="20200908 06:56:13.070"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:16.587" level="INFO">Running command 'ozone sh bucket getacl 56773-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:20.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:20.236" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:20.236" starttime="20200908 06:56:16.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:20.237" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:20.237" starttime="20200908 06:56:20.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:20.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:20.238" starttime="20200908 06:56:20.237"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:20.238" starttime="20200908 06:56:16.585"></status>
</kw>
<msg timestamp="20200908 06:56:20.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:20.239" starttime="20200908 06:56:16.584"></status>
</kw>
<msg timestamp="20200908 06:56:20.239" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200908 06:56:20.239" starttime="20200908 06:56:16.584"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:20.240" starttime="20200908 06:56:20.239"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:20.240" starttime="20200908 06:56:16.583"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:20.245" level="INFO">Running command 'ozone sh bucket getacl 56773-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:23.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:23.824" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20200908 06:56:23.824" starttime="20200908 06:56:20.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:23.825" level="INFO">READ</msg>
<status status="PASS" endtime="20200908 06:56:23.825" starttime="20200908 06:56:23.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:23.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:23.826" starttime="20200908 06:56:23.825"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:23.826" starttime="20200908 06:56:20.242"></status>
</kw>
<msg timestamp="20200908 06:56:23.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:23.826" starttime="20200908 06:56:20.242"></status>
</kw>
<msg timestamp="20200908 06:56:23.827" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20200908 06:56:23.827" starttime="20200908 06:56:20.241"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:23.827" starttime="20200908 06:56:23.827"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:23.828" starttime="20200908 06:56:20.240"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:56:23.828" critical="yes" starttime="20200908 06:56:01.969"></status>
</test>
<test id="s1-s1-s2-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:23.835" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:23.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:23.838" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:56:23.838" starttime="20200908 06:56:23.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:23.839" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:56:23.839" starttime="20200908 06:56:23.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:23.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:23.840" starttime="20200908 06:56:23.839"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:23.840" starttime="20200908 06:56:23.832"></status>
</kw>
<msg timestamp="20200908 06:56:23.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:23.840" starttime="20200908 06:56:23.831"></status>
</kw>
<msg timestamp="20200908 06:56:23.840" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:56:23.840" starttime="20200908 06:56:23.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:56:23.841" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:56:23.841" starttime="20200908 06:56:23.841"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:23.847" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:23.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:23.857" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:23.857" starttime="20200908 06:56:23.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:23.858" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:23.858" starttime="20200908 06:56:23.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:23.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:23.859" starttime="20200908 06:56:23.858"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:23.859" starttime="20200908 06:56:23.843"></status>
</kw>
<msg timestamp="20200908 06:56:23.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:23.859" starttime="20200908 06:56:23.843"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:23.860" starttime="20200908 06:56:23.842"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:23.860" starttime="20200908 06:56:23.842"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:23.860" starttime="20200908 06:56:23.830"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:23.860" starttime="20200908 06:56:23.830"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:23.866" level="INFO">Running command 'ozone sh bucket link 56773-source/bucket2 56773-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:27.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:27.191" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:27.191" starttime="20200908 06:56:23.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:27.192" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:56:27.192" starttime="20200908 06:56:27.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:27.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:27.193" starttime="20200908 06:56:27.192"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:27.193" starttime="20200908 06:56:23.862"></status>
</kw>
<msg timestamp="20200908 06:56:27.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:27.194" starttime="20200908 06:56:23.861"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:27.194" starttime="20200908 06:56:23.860"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:27.198" level="INFO">Running command 'ozone sh bucket create 56773-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:30.868" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 06:56:30.869" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:30.869" starttime="20200908 06:56:27.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:30.870" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200908 06:56:30.870" starttime="20200908 06:56:30.869"></status>
</kw>
<msg timestamp="20200908 06:56:30.870" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:30.870" starttime="20200908 06:56:27.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:30.871" starttime="20200908 06:56:30.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:30.878" level="INFO">Running command 'ozone sh bucket create 56773-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:34.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:34.462" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:34.462" starttime="20200908 06:56:30.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:34.464" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:56:34.464" starttime="20200908 06:56:34.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:34.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:34.465" starttime="20200908 06:56:34.464"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:34.466" starttime="20200908 06:56:30.872"></status>
</kw>
<msg timestamp="20200908 06:56:34.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:34.466" starttime="20200908 06:56:30.872"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:34.466" starttime="20200908 06:56:30.871"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:34.469" level="INFO">Running command 'ozone sh bucket link 56773-source/bucket1 56773-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:38.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 06:56:38.317" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:38.317" starttime="20200908 06:56:34.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:38.318" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200908 06:56:38.318" starttime="20200908 06:56:38.317"></status>
</kw>
<msg timestamp="20200908 06:56:38.319" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:38.319" starttime="20200908 06:56:34.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:38.319" starttime="20200908 06:56:38.319"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:56:38.320" critical="yes" starttime="20200908 06:56:23.829"></status>
</test>
<test id="s1-s1-s2-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:38.326" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:38.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:38.329" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:56:38.329" starttime="20200908 06:56:38.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:38.330" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:56:38.330" starttime="20200908 06:56:38.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:38.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:38.330" starttime="20200908 06:56:38.330"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.331" starttime="20200908 06:56:38.323"></status>
</kw>
<msg timestamp="20200908 06:56:38.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:38.331" starttime="20200908 06:56:38.323"></status>
</kw>
<msg timestamp="20200908 06:56:38.331" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:56:38.331" starttime="20200908 06:56:38.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:56:38.332" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:56:38.333" starttime="20200908 06:56:38.332"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:38.338" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:38.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:38.365" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:38.365" starttime="20200908 06:56:38.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:38.366" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:38.366" starttime="20200908 06:56:38.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:38.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:38.367" starttime="20200908 06:56:38.366"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.367" starttime="20200908 06:56:38.334"></status>
</kw>
<msg timestamp="20200908 06:56:38.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:38.368" starttime="20200908 06:56:38.334"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.368" starttime="20200908 06:56:38.333"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.368" starttime="20200908 06:56:38.333"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.368" starttime="20200908 06:56:38.322"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.368" starttime="20200908 06:56:38.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:38.373" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:38.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:38.377" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:38.377" starttime="20200908 06:56:38.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:38.378" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:38.378" starttime="20200908 06:56:38.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:38.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:38.380" starttime="20200908 06:56:38.379"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.380" starttime="20200908 06:56:38.371"></status>
</kw>
<msg timestamp="20200908 06:56:38.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:38.381" starttime="20200908 06:56:38.370"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.381" starttime="20200908 06:56:38.370"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:38.386" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:38.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:38.389" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:56:38.389" starttime="20200908 06:56:38.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:38.390" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:56:38.390" starttime="20200908 06:56:38.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:38.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:38.391" starttime="20200908 06:56:38.390"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.391" starttime="20200908 06:56:38.383"></status>
</kw>
<msg timestamp="20200908 06:56:38.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:38.391" starttime="20200908 06:56:38.383"></status>
</kw>
<msg timestamp="20200908 06:56:38.391" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:56:38.391" starttime="20200908 06:56:38.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:56:38.392" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:56:38.392" starttime="20200908 06:56:38.392"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:38.397" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:38.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:38.422" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:38.422" starttime="20200908 06:56:38.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:38.424" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:38.424" starttime="20200908 06:56:38.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:38.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:38.424" starttime="20200908 06:56:38.424"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.425" starttime="20200908 06:56:38.394"></status>
</kw>
<msg timestamp="20200908 06:56:38.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:38.425" starttime="20200908 06:56:38.393"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.425" starttime="20200908 06:56:38.393"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.425" starttime="20200908 06:56:38.392"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.425" starttime="20200908 06:56:38.382"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:38.426" starttime="20200908 06:56:38.381"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:38.431" level="INFO">Running command 'ozone sh key list 56773-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:42.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:42.454" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:42.454" starttime="20200908 06:56:38.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:42.455" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "56773-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-09-08T06:54:21.572Z",
  "modificationTime" : "2020-09-08T06:54:23.265Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20200908 06:56:42.455" starttime="20200908 06:56:42.454"></status>
</kw>
<msg timestamp="20200908 06:56:42.456" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:42.456" starttime="20200908 06:56:38.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:42.456" starttime="20200908 06:56:42.456"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.456" starttime="20200908 06:56:38.369"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.456" starttime="20200908 06:56:38.369"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:56:42.457" critical="yes" starttime="20200908 06:56:38.320"></status>
</test>
<test id="s1-s1-s2-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:42.466" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:42.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:42.468" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:56:42.468" starttime="20200908 06:56:42.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:42.469" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:56:42.469" starttime="20200908 06:56:42.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:42.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:42.470" starttime="20200908 06:56:42.469"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.470" starttime="20200908 06:56:42.461"></status>
</kw>
<msg timestamp="20200908 06:56:42.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:42.470" starttime="20200908 06:56:42.461"></status>
</kw>
<msg timestamp="20200908 06:56:42.471" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:56:42.471" starttime="20200908 06:56:42.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:56:42.471" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:56:42.472" starttime="20200908 06:56:42.471"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:42.477" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:42.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:42.494" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:42.494" starttime="20200908 06:56:42.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:42.495" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:42.495" starttime="20200908 06:56:42.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:42.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:42.496" starttime="20200908 06:56:42.496"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.497" starttime="20200908 06:56:42.473"></status>
</kw>
<msg timestamp="20200908 06:56:42.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:42.497" starttime="20200908 06:56:42.473"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.497" starttime="20200908 06:56:42.472"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.497" starttime="20200908 06:56:42.472"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.497" starttime="20200908 06:56:42.459"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.497" starttime="20200908 06:56:42.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:42.502" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:42.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:42.506" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:42.506" starttime="20200908 06:56:42.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:42.507" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:42.507" starttime="20200908 06:56:42.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:42.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:42.508" starttime="20200908 06:56:42.507"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.508" starttime="20200908 06:56:42.499"></status>
</kw>
<msg timestamp="20200908 06:56:42.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:42.508" starttime="20200908 06:56:42.499"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.508" starttime="20200908 06:56:42.499"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:42.513" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:42.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:42.515" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:56:42.516" starttime="20200908 06:56:42.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:42.516" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:56:42.517" starttime="20200908 06:56:42.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:42.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:42.517" starttime="20200908 06:56:42.517"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.518" starttime="20200908 06:56:42.511"></status>
</kw>
<msg timestamp="20200908 06:56:42.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:42.518" starttime="20200908 06:56:42.510"></status>
</kw>
<msg timestamp="20200908 06:56:42.518" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:56:42.518" starttime="20200908 06:56:42.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:56:42.519" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:56:42.519" starttime="20200908 06:56:42.518"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:42.524" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:42.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:42.548" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:42.548" starttime="20200908 06:56:42.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:42.549" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:42.549" starttime="20200908 06:56:42.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:42.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:42.550" starttime="20200908 06:56:42.549"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.550" starttime="20200908 06:56:42.521"></status>
</kw>
<msg timestamp="20200908 06:56:42.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:42.551" starttime="20200908 06:56:42.520"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.551" starttime="20200908 06:56:42.519"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.551" starttime="20200908 06:56:42.519"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.551" starttime="20200908 06:56:42.509"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:42.551" starttime="20200908 06:56:42.509"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:42.556" level="INFO">Running command 'ozone sh key list 56773-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:46.061" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 06:56:46.061" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:46.061" starttime="20200908 06:56:42.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:46.062" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20200908 06:56:46.063" starttime="20200908 06:56:46.061"></status>
</kw>
<msg timestamp="20200908 06:56:46.063" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:46.063" starttime="20200908 06:56:42.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:46.064" starttime="20200908 06:56:46.063"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.064" starttime="20200908 06:56:42.498"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.064" starttime="20200908 06:56:42.498"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:56:46.065" critical="yes" starttime="20200908 06:56:42.457"></status>
</test>
<test id="s1-s1-s2-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:46.073" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:46.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:46.075" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:56:46.075" starttime="20200908 06:56:46.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:46.076" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:56:46.076" starttime="20200908 06:56:46.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:46.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:46.077" starttime="20200908 06:56:46.076"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.077" starttime="20200908 06:56:46.069"></status>
</kw>
<msg timestamp="20200908 06:56:46.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:46.077" starttime="20200908 06:56:46.068"></status>
</kw>
<msg timestamp="20200908 06:56:46.078" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:56:46.078" starttime="20200908 06:56:46.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:56:46.078" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:56:46.079" starttime="20200908 06:56:46.078"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:46.084" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:46.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:46.094" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:46.094" starttime="20200908 06:56:46.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:46.095" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:46.095" starttime="20200908 06:56:46.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:46.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:46.096" starttime="20200908 06:56:46.096"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.097" starttime="20200908 06:56:46.081"></status>
</kw>
<msg timestamp="20200908 06:56:46.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:46.097" starttime="20200908 06:56:46.080"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.097" starttime="20200908 06:56:46.079"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.097" starttime="20200908 06:56:46.079"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.098" starttime="20200908 06:56:46.067"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.098" starttime="20200908 06:56:46.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:46.105" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:46.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:46.107" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:46.107" starttime="20200908 06:56:46.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:46.108" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:46.108" starttime="20200908 06:56:46.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:46.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:46.109" starttime="20200908 06:56:46.108"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.109" starttime="20200908 06:56:46.100"></status>
</kw>
<msg timestamp="20200908 06:56:46.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:46.109" starttime="20200908 06:56:46.100"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.109" starttime="20200908 06:56:46.099"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:46.116" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:46.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:46.117" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:56:46.117" starttime="20200908 06:56:46.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:46.118" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:56:46.118" starttime="20200908 06:56:46.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:46.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:46.119" starttime="20200908 06:56:46.118"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.119" starttime="20200908 06:56:46.111"></status>
</kw>
<msg timestamp="20200908 06:56:46.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:46.119" starttime="20200908 06:56:46.111"></status>
</kw>
<msg timestamp="20200908 06:56:46.120" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:56:46.120" starttime="20200908 06:56:46.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:56:46.120" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:56:46.121" starttime="20200908 06:56:46.120"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:46.126" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:46.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:46.142" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:46.142" starttime="20200908 06:56:46.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:46.143" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:46.144" starttime="20200908 06:56:46.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:46.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:46.144" starttime="20200908 06:56:46.144"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.145" starttime="20200908 06:56:46.122"></status>
</kw>
<msg timestamp="20200908 06:56:46.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:46.145" starttime="20200908 06:56:46.122"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.146" starttime="20200908 06:56:46.121"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.146" starttime="20200908 06:56:46.121"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.146" starttime="20200908 06:56:46.110"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:46.146" starttime="20200908 06:56:46.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:46.150" level="INFO">Running command 'ozone sh bucket info 56773-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:49.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:49.851" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:49.851" starttime="20200908 06:56:46.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:49.853" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:54:38.578Z",
  "modificationTime" : "2020-09-08T06:54:38.578Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "unreadable-bucket"
}</msg>
<status status="PASS" endtime="20200908 06:56:49.853" starttime="20200908 06:56:49.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:49.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:49.854" starttime="20200908 06:56:49.853"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:49.854" starttime="20200908 06:56:46.147"></status>
</kw>
<msg timestamp="20200908 06:56:49.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:49.854" starttime="20200908 06:56:46.147"></status>
</kw>
<msg timestamp="20200908 06:56:49.855" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:49.855" starttime="20200908 06:56:46.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:49.855" starttime="20200908 06:56:49.855"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:49.856" starttime="20200908 06:56:49.855"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:49.860" level="INFO">Running command 'ozone sh key list 56773-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:53.410" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 06:56:53.411" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:53.411" starttime="20200908 06:56:49.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:53.412" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20200908 06:56:53.412" starttime="20200908 06:56:53.411"></status>
</kw>
<msg timestamp="20200908 06:56:53.412" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:53.412" starttime="20200908 06:56:49.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200908 06:56:53.413" starttime="20200908 06:56:53.413"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:53.413" starttime="20200908 06:56:46.099"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:53.413" starttime="20200908 06:56:46.098"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:56:53.414" critical="yes" starttime="20200908 06:56:46.066"></status>
</test>
<test id="s1-s1-s2-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:53.421" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:53.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:53.424" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:56:53.424" starttime="20200908 06:56:53.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:53.425" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:56:53.425" starttime="20200908 06:56:53.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:53.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:53.426" starttime="20200908 06:56:53.425"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:53.426" starttime="20200908 06:56:53.418"></status>
</kw>
<msg timestamp="20200908 06:56:53.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:53.426" starttime="20200908 06:56:53.417"></status>
</kw>
<msg timestamp="20200908 06:56:53.427" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:56:53.427" starttime="20200908 06:56:53.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:56:53.428" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:56:53.428" starttime="20200908 06:56:53.427"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:53.432" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:53.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:53.443" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:56:53.443" starttime="20200908 06:56:53.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:53.443" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:56:53.444" starttime="20200908 06:56:53.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:53.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:53.444" starttime="20200908 06:56:53.444"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:53.445" starttime="20200908 06:56:53.429"></status>
</kw>
<msg timestamp="20200908 06:56:53.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:53.445" starttime="20200908 06:56:53.429"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:53.445" starttime="20200908 06:56:53.428"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:53.445" starttime="20200908 06:56:53.428"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:53.445" starttime="20200908 06:56:53.416"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:53.445" starttime="20200908 06:56:53.416"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:53.450" level="INFO">Running command 'ozone sh bucket link 56773-target/loop1 56773-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:56:56.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:56:56.777" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:56:56.777" starttime="20200908 06:56:53.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:56:56.778" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:56:56.779" starttime="20200908 06:56:56.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:56:56.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:56:56.779" starttime="20200908 06:56:56.779"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:56.780" starttime="20200908 06:56:53.446"></status>
</kw>
<msg timestamp="20200908 06:56:56.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:56:56.780" starttime="20200908 06:56:53.446"></status>
</kw>
<status status="PASS" endtime="20200908 06:56:56.780" starttime="20200908 06:56:53.446"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:56:56.785" level="INFO">Running command 'ozone sh bucket link 56773-target/loop2 56773-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:00.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:00.343" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:00.343" starttime="20200908 06:56:56.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:00.344" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:57:00.344" starttime="20200908 06:57:00.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:00.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:00.345" starttime="20200908 06:57:00.344"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:00.345" starttime="20200908 06:56:56.781"></status>
</kw>
<msg timestamp="20200908 06:57:00.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:00.345" starttime="20200908 06:56:56.781"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:00.345" starttime="20200908 06:56:56.780"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:00.350" level="INFO">Running command 'ozone sh bucket link 56773-target/loop3 56773-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:04.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:04.808" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:04.808" starttime="20200908 06:57:00.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:04.810" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:57:04.810" starttime="20200908 06:57:04.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:04.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:04.811" starttime="20200908 06:57:04.810"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:04.811" starttime="20200908 06:57:00.347"></status>
</kw>
<msg timestamp="20200908 06:57:04.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:04.811" starttime="20200908 06:57:00.346"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:04.811" starttime="20200908 06:57:00.346"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:04.816" level="INFO">Running command 'ozone sh key list 56773-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:09.060" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 06:57:09.060" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:09.060" starttime="20200908 06:57:04.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:09.062" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20200908 06:57:09.062" starttime="20200908 06:57:09.061"></status>
</kw>
<msg timestamp="20200908 06:57:09.062" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:09.062" starttime="20200908 06:57:04.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20200908 06:57:09.063" starttime="20200908 06:57:09.063"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:57:09.063" critical="yes" starttime="20200908 06:56:53.415"></status>
</test>
<test id="s1-s1-s2-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:09.070" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:09.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:09.073" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:57:09.074" starttime="20200908 06:57:09.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:09.074" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:57:09.075" starttime="20200908 06:57:09.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:09.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:09.075" starttime="20200908 06:57:09.075"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:09.076" starttime="20200908 06:57:09.067"></status>
</kw>
<msg timestamp="20200908 06:57:09.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:09.076" starttime="20200908 06:57:09.067"></status>
</kw>
<msg timestamp="20200908 06:57:09.076" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:57:09.076" starttime="20200908 06:57:09.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:57:09.077" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:57:09.077" starttime="20200908 06:57:09.076"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:09.082" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:09.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:09.094" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:57:09.094" starttime="20200908 06:57:09.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:09.095" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:57:09.095" starttime="20200908 06:57:09.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:09.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:09.096" starttime="20200908 06:57:09.095"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:09.096" starttime="20200908 06:57:09.079"></status>
</kw>
<msg timestamp="20200908 06:57:09.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:09.097" starttime="20200908 06:57:09.079"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:09.097" starttime="20200908 06:57:09.078"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:09.097" starttime="20200908 06:57:09.077"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:09.097" starttime="20200908 06:57:09.066"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:09.097" starttime="20200908 06:57:09.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:09.102" level="INFO">Running command 'ozone sh bucket link 56773-source/bucket1 56773-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:13.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:13.706" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:13.706" starttime="20200908 06:57:09.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:13.708" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:57:13.708" starttime="20200908 06:57:13.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:13.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:13.709" starttime="20200908 06:57:13.709"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:13.710" starttime="20200908 06:57:09.099"></status>
</kw>
<msg timestamp="20200908 06:57:13.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:13.710" starttime="20200908 06:57:09.098"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:13.710" starttime="20200908 06:57:09.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:13.714" level="INFO">Running command 'ozone sh key put 56773-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:21.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:21.264" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:21.264" starttime="20200908 06:57:13.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:21.265" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:57:21.265" starttime="20200908 06:57:21.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:21.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:21.267" starttime="20200908 06:57:21.265"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:21.268" starttime="20200908 06:57:13.711"></status>
</kw>
<msg timestamp="20200908 06:57:21.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:21.268" starttime="20200908 06:57:13.711"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:21.268" starttime="20200908 06:57:13.710"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200908 06:57:21.367" level="INFO">${postfix} = 15825</msg>
<status status="PASS" endtime="20200908 06:57:21.368" starttime="20200908 06:57:21.270"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200908 06:57:21.369" level="INFO">${tmpfile} = /tmp/tempkey-15825</msg>
<status status="PASS" endtime="20200908 06:57:21.369" starttime="20200908 06:57:21.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:21.430" level="INFO">Running command 'ozone sh key get -f 56773-target/link1/key3 /tmp/tempkey-15825 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:28.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:28.540" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:28.540" starttime="20200908 06:57:21.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:28.541" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:57:28.542" starttime="20200908 06:57:28.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:28.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:28.542" starttime="20200908 06:57:28.542"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:28.543" starttime="20200908 06:57:21.389"></status>
</kw>
<msg timestamp="20200908 06:57:28.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:28.543" starttime="20200908 06:57:21.388"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:28.543" starttime="20200908 06:57:21.369"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200908 06:57:28.547" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-15825 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:28.550" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200908 06:57:28.551" starttime="20200908 06:57:28.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:28.556" level="INFO">Running command 'rm -f /tmp/tempkey-15825 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:28.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:28.559" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:57:28.559" starttime="20200908 06:57:28.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:28.560" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:57:28.560" starttime="20200908 06:57:28.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:28.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:28.561" starttime="20200908 06:57:28.561"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:28.562" starttime="20200908 06:57:28.553"></status>
</kw>
<msg timestamp="20200908 06:57:28.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:28.562" starttime="20200908 06:57:28.552"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:28.562" starttime="20200908 06:57:28.551"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200908 06:57:28.563" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200908 06:57:28.563" starttime="20200908 06:57:28.562"></status>
</kw>
<msg timestamp="20200908 06:57:28.563" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200908 06:57:28.563" starttime="20200908 06:57:21.269"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200908 06:57:28.564" starttime="20200908 06:57:28.563"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:28.564" starttime="20200908 06:57:21.269"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:57:28.564" critical="yes" starttime="20200908 06:57:09.064"></status>
</test>
<test id="s1-s1-s2-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:28.571" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:28.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:28.574" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:57:28.574" starttime="20200908 06:57:28.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:28.575" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:57:28.575" starttime="20200908 06:57:28.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:28.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:28.576" starttime="20200908 06:57:28.575"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:28.576" starttime="20200908 06:57:28.568"></status>
</kw>
<msg timestamp="20200908 06:57:28.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:28.576" starttime="20200908 06:57:28.568"></status>
</kw>
<msg timestamp="20200908 06:57:28.577" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:57:28.577" starttime="20200908 06:57:28.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:57:28.578" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:57:28.578" starttime="20200908 06:57:28.577"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:28.582" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:28.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:28.595" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:57:28.595" starttime="20200908 06:57:28.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:28.596" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:57:28.596" starttime="20200908 06:57:28.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:28.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:28.597" starttime="20200908 06:57:28.597"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:28.598" starttime="20200908 06:57:28.580"></status>
</kw>
<msg timestamp="20200908 06:57:28.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:28.598" starttime="20200908 06:57:28.579"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:28.598" starttime="20200908 06:57:28.578"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:28.598" starttime="20200908 06:57:28.578"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:28.598" starttime="20200908 06:57:28.567"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:28.599" starttime="20200908 06:57:28.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:28.604" level="INFO">Running command 'ozone sh bucket delete 56773-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:32.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:32.759" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:32.759" starttime="20200908 06:57:28.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:32.760" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:57:32.760" starttime="20200908 06:57:32.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:32.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:32.761" starttime="20200908 06:57:32.760"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:32.761" starttime="20200908 06:57:28.600"></status>
</kw>
<msg timestamp="20200908 06:57:32.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:32.762" starttime="20200908 06:57:28.600"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:32.762" starttime="20200908 06:57:28.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:32.766" level="INFO">Running command 'ozone sh bucket list 56773-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:37.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:37.544" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:37.544" starttime="20200908 06:57:32.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:37.545" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:56:34.393Z",
  "modificationTime" : "2020-09-08T06:56:34.393Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:55:00.101Z",
  "modificationTime" : "2020-09-08T06:55:00.101Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:54:38.578Z",
  "modificationTime" : "2020-09-08T06:54:38.578Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:56:27.122Z",
  "modificationTime" : "2020-09-08T06:56:27.122Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "bucket2"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:57:13.314Z",
  "modificationTime" : "2020-09-08T06:57:13.314Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:57:04.657Z",
  "modificationTime" : "2020-09-08T06:57:04.657Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-target",
  "sourceBucket" : "loop3"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:56:56.605Z",
  "modificationTime" : "2020-09-08T06:56:56.605Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-target",
  "sourceBucket" : "loop1"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:57:00.151Z",
  "modificationTime" : "2020-09-08T06:57:00.151Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-target",
  "sourceBucket" : "loop2"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:54:31.168Z",
  "modificationTime" : "2020-09-08T06:54:31.168Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "56773-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-08T06:54:35.044Z",
  "modificationTime" : "2020-09-08T06:54:35.044Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "56773-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200908 06:57:37.546" starttime="20200908 06:57:37.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:37.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:37.546" starttime="20200908 06:57:37.546"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:37.547" starttime="20200908 06:57:32.763"></status>
</kw>
<msg timestamp="20200908 06:57:37.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:37.547" starttime="20200908 06:57:32.763"></status>
</kw>
<msg timestamp="20200908 06:57:37.547" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:37.547" starttime="20200908 06:57:32.762"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200908 06:57:37.548" starttime="20200908 06:57:37.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:37.552" level="INFO">Running command 'ozone sh key list 56773-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:41.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:41.705" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20200908 06:57:41.705" starttime="20200908 06:57:37.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:41.706" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20200908 06:57:41.707" starttime="20200908 06:57:41.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:41.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:41.707" starttime="20200908 06:57:41.707"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:41.707" starttime="20200908 06:57:37.549"></status>
</kw>
<msg timestamp="20200908 06:57:41.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:41.708" starttime="20200908 06:57:37.549"></status>
</kw>
<msg timestamp="20200908 06:57:41.708" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20200908 06:57:41.708" starttime="20200908 06:57:37.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200908 06:57:41.709" starttime="20200908 06:57:41.708"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:57:41.709" critical="yes" starttime="20200908 06:57:28.565"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20200908 06:57:41.713" starttime="20200908 06:54:07.551"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s3" name="Ozone-Shell-Single">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200908 06:57:41.742" level="INFO">${random} = 57156</msg>
<status status="PASS" endtime="20200908 06:57:41.742" starttime="20200908 06:57:41.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200908 06:57:41.743" level="INFO">${prefix} = 57156</msg>
<status status="PASS" endtime="20200908 06:57:41.743" starttime="20200908 06:57:41.742"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:41.743" starttime="20200908 06:57:41.741"></status>
</kw>
<test id="s1-s1-s3-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:41.748" level="INFO">Running command 'ozone sh volume info /57156-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:45.764" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 06:57:45.764" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:45.764" starttime="20200908 06:57:41.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:45.766" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 57156-rpcbasic is not found</msg>
<status status="PASS" endtime="20200908 06:57:45.766" starttime="20200908 06:57:45.765"></status>
</kw>
<msg timestamp="20200908 06:57:45.766" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:45.766" starttime="20200908 06:57:41.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200908 06:57:45.767" starttime="20200908 06:57:45.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:45.771" level="INFO">Running command 'ozone sh volume create /57156-rpcbasic --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:50.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:50.258" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:50.258" starttime="20200908 06:57:45.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:50.260" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:57:50.260" starttime="20200908 06:57:50.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:50.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:50.261" starttime="20200908 06:57:50.260"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:50.261" starttime="20200908 06:57:45.768"></status>
</kw>
<msg timestamp="20200908 06:57:50.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:50.262" starttime="20200908 06:57:45.768"></status>
</kw>
<msg timestamp="20200908 06:57:50.262" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:57:50.262" starttime="20200908 06:57:45.767"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200908 06:57:50.263" starttime="20200908 06:57:50.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:50.269" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="57156-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:57:54.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:57:54.850" level="INFO">${output} = {
  "metadata": {},
  "name": "57156-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200908 06:57:54.850" starttime="20200908 06:57:50.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:57:54.852" level="INFO">{
  "metadata": {},
  "name": "57156-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-08T06:57:50.202Z",
  "modificationTime": "2020-09-08T06:57:50.202Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200908 06:57:54.852" starttime="20200908 06:57:54.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:57:54.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:57:54.852" starttime="20200908 06:57:54.852"></status>
</kw>
<status status="PASS" endtime="20200908 06:57:54.853" starttime="20200908 06:57:50.264"></status>
</kw>
<msg timestamp="20200908 06:57:54.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:57:54.853" starttime="20200908 06:57:50.264"></status>
</kw>
<msg timestamp="20200908 06:57:54.853" level="INFO">${result} = {
  "metadata": {},
  "name": "57156-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200908 06:57:54.853" starttime="20200908 06:57:50.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200908 06:57:54.854" starttime="20200908 06:57:54.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:57:54.862" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="57156-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:00.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:00.371" level="INFO">${output} = {
  "metadata": {},
  "name": "57156-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200908 06:58:00.371" starttime="20200908 06:57:54.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:00.372" level="INFO">{
  "metadata": {},
  "name": "57156-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-08T06:57:50.202Z",
  "modificationTime": "2020-09-08T06:57:50.202Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200908 06:58:00.373" starttime="20200908 06:58:00.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:00.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:00.374" starttime="20200908 06:58:00.373"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:00.374" starttime="20200908 06:57:54.855"></status>
</kw>
<msg timestamp="20200908 06:58:00.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:00.374" starttime="20200908 06:57:54.855"></status>
</kw>
<msg timestamp="20200908 06:58:00.374" level="INFO">${result} = {
  "metadata": {},
  "name": "57156-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200908 06:58:00.375" starttime="20200908 06:57:54.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200908 06:58:00.375" starttime="20200908 06:58:00.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:00.380" level="INFO">Running command 'ozone sh volume update /57156-rpcbasic --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:06.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:06.285" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:58:06.285" starttime="20200908 06:58:00.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:06.286" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "57156-rpcbasic",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-08T06:57:50.202Z",
  "modificationTime" : "2020-09-08T06:58:05.814Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20200908 06:58:06.286" starttime="20200908 06:58:06.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:06.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:06.287" starttime="20200908 06:58:06.287"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:06.288" starttime="20200908 06:58:00.377"></status>
</kw>
<msg timestamp="20200908 06:58:06.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:06.288" starttime="20200908 06:58:00.376"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:06.288" starttime="20200908 06:58:00.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:06.293" level="INFO">Running command 'ozone sh volume info /57156-rpcbasic | jq -r '. | select(.name=="57156-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:11.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:11.747" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200908 06:58:11.747" starttime="20200908 06:58:06.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:11.748" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200908 06:58:11.748" starttime="20200908 06:58:11.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:11.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:11.749" starttime="20200908 06:58:11.749"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:11.750" starttime="20200908 06:58:06.290"></status>
</kw>
<msg timestamp="20200908 06:58:11.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:11.750" starttime="20200908 06:58:06.290"></status>
</kw>
<msg timestamp="20200908 06:58:11.750" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200908 06:58:11.750" starttime="20200908 06:58:06.289"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200908 06:58:11.751" starttime="20200908 06:58:11.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:11.757" level="INFO">Running command 'ozone sh bucket create /57156-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:17.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:17.109" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:58:17.109" starttime="20200908 06:58:11.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:17.110" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:58:17.110" starttime="20200908 06:58:17.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:17.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:17.111" starttime="20200908 06:58:17.110"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:17.112" starttime="20200908 06:58:11.752"></status>
</kw>
<msg timestamp="20200908 06:58:17.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:17.112" starttime="20200908 06:58:11.752"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:17.112" starttime="20200908 06:58:11.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:17.117" level="INFO">Running command 'ozone sh bucket info /57156-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:22.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:22.569" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200908 06:58:22.569" starttime="20200908 06:58:17.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:22.570" level="INFO">DISK</msg>
<status status="PASS" endtime="20200908 06:58:22.570" starttime="20200908 06:58:22.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:22.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:22.571" starttime="20200908 06:58:22.571"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:22.572" starttime="20200908 06:58:17.114"></status>
</kw>
<msg timestamp="20200908 06:58:22.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:22.572" starttime="20200908 06:58:17.114"></status>
</kw>
<msg timestamp="20200908 06:58:22.572" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200908 06:58:22.572" starttime="20200908 06:58:17.113"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200908 06:58:22.573" starttime="20200908 06:58:22.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:22.577" level="INFO">Running command 'ozone sh bucket list /57156-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:27.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:27.874" level="INFO">${output} = 57156-rpcbasic</msg>
<status status="PASS" endtime="20200908 06:58:27.874" starttime="20200908 06:58:22.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:27.875" level="INFO">57156-rpcbasic</msg>
<status status="PASS" endtime="20200908 06:58:27.876" starttime="20200908 06:58:27.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:27.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:27.877" starttime="20200908 06:58:27.876"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:27.877" starttime="20200908 06:58:22.574"></status>
</kw>
<msg timestamp="20200908 06:58:27.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:27.877" starttime="20200908 06:58:22.574"></status>
</kw>
<msg timestamp="20200908 06:58:27.878" level="INFO">${result} = 57156-rpcbasic</msg>
<status status="PASS" endtime="20200908 06:58:27.878" starttime="20200908 06:58:22.573"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200908 06:58:27.878" starttime="20200908 06:58:27.878"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:27.885" level="INFO">Running command 'ozone sh key put /57156-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:34.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:34.228" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:58:34.228" starttime="20200908 06:58:27.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:34.233" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:58:34.233" starttime="20200908 06:58:34.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:34.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:34.234" starttime="20200908 06:58:34.233"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:34.235" starttime="20200908 06:58:27.881"></status>
</kw>
<msg timestamp="20200908 06:58:34.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:34.235" starttime="20200908 06:58:27.880"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:34.235" starttime="20200908 06:58:27.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:34.245" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:34.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:34.247" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:58:34.247" starttime="20200908 06:58:34.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:34.248" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:58:34.248" starttime="20200908 06:58:34.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:34.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:34.249" starttime="20200908 06:58:34.248"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:34.250" starttime="20200908 06:58:34.239"></status>
</kw>
<msg timestamp="20200908 06:58:34.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:34.250" starttime="20200908 06:58:34.237"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:34.250" starttime="20200908 06:58:34.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:34.254" level="INFO">Running command 'ozone sh key get /57156-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:42.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:42.752" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:58:42.752" starttime="20200908 06:58:34.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:42.753" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:58:42.753" starttime="20200908 06:58:42.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:42.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:42.754" starttime="20200908 06:58:42.753"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:42.754" starttime="20200908 06:58:34.251"></status>
</kw>
<msg timestamp="20200908 06:58:42.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:42.754" starttime="20200908 06:58:34.251"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:42.755" starttime="20200908 06:58:34.250"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:42.759" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:42.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:42.762" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:58:42.762" starttime="20200908 06:58:42.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:42.763" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:58:42.763" starttime="20200908 06:58:42.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:42.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:42.764" starttime="20200908 06:58:42.763"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:42.764" starttime="20200908 06:58:42.756"></status>
</kw>
<msg timestamp="20200908 06:58:42.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:42.764" starttime="20200908 06:58:42.755"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:42.764" starttime="20200908 06:58:42.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:42.802" level="INFO">Running command 'ozone sh key put -t RATIS /57156-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:52.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:52.248" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:58:52.248" starttime="20200908 06:58:42.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:52.249" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:58:52.250" starttime="20200908 06:58:52.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:52.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:52.250" starttime="20200908 06:58:52.250"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:52.251" starttime="20200908 06:58:42.789"></status>
</kw>
<msg timestamp="20200908 06:58:52.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:52.251" starttime="20200908 06:58:42.765"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:52.251" starttime="20200908 06:58:42.765"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:52.257" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:58:52.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:58:52.258" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:58:52.258" starttime="20200908 06:58:52.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:58:52.259" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:58:52.260" starttime="20200908 06:58:52.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:58:52.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:58:52.261" starttime="20200908 06:58:52.260"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:52.261" starttime="20200908 06:58:52.252"></status>
</kw>
<msg timestamp="20200908 06:58:52.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:58:52.261" starttime="20200908 06:58:52.252"></status>
</kw>
<status status="PASS" endtime="20200908 06:58:52.262" starttime="20200908 06:58:52.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:58:52.267" level="INFO">Running command 'ozone sh key get /57156-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:02.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:02.654" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:59:02.655" starttime="20200908 06:58:52.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:02.656" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:59:02.656" starttime="20200908 06:59:02.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:02.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:02.657" starttime="20200908 06:59:02.656"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:02.657" starttime="20200908 06:58:52.263"></status>
</kw>
<msg timestamp="20200908 06:59:02.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:02.658" starttime="20200908 06:58:52.262"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:02.658" starttime="20200908 06:58:52.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:02.663" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:02.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:02.665" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:59:02.665" starttime="20200908 06:59:02.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:02.666" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:59:02.666" starttime="20200908 06:59:02.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:02.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:02.667" starttime="20200908 06:59:02.666"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:02.667" starttime="20200908 06:59:02.659"></status>
</kw>
<msg timestamp="20200908 06:59:02.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:02.667" starttime="20200908 06:59:02.659"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:02.668" starttime="20200908 06:59:02.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:02.673" level="INFO">Running command 'ozone sh key info /57156-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:08.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:08.554" level="INFO">${output} = {
  "volumeName": "57156-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T06:58:49.069Z",
  "modificationTime": "2020-09-08T06:58:51.810Z",
...</msg>
<status status="PASS" endtime="20200908 06:59:08.554" starttime="20200908 06:59:02.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:08.556" level="INFO">{
  "volumeName": "57156-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T06:58:49.069Z",
  "modificationTime": "2020-09-08T06:58:51.810Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104827999293145220,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200908 06:59:08.556" starttime="20200908 06:59:08.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:08.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:08.557" starttime="20200908 06:59:08.556"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:08.557" starttime="20200908 06:59:02.670"></status>
</kw>
<msg timestamp="20200908 06:59:08.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:08.557" starttime="20200908 06:59:02.669"></status>
</kw>
<msg timestamp="20200908 06:59:08.558" level="INFO">${result} = {
  "volumeName": "57156-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T06:58:49.069Z",
  "modificationTime": "2020-09-08T06:58:51.810Z",
...</msg>
<status status="PASS" endtime="20200908 06:59:08.558" starttime="20200908 06:59:02.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200908 06:59:08.558" starttime="20200908 06:59:08.558"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:08.564" level="INFO">Running command 'ozone sh key delete /57156-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:12.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:12.918" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:59:12.918" starttime="20200908 06:59:08.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:12.919" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:59:12.920" starttime="20200908 06:59:12.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:12.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:12.920" starttime="20200908 06:59:12.920"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:12.921" starttime="20200908 06:59:08.560"></status>
</kw>
<msg timestamp="20200908 06:59:12.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:12.921" starttime="20200908 06:59:08.559"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:12.921" starttime="20200908 06:59:08.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:12.925" level="INFO">Running command 'ozone sh key cp /57156-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:21.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:21.601" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:59:21.601" starttime="20200908 06:59:12.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:21.603" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:59:21.603" starttime="20200908 06:59:21.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:21.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:21.604" starttime="20200908 06:59:21.603"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:21.604" starttime="20200908 06:59:12.922"></status>
</kw>
<msg timestamp="20200908 06:59:21.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:21.604" starttime="20200908 06:59:12.922"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:21.605" starttime="20200908 06:59:12.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:21.611" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:21.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:21.614" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:59:21.614" starttime="20200908 06:59:21.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:21.615" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:59:21.615" starttime="20200908 06:59:21.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:21.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:21.616" starttime="20200908 06:59:21.615"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:21.616" starttime="20200908 06:59:21.606"></status>
</kw>
<msg timestamp="20200908 06:59:21.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:21.616" starttime="20200908 06:59:21.606"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:21.617" starttime="20200908 06:59:21.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:21.674" level="INFO">Running command 'ozone sh key get /57156-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:28.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:28.752" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:59:28.752" starttime="20200908 06:59:21.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:28.753" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:59:28.754" starttime="20200908 06:59:28.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:28.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:28.754" starttime="20200908 06:59:28.754"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:28.755" starttime="20200908 06:59:21.618"></status>
</kw>
<msg timestamp="20200908 06:59:28.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:28.755" starttime="20200908 06:59:21.618"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:28.756" starttime="20200908 06:59:21.617"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:28.761" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:28.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:28.763" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:59:28.763" starttime="20200908 06:59:28.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:28.764" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:59:28.764" starttime="20200908 06:59:28.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:28.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:28.765" starttime="20200908 06:59:28.764"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:28.765" starttime="20200908 06:59:28.757"></status>
</kw>
<msg timestamp="20200908 06:59:28.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:28.766" starttime="20200908 06:59:28.756"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:28.766" starttime="20200908 06:59:28.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:28.771" level="INFO">Running command 'ozone sh key delete /57156-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:33.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:33.785" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:59:33.785" starttime="20200908 06:59:28.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:33.786" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:59:33.786" starttime="20200908 06:59:33.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:33.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:33.787" starttime="20200908 06:59:33.787"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:33.787" starttime="20200908 06:59:28.767"></status>
</kw>
<msg timestamp="20200908 06:59:33.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:33.788" starttime="20200908 06:59:28.767"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:33.788" starttime="20200908 06:59:28.766"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:33.792" level="INFO">Running command 'ozone sh key get /57156-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:38.263" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 06:59:38.263" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:59:38.263" starttime="20200908 06:59:33.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:38.264" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200908 06:59:38.264" starttime="20200908 06:59:38.264"></status>
</kw>
<msg timestamp="20200908 06:59:38.265" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:59:38.265" starttime="20200908 06:59:33.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200908 06:59:38.265" starttime="20200908 06:59:38.265"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:38.272" level="INFO">Running command 'ozone sh key get --force /57156-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:41.744" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200908 06:59:41.744" starttime="20200908 06:59:38.269"></status>
</kw>
<status status="FAIL" endtime="20200908 06:59:41.745" starttime="20200908 06:59:38.268"></status>
</kw>
<msg timestamp="20200908 06:59:41.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200908 06:59:41.746" starttime="20200908 06:59:38.268"></status>
</kw>
<status status="FAIL" endtime="20200908 06:59:41.746" starttime="20200908 06:59:38.266"></status>
</kw>
<status status="FAIL" endtime="20200908 06:59:41.746" starttime="20200908 06:58:27.879"></status>
</kw>
<status status="FAIL" endtime="20200908 06:59:41.746" starttime="20200908 06:58:27.879"></status>
</kw>
<status status="FAIL" endtime="20200908 06:59:41.746" starttime="20200908 06:57:41.744"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200908 06:59:41.747" critical="yes" starttime="20200908 06:57:41.743">Test timeout 2 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20200908 06:59:41.749" starttime="20200908 06:57:41.721"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s4" name="Ozone-Shell">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200908 06:59:41.778" level="INFO">${random} = 05869</msg>
<status status="PASS" endtime="20200908 06:59:41.778" starttime="20200908 06:59:41.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200908 06:59:41.779" level="INFO">${prefix} = 05869</msg>
<status status="PASS" endtime="20200908 06:59:41.779" starttime="20200908 06:59:41.778"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:41.779" starttime="20200908 06:59:41.777"></status>
</kw>
<test id="s1-s1-s4-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:41.794" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:41.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:41.804" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:59:41.804" starttime="20200908 06:59:41.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:41.806" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:59:41.806" starttime="20200908 06:59:41.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:41.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:41.807" starttime="20200908 06:59:41.806"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:41.807" starttime="20200908 06:59:41.785"></status>
</kw>
<msg timestamp="20200908 06:59:41.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:41.808" starttime="20200908 06:59:41.785"></status>
</kw>
<msg timestamp="20200908 06:59:41.808" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:59:41.808" starttime="20200908 06:59:41.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:59:41.809" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:59:41.810" starttime="20200908 06:59:41.808"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:41.824" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:41.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:41.870" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:59:41.870" starttime="20200908 06:59:41.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:41.871" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:59:41.871" starttime="20200908 06:59:41.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:41.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:41.872" starttime="20200908 06:59:41.871"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:41.872" starttime="20200908 06:59:41.811"></status>
</kw>
<msg timestamp="20200908 06:59:41.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:41.873" starttime="20200908 06:59:41.811"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:41.873" starttime="20200908 06:59:41.810"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:41.873" starttime="20200908 06:59:41.810"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:41.873" starttime="20200908 06:59:41.783"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:41.873" starttime="20200908 06:59:41.783"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:41.882" level="INFO">Running command 'ozone sh volume info o3://om:9862/05869-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:50.002" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 06:59:50.002" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:59:50.002" starttime="20200908 06:59:41.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:50.004" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 05869-rpcwoport is not found</msg>
<status status="PASS" endtime="20200908 06:59:50.004" starttime="20200908 06:59:50.003"></status>
</kw>
<msg timestamp="20200908 06:59:50.004" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:59:50.004" starttime="20200908 06:59:41.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200908 06:59:50.005" starttime="20200908 06:59:50.004"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:50.009" level="INFO">Running command 'ozone sh volume create o3://om:9862/05869-rpcwoport --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:59:57.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:59:57.936" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:59:57.936" starttime="20200908 06:59:50.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:59:57.937" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 06:59:57.938" starttime="20200908 06:59:57.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:59:57.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:59:57.938" starttime="20200908 06:59:57.938"></status>
</kw>
<status status="PASS" endtime="20200908 06:59:57.939" starttime="20200908 06:59:50.006"></status>
</kw>
<msg timestamp="20200908 06:59:57.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:59:57.939" starttime="20200908 06:59:50.006"></status>
</kw>
<msg timestamp="20200908 06:59:57.939" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 06:59:57.939" starttime="20200908 06:59:50.005"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200908 06:59:57.940" starttime="20200908 06:59:57.939"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:59:57.950" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="05869-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:03.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:03.519" level="INFO">${output} = {
  "metadata": {},
  "name": "05869-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200908 07:00:03.519" starttime="20200908 06:59:57.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:03.520" level="INFO">{
  "metadata": {},
  "name": "05869-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-08T06:59:57.530Z",
  "modificationTime": "2020-09-08T06:59:57.530Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200908 07:00:03.521" starttime="20200908 07:00:03.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:03.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:03.522" starttime="20200908 07:00:03.521"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:03.522" starttime="20200908 06:59:57.941"></status>
</kw>
<msg timestamp="20200908 07:00:03.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:03.522" starttime="20200908 06:59:57.941"></status>
</kw>
<msg timestamp="20200908 07:00:03.522" level="INFO">${result} = {
  "metadata": {},
  "name": "05869-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200908 07:00:03.522" starttime="20200908 06:59:57.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200908 07:00:03.523" starttime="20200908 07:00:03.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:03.527" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="05869-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:09.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:09.660" level="INFO">${output} = {
  "metadata": {},
  "name": "05869-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200908 07:00:09.660" starttime="20200908 07:00:03.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:09.661" level="INFO">{
  "metadata": {},
  "name": "05869-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-08T06:59:57.530Z",
  "modificationTime": "2020-09-08T06:59:57.530Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200908 07:00:09.661" starttime="20200908 07:00:09.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:09.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:09.662" starttime="20200908 07:00:09.661"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:09.662" starttime="20200908 07:00:03.524"></status>
</kw>
<msg timestamp="20200908 07:00:09.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:09.663" starttime="20200908 07:00:03.524"></status>
</kw>
<msg timestamp="20200908 07:00:09.663" level="INFO">${result} = {
  "metadata": {},
  "name": "05869-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200908 07:00:09.663" starttime="20200908 07:00:03.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200908 07:00:09.664" starttime="20200908 07:00:09.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:09.669" level="INFO">Running command 'ozone sh volume update o3://om:9862/05869-rpcwoport --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:14.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:14.034" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:00:14.034" starttime="20200908 07:00:09.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:14.035" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "05869-rpcwoport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-08T06:59:57.530Z",
  "modificationTime" : "2020-09-08T07:00:13.682Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20200908 07:00:14.035" starttime="20200908 07:00:14.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:14.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:14.036" starttime="20200908 07:00:14.036"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:14.037" starttime="20200908 07:00:09.665"></status>
</kw>
<msg timestamp="20200908 07:00:14.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:14.037" starttime="20200908 07:00:09.664"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:14.037" starttime="20200908 07:00:09.664"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:14.044" level="INFO">Running command 'ozone sh volume info o3://om:9862/05869-rpcwoport | jq -r '. | select(.name=="05869-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:18.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:18.904" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200908 07:00:18.904" starttime="20200908 07:00:14.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:18.905" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200908 07:00:18.906" starttime="20200908 07:00:18.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:18.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:18.906" starttime="20200908 07:00:18.906"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:18.907" starttime="20200908 07:00:14.039"></status>
</kw>
<msg timestamp="20200908 07:00:18.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:18.907" starttime="20200908 07:00:14.039"></status>
</kw>
<msg timestamp="20200908 07:00:18.907" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200908 07:00:18.907" starttime="20200908 07:00:14.038"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200908 07:00:18.908" starttime="20200908 07:00:18.908"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:18.913" level="INFO">Running command 'ozone sh bucket create o3://om:9862/05869-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:22.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:22.936" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:00:22.936" starttime="20200908 07:00:18.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:22.937" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:00:22.938" starttime="20200908 07:00:22.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:22.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:22.938" starttime="20200908 07:00:22.938"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:22.939" starttime="20200908 07:00:18.909"></status>
</kw>
<msg timestamp="20200908 07:00:22.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:22.939" starttime="20200908 07:00:18.909"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:22.939" starttime="20200908 07:00:18.908"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:22.943" level="INFO">Running command 'ozone sh bucket info o3://om:9862/05869-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:29.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:29.418" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200908 07:00:29.418" starttime="20200908 07:00:22.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:29.421" level="INFO">DISK</msg>
<status status="PASS" endtime="20200908 07:00:29.421" starttime="20200908 07:00:29.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:29.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:29.422" starttime="20200908 07:00:29.421"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:29.422" starttime="20200908 07:00:22.940"></status>
</kw>
<msg timestamp="20200908 07:00:29.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:29.423" starttime="20200908 07:00:22.940"></status>
</kw>
<msg timestamp="20200908 07:00:29.424" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200908 07:00:29.424" starttime="20200908 07:00:22.939"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200908 07:00:29.425" starttime="20200908 07:00:29.425"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:29.430" level="INFO">Running command 'ozone sh bucket list o3://om:9862/05869-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:33.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:33.920" level="INFO">${output} = 05869-rpcwoport</msg>
<status status="PASS" endtime="20200908 07:00:33.920" starttime="20200908 07:00:29.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:33.921" level="INFO">05869-rpcwoport</msg>
<status status="PASS" endtime="20200908 07:00:33.921" starttime="20200908 07:00:33.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:33.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:33.922" starttime="20200908 07:00:33.922"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:33.923" starttime="20200908 07:00:29.427"></status>
</kw>
<msg timestamp="20200908 07:00:33.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:33.923" starttime="20200908 07:00:29.427"></status>
</kw>
<msg timestamp="20200908 07:00:33.923" level="INFO">${result} = 05869-rpcwoport</msg>
<status status="PASS" endtime="20200908 07:00:33.923" starttime="20200908 07:00:29.426"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200908 07:00:33.924" starttime="20200908 07:00:33.923"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:33.932" level="INFO">Running command 'ozone sh key put o3://om:9862/05869-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:40.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:40.055" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:00:40.056" starttime="20200908 07:00:33.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:40.057" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:00:40.057" starttime="20200908 07:00:40.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:40.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:40.058" starttime="20200908 07:00:40.057"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:40.058" starttime="20200908 07:00:33.928"></status>
</kw>
<msg timestamp="20200908 07:00:40.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:40.058" starttime="20200908 07:00:33.928"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:40.058" starttime="20200908 07:00:33.925"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:40.062" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:40.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:40.065" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:00:40.065" starttime="20200908 07:00:40.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:40.066" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:00:40.066" starttime="20200908 07:00:40.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:40.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:40.067" starttime="20200908 07:00:40.067"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:40.068" starttime="20200908 07:00:40.060"></status>
</kw>
<msg timestamp="20200908 07:00:40.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:40.068" starttime="20200908 07:00:40.059"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:40.068" starttime="20200908 07:00:40.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:40.072" level="INFO">Running command 'ozone sh key get o3://om:9862/05869-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:45.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:45.953" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:00:45.954" starttime="20200908 07:00:40.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:45.955" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:00:45.955" starttime="20200908 07:00:45.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:45.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:45.956" starttime="20200908 07:00:45.955"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:45.956" starttime="20200908 07:00:40.070"></status>
</kw>
<msg timestamp="20200908 07:00:45.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:45.956" starttime="20200908 07:00:40.069"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:45.957" starttime="20200908 07:00:40.069"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:45.967" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:45.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:45.969" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:00:45.969" starttime="20200908 07:00:45.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:45.970" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:00:45.970" starttime="20200908 07:00:45.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:45.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:45.971" starttime="20200908 07:00:45.970"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:45.971" starttime="20200908 07:00:45.958"></status>
</kw>
<msg timestamp="20200908 07:00:45.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:45.972" starttime="20200908 07:00:45.957"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:45.972" starttime="20200908 07:00:45.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:45.987" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/05869-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:52.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:52.005" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:00:52.005" starttime="20200908 07:00:45.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:52.006" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:00:52.006" starttime="20200908 07:00:52.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:52.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:52.007" starttime="20200908 07:00:52.006"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:52.007" starttime="20200908 07:00:45.983"></status>
</kw>
<msg timestamp="20200908 07:00:52.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:52.007" starttime="20200908 07:00:45.973"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:52.007" starttime="20200908 07:00:45.972"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:52.049" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:52.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:52.075" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:00:52.075" starttime="20200908 07:00:52.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:52.076" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:00:52.076" starttime="20200908 07:00:52.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:52.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:52.077" starttime="20200908 07:00:52.077"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:52.078" starttime="20200908 07:00:52.009"></status>
</kw>
<msg timestamp="20200908 07:00:52.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:52.078" starttime="20200908 07:00:52.008"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:52.078" starttime="20200908 07:00:52.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:52.082" level="INFO">Running command 'ozone sh key get o3://om:9862/05869-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:59.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:59.241" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:00:59.241" starttime="20200908 07:00:52.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:59.242" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:00:59.242" starttime="20200908 07:00:59.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:59.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:59.243" starttime="20200908 07:00:59.242"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:59.243" starttime="20200908 07:00:52.080"></status>
</kw>
<msg timestamp="20200908 07:00:59.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:59.243" starttime="20200908 07:00:52.079"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:59.243" starttime="20200908 07:00:52.078"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:59.249" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:00:59.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:00:59.250" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:00:59.250" starttime="20200908 07:00:59.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:00:59.251" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:00:59.251" starttime="20200908 07:00:59.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:00:59.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:00:59.252" starttime="20200908 07:00:59.251"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:59.252" starttime="20200908 07:00:59.245"></status>
</kw>
<msg timestamp="20200908 07:00:59.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:00:59.253" starttime="20200908 07:00:59.244"></status>
</kw>
<status status="PASS" endtime="20200908 07:00:59.253" starttime="20200908 07:00:59.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:00:59.257" level="INFO">Running command 'ozone sh key info o3://om:9862/05869-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:05.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:05.220" level="INFO">${output} = {
  "volumeName": "05869-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:00:49.576Z",
  "modificationTime": "2020-09-08T07:00:51.366Z",...</msg>
<status status="PASS" endtime="20200908 07:01:05.220" starttime="20200908 07:00:59.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:05.222" level="INFO">{
  "volumeName": "05869-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:00:49.576Z",
  "modificationTime": "2020-09-08T07:00:51.366Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104828007191216260,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200908 07:01:05.222" starttime="20200908 07:01:05.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:05.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:05.223" starttime="20200908 07:01:05.222"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:05.223" starttime="20200908 07:00:59.254"></status>
</kw>
<msg timestamp="20200908 07:01:05.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:05.224" starttime="20200908 07:00:59.254"></status>
</kw>
<msg timestamp="20200908 07:01:05.224" level="INFO">${result} = {
  "volumeName": "05869-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:00:49.576Z",
  "modificationTime": "2020-09-08T07:00:51.366Z",...</msg>
<status status="PASS" endtime="20200908 07:01:05.224" starttime="20200908 07:00:59.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200908 07:01:05.225" starttime="20200908 07:01:05.224"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:05.231" level="INFO">Running command 'ozone sh key delete o3://om:9862/05869-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:11.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:11.403" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:01:11.403" starttime="20200908 07:01:05.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:11.404" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:01:11.405" starttime="20200908 07:01:11.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:11.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:11.405" starttime="20200908 07:01:11.405"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:11.406" starttime="20200908 07:01:05.227"></status>
</kw>
<msg timestamp="20200908 07:01:11.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:11.406" starttime="20200908 07:01:05.226"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:11.406" starttime="20200908 07:01:05.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:11.412" level="INFO">Running command 'ozone sh key cp o3://om:9862/05869-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:19.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:19.360" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:01:19.360" starttime="20200908 07:01:11.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:19.361" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:01:19.361" starttime="20200908 07:01:19.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:19.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:19.362" starttime="20200908 07:01:19.361"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:19.363" starttime="20200908 07:01:11.407"></status>
</kw>
<msg timestamp="20200908 07:01:19.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:19.363" starttime="20200908 07:01:11.407"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:19.363" starttime="20200908 07:01:11.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:19.368" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:19.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:19.369" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:01:19.369" starttime="20200908 07:01:19.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:19.370" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:01:19.370" starttime="20200908 07:01:19.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:19.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:19.371" starttime="20200908 07:01:19.370"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:19.371" starttime="20200908 07:01:19.364"></status>
</kw>
<msg timestamp="20200908 07:01:19.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:19.371" starttime="20200908 07:01:19.364"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:19.372" starttime="20200908 07:01:19.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:19.377" level="INFO">Running command 'ozone sh key get o3://om:9862/05869-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:25.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:25.758" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:01:25.758" starttime="20200908 07:01:19.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:25.759" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:01:25.759" starttime="20200908 07:01:25.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:25.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:25.761" starttime="20200908 07:01:25.760"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:25.761" starttime="20200908 07:01:19.373"></status>
</kw>
<msg timestamp="20200908 07:01:25.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:25.762" starttime="20200908 07:01:19.373"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:25.762" starttime="20200908 07:01:19.372"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:25.766" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:25.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:25.769" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:01:25.769" starttime="20200908 07:01:25.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:25.770" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:01:25.770" starttime="20200908 07:01:25.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:25.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:25.770" starttime="20200908 07:01:25.770"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:25.771" starttime="20200908 07:01:25.763"></status>
</kw>
<msg timestamp="20200908 07:01:25.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:25.771" starttime="20200908 07:01:25.763"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:25.771" starttime="20200908 07:01:25.762"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:25.776" level="INFO">Running command 'ozone sh key delete o3://om:9862/05869-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:30.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:30.876" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:01:30.876" starttime="20200908 07:01:25.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:30.877" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:01:30.877" starttime="20200908 07:01:30.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:30.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:30.878" starttime="20200908 07:01:30.877"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:30.878" starttime="20200908 07:01:25.772"></status>
</kw>
<msg timestamp="20200908 07:01:30.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:30.879" starttime="20200908 07:01:25.772"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:30.879" starttime="20200908 07:01:25.771"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:30.883" level="INFO">Running command 'ozone sh key get o3://om:9862/05869-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:36.152" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 07:01:36.152" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:01:36.152" starttime="20200908 07:01:30.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:36.153" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200908 07:01:36.153" starttime="20200908 07:01:36.152"></status>
</kw>
<msg timestamp="20200908 07:01:36.153" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:01:36.153" starttime="20200908 07:01:30.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200908 07:01:36.154" starttime="20200908 07:01:36.154"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:36.158" level="INFO">Running command 'ozone sh key get --force o3://om:9862/05869-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:41.780" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200908 07:01:41.781" starttime="20200908 07:01:36.156"></status>
</kw>
<status status="FAIL" endtime="20200908 07:01:41.781" starttime="20200908 07:01:36.155"></status>
</kw>
<msg timestamp="20200908 07:01:41.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200908 07:01:41.781" starttime="20200908 07:01:36.155"></status>
</kw>
<status status="FAIL" endtime="20200908 07:01:41.782" starttime="20200908 07:01:36.154"></status>
</kw>
<status status="FAIL" endtime="20200908 07:01:41.782" starttime="20200908 07:00:33.924"></status>
</kw>
<status status="FAIL" endtime="20200908 07:01:41.782" starttime="20200908 07:00:33.924"></status>
</kw>
<status status="FAIL" endtime="20200908 07:01:41.782" starttime="20200908 06:59:41.873"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200908 07:01:41.783" critical="yes" starttime="20200908 06:59:41.779">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s4-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:41.804" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:41.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:41.814" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 07:01:41.814" starttime="20200908 07:01:41.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:41.815" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 07:01:41.815" starttime="20200908 07:01:41.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:41.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:41.816" starttime="20200908 07:01:41.815"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:41.817" starttime="20200908 07:01:41.790"></status>
</kw>
<msg timestamp="20200908 07:01:41.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:41.817" starttime="20200908 07:01:41.790"></status>
</kw>
<msg timestamp="20200908 07:01:41.817" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 07:01:41.817" starttime="20200908 07:01:41.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 07:01:41.818" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 07:01:41.818" starttime="20200908 07:01:41.817"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:41.844" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:41.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:41.887" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:01:41.887" starttime="20200908 07:01:41.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:41.888" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:01:41.888" starttime="20200908 07:01:41.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:41.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:41.889" starttime="20200908 07:01:41.889"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:41.890" starttime="20200908 07:01:41.822"></status>
</kw>
<msg timestamp="20200908 07:01:41.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:41.890" starttime="20200908 07:01:41.819"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:41.890" starttime="20200908 07:01:41.819"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:41.890" starttime="20200908 07:01:41.818"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:41.890" starttime="20200908 07:01:41.785"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:41.890" starttime="20200908 07:01:41.785"></status>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:41.896" level="INFO">Running command 'ozone sh volume create o3://om:9862/05869-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:49.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:49.483" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:01:49.483" starttime="20200908 07:01:41.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:49.484" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:01:49.484" starttime="20200908 07:01:49.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:49.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:49.485" starttime="20200908 07:01:49.485"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:49.486" starttime="20200908 07:01:41.893"></status>
</kw>
<msg timestamp="20200908 07:01:49.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:49.486" starttime="20200908 07:01:41.892"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:49.486" starttime="20200908 07:01:41.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:49.490" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/05869-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:53.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:53.954" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:01:53.954" starttime="20200908 07:01:49.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:53.955" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:01:53.955" starttime="20200908 07:01:53.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:53.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:53.956" starttime="20200908 07:01:53.955"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:53.956" starttime="20200908 07:01:49.488"></status>
</kw>
<msg timestamp="20200908 07:01:53.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:53.957" starttime="20200908 07:01:49.487"></status>
</kw>
<msg timestamp="20200908 07:01:53.957" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:01:53.957" starttime="20200908 07:01:49.486"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200908 07:01:53.958" starttime="20200908 07:01:53.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:53.964" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/05869-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:01:59.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:01:59.736" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:01:59.736" starttime="20200908 07:01:53.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:01:59.863" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20200908 07:01:59.863" starttime="20200908 07:01:59.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:01:59.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:01:59.864" starttime="20200908 07:01:59.863"></status>
</kw>
<status status="PASS" endtime="20200908 07:01:59.864" starttime="20200908 07:01:53.960"></status>
</kw>
<msg timestamp="20200908 07:01:59.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:01:59.864" starttime="20200908 07:01:53.959"></status>
</kw>
<msg timestamp="20200908 07:01:59.865" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:01:59.865" starttime="20200908 07:01:53.958"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:01:59.869" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/05869-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:04.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:04.917" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:04.918" starttime="20200908 07:01:59.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:04.919" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:02:04.919" starttime="20200908 07:02:04.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:04.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:04.920" starttime="20200908 07:02:04.919"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:04.920" starttime="20200908 07:01:59.866"></status>
</kw>
<msg timestamp="20200908 07:02:04.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:04.920" starttime="20200908 07:01:59.865"></status>
</kw>
<msg timestamp="20200908 07:02:04.921" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:04.921" starttime="20200908 07:01:59.865"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200908 07:02:04.922" starttime="20200908 07:02:04.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:04.954" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/05869-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:10.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:10.746" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:10.746" starttime="20200908 07:02:04.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:10.747" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20200908 07:02:10.747" starttime="20200908 07:02:10.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:10.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:10.748" starttime="20200908 07:02:10.748"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:10.748" starttime="20200908 07:02:04.943"></status>
</kw>
<msg timestamp="20200908 07:02:10.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:10.749" starttime="20200908 07:02:04.923"></status>
</kw>
<msg timestamp="20200908 07:02:10.749" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:10.749" starttime="20200908 07:02:04.922"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:10.757" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/05869-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:15.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:15.328" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:15.328" starttime="20200908 07:02:10.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:15.330" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:02:15.330" starttime="20200908 07:02:15.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:15.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:15.330" starttime="20200908 07:02:15.330"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:15.331" starttime="20200908 07:02:10.751"></status>
</kw>
<msg timestamp="20200908 07:02:15.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:15.331" starttime="20200908 07:02:10.750"></status>
</kw>
<msg timestamp="20200908 07:02:15.331" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:15.331" starttime="20200908 07:02:10.749"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200908 07:02:15.333" starttime="20200908 07:02:15.332"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:15.339" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/05869-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:19.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:19.218" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:19.218" starttime="20200908 07:02:15.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:19.219" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" endtime="20200908 07:02:19.219" starttime="20200908 07:02:19.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:19.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:19.220" starttime="20200908 07:02:19.219"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:19.220" starttime="20200908 07:02:15.334"></status>
</kw>
<msg timestamp="20200908 07:02:19.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:19.220" starttime="20200908 07:02:15.334"></status>
</kw>
<msg timestamp="20200908 07:02:19.221" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:19.221" starttime="20200908 07:02:15.333"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:19.226" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/05869-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:23.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:23.116" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:23.116" starttime="20200908 07:02:19.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:23.117" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:02:23.117" starttime="20200908 07:02:23.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:23.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:23.118" starttime="20200908 07:02:23.117"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:23.118" starttime="20200908 07:02:19.222"></status>
</kw>
<msg timestamp="20200908 07:02:23.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:23.118" starttime="20200908 07:02:19.222"></status>
</kw>
<msg timestamp="20200908 07:02:23.119" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:23.119" starttime="20200908 07:02:19.221"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200908 07:02:23.120" starttime="20200908 07:02:23.119"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200908 07:02:23.121" starttime="20200908 07:02:23.120"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:23.121" starttime="20200908 07:01:41.891"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 07:02:23.122" critical="yes" starttime="20200908 07:01:41.783"></status>
</test>
<test id="s1-s1-s4-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:23.130" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:23.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:23.133" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 07:02:23.133" starttime="20200908 07:02:23.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:23.135" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 07:02:23.135" starttime="20200908 07:02:23.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:23.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:23.136" starttime="20200908 07:02:23.135"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:23.136" starttime="20200908 07:02:23.126"></status>
</kw>
<msg timestamp="20200908 07:02:23.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:23.136" starttime="20200908 07:02:23.126"></status>
</kw>
<msg timestamp="20200908 07:02:23.136" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 07:02:23.136" starttime="20200908 07:02:23.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 07:02:23.137" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 07:02:23.137" starttime="20200908 07:02:23.137"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:23.142" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:23.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:23.172" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:02:23.172" starttime="20200908 07:02:23.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:23.173" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:02:23.173" starttime="20200908 07:02:23.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:23.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:23.174" starttime="20200908 07:02:23.174"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:23.175" starttime="20200908 07:02:23.139"></status>
</kw>
<msg timestamp="20200908 07:02:23.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:23.175" starttime="20200908 07:02:23.139"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:23.175" starttime="20200908 07:02:23.138"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:23.175" starttime="20200908 07:02:23.138"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:23.175" starttime="20200908 07:02:23.125"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:23.176" starttime="20200908 07:02:23.124"></status>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:23.183" level="INFO">Running command 'ozone sh bucket create o3://om:9862/05869-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:27.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:27.247" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:27.247" starttime="20200908 07:02:23.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:27.248" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:02:27.249" starttime="20200908 07:02:27.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:27.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:27.249" starttime="20200908 07:02:27.249"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:27.250" starttime="20200908 07:02:23.178"></status>
</kw>
<msg timestamp="20200908 07:02:27.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:27.250" starttime="20200908 07:02:23.177"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:27.250" starttime="20200908 07:02:23.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:27.256" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/05869-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:31.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:31.183" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:31.184" starttime="20200908 07:02:27.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:31.185" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:02:31.185" starttime="20200908 07:02:31.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:31.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:31.186" starttime="20200908 07:02:31.185"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:31.186" starttime="20200908 07:02:27.251"></status>
</kw>
<msg timestamp="20200908 07:02:31.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:31.187" starttime="20200908 07:02:27.251"></status>
</kw>
<msg timestamp="20200908 07:02:31.187" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:31.187" starttime="20200908 07:02:27.250"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200908 07:02:31.188" starttime="20200908 07:02:31.187"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:31.192" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/05869-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:35.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:35.145" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:35.145" starttime="20200908 07:02:31.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:35.147" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20200908 07:02:35.147" starttime="20200908 07:02:35.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:35.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:35.148" starttime="20200908 07:02:35.147"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:35.148" starttime="20200908 07:02:31.189"></status>
</kw>
<msg timestamp="20200908 07:02:35.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:35.148" starttime="20200908 07:02:31.189"></status>
</kw>
<msg timestamp="20200908 07:02:35.149" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:35.149" starttime="20200908 07:02:31.188"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:35.175" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/05869-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:40.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:40.014" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:40.014" starttime="20200908 07:02:35.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:40.015" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:02:40.015" starttime="20200908 07:02:40.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:40.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:40.016" starttime="20200908 07:02:40.016"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:40.017" starttime="20200908 07:02:35.150"></status>
</kw>
<msg timestamp="20200908 07:02:40.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:40.017" starttime="20200908 07:02:35.150"></status>
</kw>
<msg timestamp="20200908 07:02:40.017" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:40.018" starttime="20200908 07:02:35.149"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200908 07:02:40.019" starttime="20200908 07:02:40.018"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:40.023" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/05869-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:43.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:43.885" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:43.885" starttime="20200908 07:02:40.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:43.887" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20200908 07:02:43.887" starttime="20200908 07:02:43.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:43.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:43.887" starttime="20200908 07:02:43.887"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:43.888" starttime="20200908 07:02:40.020"></status>
</kw>
<msg timestamp="20200908 07:02:43.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:43.888" starttime="20200908 07:02:40.020"></status>
</kw>
<msg timestamp="20200908 07:02:43.888" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:43.888" starttime="20200908 07:02:40.019"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:43.894" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/05869-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:48.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:48.095" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:48.095" starttime="20200908 07:02:43.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:48.097" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:02:48.097" starttime="20200908 07:02:48.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:48.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:48.098" starttime="20200908 07:02:48.097"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:48.098" starttime="20200908 07:02:43.890"></status>
</kw>
<msg timestamp="20200908 07:02:48.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:48.098" starttime="20200908 07:02:43.889"></status>
</kw>
<msg timestamp="20200908 07:02:48.099" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:48.099" starttime="20200908 07:02:43.889"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200908 07:02:48.100" starttime="20200908 07:02:48.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:48.105" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/05869-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:51.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:51.853" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:51.853" starttime="20200908 07:02:48.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:51.855" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" endtime="20200908 07:02:51.855" starttime="20200908 07:02:51.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:51.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:51.855" starttime="20200908 07:02:51.855"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:51.856" starttime="20200908 07:02:48.101"></status>
</kw>
<msg timestamp="20200908 07:02:51.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:51.856" starttime="20200908 07:02:48.101"></status>
</kw>
<msg timestamp="20200908 07:02:51.856" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:51.856" starttime="20200908 07:02:48.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:51.862" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/05869-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:56.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:56.281" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:56.282" starttime="20200908 07:02:51.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:56.283" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:02:56.283" starttime="20200908 07:02:56.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:56.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:56.284" starttime="20200908 07:02:56.283"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:56.285" starttime="20200908 07:02:51.858"></status>
</kw>
<msg timestamp="20200908 07:02:56.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:56.285" starttime="20200908 07:02:51.857"></status>
</kw>
<msg timestamp="20200908 07:02:56.285" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:02:56.285" starttime="20200908 07:02:51.857"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200908 07:02:56.286" starttime="20200908 07:02:56.286"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200908 07:02:56.288" starttime="20200908 07:02:56.286"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:56.288" starttime="20200908 07:02:23.176"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 07:02:56.289" critical="yes" starttime="20200908 07:02:23.123"></status>
</test>
<test id="s1-s1-s4-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:56.304" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:56.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:56.307" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 07:02:56.307" starttime="20200908 07:02:56.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:56.308" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 07:02:56.308" starttime="20200908 07:02:56.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:56.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:56.308" starttime="20200908 07:02:56.308"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:56.309" starttime="20200908 07:02:56.299"></status>
</kw>
<msg timestamp="20200908 07:02:56.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:56.309" starttime="20200908 07:02:56.299"></status>
</kw>
<msg timestamp="20200908 07:02:56.309" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 07:02:56.309" starttime="20200908 07:02:56.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 07:02:56.310" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 07:02:56.310" starttime="20200908 07:02:56.309"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:56.315" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:02:56.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:02:56.345" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:02:56.345" starttime="20200908 07:02:56.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:02:56.347" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:02:56.347" starttime="20200908 07:02:56.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:02:56.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:02:56.348" starttime="20200908 07:02:56.347"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:56.348" starttime="20200908 07:02:56.312"></status>
</kw>
<msg timestamp="20200908 07:02:56.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:02:56.348" starttime="20200908 07:02:56.312"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:56.349" starttime="20200908 07:02:56.311"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:56.349" starttime="20200908 07:02:56.310"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:56.349" starttime="20200908 07:02:56.297"></status>
</kw>
<status status="PASS" endtime="20200908 07:02:56.349" starttime="20200908 07:02:56.294"></status>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:02:56.355" level="INFO">Running command 'ozone sh key put o3://om:9862/05869-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:02.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:02.214" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:02.214" starttime="20200908 07:02:56.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:02.215" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:03:02.215" starttime="20200908 07:03:02.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:02.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:02.216" starttime="20200908 07:03:02.215"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:02.216" starttime="20200908 07:02:56.351"></status>
</kw>
<msg timestamp="20200908 07:03:02.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:02.217" starttime="20200908 07:02:56.351"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:02.217" starttime="20200908 07:02:56.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:02.221" level="INFO">Running command 'ozone sh key getacl o3://om:9862/05869-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:06.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:06.418" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:06.418" starttime="20200908 07:03:02.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:06.420" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:03:06.420" starttime="20200908 07:03:06.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:06.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:06.421" starttime="20200908 07:03:06.420"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:06.421" starttime="20200908 07:03:02.218"></status>
</kw>
<msg timestamp="20200908 07:03:06.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:06.421" starttime="20200908 07:03:02.218"></status>
</kw>
<msg timestamp="20200908 07:03:06.422" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:06.422" starttime="20200908 07:03:02.217"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200908 07:03:06.422" starttime="20200908 07:03:06.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:06.428" level="INFO">Running command 'ozone sh key addacl o3://om:9862/05869-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:10.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:10.167" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:10.168" starttime="20200908 07:03:06.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:10.169" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200908 07:03:10.169" starttime="20200908 07:03:10.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:10.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:10.170" starttime="20200908 07:03:10.169"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:10.170" starttime="20200908 07:03:06.424"></status>
</kw>
<msg timestamp="20200908 07:03:10.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:10.170" starttime="20200908 07:03:06.424"></status>
</kw>
<msg timestamp="20200908 07:03:10.171" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:10.171" starttime="20200908 07:03:06.423"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:10.176" level="INFO">Running command 'ozone sh key getacl o3://om:9862/05869-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:14.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:14.159" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:14.159" starttime="20200908 07:03:10.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:14.161" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:03:14.161" starttime="20200908 07:03:14.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:14.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:14.162" starttime="20200908 07:03:14.161"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:14.162" starttime="20200908 07:03:10.172"></status>
</kw>
<msg timestamp="20200908 07:03:14.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:14.162" starttime="20200908 07:03:10.172"></status>
</kw>
<msg timestamp="20200908 07:03:14.163" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:14.163" starttime="20200908 07:03:10.171"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200908 07:03:14.164" starttime="20200908 07:03:14.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:14.170" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/05869-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:17.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:17.771" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:17.771" starttime="20200908 07:03:14.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:17.772" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20200908 07:03:17.772" starttime="20200908 07:03:17.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:17.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:17.773" starttime="20200908 07:03:17.773"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:17.774" starttime="20200908 07:03:14.166"></status>
</kw>
<msg timestamp="20200908 07:03:17.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:17.774" starttime="20200908 07:03:14.165"></status>
</kw>
<msg timestamp="20200908 07:03:17.774" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:17.774" starttime="20200908 07:03:14.164"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:17.779" level="INFO">Running command 'ozone sh key getacl o3://om:9862/05869-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:21.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:21.868" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:21.868" starttime="20200908 07:03:17.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:21.871" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:03:21.871" starttime="20200908 07:03:21.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:21.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:21.872" starttime="20200908 07:03:21.871"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:21.872" starttime="20200908 07:03:17.776"></status>
</kw>
<msg timestamp="20200908 07:03:21.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:21.873" starttime="20200908 07:03:17.775"></status>
</kw>
<msg timestamp="20200908 07:03:21.873" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:21.873" starttime="20200908 07:03:17.775"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200908 07:03:21.874" starttime="20200908 07:03:21.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:21.878" level="INFO">Running command 'ozone sh key setacl o3://om:9862/05869-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:25.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:25.245" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:25.245" starttime="20200908 07:03:21.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:25.246" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" endtime="20200908 07:03:25.246" starttime="20200908 07:03:25.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:25.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:25.247" starttime="20200908 07:03:25.246"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:25.247" starttime="20200908 07:03:21.875"></status>
</kw>
<msg timestamp="20200908 07:03:25.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:25.247" starttime="20200908 07:03:21.875"></status>
</kw>
<msg timestamp="20200908 07:03:25.248" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:25.248" starttime="20200908 07:03:21.874"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:25.253" level="INFO">Running command 'ozone sh key getacl o3://om:9862/05869-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:29.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:29.172" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:29.172" starttime="20200908 07:03:25.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:29.174" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200908 07:03:29.174" starttime="20200908 07:03:29.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:29.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:29.174" starttime="20200908 07:03:29.174"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:29.175" starttime="20200908 07:03:25.249"></status>
</kw>
<msg timestamp="20200908 07:03:29.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:29.175" starttime="20200908 07:03:25.249"></status>
</kw>
<msg timestamp="20200908 07:03:29.175" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:29.175" starttime="20200908 07:03:25.248"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200908 07:03:29.176" starttime="20200908 07:03:29.176"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200908 07:03:29.177" starttime="20200908 07:03:29.176"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:29.178" starttime="20200908 07:02:56.350"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 07:03:29.178" critical="yes" starttime="20200908 07:02:56.290"></status>
</test>
<test id="s1-s1-s4-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:29.186" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:29.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:29.187" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 07:03:29.187" starttime="20200908 07:03:29.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:29.188" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 07:03:29.188" starttime="20200908 07:03:29.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:29.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:29.190" starttime="20200908 07:03:29.189"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:29.190" starttime="20200908 07:03:29.182"></status>
</kw>
<msg timestamp="20200908 07:03:29.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:29.191" starttime="20200908 07:03:29.181"></status>
</kw>
<msg timestamp="20200908 07:03:29.191" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 07:03:29.191" starttime="20200908 07:03:29.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 07:03:29.192" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 07:03:29.192" starttime="20200908 07:03:29.191"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:29.197" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:29.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:29.220" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:03:29.220" starttime="20200908 07:03:29.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:29.221" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:03:29.221" starttime="20200908 07:03:29.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:29.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:29.222" starttime="20200908 07:03:29.221"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:29.222" starttime="20200908 07:03:29.194"></status>
</kw>
<msg timestamp="20200908 07:03:29.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:29.222" starttime="20200908 07:03:29.193"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:29.223" starttime="20200908 07:03:29.192"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:29.223" starttime="20200908 07:03:29.192"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:29.223" starttime="20200908 07:03:29.180"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:29.223" starttime="20200908 07:03:29.179"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:29.228" level="INFO">Running command 'ozone sh volume info o3:///05869-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:33.004" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 07:03:33.004" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:33.004" starttime="20200908 07:03:29.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:33.006" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 05869-rpcwport is not found</msg>
<status status="PASS" endtime="20200908 07:03:33.006" starttime="20200908 07:03:33.005"></status>
</kw>
<msg timestamp="20200908 07:03:33.006" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:33.006" starttime="20200908 07:03:29.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200908 07:03:33.007" starttime="20200908 07:03:33.006"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:33.012" level="INFO">Running command 'ozone sh volume create o3:///05869-rpcwport --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:37.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:37.384" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:37.384" starttime="20200908 07:03:33.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:37.385" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:03:37.385" starttime="20200908 07:03:37.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:37.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:37.386" starttime="20200908 07:03:37.386"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:37.387" starttime="20200908 07:03:33.008"></status>
</kw>
<msg timestamp="20200908 07:03:37.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:37.387" starttime="20200908 07:03:33.008"></status>
</kw>
<msg timestamp="20200908 07:03:37.387" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:37.387" starttime="20200908 07:03:33.007"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200908 07:03:37.388" starttime="20200908 07:03:37.387"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:37.394" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="05869-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:42.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:42.227" level="INFO">${output} = {
  "metadata": {},
  "name": "05869-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200908 07:03:42.227" starttime="20200908 07:03:37.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:42.229" level="INFO">{
  "metadata": {},
  "name": "05869-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-08T07:03:37.322Z",
  "modificationTime": "2020-09-08T07:03:37.322Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200908 07:03:42.229" starttime="20200908 07:03:42.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:42.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:42.230" starttime="20200908 07:03:42.229"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:42.230" starttime="20200908 07:03:37.389"></status>
</kw>
<msg timestamp="20200908 07:03:42.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:42.231" starttime="20200908 07:03:37.389"></status>
</kw>
<msg timestamp="20200908 07:03:42.231" level="INFO">${result} = {
  "metadata": {},
  "name": "05869-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200908 07:03:42.231" starttime="20200908 07:03:37.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200908 07:03:42.232" starttime="20200908 07:03:42.231"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:42.238" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="05869-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:46.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:46.382" level="INFO">${output} = {
  "metadata": {},
  "name": "05869-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200908 07:03:46.382" starttime="20200908 07:03:42.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:46.383" level="INFO">{
  "metadata": {},
  "name": "05869-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-08T07:03:37.322Z",
  "modificationTime": "2020-09-08T07:03:37.322Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200908 07:03:46.383" starttime="20200908 07:03:46.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:46.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:46.384" starttime="20200908 07:03:46.383"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:46.384" starttime="20200908 07:03:42.233"></status>
</kw>
<msg timestamp="20200908 07:03:46.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:46.384" starttime="20200908 07:03:42.233"></status>
</kw>
<msg timestamp="20200908 07:03:46.385" level="INFO">${result} = {
  "metadata": {},
  "name": "05869-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200908 07:03:46.385" starttime="20200908 07:03:42.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200908 07:03:46.385" starttime="20200908 07:03:46.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:46.399" level="INFO">Running command 'ozone sh volume update o3:///05869-rpcwport --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:50.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:50.882" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:50.882" starttime="20200908 07:03:46.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:50.883" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "05869-rpcwport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-08T07:03:37.322Z",
  "modificationTime" : "2020-09-08T07:03:50.465Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20200908 07:03:50.884" starttime="20200908 07:03:50.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:50.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:50.884" starttime="20200908 07:03:50.884"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:50.885" starttime="20200908 07:03:46.395"></status>
</kw>
<msg timestamp="20200908 07:03:50.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:50.885" starttime="20200908 07:03:46.394"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:50.885" starttime="20200908 07:03:46.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:50.891" level="INFO">Running command 'ozone sh volume info o3:///05869-rpcwport | jq -r '. | select(.name=="05869-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:54.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:54.792" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200908 07:03:54.792" starttime="20200908 07:03:50.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:54.794" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200908 07:03:54.794" starttime="20200908 07:03:54.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:54.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:54.795" starttime="20200908 07:03:54.794"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:54.795" starttime="20200908 07:03:50.887"></status>
</kw>
<msg timestamp="20200908 07:03:54.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:54.795" starttime="20200908 07:03:50.887"></status>
</kw>
<msg timestamp="20200908 07:03:54.796" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200908 07:03:54.796" starttime="20200908 07:03:50.886"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200908 07:03:54.796" starttime="20200908 07:03:54.796"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:54.802" level="INFO">Running command 'ozone sh bucket create o3:///05869-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:03:58.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:03:58.817" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:03:58.817" starttime="20200908 07:03:54.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:03:58.818" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:03:58.818" starttime="20200908 07:03:58.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:03:58.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:03:58.819" starttime="20200908 07:03:58.819"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:58.819" starttime="20200908 07:03:54.798"></status>
</kw>
<msg timestamp="20200908 07:03:58.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:03:58.820" starttime="20200908 07:03:54.798"></status>
</kw>
<status status="PASS" endtime="20200908 07:03:58.820" starttime="20200908 07:03:54.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:03:58.825" level="INFO">Running command 'ozone sh bucket info o3:///05869-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:04.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:04.067" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200908 07:04:04.067" starttime="20200908 07:03:58.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:04.069" level="INFO">DISK</msg>
<status status="PASS" endtime="20200908 07:04:04.069" starttime="20200908 07:04:04.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:04.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:04.070" starttime="20200908 07:04:04.069"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:04.070" starttime="20200908 07:03:58.821"></status>
</kw>
<msg timestamp="20200908 07:04:04.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:04.070" starttime="20200908 07:03:58.821"></status>
</kw>
<msg timestamp="20200908 07:04:04.071" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200908 07:04:04.071" starttime="20200908 07:03:58.820"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200908 07:04:04.071" starttime="20200908 07:04:04.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:04.077" level="INFO">Running command 'ozone sh bucket list o3:///05869-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:08.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:08.410" level="INFO">${output} = 05869-rpcwport</msg>
<status status="PASS" endtime="20200908 07:04:08.410" starttime="20200908 07:04:04.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:08.411" level="INFO">05869-rpcwport</msg>
<status status="PASS" endtime="20200908 07:04:08.411" starttime="20200908 07:04:08.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:08.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:08.412" starttime="20200908 07:04:08.412"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:08.413" starttime="20200908 07:04:04.073"></status>
</kw>
<msg timestamp="20200908 07:04:08.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:08.413" starttime="20200908 07:04:04.073"></status>
</kw>
<msg timestamp="20200908 07:04:08.413" level="INFO">${result} = 05869-rpcwport</msg>
<status status="PASS" endtime="20200908 07:04:08.413" starttime="20200908 07:04:04.072"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200908 07:04:08.414" starttime="20200908 07:04:08.414"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:08.421" level="INFO">Running command 'ozone sh key put o3:///05869-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:17.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:17.062" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:04:17.063" starttime="20200908 07:04:08.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:17.064" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:04:17.064" starttime="20200908 07:04:17.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:17.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:17.065" starttime="20200908 07:04:17.064"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:17.066" starttime="20200908 07:04:08.417"></status>
</kw>
<msg timestamp="20200908 07:04:17.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:17.066" starttime="20200908 07:04:08.416"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:17.066" starttime="20200908 07:04:08.416"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:17.070" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:17.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:17.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:04:17.073" starttime="20200908 07:04:17.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:17.074" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:04:17.074" starttime="20200908 07:04:17.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:17.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:17.075" starttime="20200908 07:04:17.075"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:17.075" starttime="20200908 07:04:17.067"></status>
</kw>
<msg timestamp="20200908 07:04:17.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:17.076" starttime="20200908 07:04:17.067"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:17.076" starttime="20200908 07:04:17.066"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:17.081" level="INFO">Running command 'ozone sh key get o3:///05869-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:24.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:24.084" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:04:24.084" starttime="20200908 07:04:17.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:24.085" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:04:24.085" starttime="20200908 07:04:24.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:24.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:24.110" starttime="20200908 07:04:24.086"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:24.110" starttime="20200908 07:04:17.077"></status>
</kw>
<msg timestamp="20200908 07:04:24.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:24.110" starttime="20200908 07:04:17.077"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:24.111" starttime="20200908 07:04:17.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:24.114" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:24.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:24.117" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:04:24.117" starttime="20200908 07:04:24.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:24.118" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:04:24.118" starttime="20200908 07:04:24.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:24.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:24.119" starttime="20200908 07:04:24.119"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:24.120" starttime="20200908 07:04:24.112"></status>
</kw>
<msg timestamp="20200908 07:04:24.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:24.120" starttime="20200908 07:04:24.111"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:24.120" starttime="20200908 07:04:24.111"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:24.124" level="INFO">Running command 'ozone sh key put -t RATIS o3:///05869-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:30.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:30.590" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:04:30.590" starttime="20200908 07:04:24.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:30.592" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:04:30.593" starttime="20200908 07:04:30.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:30.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:30.593" starttime="20200908 07:04:30.593"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:30.594" starttime="20200908 07:04:24.121"></status>
</kw>
<msg timestamp="20200908 07:04:30.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:30.594" starttime="20200908 07:04:24.121"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:30.594" starttime="20200908 07:04:24.120"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:30.599" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:30.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:30.601" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:04:30.601" starttime="20200908 07:04:30.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:30.602" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:04:30.602" starttime="20200908 07:04:30.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:30.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:30.603" starttime="20200908 07:04:30.602"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:30.603" starttime="20200908 07:04:30.595"></status>
</kw>
<msg timestamp="20200908 07:04:30.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:30.603" starttime="20200908 07:04:30.595"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:30.603" starttime="20200908 07:04:30.594"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:30.609" level="INFO">Running command 'ozone sh key get o3:///05869-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:37.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:37.955" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:04:37.955" starttime="20200908 07:04:30.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:37.956" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:04:37.956" starttime="20200908 07:04:37.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:37.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:37.957" starttime="20200908 07:04:37.956"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:37.957" starttime="20200908 07:04:30.604"></status>
</kw>
<msg timestamp="20200908 07:04:37.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:37.957" starttime="20200908 07:04:30.604"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:37.958" starttime="20200908 07:04:30.604"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:37.963" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:37.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:37.965" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:04:37.965" starttime="20200908 07:04:37.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:37.966" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:04:37.966" starttime="20200908 07:04:37.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:37.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:37.966" starttime="20200908 07:04:37.966"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:37.967" starttime="20200908 07:04:37.959"></status>
</kw>
<msg timestamp="20200908 07:04:37.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:37.967" starttime="20200908 07:04:37.958"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:37.967" starttime="20200908 07:04:37.958"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:37.972" level="INFO">Running command 'ozone sh key info o3:///05869-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:42.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:42.280" level="INFO">${output} = {
  "volumeName": "05869-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:04:27.613Z",
  "modificationTime": "2020-09-08T07:04:29.838Z",
...</msg>
<status status="PASS" endtime="20200908 07:04:42.281" starttime="20200908 07:04:37.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:42.282" level="INFO">{
  "volumeName": "05869-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:04:27.613Z",
  "modificationTime": "2020-09-08T07:04:29.838Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104828021480423570,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200908 07:04:42.283" starttime="20200908 07:04:42.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:42.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:42.283" starttime="20200908 07:04:42.283"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:42.284" starttime="20200908 07:04:37.968"></status>
</kw>
<msg timestamp="20200908 07:04:42.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:42.284" starttime="20200908 07:04:37.968"></status>
</kw>
<msg timestamp="20200908 07:04:42.284" level="INFO">${result} = {
  "volumeName": "05869-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:04:27.613Z",
  "modificationTime": "2020-09-08T07:04:29.838Z",
...</msg>
<status status="PASS" endtime="20200908 07:04:42.284" starttime="20200908 07:04:37.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200908 07:04:42.285" starttime="20200908 07:04:42.285"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:42.291" level="INFO">Running command 'ozone sh key delete o3:///05869-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:46.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:46.153" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:04:46.153" starttime="20200908 07:04:42.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:46.154" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:04:46.154" starttime="20200908 07:04:46.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:46.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:46.155" starttime="20200908 07:04:46.154"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:46.155" starttime="20200908 07:04:42.287"></status>
</kw>
<msg timestamp="20200908 07:04:46.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:46.155" starttime="20200908 07:04:42.286"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:46.156" starttime="20200908 07:04:42.286"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:46.161" level="INFO">Running command 'ozone sh key cp o3:///05869-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:53.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:53.172" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:04:53.172" starttime="20200908 07:04:46.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:53.173" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:04:53.174" starttime="20200908 07:04:53.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:53.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:53.174" starttime="20200908 07:04:53.174"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:53.175" starttime="20200908 07:04:46.157"></status>
</kw>
<msg timestamp="20200908 07:04:53.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:53.175" starttime="20200908 07:04:46.157"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:53.175" starttime="20200908 07:04:46.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:53.181" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:53.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:53.182" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:04:53.182" starttime="20200908 07:04:53.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:53.183" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:04:53.184" starttime="20200908 07:04:53.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:53.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:53.185" starttime="20200908 07:04:53.184"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:53.185" starttime="20200908 07:04:53.177"></status>
</kw>
<msg timestamp="20200908 07:04:53.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:53.185" starttime="20200908 07:04:53.176"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:53.186" starttime="20200908 07:04:53.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:53.191" level="INFO">Running command 'ozone sh key get o3:///05869-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:58.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:58.675" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:04:58.676" starttime="20200908 07:04:53.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:58.677" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:04:58.677" starttime="20200908 07:04:58.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:58.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:58.678" starttime="20200908 07:04:58.677"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:58.678" starttime="20200908 07:04:53.187"></status>
</kw>
<msg timestamp="20200908 07:04:58.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:58.678" starttime="20200908 07:04:53.186"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:58.679" starttime="20200908 07:04:53.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:58.684" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:04:58.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:04:58.833" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:04:58.833" starttime="20200908 07:04:58.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:04:58.834" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:04:58.834" starttime="20200908 07:04:58.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:04:58.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:04:58.835" starttime="20200908 07:04:58.834"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:58.835" starttime="20200908 07:04:58.680"></status>
</kw>
<msg timestamp="20200908 07:04:58.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:04:58.835" starttime="20200908 07:04:58.680"></status>
</kw>
<status status="PASS" endtime="20200908 07:04:58.836" starttime="20200908 07:04:58.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:04:58.840" level="INFO">Running command 'ozone sh key delete o3:///05869-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:02.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:02.300" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:05:02.301" starttime="20200908 07:04:58.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:02.302" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:05:02.302" starttime="20200908 07:05:02.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:02.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:02.303" starttime="20200908 07:05:02.302"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:02.303" starttime="20200908 07:04:58.837"></status>
</kw>
<msg timestamp="20200908 07:05:02.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:02.303" starttime="20200908 07:04:58.837"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:02.304" starttime="20200908 07:04:58.836"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:02.308" level="INFO">Running command 'ozone sh key get o3:///05869-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:07.776" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 07:05:07.777" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:05:07.777" starttime="20200908 07:05:02.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:07.778" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200908 07:05:07.778" starttime="20200908 07:05:07.777"></status>
</kw>
<msg timestamp="20200908 07:05:07.778" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:05:07.778" starttime="20200908 07:05:02.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200908 07:05:07.779" starttime="20200908 07:05:07.778"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:07.783" level="INFO">Running command 'ozone sh key get --force o3:///05869-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:13.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:13.703" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:05:13.703" starttime="20200908 07:05:07.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:13.705" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:05:13.705" starttime="20200908 07:05:13.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:13.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:13.706" starttime="20200908 07:05:13.705"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:13.706" starttime="20200908 07:05:07.780"></status>
</kw>
<msg timestamp="20200908 07:05:13.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:13.706" starttime="20200908 07:05:07.780"></status>
</kw>
<msg timestamp="20200908 07:05:13.707" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:05:13.707" starttime="20200908 07:05:07.779"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200908 07:05:13.707" starttime="20200908 07:05:13.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:13.712" level="INFO">Running command 'ozone sh key info o3:///05869-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:18.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:18.308" level="INFO">${output} = {
  "volumeName": "05869-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:04:14.567Z",
  "modificationTime": "2020-09-08T07:04:16.408Z",
  "rep...</msg>
<status status="PASS" endtime="20200908 07:05:18.308" starttime="20200908 07:05:13.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:18.309" level="INFO">{
  "volumeName": "05869-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:04:14.567Z",
  "modificationTime": "2020-09-08T07:04:16.408Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104828020625440900,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200908 07:05:18.309" starttime="20200908 07:05:18.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:18.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:18.310" starttime="20200908 07:05:18.310"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:18.311" starttime="20200908 07:05:13.709"></status>
</kw>
<msg timestamp="20200908 07:05:18.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:18.311" starttime="20200908 07:05:13.708"></status>
</kw>
<msg timestamp="20200908 07:05:18.311" level="INFO">${result} = {
  "volumeName": "05869-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:04:14.567Z",
  "modificationTime": "2020-09-08T07:04:16.408Z",
  "rep...</msg>
<status status="PASS" endtime="20200908 07:05:18.311" starttime="20200908 07:05:13.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200908 07:05:18.312" starttime="20200908 07:05:18.312"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:18.317" level="INFO">Running command 'ozone sh key list o3:///05869-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:22.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:22.365" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200908 07:05:22.365" starttime="20200908 07:05:18.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:22.367" level="INFO">key1</msg>
<status status="PASS" endtime="20200908 07:05:22.367" starttime="20200908 07:05:22.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:22.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:22.368" starttime="20200908 07:05:22.367"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:22.368" starttime="20200908 07:05:18.313"></status>
</kw>
<msg timestamp="20200908 07:05:22.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:22.368" starttime="20200908 07:05:18.313"></status>
</kw>
<msg timestamp="20200908 07:05:22.368" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200908 07:05:22.368" starttime="20200908 07:05:18.312"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200908 07:05:22.369" starttime="20200908 07:05:22.369"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:22.375" level="INFO">Running command 'ozone sh key rename o3:///05869-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:25.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:25.539" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:05:25.539" starttime="20200908 07:05:22.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:25.541" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:05:25.541" starttime="20200908 07:05:25.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:25.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:25.542" starttime="20200908 07:05:25.541"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:25.542" starttime="20200908 07:05:22.370"></status>
</kw>
<msg timestamp="20200908 07:05:25.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:25.542" starttime="20200908 07:05:22.370"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:25.543" starttime="20200908 07:05:22.369"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:25.548" level="INFO">Running command 'ozone sh key list o3:///05869-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:29.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:29.138" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200908 07:05:29.139" starttime="20200908 07:05:25.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:29.140" level="INFO">key2</msg>
<status status="PASS" endtime="20200908 07:05:29.140" starttime="20200908 07:05:29.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:29.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:29.141" starttime="20200908 07:05:29.140"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:29.142" starttime="20200908 07:05:25.544"></status>
</kw>
<msg timestamp="20200908 07:05:29.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:29.142" starttime="20200908 07:05:25.543"></status>
</kw>
<msg timestamp="20200908 07:05:29.142" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200908 07:05:29.142" starttime="20200908 07:05:25.543"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200908 07:05:29.143" starttime="20200908 07:05:29.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:29.147" level="INFO">Running command 'ozone sh key delete o3:///05869-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:29.179" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200908 07:05:29.179" starttime="20200908 07:05:29.145"></status>
</kw>
<status status="FAIL" endtime="20200908 07:05:29.179" starttime="20200908 07:05:29.144"></status>
</kw>
<msg timestamp="20200908 07:05:29.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200908 07:05:29.180" starttime="20200908 07:05:29.143"></status>
</kw>
<status status="FAIL" endtime="20200908 07:05:29.180" starttime="20200908 07:05:29.143"></status>
</kw>
<status status="FAIL" endtime="20200908 07:05:29.180" starttime="20200908 07:04:08.415"></status>
</kw>
<status status="FAIL" endtime="20200908 07:05:29.180" starttime="20200908 07:04:08.414"></status>
</kw>
<status status="FAIL" endtime="20200908 07:05:29.180" starttime="20200908 07:03:29.223"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200908 07:05:29.181" critical="yes" starttime="20200908 07:03:29.178">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s4-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:29.189" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:29.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:29.198" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 07:05:29.198" starttime="20200908 07:05:29.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:29.200" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 07:05:29.200" starttime="20200908 07:05:29.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:29.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:29.201" starttime="20200908 07:05:29.200"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:29.201" starttime="20200908 07:05:29.186"></status>
</kw>
<msg timestamp="20200908 07:05:29.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:29.202" starttime="20200908 07:05:29.185"></status>
</kw>
<msg timestamp="20200908 07:05:29.202" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 07:05:29.202" starttime="20200908 07:05:29.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 07:05:29.203" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 07:05:29.203" starttime="20200908 07:05:29.202"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:29.219" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:29.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:29.243" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:05:29.243" starttime="20200908 07:05:29.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:29.244" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:05:29.244" starttime="20200908 07:05:29.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:29.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:29.245" starttime="20200908 07:05:29.244"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:29.245" starttime="20200908 07:05:29.205"></status>
</kw>
<msg timestamp="20200908 07:05:29.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:29.246" starttime="20200908 07:05:29.205"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:29.246" starttime="20200908 07:05:29.204"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:29.246" starttime="20200908 07:05:29.203"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:29.246" starttime="20200908 07:05:29.184"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:29.246" starttime="20200908 07:05:29.184"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:29.250" level="INFO">Running command 'ozone sh volume info /05869-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:35.564" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 07:05:35.564" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:05:35.564" starttime="20200908 07:05:29.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:35.566" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 05869-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200908 07:05:35.566" starttime="20200908 07:05:35.565"></status>
</kw>
<msg timestamp="20200908 07:05:35.567" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:05:35.567" starttime="20200908 07:05:29.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200908 07:05:35.567" starttime="20200908 07:05:35.567"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:35.573" level="INFO">Running command 'ozone sh volume create /05869-rpcwoscheme --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:39.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:39.116" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:05:39.116" starttime="20200908 07:05:35.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:39.117" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:05:39.117" starttime="20200908 07:05:39.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:39.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:39.118" starttime="20200908 07:05:39.118"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:39.119" starttime="20200908 07:05:35.569"></status>
</kw>
<msg timestamp="20200908 07:05:39.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:39.119" starttime="20200908 07:05:35.569"></status>
</kw>
<msg timestamp="20200908 07:05:39.120" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:05:39.120" starttime="20200908 07:05:35.568"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200908 07:05:39.121" starttime="20200908 07:05:39.120"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:39.126" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="05869-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:42.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:42.821" level="INFO">${output} = {
  "metadata": {},
  "name": "05869-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200908 07:05:42.821" starttime="20200908 07:05:39.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:42.823" level="INFO">{
  "metadata": {},
  "name": "05869-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-08T07:05:38.923Z",
  "modificationTime": "2020-09-08T07:05:38.923Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200908 07:05:42.823" starttime="20200908 07:05:42.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:42.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:42.823" starttime="20200908 07:05:42.823"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:42.824" starttime="20200908 07:05:39.123"></status>
</kw>
<msg timestamp="20200908 07:05:42.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:42.824" starttime="20200908 07:05:39.123"></status>
</kw>
<msg timestamp="20200908 07:05:42.824" level="INFO">${result} = {
  "metadata": {},
  "name": "05869-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200908 07:05:42.824" starttime="20200908 07:05:39.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200908 07:05:42.825" starttime="20200908 07:05:42.824"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:42.829" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="05869-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:47.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:47.583" level="INFO">${output} = {
  "metadata": {},
  "name": "05869-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200908 07:05:47.583" starttime="20200908 07:05:42.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:47.585" level="INFO">{
  "metadata": {},
  "name": "05869-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-08T07:05:38.923Z",
  "modificationTime": "2020-09-08T07:05:38.923Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200908 07:05:47.585" starttime="20200908 07:05:47.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:47.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:47.585" starttime="20200908 07:05:47.585"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:47.586" starttime="20200908 07:05:42.826"></status>
</kw>
<msg timestamp="20200908 07:05:47.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:47.586" starttime="20200908 07:05:42.826"></status>
</kw>
<msg timestamp="20200908 07:05:47.586" level="INFO">${result} = {
  "metadata": {},
  "name": "05869-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200908 07:05:47.586" starttime="20200908 07:05:42.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200908 07:05:47.587" starttime="20200908 07:05:47.587"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:47.593" level="INFO">Running command 'ozone sh volume update /05869-rpcwoscheme --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:52.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:52.366" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:05:52.366" starttime="20200908 07:05:47.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:52.367" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "05869-rpcwoscheme",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-08T07:05:38.923Z",
  "modificationTime" : "2020-09-08T07:05:51.967Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20200908 07:05:52.367" starttime="20200908 07:05:52.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:52.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:52.368" starttime="20200908 07:05:52.367"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:52.368" starttime="20200908 07:05:47.589"></status>
</kw>
<msg timestamp="20200908 07:05:52.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:52.368" starttime="20200908 07:05:47.588"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:52.369" starttime="20200908 07:05:47.587"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:52.374" level="INFO">Running command 'ozone sh volume info /05869-rpcwoscheme | jq -r '. | select(.name=="05869-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:05:56.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:05:56.831" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200908 07:05:56.831" starttime="20200908 07:05:52.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:05:56.832" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200908 07:05:56.833" starttime="20200908 07:05:56.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:05:56.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:05:56.833" starttime="20200908 07:05:56.833"></status>
</kw>
<status status="PASS" endtime="20200908 07:05:56.834" starttime="20200908 07:05:52.370"></status>
</kw>
<msg timestamp="20200908 07:05:56.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:05:56.834" starttime="20200908 07:05:52.370"></status>
</kw>
<msg timestamp="20200908 07:05:56.834" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200908 07:05:56.834" starttime="20200908 07:05:52.369"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200908 07:05:56.835" starttime="20200908 07:05:56.835"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:05:56.841" level="INFO">Running command 'ozone sh bucket create /05869-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:00.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:00.298" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:06:00.298" starttime="20200908 07:05:56.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:00.299" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:06:00.299" starttime="20200908 07:06:00.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:00.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:00.300" starttime="20200908 07:06:00.299"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:00.300" starttime="20200908 07:05:56.837"></status>
</kw>
<msg timestamp="20200908 07:06:00.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:00.300" starttime="20200908 07:05:56.836"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:00.301" starttime="20200908 07:05:56.835"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:00.307" level="INFO">Running command 'ozone sh bucket info /05869-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:03.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:03.911" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200908 07:06:03.911" starttime="20200908 07:06:00.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:03.912" level="INFO">DISK</msg>
<status status="PASS" endtime="20200908 07:06:03.912" starttime="20200908 07:06:03.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:03.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:03.913" starttime="20200908 07:06:03.912"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:03.913" starttime="20200908 07:06:00.303"></status>
</kw>
<msg timestamp="20200908 07:06:03.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:03.914" starttime="20200908 07:06:00.302"></status>
</kw>
<msg timestamp="20200908 07:06:03.914" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200908 07:06:03.914" starttime="20200908 07:06:00.301"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200908 07:06:03.915" starttime="20200908 07:06:03.914"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:03.920" level="INFO">Running command 'ozone sh bucket list /05869-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:07.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:07.381" level="INFO">${output} = 05869-rpcwoscheme</msg>
<status status="PASS" endtime="20200908 07:06:07.381" starttime="20200908 07:06:03.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:07.382" level="INFO">05869-rpcwoscheme</msg>
<status status="PASS" endtime="20200908 07:06:07.382" starttime="20200908 07:06:07.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:07.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:07.383" starttime="20200908 07:06:07.383"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:07.383" starttime="20200908 07:06:03.917"></status>
</kw>
<msg timestamp="20200908 07:06:07.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:07.384" starttime="20200908 07:06:03.917"></status>
</kw>
<msg timestamp="20200908 07:06:07.384" level="INFO">${result} = 05869-rpcwoscheme</msg>
<status status="PASS" endtime="20200908 07:06:07.384" starttime="20200908 07:06:03.915"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200908 07:06:07.385" starttime="20200908 07:06:07.384"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:07.391" level="INFO">Running command 'ozone sh key put /05869-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:19.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:19.007" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:06:19.007" starttime="20200908 07:06:07.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:19.008" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:06:19.008" starttime="20200908 07:06:19.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:19.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:19.009" starttime="20200908 07:06:19.008"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:19.009" starttime="20200908 07:06:07.387"></status>
</kw>
<msg timestamp="20200908 07:06:19.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:19.009" starttime="20200908 07:06:07.387"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:19.010" starttime="20200908 07:06:07.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:19.014" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:19.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:19.017" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:06:19.017" starttime="20200908 07:06:19.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:19.018" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:06:19.018" starttime="20200908 07:06:19.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:19.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:19.019" starttime="20200908 07:06:19.018"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:19.019" starttime="20200908 07:06:19.011"></status>
</kw>
<msg timestamp="20200908 07:06:19.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:19.020" starttime="20200908 07:06:19.010"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:19.020" starttime="20200908 07:06:19.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:19.024" level="INFO">Running command 'ozone sh key get /05869-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:27.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:27.578" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:06:27.578" starttime="20200908 07:06:19.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:27.579" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:06:27.580" starttime="20200908 07:06:27.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:27.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:27.580" starttime="20200908 07:06:27.580"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:27.581" starttime="20200908 07:06:19.021"></status>
</kw>
<msg timestamp="20200908 07:06:27.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:27.581" starttime="20200908 07:06:19.021"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:27.581" starttime="20200908 07:06:19.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:27.587" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:27.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:27.588" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:06:27.588" starttime="20200908 07:06:27.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:27.589" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:06:27.589" starttime="20200908 07:06:27.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:27.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:27.590" starttime="20200908 07:06:27.589"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:27.590" starttime="20200908 07:06:27.583"></status>
</kw>
<msg timestamp="20200908 07:06:27.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:27.590" starttime="20200908 07:06:27.582"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:27.591" starttime="20200908 07:06:27.582"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:27.596" level="INFO">Running command 'ozone sh key put -t RATIS /05869-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:36.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:36.763" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:06:36.763" starttime="20200908 07:06:27.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:36.765" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:06:36.766" starttime="20200908 07:06:36.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:36.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:36.768" starttime="20200908 07:06:36.766"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:36.769" starttime="20200908 07:06:27.592"></status>
</kw>
<msg timestamp="20200908 07:06:36.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:36.769" starttime="20200908 07:06:27.592"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:36.769" starttime="20200908 07:06:27.591"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:36.774" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:36.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:36.776" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:06:36.776" starttime="20200908 07:06:36.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:36.778" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:06:36.778" starttime="20200908 07:06:36.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:36.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:36.780" starttime="20200908 07:06:36.779"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:36.781" starttime="20200908 07:06:36.770"></status>
</kw>
<msg timestamp="20200908 07:06:36.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:36.781" starttime="20200908 07:06:36.770"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:36.782" starttime="20200908 07:06:36.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:36.790" level="INFO">Running command 'ozone sh key get /05869-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:43.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:43.070" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:06:43.070" starttime="20200908 07:06:36.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:43.072" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:06:43.072" starttime="20200908 07:06:43.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:43.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:43.073" starttime="20200908 07:06:43.072"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:43.074" starttime="20200908 07:06:36.784"></status>
</kw>
<msg timestamp="20200908 07:06:43.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:43.074" starttime="20200908 07:06:36.783"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:43.074" starttime="20200908 07:06:36.782"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:43.079" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:43.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:43.081" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:06:43.081" starttime="20200908 07:06:43.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:43.081" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:06:43.082" starttime="20200908 07:06:43.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:43.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:43.082" starttime="20200908 07:06:43.082"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:43.083" starttime="20200908 07:06:43.075"></status>
</kw>
<msg timestamp="20200908 07:06:43.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:43.083" starttime="20200908 07:06:43.075"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:43.083" starttime="20200908 07:06:43.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:43.087" level="INFO">Running command 'ozone sh key info /05869-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:47.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:47.465" level="INFO">${output} = {
  "volumeName": "05869-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:06:34.618Z",
  "modificationTime": "2020-09-08T07:06:36.362Z...</msg>
<status status="PASS" endtime="20200908 07:06:47.465" starttime="20200908 07:06:43.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:47.466" level="INFO">{
  "volumeName": "05869-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:06:34.618Z",
  "modificationTime": "2020-09-08T07:06:36.362Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104828029803823250,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200908 07:06:47.466" starttime="20200908 07:06:47.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:47.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:47.467" starttime="20200908 07:06:47.466"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:47.467" starttime="20200908 07:06:43.085"></status>
</kw>
<msg timestamp="20200908 07:06:47.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:47.467" starttime="20200908 07:06:43.084"></status>
</kw>
<msg timestamp="20200908 07:06:47.468" level="INFO">${result} = {
  "volumeName": "05869-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:06:34.618Z",
  "modificationTime": "2020-09-08T07:06:36.362Z...</msg>
<status status="PASS" endtime="20200908 07:06:47.468" starttime="20200908 07:06:43.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200908 07:06:47.468" starttime="20200908 07:06:47.468"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:47.472" level="INFO">Running command 'ozone sh key delete /05869-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:51.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:51.142" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:06:51.142" starttime="20200908 07:06:47.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:51.143" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:06:51.144" starttime="20200908 07:06:51.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:51.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:51.144" starttime="20200908 07:06:51.144"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:51.145" starttime="20200908 07:06:47.469"></status>
</kw>
<msg timestamp="20200908 07:06:51.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:51.145" starttime="20200908 07:06:47.469"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:51.145" starttime="20200908 07:06:47.468"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:51.149" level="INFO">Running command 'ozone sh key cp /05869-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:58.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:58.305" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:06:58.305" starttime="20200908 07:06:51.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:58.306" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:06:58.306" starttime="20200908 07:06:58.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:58.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:58.307" starttime="20200908 07:06:58.307"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:58.308" starttime="20200908 07:06:51.146"></status>
</kw>
<msg timestamp="20200908 07:06:58.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:58.308" starttime="20200908 07:06:51.146"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:58.308" starttime="20200908 07:06:51.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:58.312" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:06:58.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:06:58.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:06:58.315" starttime="20200908 07:06:58.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:06:58.316" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:06:58.317" starttime="20200908 07:06:58.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:06:58.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:06:58.317" starttime="20200908 07:06:58.317"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:58.318" starttime="20200908 07:06:58.309"></status>
</kw>
<msg timestamp="20200908 07:06:58.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:06:58.318" starttime="20200908 07:06:58.309"></status>
</kw>
<status status="PASS" endtime="20200908 07:06:58.318" starttime="20200908 07:06:58.308"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:06:58.323" level="INFO">Running command 'ozone sh key get /05869-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:07:04.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:07:04.858" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:07:04.859" starttime="20200908 07:06:58.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:07:04.860" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:07:04.860" starttime="20200908 07:07:04.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:07:04.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:07:04.861" starttime="20200908 07:07:04.860"></status>
</kw>
<status status="PASS" endtime="20200908 07:07:04.861" starttime="20200908 07:06:58.319"></status>
</kw>
<msg timestamp="20200908 07:07:04.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:07:04.861" starttime="20200908 07:06:58.319"></status>
</kw>
<status status="PASS" endtime="20200908 07:07:04.862" starttime="20200908 07:06:58.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:07:04.867" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:07:04.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:07:04.868" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 07:07:04.868" starttime="20200908 07:07:04.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:07:04.869" level="INFO"></msg>
<status status="PASS" endtime="20200908 07:07:04.869" starttime="20200908 07:07:04.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:07:04.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:07:04.870" starttime="20200908 07:07:04.869"></status>
</kw>
<status status="PASS" endtime="20200908 07:07:04.870" starttime="20200908 07:07:04.863"></status>
</kw>
<msg timestamp="20200908 07:07:04.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:07:04.870" starttime="20200908 07:07:04.862"></status>
</kw>
<status status="PASS" endtime="20200908 07:07:04.871" starttime="20200908 07:07:04.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:07:04.875" level="INFO">Running command 'ozone sh key delete /05869-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:07:09.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:07:09.441" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:07:09.441" starttime="20200908 07:07:04.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:07:09.442" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:07:09.442" starttime="20200908 07:07:09.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:07:09.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:07:09.443" starttime="20200908 07:07:09.443"></status>
</kw>
<status status="PASS" endtime="20200908 07:07:09.444" starttime="20200908 07:07:04.872"></status>
</kw>
<msg timestamp="20200908 07:07:09.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:07:09.444" starttime="20200908 07:07:04.871"></status>
</kw>
<status status="PASS" endtime="20200908 07:07:09.444" starttime="20200908 07:07:04.871"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:07:09.447" level="INFO">Running command 'ozone sh key get /05869-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:07:13.073" level="INFO">${rc} = 255</msg>
<msg timestamp="20200908 07:07:13.073" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:07:13.073" starttime="20200908 07:07:09.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:07:13.074" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200908 07:07:13.075" starttime="20200908 07:07:13.074"></status>
</kw>
<msg timestamp="20200908 07:07:13.075" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:07:13.075" starttime="20200908 07:07:09.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200908 07:07:13.076" starttime="20200908 07:07:13.075"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:07:13.080" level="INFO">Running command 'ozone sh key get --force /05869-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:07:17.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:07:17.775" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:07:17.775" starttime="20200908 07:07:13.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:07:17.777" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200908 07:07:17.777" starttime="20200908 07:07:17.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:07:17.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:07:17.777" starttime="20200908 07:07:17.777"></status>
</kw>
<status status="PASS" endtime="20200908 07:07:17.778" starttime="20200908 07:07:13.077"></status>
</kw>
<msg timestamp="20200908 07:07:17.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:07:17.778" starttime="20200908 07:07:13.077"></status>
</kw>
<msg timestamp="20200908 07:07:17.778" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200908 07:07:17.778" starttime="20200908 07:07:13.076"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200908 07:07:17.779" starttime="20200908 07:07:17.778"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:07:17.785" level="INFO">Running command 'ozone sh key info /05869-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:07:21.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:07:21.850" level="INFO">${output} = {
  "volumeName": "05869-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:06:11.741Z",
  "modificationTime": "2020-09-08T07:06:17.898Z",
  "...</msg>
<status status="PASS" endtime="20200908 07:07:21.850" starttime="20200908 07:07:17.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:07:21.851" level="INFO">{
  "volumeName": "05869-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:06:11.741Z",
  "modificationTime": "2020-09-08T07:06:17.898Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104828028304556180,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200908 07:07:21.852" starttime="20200908 07:07:21.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:07:21.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:07:21.853" starttime="20200908 07:07:21.852"></status>
</kw>
<status status="PASS" endtime="20200908 07:07:21.853" starttime="20200908 07:07:17.781"></status>
</kw>
<msg timestamp="20200908 07:07:21.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:07:21.853" starttime="20200908 07:07:17.780"></status>
</kw>
<msg timestamp="20200908 07:07:21.854" level="INFO">${result} = {
  "volumeName": "05869-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-08T07:06:11.741Z",
  "modificationTime": "2020-09-08T07:06:17.898Z",
  "...</msg>
<status status="PASS" endtime="20200908 07:07:21.854" starttime="20200908 07:07:17.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200908 07:07:21.854" starttime="20200908 07:07:21.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:07:21.860" level="INFO">Running command 'ozone sh key list /05869-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:07:26.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 07:07:26.005" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200908 07:07:26.005" starttime="20200908 07:07:21.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 07:07:26.006" level="INFO">key1</msg>
<status status="PASS" endtime="20200908 07:07:26.006" starttime="20200908 07:07:26.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 07:07:26.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 07:07:26.007" starttime="20200908 07:07:26.006"></status>
</kw>
<status status="PASS" endtime="20200908 07:07:26.007" starttime="20200908 07:07:21.856"></status>
</kw>
<msg timestamp="20200908 07:07:26.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 07:07:26.008" starttime="20200908 07:07:21.855"></status>
</kw>
<msg timestamp="20200908 07:07:26.008" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200908 07:07:26.008" starttime="20200908 07:07:21.854"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200908 07:07:26.009" starttime="20200908 07:07:26.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 07:07:26.013" level="INFO">Running command 'ozone sh key rename /05869-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 07:07:29.184" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200908 07:07:29.184" starttime="20200908 07:07:26.011"></status>
</kw>
<status status="FAIL" endtime="20200908 07:07:29.185" starttime="20200908 07:07:26.010"></status>
</kw>
<msg timestamp="20200908 07:07:29.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200908 07:07:29.185" starttime="20200908 07:07:26.010"></status>
</kw>
<status status="FAIL" endtime="20200908 07:07:29.185" starttime="20200908 07:07:26.009"></status>
</kw>
<status status="FAIL" endtime="20200908 07:07:29.186" starttime="20200908 07:06:07.385"></status>
</kw>
<status status="FAIL" endtime="20200908 07:07:29.186" starttime="20200908 07:06:07.385"></status>
</kw>
<status status="FAIL" endtime="20200908 07:07:29.186" starttime="20200908 07:05:29.247"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200908 07:07:29.186" critical="yes" starttime="20200908 07:05:29.183">Test timeout 2 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20200908 07:07:29.189" starttime="20200908 06:59:41.751"></status>
</suite>
<status status="FAIL" endtime="20200908 07:07:29.210" starttime="20200908 06:52:53.580"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:52:48.462" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:52:48.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:52:48.465" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200908 06:52:48.465" starttime="20200908 06:52:48.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:52:48.466" level="INFO">scm</msg>
<status status="PASS" endtime="20200908 06:52:48.466" starttime="20200908 06:52:48.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:52:48.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:52:48.467" starttime="20200908 06:52:48.466"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:48.467" starttime="20200908 06:52:48.456"></status>
</kw>
<msg timestamp="20200908 06:52:48.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:52:48.467" starttime="20200908 06:52:48.456"></status>
</kw>
<msg timestamp="20200908 06:52:48.468" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200908 06:52:48.468" starttime="20200908 06:52:48.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200908 06:52:48.469" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200908 06:52:48.469" starttime="20200908 06:52:48.468"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200908 06:52:48.473" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200908 06:52:48.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20200908 06:52:48.492" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200908 06:52:48.492" starttime="20200908 06:52:48.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200908 06:52:48.493" level="INFO"></msg>
<status status="PASS" endtime="20200908 06:52:48.493" starttime="20200908 06:52:48.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200908 06:52:48.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200908 06:52:48.494" starttime="20200908 06:52:48.493"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:48.494" starttime="20200908 06:52:48.470"></status>
</kw>
<msg timestamp="20200908 06:52:48.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200908 06:52:48.494" starttime="20200908 06:52:48.470"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:48.495" starttime="20200908 06:52:48.469"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:48.495" starttime="20200908 06:52:48.469"></status>
</kw>
<status status="PASS" endtime="20200908 06:52:48.495" starttime="20200908 06:52:48.454"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200908 06:52:48.495" critical="yes" starttime="20200908 06:52:48.453"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200908 06:52:48.496" starttime="20200908 06:52:48.388"></status>
</suite>
<status status="FAIL" elapsedtime="875738" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="4" pass="21">Critical Tests</stat>
<stat fail="4" pass="21">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="4" id="s1" name="ozonesecure" pass="21">ozonesecure</stat>
<stat fail="4" id="s1-s1" name="Basic" pass="20">ozonesecure.Basic</stat>
<stat fail="0" id="s1-s1-s1" name="Basic" pass="2">ozonesecure.Basic.Basic</stat>
<stat fail="0" id="s1-s1-s2" name="Links" pass="15">ozonesecure.Basic.Links</stat>
<stat fail="1" id="s1-s1-s3" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="3" id="s1-s1-s4" name="Ozone-Shell" pass="3">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
