<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200929 12:05:31.432" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:37:23.252" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:37:23.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:37:23.254" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:37:23.255" starttime="20200929 11:37:23.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:37:23.256" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:37:23.256" starttime="20200929 11:37:23.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:37:23.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:37:23.259" starttime="20200929 11:37:23.256"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.259" starttime="20200929 11:37:23.247"></status>
</kw>
<msg timestamp="20200929 11:37:23.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:37:23.259" starttime="20200929 11:37:23.246"></status>
</kw>
<msg timestamp="20200929 11:37:23.260" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:37:23.260" starttime="20200929 11:37:23.246"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:37:23.267" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:37:23.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:37:23.287" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:37:23.287" starttime="20200929 11:37:23.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:37:23.288" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:37:23.288" starttime="20200929 11:37:23.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:37:23.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:37:23.289" starttime="20200929 11:37:23.288"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.289" starttime="20200929 11:37:23.262"></status>
</kw>
<msg timestamp="20200929 11:37:23.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:37:23.289" starttime="20200929 11:37:23.261"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.290" starttime="20200929 11:37:23.261"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.290" starttime="20200929 11:37:23.260"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.290" starttime="20200929 11:37:23.245"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.290" starttime="20200929 11:37:23.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:37:23.296" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:37:23.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:37:23.465" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20200929 11:37:23.465" starttime="20200929 11:37:23.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:37:23.466" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Tue, 29 Sep 2020 11:37:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCfWppQDXLrxlbw3p8l5DE8J327AzMq/XJuJJKNo3sdy2MzWOUBdLPWWWbACyqWwJWT2P0tI/l4BsNtCUEirBabZVA
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1601415443455&amp;s=GV7Nb7RoGhr44GmKDSskXDtWOYpMX+KA/KSLThdqHKU="; Path=/; HttpOnly
Last-Modified: Tue, 29 Sep 2020 11:23:58 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200929 11:37:23.467" starttime="20200929 11:37:23.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:37:23.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:37:23.468" starttime="20200929 11:37:23.467"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.468" starttime="20200929 11:37:23.291"></status>
</kw>
<msg timestamp="20200929 11:37:23.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:37:23.468" starttime="20200929 11:37:23.291"></status>
</kw>
<msg timestamp="20200929 11:37:23.468" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20200929 11:37:23.468" starttime="20200929 11:37:23.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200929 11:37:23.469" starttime="20200929 11:37:23.469"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 11:37:23.469" critical="yes" starttime="20200929 11:37:23.244"></status>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:37:23.479" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:37:23.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:37:23.480" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:37:23.480" starttime="20200929 11:37:23.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:37:23.481" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:37:23.482" starttime="20200929 11:37:23.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:37:23.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:37:23.482" starttime="20200929 11:37:23.482"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.483" starttime="20200929 11:37:23.474"></status>
</kw>
<msg timestamp="20200929 11:37:23.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:37:23.483" starttime="20200929 11:37:23.473"></status>
</kw>
<msg timestamp="20200929 11:37:23.483" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:37:23.483" starttime="20200929 11:37:23.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:37:23.485" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:37:23.485" starttime="20200929 11:37:23.483"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:37:23.491" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:37:23.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:37:23.510" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:37:23.510" starttime="20200929 11:37:23.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:37:23.512" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:37:23.513" starttime="20200929 11:37:23.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:37:23.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:37:23.514" starttime="20200929 11:37:23.513"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.515" starttime="20200929 11:37:23.487"></status>
</kw>
<msg timestamp="20200929 11:37:23.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:37:23.516" starttime="20200929 11:37:23.486"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.516" starttime="20200929 11:37:23.485"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.516" starttime="20200929 11:37:23.485"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.517" starttime="20200929 11:37:23.472"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:23.517" starttime="20200929 11:37:23.472"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:37:23.522" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:42:23.472" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20200929 11:42:23.472" starttime="20200929 11:37:23.519"></status>
</kw>
<status status="FAIL" endtime="20200929 11:42:23.473" starttime="20200929 11:37:23.518"></status>
</kw>
<msg timestamp="20200929 11:42:23.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200929 11:42:23.474" starttime="20200929 11:37:23.518"></status>
</kw>
<status status="FAIL" endtime="20200929 11:42:23.474" starttime="20200929 11:37:23.517"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20200929 11:42:23.474" critical="yes" starttime="20200929 11:37:23.471">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20200929 11:42:23.476" starttime="20200929 11:37:23.199"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Ozone getconf OM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf ozonemanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:42:23.494" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:42:25.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:42:25.084" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20200929 11:42:25.085" starttime="20200929 11:42:23.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:42:25.086" level="INFO">om</msg>
<status status="PASS" endtime="20200929 11:42:25.086" starttime="20200929 11:42:25.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:42:25.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:42:25.087" starttime="20200929 11:42:25.087"></status>
</kw>
<status status="PASS" endtime="20200929 11:42:25.088" starttime="20200929 11:42:23.491"></status>
</kw>
<msg timestamp="20200929 11:42:25.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:42:25.088" starttime="20200929 11:42:23.491"></status>
</kw>
<msg timestamp="20200929 11:42:25.088" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20200929 11:42:25.088" starttime="20200929 11:42:23.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20200929 11:42:25.089" starttime="20200929 11:42:25.088"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 11:42:25.089" critical="yes" starttime="20200929 11:42:23.489"></status>
</test>
<test id="s1-s1-s2-t2" name="Ozone getconf SCM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf storagecontainermanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:42:25.098" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:42:26.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:42:26.715" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:42:26.715" starttime="20200929 11:42:25.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:42:26.717" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:42:26.717" starttime="20200929 11:42:26.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:42:26.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:42:26.717" starttime="20200929 11:42:26.717"></status>
</kw>
<status status="PASS" endtime="20200929 11:42:26.718" starttime="20200929 11:42:25.092"></status>
</kw>
<msg timestamp="20200929 11:42:26.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:42:26.718" starttime="20200929 11:42:25.092"></status>
</kw>
<msg timestamp="20200929 11:42:26.719" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20200929 11:42:26.719" starttime="20200929 11:42:25.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>scm</arg>
</arguments>
<status status="PASS" endtime="20200929 11:42:26.719" starttime="20200929 11:42:26.719"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 11:42:26.720" critical="yes" starttime="20200929 11:42:25.090"></status>
</test>
<test id="s1-s1-s2-t3" name="Ozone getconf configration keys">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf confKey endpoint.token</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:42:26.726" level="INFO">Running command 'ozone getconf confKey endpoint.token 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:42:28.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:42:28.130" level="INFO">${output} = Configuration endpoint.token is missing.</msg>
<status status="PASS" endtime="20200929 11:42:28.130" starttime="20200929 11:42:26.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:42:28.131" level="INFO">Configuration endpoint.token is missing.</msg>
<status status="PASS" endtime="20200929 11:42:28.131" starttime="20200929 11:42:28.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:42:28.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:42:28.132" starttime="20200929 11:42:28.132"></status>
</kw>
<status status="PASS" endtime="20200929 11:42:28.132" starttime="20200929 11:42:26.723"></status>
</kw>
<msg timestamp="20200929 11:42:28.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:42:28.133" starttime="20200929 11:42:26.723"></status>
</kw>
<msg timestamp="20200929 11:42:28.133" level="INFO">${result} = Configuration endpoint.token is missing.</msg>
<status status="PASS" endtime="20200929 11:42:28.133" starttime="20200929 11:42:26.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Configuration endpoint.token is missing</arg>
</arguments>
<status status="PASS" endtime="20200929 11:42:28.134" starttime="20200929 11:42:28.133"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 11:42:28.134" critical="yes" starttime="20200929 11:42:26.721"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200929 11:42:28.136" starttime="20200929 11:42:23.478"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 11:42:28.152" level="INFO">${random} = 83259</msg>
<status status="PASS" endtime="20200929 11:42:28.152" starttime="20200929 11:42:28.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20200929 11:42:28.153" level="INFO">${source} = 83259-source</msg>
<status status="PASS" endtime="20200929 11:42:28.153" starttime="20200929 11:42:28.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20200929 11:42:28.155" level="INFO">${target} = 83259-target</msg>
<status status="PASS" endtime="20200929 11:42:28.155" starttime="20200929 11:42:28.154"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:42:28.158" level="INFO">Running command 'ozone sh volume create 83259-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:42:32.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:42:32.316" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:42:32.317" starttime="20200929 11:42:28.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:42:32.318" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:42:32.318" starttime="20200929 11:42:32.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:42:32.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:42:32.318" starttime="20200929 11:42:32.318"></status>
</kw>
<status status="PASS" endtime="20200929 11:42:32.319" starttime="20200929 11:42:28.156"></status>
</kw>
<msg timestamp="20200929 11:42:32.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:42:32.319" starttime="20200929 11:42:28.155"></status>
</kw>
<status status="PASS" endtime="20200929 11:42:32.319" starttime="20200929 11:42:28.155"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:42:32.324" level="INFO">Running command 'ozone sh volume create 83259-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:42:36.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:42:36.531" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:42:36.531" starttime="20200929 11:42:32.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:42:36.532" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:42:36.533" starttime="20200929 11:42:36.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:42:36.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:42:36.533" starttime="20200929 11:42:36.533"></status>
</kw>
<status status="PASS" endtime="20200929 11:42:36.534" starttime="20200929 11:42:32.320"></status>
</kw>
<msg timestamp="20200929 11:42:36.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:42:36.534" starttime="20200929 11:42:32.320"></status>
</kw>
<status status="PASS" endtime="20200929 11:42:36.534" starttime="20200929 11:42:32.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:42:36.539" level="INFO">Running command 'ozone sh bucket create 83259-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:42:40.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:42:40.477" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:42:40.477" starttime="20200929 11:42:36.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:42:40.479" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:42:40.479" starttime="20200929 11:42:40.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:42:40.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:42:40.480" starttime="20200929 11:42:40.479"></status>
</kw>
<status status="PASS" endtime="20200929 11:42:40.480" starttime="20200929 11:42:36.536"></status>
</kw>
<msg timestamp="20200929 11:42:40.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:42:40.480" starttime="20200929 11:42:36.536"></status>
</kw>
<status status="PASS" endtime="20200929 11:42:40.480" starttime="20200929 11:42:36.535"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:42:40.485" level="INFO">Running command 'ozone sh key put 83259-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:45:47.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:45:47.365" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:45:47.365" starttime="20200929 11:42:40.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:45:47.366" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:45:47.366" starttime="20200929 11:45:47.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:45:47.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:45:47.367" starttime="20200929 11:45:47.366"></status>
</kw>
<status status="PASS" endtime="20200929 11:45:47.367" starttime="20200929 11:42:40.482"></status>
</kw>
<msg timestamp="20200929 11:45:47.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:45:47.368" starttime="20200929 11:42:40.482"></status>
</kw>
<status status="PASS" endtime="20200929 11:45:47.368" starttime="20200929 11:42:40.481"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:45:47.372" level="INFO">Running command 'ozone sh bucket create 83259-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:45:51.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:45:51.341" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:45:51.341" starttime="20200929 11:45:47.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:45:51.343" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:45:51.343" starttime="20200929 11:45:51.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:45:51.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:45:51.344" starttime="20200929 11:45:51.343"></status>
</kw>
<status status="PASS" endtime="20200929 11:45:51.344" starttime="20200929 11:45:47.369"></status>
</kw>
<msg timestamp="20200929 11:45:51.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:45:51.345" starttime="20200929 11:45:47.369"></status>
</kw>
<status status="PASS" endtime="20200929 11:45:51.345" starttime="20200929 11:45:47.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:45:51.349" level="INFO">Running command 'ozone sh bucket link 83259-source/readable-bucket 83259-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:45:55.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:45:55.389" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:45:55.389" starttime="20200929 11:45:51.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:45:55.391" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:45:55.391" starttime="20200929 11:45:55.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:45:55.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:45:55.392" starttime="20200929 11:45:55.391"></status>
</kw>
<status status="PASS" endtime="20200929 11:45:55.392" starttime="20200929 11:45:51.346"></status>
</kw>
<msg timestamp="20200929 11:45:55.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:45:55.393" starttime="20200929 11:45:51.346"></status>
</kw>
<status status="PASS" endtime="20200929 11:45:55.393" starttime="20200929 11:45:51.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:45:55.397" level="INFO">Running command 'ozone sh bucket link 83259-source/readable-bucket 83259-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:45:59.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:45:59.701" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:45:59.701" starttime="20200929 11:45:55.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:45:59.703" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:45:59.703" starttime="20200929 11:45:59.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:45:59.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:45:59.703" starttime="20200929 11:45:59.703"></status>
</kw>
<status status="PASS" endtime="20200929 11:45:59.704" starttime="20200929 11:45:55.394"></status>
</kw>
<msg timestamp="20200929 11:45:59.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:45:59.704" starttime="20200929 11:45:55.394"></status>
</kw>
<status status="PASS" endtime="20200929 11:45:59.704" starttime="20200929 11:45:55.393"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:45:59.709" level="INFO">Running command 'ozone sh bucket link 83259-source/unreadable-bucket 83259-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:04.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:04.057" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:46:04.057" starttime="20200929 11:45:59.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:04.058" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:46:04.058" starttime="20200929 11:46:04.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:04.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:04.058" starttime="20200929 11:46:04.058"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:04.059" starttime="20200929 11:45:59.706"></status>
</kw>
<msg timestamp="20200929 11:46:04.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:04.059" starttime="20200929 11:45:59.706"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:04.059" starttime="20200929 11:45:59.705"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:04.063" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83259-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:08.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:08.340" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:46:08.340" starttime="20200929 11:46:04.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:08.341" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200929 11:46:08.341" starttime="20200929 11:46:08.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:08.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:08.342" starttime="20200929 11:46:08.341"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:08.342" starttime="20200929 11:46:04.060"></status>
</kw>
<msg timestamp="20200929 11:46:08.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:08.342" starttime="20200929 11:46:04.060"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:08.343" starttime="20200929 11:46:04.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:08.347" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 83259-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:12.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:12.332" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:46:12.332" starttime="20200929 11:46:08.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:12.333" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200929 11:46:12.333" starttime="20200929 11:46:12.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:12.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:12.334" starttime="20200929 11:46:12.333"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:12.334" starttime="20200929 11:46:08.344"></status>
</kw>
<msg timestamp="20200929 11:46:12.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:12.334" starttime="20200929 11:46:08.343"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:12.335" starttime="20200929 11:46:08.343"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:12.340" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 83259-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:16.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:16.458" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:46:16.458" starttime="20200929 11:46:12.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:16.459" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200929 11:46:16.459" starttime="20200929 11:46:16.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:16.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:16.460" starttime="20200929 11:46:16.459"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:16.461" starttime="20200929 11:46:12.336"></status>
</kw>
<msg timestamp="20200929 11:46:16.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:16.461" starttime="20200929 11:46:12.336"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:16.461" starttime="20200929 11:46:12.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:16.468" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83259-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:20.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:20.817" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:46:20.817" starttime="20200929 11:46:16.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:20.818" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200929 11:46:20.819" starttime="20200929 11:46:20.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:20.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:20.820" starttime="20200929 11:46:20.819"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:20.820" starttime="20200929 11:46:16.464"></status>
</kw>
<msg timestamp="20200929 11:46:20.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:20.820" starttime="20200929 11:46:16.464"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:20.820" starttime="20200929 11:46:16.462"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:20.825" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83259-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:24.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:24.975" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:46:24.975" starttime="20200929 11:46:20.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:24.976" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200929 11:46:24.976" starttime="20200929 11:46:24.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:24.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:24.977" starttime="20200929 11:46:24.976"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:24.977" starttime="20200929 11:46:20.822"></status>
</kw>
<msg timestamp="20200929 11:46:24.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:24.977" starttime="20200929 11:46:20.821"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:24.977" starttime="20200929 11:46:20.821"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:24.978" starttime="20200929 11:42:36.535"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:24.978" starttime="20200929 11:42:36.534"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:24.978" starttime="20200929 11:42:28.151"></status>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:24.988" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:24.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:24.993" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:46:24.993" starttime="20200929 11:46:24.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:24.994" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:46:24.994" starttime="20200929 11:46:24.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:24.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:24.995" starttime="20200929 11:46:24.994"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:24.995" starttime="20200929 11:46:24.983"></status>
</kw>
<msg timestamp="20200929 11:46:24.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:24.996" starttime="20200929 11:46:24.983"></status>
</kw>
<msg timestamp="20200929 11:46:24.996" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:46:24.996" starttime="20200929 11:46:24.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:46:24.997" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:46:24.997" starttime="20200929 11:46:24.996"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:25.006" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:25.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:25.035" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:46:25.035" starttime="20200929 11:46:25.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:25.037" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:46:25.037" starttime="20200929 11:46:25.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:25.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:25.037" starttime="20200929 11:46:25.037"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:25.038" starttime="20200929 11:46:25.001"></status>
</kw>
<msg timestamp="20200929 11:46:25.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:25.038" starttime="20200929 11:46:24.999"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:25.038" starttime="20200929 11:46:24.998"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:25.038" starttime="20200929 11:46:24.998"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:25.039" starttime="20200929 11:46:24.981"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:25.039" starttime="20200929 11:46:24.980"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:25.044" level="INFO">Running command 'ozone sh bucket link 83259-source/no-such-bucket 83259-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:29.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:29.207" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:46:29.207" starttime="20200929 11:46:25.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:29.208" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:46:29.208" starttime="20200929 11:46:29.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:29.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:29.209" starttime="20200929 11:46:29.208"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:29.209" starttime="20200929 11:46:25.041"></status>
</kw>
<msg timestamp="20200929 11:46:29.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:29.209" starttime="20200929 11:46:25.041"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:29.210" starttime="20200929 11:46:25.039"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:29.214" level="INFO">Running command 'ozone sh key list 83259-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:33.238" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 11:46:33.238" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:46:33.238" starttime="20200929 11:46:29.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:33.239" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20200929 11:46:33.239" starttime="20200929 11:46:33.238"></status>
</kw>
<msg timestamp="20200929 11:46:33.240" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:46:33.240" starttime="20200929 11:46:29.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200929 11:46:33.243" starttime="20200929 11:46:33.243"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:46:33.244" critical="yes" starttime="20200929 11:46:24.979"></status>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:33.263" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:33.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:33.268" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:46:33.268" starttime="20200929 11:46:33.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:33.269" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:46:33.269" starttime="20200929 11:46:33.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:33.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:33.272" starttime="20200929 11:46:33.270"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:33.273" starttime="20200929 11:46:33.255"></status>
</kw>
<msg timestamp="20200929 11:46:33.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:33.273" starttime="20200929 11:46:33.250"></status>
</kw>
<msg timestamp="20200929 11:46:33.273" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:46:33.274" starttime="20200929 11:46:33.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:46:33.274" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:46:33.274" starttime="20200929 11:46:33.274"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:33.292" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:33.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:33.328" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:46:33.328" starttime="20200929 11:46:33.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:33.330" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:46:33.330" starttime="20200929 11:46:33.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:33.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:33.331" starttime="20200929 11:46:33.330"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:33.331" starttime="20200929 11:46:33.284"></status>
</kw>
<msg timestamp="20200929 11:46:33.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:33.331" starttime="20200929 11:46:33.284"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:33.332" starttime="20200929 11:46:33.279"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:33.332" starttime="20200929 11:46:33.275"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:33.332" starttime="20200929 11:46:33.249"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:33.332" starttime="20200929 11:46:33.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:33.337" level="INFO">Running command 'ozone sh bucket link 83259-source/bucket1 83259-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:37.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:37.312" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:46:37.313" starttime="20200929 11:46:33.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:37.314" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:46:37.314" starttime="20200929 11:46:37.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:37.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:37.315" starttime="20200929 11:46:37.315"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:37.316" starttime="20200929 11:46:33.333"></status>
</kw>
<msg timestamp="20200929 11:46:37.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:37.316" starttime="20200929 11:46:33.333"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:37.316" starttime="20200929 11:46:33.332"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:37.321" level="INFO">Running command 'ozone sh bucket create 83259-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:46:41.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:46:41.264" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:46:41.264" starttime="20200929 11:46:37.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:46:41.266" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:46:41.266" starttime="20200929 11:46:41.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:46:41.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:46:41.267" starttime="20200929 11:46:41.266"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:41.267" starttime="20200929 11:46:37.317"></status>
</kw>
<msg timestamp="20200929 11:46:41.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:46:41.267" starttime="20200929 11:46:37.317"></status>
</kw>
<status status="PASS" endtime="20200929 11:46:41.268" starttime="20200929 11:46:37.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:46:41.274" level="INFO">Running command 'ozone sh key put 83259-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:48:33.247" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200929 11:48:33.247" starttime="20200929 11:46:41.270"></status>
</kw>
<status status="FAIL" endtime="20200929 11:48:33.248" starttime="20200929 11:46:41.269"></status>
</kw>
<msg timestamp="20200929 11:48:33.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200929 11:48:33.248" starttime="20200929 11:46:41.269"></status>
</kw>
<status status="FAIL" endtime="20200929 11:48:33.248" starttime="20200929 11:46:41.268"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200929 11:48:33.249" critical="yes" starttime="20200929 11:46:33.245">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:48:33.256" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:48:33.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:48:33.259" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:48:33.259" starttime="20200929 11:48:33.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:48:33.261" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:48:33.261" starttime="20200929 11:48:33.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:48:33.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:48:33.262" starttime="20200929 11:48:33.261"></status>
</kw>
<status status="PASS" endtime="20200929 11:48:33.262" starttime="20200929 11:48:33.253"></status>
</kw>
<msg timestamp="20200929 11:48:33.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:48:33.262" starttime="20200929 11:48:33.253"></status>
</kw>
<msg timestamp="20200929 11:48:33.262" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:48:33.262" starttime="20200929 11:48:33.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:48:33.263" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:48:33.263" starttime="20200929 11:48:33.263"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:48:33.269" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:48:33.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:48:33.302" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:48:33.302" starttime="20200929 11:48:33.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:48:33.303" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:48:33.303" starttime="20200929 11:48:33.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:48:33.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:48:33.304" starttime="20200929 11:48:33.304"></status>
</kw>
<status status="PASS" endtime="20200929 11:48:33.305" starttime="20200929 11:48:33.265"></status>
</kw>
<msg timestamp="20200929 11:48:33.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:48:33.305" starttime="20200929 11:48:33.265"></status>
</kw>
<status status="PASS" endtime="20200929 11:48:33.305" starttime="20200929 11:48:33.264"></status>
</kw>
<status status="PASS" endtime="20200929 11:48:33.305" starttime="20200929 11:48:33.264"></status>
</kw>
<status status="PASS" endtime="20200929 11:48:33.306" starttime="20200929 11:48:33.251"></status>
</kw>
<status status="PASS" endtime="20200929 11:48:33.306" starttime="20200929 11:48:33.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:48:33.312" level="INFO">Running command 'ozone sh key put 83259-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:33.250" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200929 11:50:33.251" starttime="20200929 11:48:33.308"></status>
</kw>
<status status="FAIL" endtime="20200929 11:50:33.251" starttime="20200929 11:48:33.308"></status>
</kw>
<msg timestamp="20200929 11:50:33.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200929 11:50:33.251" starttime="20200929 11:48:33.307"></status>
</kw>
<status status="FAIL" endtime="20200929 11:50:33.252" starttime="20200929 11:48:33.306"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200929 11:50:33.252" critical="yes" starttime="20200929 11:48:33.250">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:33.260" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:33.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:33.262" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:50:33.262" starttime="20200929 11:50:33.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:33.263" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:50:33.264" starttime="20200929 11:50:33.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:33.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:33.264" starttime="20200929 11:50:33.264"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:33.265" starttime="20200929 11:50:33.257"></status>
</kw>
<msg timestamp="20200929 11:50:33.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:33.265" starttime="20200929 11:50:33.256"></status>
</kw>
<msg timestamp="20200929 11:50:33.265" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:50:33.265" starttime="20200929 11:50:33.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:50:33.266" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:50:33.266" starttime="20200929 11:50:33.265"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:33.272" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:33.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:33.289" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:50:33.290" starttime="20200929 11:50:33.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:33.291" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:50:33.291" starttime="20200929 11:50:33.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:33.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:33.292" starttime="20200929 11:50:33.291"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:33.292" starttime="20200929 11:50:33.268"></status>
</kw>
<msg timestamp="20200929 11:50:33.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:33.293" starttime="20200929 11:50:33.268"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:33.293" starttime="20200929 11:50:33.267"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:33.293" starttime="20200929 11:50:33.266"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:33.293" starttime="20200929 11:50:33.255"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:33.293" starttime="20200929 11:50:33.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:33.297" level="INFO">Running command 'ozone sh key list 83259-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:37.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:37.579" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200929 11:50:37.580" starttime="20200929 11:50:33.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:37.581" level="INFO">key1</msg>
<status status="PASS" endtime="20200929 11:50:37.581" starttime="20200929 11:50:37.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:37.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:37.582" starttime="20200929 11:50:37.582"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:37.583" starttime="20200929 11:50:33.294"></status>
</kw>
<msg timestamp="20200929 11:50:37.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:37.583" starttime="20200929 11:50:33.294"></status>
</kw>
<msg timestamp="20200929 11:50:37.583" level="INFO">${target_list} = key1</msg>
<status status="PASS" endtime="20200929 11:50:37.583" starttime="20200929 11:50:33.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:37.587" level="INFO">Running command 'ozone sh key list 83259-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:41.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:41.916" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200929 11:50:41.916" starttime="20200929 11:50:37.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:41.917" level="INFO">key1</msg>
<status status="PASS" endtime="20200929 11:50:41.918" starttime="20200929 11:50:41.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:41.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:41.918" starttime="20200929 11:50:41.918"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:41.919" starttime="20200929 11:50:37.585"></status>
</kw>
<msg timestamp="20200929 11:50:41.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:41.919" starttime="20200929 11:50:37.584"></status>
</kw>
<msg timestamp="20200929 11:50:41.919" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20200929 11:50:41.919" starttime="20200929 11:50:37.584"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20200929 11:50:41.920" starttime="20200929 11:50:41.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200929 11:50:41.921" starttime="20200929 11:50:41.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<msg timestamp="20200929 11:50:41.921" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" endtime="20200929 11:50:41.921" starttime="20200929 11:50:41.921"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200929 11:50:41.922" critical="yes" starttime="20200929 11:50:33.253">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:41.929" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:41.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:41.932" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:50:41.932" starttime="20200929 11:50:41.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:41.933" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:50:41.933" starttime="20200929 11:50:41.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:41.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:41.934" starttime="20200929 11:50:41.933"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:41.934" starttime="20200929 11:50:41.926"></status>
</kw>
<msg timestamp="20200929 11:50:41.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:41.935" starttime="20200929 11:50:41.925"></status>
</kw>
<msg timestamp="20200929 11:50:41.935" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:50:41.935" starttime="20200929 11:50:41.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:50:41.936" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:50:41.936" starttime="20200929 11:50:41.935"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:41.942" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:41.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:41.965" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:50:41.965" starttime="20200929 11:50:41.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:41.968" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:50:41.968" starttime="20200929 11:50:41.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:41.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:41.970" starttime="20200929 11:50:41.968"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:41.970" starttime="20200929 11:50:41.938"></status>
</kw>
<msg timestamp="20200929 11:50:41.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:41.971" starttime="20200929 11:50:41.937"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:41.972" starttime="20200929 11:50:41.937"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:41.972" starttime="20200929 11:50:41.936"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:41.972" starttime="20200929 11:50:41.924"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:41.972" starttime="20200929 11:50:41.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:41.978" level="INFO">Running command 'ozone sh key delete 83259-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:45.745" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 11:50:45.745" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:50:45.745" starttime="20200929 11:50:41.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:45.747" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20200929 11:50:45.747" starttime="20200929 11:50:45.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:45.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200929 11:50:45.748" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20200929 11:50:45.748" starttime="20200929 11:50:45.747"></status>
</kw>
<status status="FAIL" endtime="20200929 11:50:45.748" starttime="20200929 11:50:41.975"></status>
</kw>
<msg timestamp="20200929 11:50:45.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200929 11:50:45.749" starttime="20200929 11:50:41.974"></status>
</kw>
<status status="FAIL" endtime="20200929 11:50:45.749" starttime="20200929 11:50:41.973"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200929 11:50:45.749" critical="yes" starttime="20200929 11:50:41.922">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:45.758" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:45.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:45.760" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:50:45.760" starttime="20200929 11:50:45.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:45.762" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:50:45.762" starttime="20200929 11:50:45.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:45.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:45.763" starttime="20200929 11:50:45.762"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:45.763" starttime="20200929 11:50:45.754"></status>
</kw>
<msg timestamp="20200929 11:50:45.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:45.763" starttime="20200929 11:50:45.754"></status>
</kw>
<msg timestamp="20200929 11:50:45.764" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:50:45.764" starttime="20200929 11:50:45.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:50:45.764" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:50:45.765" starttime="20200929 11:50:45.764"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:45.770" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:45.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:45.789" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:50:45.789" starttime="20200929 11:50:45.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:45.790" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:50:45.790" starttime="20200929 11:50:45.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:45.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:45.791" starttime="20200929 11:50:45.790"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:45.792" starttime="20200929 11:50:45.766"></status>
</kw>
<msg timestamp="20200929 11:50:45.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:45.792" starttime="20200929 11:50:45.766"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:45.792" starttime="20200929 11:50:45.765"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:45.793" starttime="20200929 11:50:45.765"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:45.793" starttime="20200929 11:50:45.753"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:45.793" starttime="20200929 11:50:45.752"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:45.797" level="INFO">Running command 'ozone sh bucket list 83259-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:49.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:49.932" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:50:49.933" starttime="20200929 11:50:45.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:49.934" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:46:29.128Z",
  "modificationTime" : "2020-09-29T11:46:29.128Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:46:03.969Z",
  "modificationTime" : "2020-09-29T11:46:03.969Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:46:37.256Z",
  "modificationTime" : "2020-09-29T11:46:37.256Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:45:55.323Z",
  "modificationTime" : "2020-09-29T11:45:55.323Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:45:59.509Z",
  "modificationTime" : "2020-09-29T11:45:59.509Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200929 11:50:49.935" starttime="20200929 11:50:49.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:49.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:49.936" starttime="20200929 11:50:49.935"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:49.936" starttime="20200929 11:50:45.794"></status>
</kw>
<msg timestamp="20200929 11:50:49.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:49.937" starttime="20200929 11:50:45.794"></status>
</kw>
<msg timestamp="20200929 11:50:49.937" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:50:49.937" starttime="20200929 11:50:45.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200929 11:50:49.938" starttime="20200929 11:50:49.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20200929 11:50:49.938" starttime="20200929 11:50:49.938"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:50:49.939" critical="yes" starttime="20200929 11:50:45.750"></status>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:49.946" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:49.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:49.948" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:50:49.948" starttime="20200929 11:50:49.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:49.949" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:50:49.949" starttime="20200929 11:50:49.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:49.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:49.950" starttime="20200929 11:50:49.950"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:49.950" starttime="20200929 11:50:49.943"></status>
</kw>
<msg timestamp="20200929 11:50:49.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:49.951" starttime="20200929 11:50:49.942"></status>
</kw>
<msg timestamp="20200929 11:50:49.951" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:50:49.951" starttime="20200929 11:50:49.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:50:49.952" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:50:49.952" starttime="20200929 11:50:49.951"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:49.957" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:49.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:49.974" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:50:49.974" starttime="20200929 11:50:49.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:49.975" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:50:49.976" starttime="20200929 11:50:49.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:49.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:49.976" starttime="20200929 11:50:49.976"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:49.977" starttime="20200929 11:50:49.954"></status>
</kw>
<msg timestamp="20200929 11:50:49.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:49.977" starttime="20200929 11:50:49.953"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:49.977" starttime="20200929 11:50:49.953"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:49.977" starttime="20200929 11:50:49.952"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:49.977" starttime="20200929 11:50:49.941"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:49.978" starttime="20200929 11:50:49.941"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:49.984" level="INFO">Running command 'ozone sh bucket info 83259-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:53.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:53.828" level="INFO">${output} = 83259-source bucket1</msg>
<status status="PASS" endtime="20200929 11:50:53.829" starttime="20200929 11:50:49.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:53.830" level="INFO">83259-source bucket1</msg>
<status status="PASS" endtime="20200929 11:50:53.830" starttime="20200929 11:50:53.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:53.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:53.831" starttime="20200929 11:50:53.830"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:53.831" starttime="20200929 11:50:49.979"></status>
</kw>
<msg timestamp="20200929 11:50:53.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:53.832" starttime="20200929 11:50:49.979"></status>
</kw>
<msg timestamp="20200929 11:50:53.832" level="INFO">${result} = 83259-source bucket1</msg>
<status status="PASS" endtime="20200929 11:50:53.832" starttime="20200929 11:50:49.978"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20200929 11:50:53.833" starttime="20200929 11:50:53.832"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:50:53.833" critical="yes" starttime="20200929 11:50:49.940"></status>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:53.842" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:53.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:53.844" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:50:53.844" starttime="20200929 11:50:53.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:53.845" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:50:53.845" starttime="20200929 11:50:53.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:53.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:53.846" starttime="20200929 11:50:53.845"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:53.846" starttime="20200929 11:50:53.838"></status>
</kw>
<msg timestamp="20200929 11:50:53.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:53.846" starttime="20200929 11:50:53.837"></status>
</kw>
<msg timestamp="20200929 11:50:53.847" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:50:53.847" starttime="20200929 11:50:53.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:50:53.847" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:50:53.848" starttime="20200929 11:50:53.847"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:53.853" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:53.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:53.869" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:50:53.869" starttime="20200929 11:50:53.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:53.870" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:50:53.870" starttime="20200929 11:50:53.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:53.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:53.871" starttime="20200929 11:50:53.871"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:53.872" starttime="20200929 11:50:53.849"></status>
</kw>
<msg timestamp="20200929 11:50:53.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:53.872" starttime="20200929 11:50:53.849"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:53.872" starttime="20200929 11:50:53.848"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:53.872" starttime="20200929 11:50:53.848"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:53.873" starttime="20200929 11:50:53.836"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:53.873" starttime="20200929 11:50:53.835"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:53.878" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 83259-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:50:57.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:50:57.512" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:50:57.512" starttime="20200929 11:50:53.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:50:57.513" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200929 11:50:57.513" starttime="20200929 11:50:57.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:50:57.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:50:57.514" starttime="20200929 11:50:57.513"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:57.514" starttime="20200929 11:50:53.874"></status>
</kw>
<msg timestamp="20200929 11:50:57.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:50:57.514" starttime="20200929 11:50:53.874"></status>
</kw>
<status status="PASS" endtime="20200929 11:50:57.515" starttime="20200929 11:50:53.873"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:50:57.521" level="INFO">Running command 'ozone sh bucket getacl 83259-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:01.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:01.782" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200929 11:51:01.782" starttime="20200929 11:50:57.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:01.783" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200929 11:51:01.783" starttime="20200929 11:51:01.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:01.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:01.784" starttime="20200929 11:51:01.783"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:01.784" starttime="20200929 11:50:57.517"></status>
</kw>
<msg timestamp="20200929 11:51:01.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:01.785" starttime="20200929 11:50:57.517"></status>
</kw>
<msg timestamp="20200929 11:51:01.785" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200929 11:51:01.785" starttime="20200929 11:50:57.516"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200929 11:51:01.786" starttime="20200929 11:51:01.785"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:01.786" starttime="20200929 11:50:57.515"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:01.792" level="INFO">Running command 'ozone sh bucket getacl 83259-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:05.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:05.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:05.839" starttime="20200929 11:51:01.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:05.840" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:05.840" starttime="20200929 11:51:05.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:05.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:05.841" starttime="20200929 11:51:05.840"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:05.841" starttime="20200929 11:51:01.788"></status>
</kw>
<msg timestamp="20200929 11:51:05.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:05.842" starttime="20200929 11:51:01.788"></status>
</kw>
<msg timestamp="20200929 11:51:05.842" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200929 11:51:05.842" starttime="20200929 11:51:01.787"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200929 11:51:05.843" starttime="20200929 11:51:05.842"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:05.843" starttime="20200929 11:51:01.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:05.848" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 83259-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:09.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:09.440" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:09.440" starttime="20200929 11:51:05.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:09.442" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200929 11:51:09.442" starttime="20200929 11:51:09.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:09.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:09.443" starttime="20200929 11:51:09.442"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:09.443" starttime="20200929 11:51:05.844"></status>
</kw>
<msg timestamp="20200929 11:51:09.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:09.443" starttime="20200929 11:51:05.844"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:09.444" starttime="20200929 11:51:05.843"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:09.449" level="INFO">Running command 'ozone sh bucket getacl 83259-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:13.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:13.387" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:13.387" starttime="20200929 11:51:09.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:13.389" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:13.389" starttime="20200929 11:51:13.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:13.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:13.390" starttime="20200929 11:51:13.389"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:13.390" starttime="20200929 11:51:09.446"></status>
</kw>
<msg timestamp="20200929 11:51:13.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:13.390" starttime="20200929 11:51:09.446"></status>
</kw>
<msg timestamp="20200929 11:51:13.391" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200929 11:51:13.391" starttime="20200929 11:51:09.445"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200929 11:51:13.391" starttime="20200929 11:51:13.391"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:13.392" starttime="20200929 11:51:09.444"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:13.397" level="INFO">Running command 'ozone sh bucket getacl 83259-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:17.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:17.172" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20200929 11:51:17.172" starttime="20200929 11:51:13.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:17.174" level="INFO">READ</msg>
<status status="PASS" endtime="20200929 11:51:17.174" starttime="20200929 11:51:17.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:17.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:17.175" starttime="20200929 11:51:17.174"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:17.175" starttime="20200929 11:51:13.394"></status>
</kw>
<msg timestamp="20200929 11:51:17.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:17.176" starttime="20200929 11:51:13.394"></status>
</kw>
<msg timestamp="20200929 11:51:17.176" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20200929 11:51:17.176" starttime="20200929 11:51:13.393"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200929 11:51:17.177" starttime="20200929 11:51:17.176"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:17.177" starttime="20200929 11:51:13.392"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:51:17.177" critical="yes" starttime="20200929 11:50:53.834"></status>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:17.186" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:17.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:17.189" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:51:17.189" starttime="20200929 11:51:17.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:17.190" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:51:17.190" starttime="20200929 11:51:17.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:17.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:17.191" starttime="20200929 11:51:17.191"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:17.192" starttime="20200929 11:51:17.181"></status>
</kw>
<msg timestamp="20200929 11:51:17.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:17.192" starttime="20200929 11:51:17.181"></status>
</kw>
<msg timestamp="20200929 11:51:17.192" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:51:17.192" starttime="20200929 11:51:17.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:51:17.193" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:51:17.194" starttime="20200929 11:51:17.192"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:17.200" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:17.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:17.216" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:17.216" starttime="20200929 11:51:17.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:17.217" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:17.217" starttime="20200929 11:51:17.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:17.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:17.218" starttime="20200929 11:51:17.217"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:17.218" starttime="20200929 11:51:17.195"></status>
</kw>
<msg timestamp="20200929 11:51:17.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:17.219" starttime="20200929 11:51:17.195"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:17.219" starttime="20200929 11:51:17.194"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:17.219" starttime="20200929 11:51:17.194"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:17.219" starttime="20200929 11:51:17.180"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:17.219" starttime="20200929 11:51:17.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:17.224" level="INFO">Running command 'ozone sh bucket link 83259-source/bucket2 83259-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:21.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:21.327" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:21.327" starttime="20200929 11:51:17.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:21.329" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:51:21.329" starttime="20200929 11:51:21.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:21.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:21.330" starttime="20200929 11:51:21.329"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:21.330" starttime="20200929 11:51:17.221"></status>
</kw>
<msg timestamp="20200929 11:51:21.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:21.330" starttime="20200929 11:51:17.220"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:21.330" starttime="20200929 11:51:17.220"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:21.335" level="INFO">Running command 'ozone sh bucket create 83259-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:25.141" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 11:51:25.141" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:25.141" starttime="20200929 11:51:21.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:25.142" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200929 11:51:25.142" starttime="20200929 11:51:25.141"></status>
</kw>
<msg timestamp="20200929 11:51:25.143" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:25.143" starttime="20200929 11:51:21.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200929 11:51:25.143" starttime="20200929 11:51:25.143"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:25.147" level="INFO">Running command 'ozone sh bucket create 83259-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:28.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:28.808" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:28.808" starttime="20200929 11:51:25.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:28.809" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:51:28.810" starttime="20200929 11:51:28.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:28.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:28.811" starttime="20200929 11:51:28.810"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:28.811" starttime="20200929 11:51:25.145"></status>
</kw>
<msg timestamp="20200929 11:51:28.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:28.812" starttime="20200929 11:51:25.144"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:28.812" starttime="20200929 11:51:25.144"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:28.815" level="INFO">Running command 'ozone sh bucket link 83259-source/bucket1 83259-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:32.672" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 11:51:32.672" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:32.672" starttime="20200929 11:51:28.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:32.673" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200929 11:51:32.674" starttime="20200929 11:51:32.673"></status>
</kw>
<msg timestamp="20200929 11:51:32.674" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:32.674" starttime="20200929 11:51:28.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200929 11:51:32.675" starttime="20200929 11:51:32.674"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:51:32.675" critical="yes" starttime="20200929 11:51:17.178"></status>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:32.686" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:32.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:32.687" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:51:32.687" starttime="20200929 11:51:32.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:32.688" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:51:32.688" starttime="20200929 11:51:32.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:32.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:32.689" starttime="20200929 11:51:32.688"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.690" starttime="20200929 11:51:32.681"></status>
</kw>
<msg timestamp="20200929 11:51:32.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:32.690" starttime="20200929 11:51:32.680"></status>
</kw>
<msg timestamp="20200929 11:51:32.690" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:51:32.690" starttime="20200929 11:51:32.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:51:32.691" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:51:32.691" starttime="20200929 11:51:32.691"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:32.697" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:32.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:32.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:32.719" starttime="20200929 11:51:32.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:32.720" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:32.721" starttime="20200929 11:51:32.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:32.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:32.722" starttime="20200929 11:51:32.721"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.722" starttime="20200929 11:51:32.693"></status>
</kw>
<msg timestamp="20200929 11:51:32.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:32.722" starttime="20200929 11:51:32.693"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.722" starttime="20200929 11:51:32.692"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.722" starttime="20200929 11:51:32.692"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.723" starttime="20200929 11:51:32.679"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.723" starttime="20200929 11:51:32.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:32.729" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:32.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:32.732" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:32.732" starttime="20200929 11:51:32.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:32.733" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:32.733" starttime="20200929 11:51:32.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:32.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:32.734" starttime="20200929 11:51:32.733"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.735" starttime="20200929 11:51:32.725"></status>
</kw>
<msg timestamp="20200929 11:51:32.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:32.735" starttime="20200929 11:51:32.725"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.735" starttime="20200929 11:51:32.724"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:32.742" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:32.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:32.745" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:51:32.745" starttime="20200929 11:51:32.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:32.747" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:51:32.747" starttime="20200929 11:51:32.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:32.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:32.748" starttime="20200929 11:51:32.747"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.748" starttime="20200929 11:51:32.739"></status>
</kw>
<msg timestamp="20200929 11:51:32.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:32.748" starttime="20200929 11:51:32.739"></status>
</kw>
<msg timestamp="20200929 11:51:32.749" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:51:32.749" starttime="20200929 11:51:32.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:51:32.749" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:51:32.749" starttime="20200929 11:51:32.749"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:32.755" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:32.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:32.765" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:32.765" starttime="20200929 11:51:32.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:32.766" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:32.766" starttime="20200929 11:51:32.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:32.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:32.767" starttime="20200929 11:51:32.766"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.767" starttime="20200929 11:51:32.751"></status>
</kw>
<msg timestamp="20200929 11:51:32.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:32.768" starttime="20200929 11:51:32.751"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.768" starttime="20200929 11:51:32.750"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.768" starttime="20200929 11:51:32.750"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.768" starttime="20200929 11:51:32.736"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:32.768" starttime="20200929 11:51:32.735"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:32.772" level="INFO">Running command 'ozone sh key list 83259-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:37.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:37.042" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:37.043" starttime="20200929 11:51:32.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:37.044" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "83259-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-09-29T11:42:44.412Z",
  "modificationTime" : "2020-09-29T11:45:46.466Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20200929 11:51:37.044" starttime="20200929 11:51:37.043"></status>
</kw>
<msg timestamp="20200929 11:51:37.044" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:37.044" starttime="20200929 11:51:32.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200929 11:51:37.045" starttime="20200929 11:51:37.044"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.045" starttime="20200929 11:51:32.724"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.045" starttime="20200929 11:51:32.723"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:51:37.045" critical="yes" starttime="20200929 11:51:32.677"></status>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:37.052" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:37.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:37.056" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:51:37.056" starttime="20200929 11:51:37.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:37.057" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:51:37.057" starttime="20200929 11:51:37.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:37.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:37.058" starttime="20200929 11:51:37.057"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.058" starttime="20200929 11:51:37.050"></status>
</kw>
<msg timestamp="20200929 11:51:37.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:37.058" starttime="20200929 11:51:37.049"></status>
</kw>
<msg timestamp="20200929 11:51:37.059" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:51:37.059" starttime="20200929 11:51:37.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:51:37.059" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:51:37.059" starttime="20200929 11:51:37.059"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:37.065" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:37.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:37.075" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:37.075" starttime="20200929 11:51:37.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:37.077" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:37.077" starttime="20200929 11:51:37.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:37.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:37.078" starttime="20200929 11:51:37.077"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.078" starttime="20200929 11:51:37.061"></status>
</kw>
<msg timestamp="20200929 11:51:37.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:37.078" starttime="20200929 11:51:37.061"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.078" starttime="20200929 11:51:37.060"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.078" starttime="20200929 11:51:37.060"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.079" starttime="20200929 11:51:37.048"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.079" starttime="20200929 11:51:37.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:37.085" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:37.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:37.088" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:37.088" starttime="20200929 11:51:37.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:37.090" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:37.090" starttime="20200929 11:51:37.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:37.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:37.091" starttime="20200929 11:51:37.090"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.091" starttime="20200929 11:51:37.081"></status>
</kw>
<msg timestamp="20200929 11:51:37.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:37.091" starttime="20200929 11:51:37.080"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.092" starttime="20200929 11:51:37.080"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:37.098" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:37.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:37.099" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:51:37.100" starttime="20200929 11:51:37.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:37.101" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:51:37.101" starttime="20200929 11:51:37.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:37.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:37.101" starttime="20200929 11:51:37.101"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.102" starttime="20200929 11:51:37.094"></status>
</kw>
<msg timestamp="20200929 11:51:37.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:37.102" starttime="20200929 11:51:37.093"></status>
</kw>
<msg timestamp="20200929 11:51:37.102" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:51:37.102" starttime="20200929 11:51:37.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:51:37.103" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:51:37.103" starttime="20200929 11:51:37.103"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:37.110" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:37.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:37.121" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:37.121" starttime="20200929 11:51:37.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:37.122" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:37.122" starttime="20200929 11:51:37.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:37.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:37.123" starttime="20200929 11:51:37.123"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.124" starttime="20200929 11:51:37.106"></status>
</kw>
<msg timestamp="20200929 11:51:37.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:37.124" starttime="20200929 11:51:37.106"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.125" starttime="20200929 11:51:37.105"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.125" starttime="20200929 11:51:37.104"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.125" starttime="20200929 11:51:37.092"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:37.125" starttime="20200929 11:51:37.092"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:37.131" level="INFO">Running command 'ozone sh key list 83259-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:41.198" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 11:51:41.198" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:41.199" starttime="20200929 11:51:37.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:41.200" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20200929 11:51:41.200" starttime="20200929 11:51:41.199"></status>
</kw>
<msg timestamp="20200929 11:51:41.200" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:41.200" starttime="20200929 11:51:37.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200929 11:51:41.201" starttime="20200929 11:51:41.200"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.201" starttime="20200929 11:51:37.080"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.201" starttime="20200929 11:51:37.079"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:51:41.201" critical="yes" starttime="20200929 11:51:37.046"></status>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:41.211" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:41.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:41.213" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:51:41.213" starttime="20200929 11:51:41.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:41.214" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:51:41.214" starttime="20200929 11:51:41.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:41.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:41.215" starttime="20200929 11:51:41.214"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.215" starttime="20200929 11:51:41.205"></status>
</kw>
<msg timestamp="20200929 11:51:41.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:41.216" starttime="20200929 11:51:41.205"></status>
</kw>
<msg timestamp="20200929 11:51:41.216" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:51:41.216" starttime="20200929 11:51:41.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:51:41.217" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:51:41.217" starttime="20200929 11:51:41.216"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:41.222" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:41.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:41.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:41.240" starttime="20200929 11:51:41.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:41.241" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:41.241" starttime="20200929 11:51:41.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:41.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:41.242" starttime="20200929 11:51:41.241"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.242" starttime="20200929 11:51:41.218"></status>
</kw>
<msg timestamp="20200929 11:51:41.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:41.243" starttime="20200929 11:51:41.218"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.243" starttime="20200929 11:51:41.217"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.243" starttime="20200929 11:51:41.217"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.243" starttime="20200929 11:51:41.204"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.243" starttime="20200929 11:51:41.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:41.250" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:41.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:41.253" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:41.253" starttime="20200929 11:51:41.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:41.255" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:41.255" starttime="20200929 11:51:41.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:41.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:41.256" starttime="20200929 11:51:41.255"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.256" starttime="20200929 11:51:41.245"></status>
</kw>
<msg timestamp="20200929 11:51:41.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:41.257" starttime="20200929 11:51:41.245"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.257" starttime="20200929 11:51:41.245"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:41.262" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:41.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:41.265" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:51:41.265" starttime="20200929 11:51:41.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:41.266" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:51:41.266" starttime="20200929 11:51:41.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:41.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:41.267" starttime="20200929 11:51:41.267"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.267" starttime="20200929 11:51:41.259"></status>
</kw>
<msg timestamp="20200929 11:51:41.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:41.268" starttime="20200929 11:51:41.259"></status>
</kw>
<msg timestamp="20200929 11:51:41.268" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:51:41.268" starttime="20200929 11:51:41.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:51:41.269" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:51:41.269" starttime="20200929 11:51:41.269"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:41.275" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:41.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:41.291" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:41.291" starttime="20200929 11:51:41.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:41.292" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:41.292" starttime="20200929 11:51:41.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:41.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:41.293" starttime="20200929 11:51:41.292"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.293" starttime="20200929 11:51:41.271"></status>
</kw>
<msg timestamp="20200929 11:51:41.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:41.293" starttime="20200929 11:51:41.271"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.294" starttime="20200929 11:51:41.270"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.294" starttime="20200929 11:51:41.269"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.294" starttime="20200929 11:51:41.257"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:41.294" starttime="20200929 11:51:41.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:41.299" level="INFO">Running command 'ozone sh bucket info 83259-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:45.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:45.453" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:45.453" starttime="20200929 11:51:41.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:45.454" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:46:03.969Z",
  "modificationTime" : "2020-09-29T11:46:03.969Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "unreadable-bucket"
}</msg>
<status status="PASS" endtime="20200929 11:51:45.454" starttime="20200929 11:51:45.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:45.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:45.455" starttime="20200929 11:51:45.454"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:45.455" starttime="20200929 11:51:41.295"></status>
</kw>
<msg timestamp="20200929 11:51:45.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:45.456" starttime="20200929 11:51:41.295"></status>
</kw>
<msg timestamp="20200929 11:51:45.456" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:45.456" starttime="20200929 11:51:41.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200929 11:51:45.457" starttime="20200929 11:51:45.457"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200929 11:51:45.458" starttime="20200929 11:51:45.457"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:45.461" level="INFO">Running command 'ozone sh key list 83259-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:49.368" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 11:51:49.368" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:49.368" starttime="20200929 11:51:45.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:49.369" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20200929 11:51:49.369" starttime="20200929 11:51:49.369"></status>
</kw>
<msg timestamp="20200929 11:51:49.370" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:49.370" starttime="20200929 11:51:45.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200929 11:51:49.370" starttime="20200929 11:51:49.370"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:49.371" starttime="20200929 11:51:41.244"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:49.371" starttime="20200929 11:51:41.244"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:51:49.371" critical="yes" starttime="20200929 11:51:41.202"></status>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:49.378" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:49.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:49.381" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:51:49.381" starttime="20200929 11:51:49.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:49.382" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:51:49.382" starttime="20200929 11:51:49.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:49.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:49.383" starttime="20200929 11:51:49.382"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:49.383" starttime="20200929 11:51:49.375"></status>
</kw>
<msg timestamp="20200929 11:51:49.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:49.383" starttime="20200929 11:51:49.375"></status>
</kw>
<msg timestamp="20200929 11:51:49.384" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:51:49.384" starttime="20200929 11:51:49.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:51:49.384" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:51:49.385" starttime="20200929 11:51:49.384"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:49.390" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:49.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:49.406" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:51:49.407" starttime="20200929 11:51:49.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:49.408" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:51:49.408" starttime="20200929 11:51:49.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:49.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:49.409" starttime="20200929 11:51:49.408"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:49.409" starttime="20200929 11:51:49.386"></status>
</kw>
<msg timestamp="20200929 11:51:49.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:49.410" starttime="20200929 11:51:49.386"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:49.410" starttime="20200929 11:51:49.385"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:49.410" starttime="20200929 11:51:49.385"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:49.410" starttime="20200929 11:51:49.374"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:49.410" starttime="20200929 11:51:49.373"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:49.416" level="INFO">Running command 'ozone sh bucket link 83259-target/loop1 83259-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:53.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:53.121" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:53.121" starttime="20200929 11:51:49.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:53.122" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:51:53.122" starttime="20200929 11:51:53.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:53.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:53.123" starttime="20200929 11:51:53.122"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:53.123" starttime="20200929 11:51:49.412"></status>
</kw>
<msg timestamp="20200929 11:51:53.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:53.124" starttime="20200929 11:51:49.411"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:53.124" starttime="20200929 11:51:49.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:53.128" level="INFO">Running command 'ozone sh bucket link 83259-target/loop2 83259-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:51:56.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:51:56.938" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:51:56.939" starttime="20200929 11:51:53.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:51:56.940" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:51:56.940" starttime="20200929 11:51:56.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:51:56.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:51:56.941" starttime="20200929 11:51:56.940"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:56.941" starttime="20200929 11:51:53.125"></status>
</kw>
<msg timestamp="20200929 11:51:56.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:51:56.942" starttime="20200929 11:51:53.125"></status>
</kw>
<status status="PASS" endtime="20200929 11:51:56.942" starttime="20200929 11:51:53.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:51:56.948" level="INFO">Running command 'ozone sh bucket link 83259-target/loop3 83259-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:52:00.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:52:00.670" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:52:00.670" starttime="20200929 11:51:56.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:52:00.672" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:52:00.672" starttime="20200929 11:52:00.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:52:00.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:52:00.673" starttime="20200929 11:52:00.672"></status>
</kw>
<status status="PASS" endtime="20200929 11:52:00.673" starttime="20200929 11:51:56.943"></status>
</kw>
<msg timestamp="20200929 11:52:00.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:52:00.674" starttime="20200929 11:51:56.943"></status>
</kw>
<status status="PASS" endtime="20200929 11:52:00.674" starttime="20200929 11:51:56.942"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:52:00.679" level="INFO">Running command 'ozone sh key list 83259-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:52:04.575" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 11:52:04.575" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:52:04.575" starttime="20200929 11:52:00.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:52:04.576" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20200929 11:52:04.577" starttime="20200929 11:52:04.576"></status>
</kw>
<msg timestamp="20200929 11:52:04.577" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:52:04.577" starttime="20200929 11:52:00.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20200929 11:52:04.578" starttime="20200929 11:52:04.577"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:52:04.578" critical="yes" starttime="20200929 11:51:49.372"></status>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:52:04.585" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:52:04.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:52:04.588" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:52:04.588" starttime="20200929 11:52:04.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:52:04.590" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:52:04.590" starttime="20200929 11:52:04.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:52:04.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:52:04.591" starttime="20200929 11:52:04.590"></status>
</kw>
<status status="PASS" endtime="20200929 11:52:04.591" starttime="20200929 11:52:04.582"></status>
</kw>
<msg timestamp="20200929 11:52:04.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:52:04.591" starttime="20200929 11:52:04.582"></status>
</kw>
<msg timestamp="20200929 11:52:04.592" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:52:04.592" starttime="20200929 11:52:04.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:52:04.592" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:52:04.592" starttime="20200929 11:52:04.592"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:52:04.597" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:52:04.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:52:04.610" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:52:04.610" starttime="20200929 11:52:04.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:52:04.611" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:52:04.611" starttime="20200929 11:52:04.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:52:04.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:52:04.613" starttime="20200929 11:52:04.611"></status>
</kw>
<status status="PASS" endtime="20200929 11:52:04.613" starttime="20200929 11:52:04.594"></status>
</kw>
<msg timestamp="20200929 11:52:04.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:52:04.613" starttime="20200929 11:52:04.594"></status>
</kw>
<status status="PASS" endtime="20200929 11:52:04.613" starttime="20200929 11:52:04.593"></status>
</kw>
<status status="PASS" endtime="20200929 11:52:04.613" starttime="20200929 11:52:04.593"></status>
</kw>
<status status="PASS" endtime="20200929 11:52:04.614" starttime="20200929 11:52:04.581"></status>
</kw>
<status status="PASS" endtime="20200929 11:52:04.614" starttime="20200929 11:52:04.581"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:52:04.618" level="INFO">Running command 'ozone sh bucket link 83259-source/bucket1 83259-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:52:08.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:52:08.413" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:52:08.413" starttime="20200929 11:52:04.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:52:08.414" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:52:08.414" starttime="20200929 11:52:08.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:52:08.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:52:08.416" starttime="20200929 11:52:08.415"></status>
</kw>
<status status="PASS" endtime="20200929 11:52:08.416" starttime="20200929 11:52:04.615"></status>
</kw>
<msg timestamp="20200929 11:52:08.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:52:08.416" starttime="20200929 11:52:04.615"></status>
</kw>
<status status="PASS" endtime="20200929 11:52:08.417" starttime="20200929 11:52:04.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:52:08.421" level="INFO">Running command 'ozone sh key put 83259-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:04.581" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200929 11:54:04.581" starttime="20200929 11:52:08.419"></status>
</kw>
<status status="FAIL" endtime="20200929 11:54:04.582" starttime="20200929 11:52:08.419"></status>
</kw>
<msg timestamp="20200929 11:54:04.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200929 11:54:04.582" starttime="20200929 11:52:08.418"></status>
</kw>
<status status="FAIL" endtime="20200929 11:54:04.583" starttime="20200929 11:52:08.417"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200929 11:54:04.584" critical="yes" starttime="20200929 11:52:04.579">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:04.596" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:04.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:04.600" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:54:04.600" starttime="20200929 11:54:04.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:04.601" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:54:04.601" starttime="20200929 11:54:04.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:04.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:04.602" starttime="20200929 11:54:04.601"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:04.602" starttime="20200929 11:54:04.592"></status>
</kw>
<msg timestamp="20200929 11:54:04.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:04.603" starttime="20200929 11:54:04.592"></status>
</kw>
<msg timestamp="20200929 11:54:04.603" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:54:04.603" starttime="20200929 11:54:04.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:54:04.605" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:54:04.605" starttime="20200929 11:54:04.603"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:04.611" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:04.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:04.656" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:54:04.656" starttime="20200929 11:54:04.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:04.658" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:54:04.658" starttime="20200929 11:54:04.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:04.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:04.659" starttime="20200929 11:54:04.658"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:04.659" starttime="20200929 11:54:04.607"></status>
</kw>
<msg timestamp="20200929 11:54:04.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:04.666" starttime="20200929 11:54:04.607"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:04.666" starttime="20200929 11:54:04.606"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:04.666" starttime="20200929 11:54:04.605"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:04.667" starttime="20200929 11:54:04.589"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:04.667" starttime="20200929 11:54:04.589"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:04.693" level="INFO">Running command 'ozone sh bucket delete 83259-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:08.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:08.537" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:54:08.537" starttime="20200929 11:54:04.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:08.538" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:54:08.539" starttime="20200929 11:54:08.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:08.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:08.539" starttime="20200929 11:54:08.539"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:08.540" starttime="20200929 11:54:04.672"></status>
</kw>
<msg timestamp="20200929 11:54:08.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:08.540" starttime="20200929 11:54:04.672"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:08.540" starttime="20200929 11:54:04.667"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:08.545" level="INFO">Running command 'ozone sh bucket list 83259-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:12.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:12.605" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:54:12.605" starttime="20200929 11:54:08.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:12.606" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:51:28.659Z",
  "modificationTime" : "2020-09-29T11:51:28.659Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:46:29.128Z",
  "modificationTime" : "2020-09-29T11:46:29.128Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:46:03.969Z",
  "modificationTime" : "2020-09-29T11:46:03.969Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:51:21.084Z",
  "modificationTime" : "2020-09-29T11:51:21.084Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "bucket2"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:52:08.345Z",
  "modificationTime" : "2020-09-29T11:52:08.345Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:52:00.540Z",
  "modificationTime" : "2020-09-29T11:52:00.540Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-target",
  "sourceBucket" : "loop3"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:51:53.053Z",
  "modificationTime" : "2020-09-29T11:51:53.053Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-target",
  "sourceBucket" : "loop1"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:51:56.694Z",
  "modificationTime" : "2020-09-29T11:51:56.694Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-target",
  "sourceBucket" : "loop2"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:45:55.323Z",
  "modificationTime" : "2020-09-29T11:45:55.323Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "83259-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T11:45:59.509Z",
  "modificationTime" : "2020-09-29T11:45:59.509Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83259-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200929 11:54:12.606" starttime="20200929 11:54:12.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:12.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:12.607" starttime="20200929 11:54:12.607"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:12.607" starttime="20200929 11:54:08.541"></status>
</kw>
<msg timestamp="20200929 11:54:12.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:12.608" starttime="20200929 11:54:08.541"></status>
</kw>
<msg timestamp="20200929 11:54:12.608" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:54:12.608" starttime="20200929 11:54:08.540"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200929 11:54:12.609" starttime="20200929 11:54:12.608"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:12.613" level="INFO">Running command 'ozone sh key list 83259-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:16.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:16.596" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20200929 11:54:16.596" starttime="20200929 11:54:12.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:16.597" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20200929 11:54:16.597" starttime="20200929 11:54:16.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:16.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:16.598" starttime="20200929 11:54:16.597"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:16.598" starttime="20200929 11:54:12.610"></status>
</kw>
<msg timestamp="20200929 11:54:16.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:16.599" starttime="20200929 11:54:12.610"></status>
</kw>
<msg timestamp="20200929 11:54:16.599" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20200929 11:54:16.599" starttime="20200929 11:54:12.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200929 11:54:16.600" starttime="20200929 11:54:16.599"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:54:16.600" critical="yes" starttime="20200929 11:54:04.587"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" endtime="20200929 11:54:16.603" starttime="20200929 11:42:28.139"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 11:54:16.632" level="INFO">${random} = 64198</msg>
<status status="PASS" endtime="20200929 11:54:16.632" starttime="20200929 11:54:16.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200929 11:54:16.633" level="INFO">${prefix} = 64198</msg>
<status status="PASS" endtime="20200929 11:54:16.633" starttime="20200929 11:54:16.633"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:16.633" starttime="20200929 11:54:16.631"></status>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:16.639" level="INFO">Running command 'ozone sh volume info /64198-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:20.212" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 11:54:20.212" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:54:20.212" starttime="20200929 11:54:16.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:20.214" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 64198-rpcbasic is not found</msg>
<status status="PASS" endtime="20200929 11:54:20.214" starttime="20200929 11:54:20.213"></status>
</kw>
<msg timestamp="20200929 11:54:20.214" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:54:20.214" starttime="20200929 11:54:16.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200929 11:54:20.215" starttime="20200929 11:54:20.214"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:20.220" level="INFO">Running command 'ozone sh volume create /64198-rpcbasic --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:23.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:23.906" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:54:23.906" starttime="20200929 11:54:20.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:23.908" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:54:23.908" starttime="20200929 11:54:23.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:23.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:23.908" starttime="20200929 11:54:23.908"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:23.909" starttime="20200929 11:54:20.216"></status>
</kw>
<msg timestamp="20200929 11:54:23.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:23.909" starttime="20200929 11:54:20.216"></status>
</kw>
<msg timestamp="20200929 11:54:23.910" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:54:23.910" starttime="20200929 11:54:20.215"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200929 11:54:23.911" starttime="20200929 11:54:23.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:23.916" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="64198-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:27.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:27.782" level="INFO">${output} = {
  "metadata": {},
  "name": "64198-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200929 11:54:27.782" starttime="20200929 11:54:23.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:27.783" level="INFO">{
  "metadata": {},
  "name": "64198-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T11:54:23.841Z",
  "modificationTime": "2020-09-29T11:54:27.359384Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200929 11:54:27.784" starttime="20200929 11:54:27.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:27.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:27.784" starttime="20200929 11:54:27.784"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:27.785" starttime="20200929 11:54:23.913"></status>
</kw>
<msg timestamp="20200929 11:54:27.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:27.785" starttime="20200929 11:54:23.912"></status>
</kw>
<msg timestamp="20200929 11:54:27.785" level="INFO">${result} = {
  "metadata": {},
  "name": "64198-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200929 11:54:27.785" starttime="20200929 11:54:23.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200929 11:54:27.786" starttime="20200929 11:54:27.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:27.791" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="64198-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:32.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:32.006" level="INFO">${output} = {
  "metadata": {},
  "name": "64198-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200929 11:54:32.006" starttime="20200929 11:54:27.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:32.008" level="INFO">{
  "metadata": {},
  "name": "64198-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T11:54:23.841Z",
  "modificationTime": "2020-09-29T11:54:31.553379Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200929 11:54:32.008" starttime="20200929 11:54:32.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:32.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:32.009" starttime="20200929 11:54:32.008"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:32.009" starttime="20200929 11:54:27.787"></status>
</kw>
<msg timestamp="20200929 11:54:32.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:32.009" starttime="20200929 11:54:27.787"></status>
</kw>
<msg timestamp="20200929 11:54:32.010" level="INFO">${result} = {
  "metadata": {},
  "name": "64198-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200929 11:54:32.010" starttime="20200929 11:54:27.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200929 11:54:32.010" starttime="20200929 11:54:32.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:32.014" level="INFO">Running command 'ozone sh volume update /64198-rpcbasic --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:36.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:36.340" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:54:36.340" starttime="20200929 11:54:32.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:36.341" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "64198-rpcbasic",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-29T11:54:23.841Z",
  "modificationTime" : "2020-09-29T11:54:35.846132Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "usedBytes" : 0
}</msg>
<status status="PASS" endtime="20200929 11:54:36.341" starttime="20200929 11:54:36.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:36.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:36.342" starttime="20200929 11:54:36.341"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:36.342" starttime="20200929 11:54:32.012"></status>
</kw>
<msg timestamp="20200929 11:54:36.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:36.343" starttime="20200929 11:54:32.011"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:36.343" starttime="20200929 11:54:32.011"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:36.349" level="INFO">Running command 'ozone sh volume info /64198-rpcbasic | jq -r '. | select(.name=="64198-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:40.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:40.425" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200929 11:54:40.425" starttime="20200929 11:54:36.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:40.426" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200929 11:54:40.427" starttime="20200929 11:54:40.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:40.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:40.428" starttime="20200929 11:54:40.427"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:40.428" starttime="20200929 11:54:36.344"></status>
</kw>
<msg timestamp="20200929 11:54:40.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:40.428" starttime="20200929 11:54:36.344"></status>
</kw>
<msg timestamp="20200929 11:54:40.429" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200929 11:54:40.429" starttime="20200929 11:54:36.343"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200929 11:54:40.429" starttime="20200929 11:54:40.429"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:40.434" level="INFO">Running command 'ozone sh bucket create /64198-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:44.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:44.283" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:54:44.283" starttime="20200929 11:54:40.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:44.284" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:54:44.284" starttime="20200929 11:54:44.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:44.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:44.285" starttime="20200929 11:54:44.285"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:44.286" starttime="20200929 11:54:40.431"></status>
</kw>
<msg timestamp="20200929 11:54:44.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:44.286" starttime="20200929 11:54:40.430"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:44.286" starttime="20200929 11:54:40.430"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:44.292" level="INFO">Running command 'ozone sh bucket info /64198-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:48.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:48.279" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200929 11:54:48.279" starttime="20200929 11:54:44.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:48.280" level="INFO">DISK</msg>
<status status="PASS" endtime="20200929 11:54:48.280" starttime="20200929 11:54:48.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:48.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:48.281" starttime="20200929 11:54:48.280"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:48.281" starttime="20200929 11:54:44.288"></status>
</kw>
<msg timestamp="20200929 11:54:48.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:48.281" starttime="20200929 11:54:44.287"></status>
</kw>
<msg timestamp="20200929 11:54:48.282" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200929 11:54:48.282" starttime="20200929 11:54:44.286"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200929 11:54:48.282" starttime="20200929 11:54:48.282"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:48.287" level="INFO">Running command 'ozone sh bucket list /64198-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:54:52.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:54:52.019" level="INFO">${output} = 64198-rpcbasic</msg>
<status status="PASS" endtime="20200929 11:54:52.019" starttime="20200929 11:54:48.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:54:52.020" level="INFO">64198-rpcbasic</msg>
<status status="PASS" endtime="20200929 11:54:52.021" starttime="20200929 11:54:52.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:54:52.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:54:52.021" starttime="20200929 11:54:52.021"></status>
</kw>
<status status="PASS" endtime="20200929 11:54:52.022" starttime="20200929 11:54:48.284"></status>
</kw>
<msg timestamp="20200929 11:54:52.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:54:52.022" starttime="20200929 11:54:48.284"></status>
</kw>
<msg timestamp="20200929 11:54:52.022" level="INFO">${result} = 64198-rpcbasic</msg>
<status status="PASS" endtime="20200929 11:54:52.022" starttime="20200929 11:54:48.283"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200929 11:54:52.023" starttime="20200929 11:54:52.022"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:54:52.030" level="INFO">Running command 'ozone sh key put /64198-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:16.635" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200929 11:56:16.635" starttime="20200929 11:54:52.026"></status>
</kw>
<status status="FAIL" endtime="20200929 11:56:16.635" starttime="20200929 11:54:52.026"></status>
</kw>
<msg timestamp="20200929 11:56:16.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200929 11:56:16.636" starttime="20200929 11:54:52.025"></status>
</kw>
<status status="FAIL" endtime="20200929 11:56:16.636" starttime="20200929 11:54:52.024"></status>
</kw>
<status status="FAIL" endtime="20200929 11:56:16.636" starttime="20200929 11:54:52.024"></status>
</kw>
<status status="FAIL" endtime="20200929 11:56:16.636" starttime="20200929 11:54:52.023"></status>
</kw>
<status status="FAIL" endtime="20200929 11:56:16.637" starttime="20200929 11:54:16.635"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200929 11:56:16.637" critical="yes" starttime="20200929 11:54:16.634">Test timeout 2 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20200929 11:56:16.639" starttime="20200929 11:54:16.611"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 11:56:16.654" level="INFO">${random} = 04141</msg>
<status status="PASS" endtime="20200929 11:56:16.654" starttime="20200929 11:56:16.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200929 11:56:16.655" level="INFO">${prefix} = 04141</msg>
<status status="PASS" endtime="20200929 11:56:16.655" starttime="20200929 11:56:16.654"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:16.655" starttime="20200929 11:56:16.653"></status>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:16.663" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:16.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:56:16.665" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:56:16.665" starttime="20200929 11:56:16.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:56:16.666" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:56:16.666" starttime="20200929 11:56:16.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:56:16.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:56:16.667" starttime="20200929 11:56:16.667"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:16.667" starttime="20200929 11:56:16.658"></status>
</kw>
<msg timestamp="20200929 11:56:16.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:56:16.668" starttime="20200929 11:56:16.658"></status>
</kw>
<msg timestamp="20200929 11:56:16.668" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:56:16.668" starttime="20200929 11:56:16.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:56:16.670" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:56:16.670" starttime="20200929 11:56:16.668"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:16.676" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:16.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:56:16.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:56:16.695" starttime="20200929 11:56:16.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:56:16.699" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:56:16.699" starttime="20200929 11:56:16.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:56:16.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:56:16.700" starttime="20200929 11:56:16.699"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:16.700" starttime="20200929 11:56:16.672"></status>
</kw>
<msg timestamp="20200929 11:56:16.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:56:16.701" starttime="20200929 11:56:16.672"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:16.701" starttime="20200929 11:56:16.671"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:16.701" starttime="20200929 11:56:16.670"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:16.701" starttime="20200929 11:56:16.657"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:16.701" starttime="20200929 11:56:16.656"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:16.705" level="INFO">Running command 'ozone sh volume info o3://om:9862/04141-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:20.407" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 11:56:20.407" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:56:20.407" starttime="20200929 11:56:16.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:56:20.408" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 04141-rpcwoport is not found</msg>
<status status="PASS" endtime="20200929 11:56:20.409" starttime="20200929 11:56:20.408"></status>
</kw>
<msg timestamp="20200929 11:56:20.409" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:56:20.409" starttime="20200929 11:56:16.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200929 11:56:20.410" starttime="20200929 11:56:20.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:20.416" level="INFO">Running command 'ozone sh volume create o3://om:9862/04141-rpcwoport --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:24.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:56:24.340" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:56:24.340" starttime="20200929 11:56:20.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:56:24.341" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:56:24.342" starttime="20200929 11:56:24.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:56:24.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:56:24.343" starttime="20200929 11:56:24.342"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:24.343" starttime="20200929 11:56:20.412"></status>
</kw>
<msg timestamp="20200929 11:56:24.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:56:24.343" starttime="20200929 11:56:20.411"></status>
</kw>
<msg timestamp="20200929 11:56:24.344" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:56:24.344" starttime="20200929 11:56:20.410"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200929 11:56:24.345" starttime="20200929 11:56:24.344"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:24.350" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="04141-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:28.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:56:28.188" level="INFO">${output} = {
  "metadata": {},
  "name": "04141-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200929 11:56:28.188" starttime="20200929 11:56:24.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:56:28.189" level="INFO">{
  "metadata": {},
  "name": "04141-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T11:56:24.121Z",
  "modificationTime": "2020-09-29T11:56:27.724035Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200929 11:56:28.189" starttime="20200929 11:56:28.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:56:28.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:56:28.190" starttime="20200929 11:56:28.189"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:28.190" starttime="20200929 11:56:24.347"></status>
</kw>
<msg timestamp="20200929 11:56:28.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:56:28.191" starttime="20200929 11:56:24.346"></status>
</kw>
<msg timestamp="20200929 11:56:28.191" level="INFO">${result} = {
  "metadata": {},
  "name": "04141-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200929 11:56:28.191" starttime="20200929 11:56:24.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200929 11:56:28.192" starttime="20200929 11:56:28.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:28.196" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="04141-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:32.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:56:32.111" level="INFO">${output} = {
  "metadata": {},
  "name": "04141-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200929 11:56:32.111" starttime="20200929 11:56:28.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:56:32.113" level="INFO">{
  "metadata": {},
  "name": "04141-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T11:56:24.121Z",
  "modificationTime": "2020-09-29T11:56:31.756253Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200929 11:56:32.113" starttime="20200929 11:56:32.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:56:32.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:56:32.114" starttime="20200929 11:56:32.113"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:32.114" starttime="20200929 11:56:28.194"></status>
</kw>
<msg timestamp="20200929 11:56:32.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:56:32.114" starttime="20200929 11:56:28.193"></status>
</kw>
<msg timestamp="20200929 11:56:32.115" level="INFO">${result} = {
  "metadata": {},
  "name": "04141-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTim...</msg>
<status status="PASS" endtime="20200929 11:56:32.115" starttime="20200929 11:56:28.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200929 11:56:32.115" starttime="20200929 11:56:32.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:32.121" level="INFO">Running command 'ozone sh volume update o3://om:9862/04141-rpcwoport --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:36.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:56:36.142" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:56:36.142" starttime="20200929 11:56:32.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:56:36.144" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "04141-rpcwoport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-29T11:56:24.121Z",
  "modificationTime" : "2020-09-29T11:56:35.778449Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "usedBytes" : 0
}</msg>
<status status="PASS" endtime="20200929 11:56:36.144" starttime="20200929 11:56:36.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:56:36.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:56:36.146" starttime="20200929 11:56:36.145"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:36.146" starttime="20200929 11:56:32.117"></status>
</kw>
<msg timestamp="20200929 11:56:36.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:56:36.147" starttime="20200929 11:56:32.116"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:36.147" starttime="20200929 11:56:32.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:36.154" level="INFO">Running command 'ozone sh volume info o3://om:9862/04141-rpcwoport | jq -r '. | select(.name=="04141-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:40.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:56:40.275" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200929 11:56:40.275" starttime="20200929 11:56:36.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:56:40.277" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200929 11:56:40.277" starttime="20200929 11:56:40.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:56:40.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:56:40.278" starttime="20200929 11:56:40.277"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:40.278" starttime="20200929 11:56:36.150"></status>
</kw>
<msg timestamp="20200929 11:56:40.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:56:40.279" starttime="20200929 11:56:36.149"></status>
</kw>
<msg timestamp="20200929 11:56:40.279" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200929 11:56:40.279" starttime="20200929 11:56:36.147"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200929 11:56:40.280" starttime="20200929 11:56:40.280"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:40.284" level="INFO">Running command 'ozone sh bucket create o3://om:9862/04141-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:44.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:56:44.135" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:56:44.135" starttime="20200929 11:56:40.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:56:44.137" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:56:44.137" starttime="20200929 11:56:44.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:56:44.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:56:44.138" starttime="20200929 11:56:44.137"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:44.138" starttime="20200929 11:56:40.281"></status>
</kw>
<msg timestamp="20200929 11:56:44.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:56:44.138" starttime="20200929 11:56:40.281"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:44.138" starttime="20200929 11:56:40.280"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:44.143" level="INFO">Running command 'ozone sh bucket info o3://om:9862/04141-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:47.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:56:47.972" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200929 11:56:47.972" starttime="20200929 11:56:44.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:56:47.974" level="INFO">DISK</msg>
<status status="PASS" endtime="20200929 11:56:47.974" starttime="20200929 11:56:47.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:56:47.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:56:47.975" starttime="20200929 11:56:47.974"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:47.975" starttime="20200929 11:56:44.140"></status>
</kw>
<msg timestamp="20200929 11:56:47.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:56:47.975" starttime="20200929 11:56:44.140"></status>
</kw>
<msg timestamp="20200929 11:56:47.976" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200929 11:56:47.976" starttime="20200929 11:56:44.139"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200929 11:56:47.976" starttime="20200929 11:56:47.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:47.983" level="INFO">Running command 'ozone sh bucket list o3://om:9862/04141-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:56:52.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:56:52.252" level="INFO">${output} = 04141-rpcwoport</msg>
<status status="PASS" endtime="20200929 11:56:52.252" starttime="20200929 11:56:47.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:56:52.253" level="INFO">04141-rpcwoport</msg>
<status status="PASS" endtime="20200929 11:56:52.253" starttime="20200929 11:56:52.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:56:52.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:56:52.254" starttime="20200929 11:56:52.253"></status>
</kw>
<status status="PASS" endtime="20200929 11:56:52.254" starttime="20200929 11:56:47.978"></status>
</kw>
<msg timestamp="20200929 11:56:52.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:56:52.255" starttime="20200929 11:56:47.978"></status>
</kw>
<msg timestamp="20200929 11:56:52.255" level="INFO">${result} = 04141-rpcwoport</msg>
<status status="PASS" endtime="20200929 11:56:52.255" starttime="20200929 11:56:47.977"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200929 11:56:52.256" starttime="20200929 11:56:52.255"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:56:52.262" level="INFO">Running command 'ozone sh key put o3://om:9862/04141-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:16.656" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200929 11:58:16.656" starttime="20200929 11:56:52.259"></status>
</kw>
<status status="FAIL" endtime="20200929 11:58:16.657" starttime="20200929 11:56:52.258"></status>
</kw>
<msg timestamp="20200929 11:58:16.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200929 11:58:16.657" starttime="20200929 11:56:52.258"></status>
</kw>
<status status="FAIL" endtime="20200929 11:58:16.657" starttime="20200929 11:56:52.257"></status>
</kw>
<status status="FAIL" endtime="20200929 11:58:16.658" starttime="20200929 11:56:52.256"></status>
</kw>
<status status="FAIL" endtime="20200929 11:58:16.658" starttime="20200929 11:56:52.256"></status>
</kw>
<status status="FAIL" endtime="20200929 11:58:16.658" starttime="20200929 11:56:16.701"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200929 11:58:16.658" critical="yes" starttime="20200929 11:56:16.655">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:16.667" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:16.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:16.671" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:58:16.671" starttime="20200929 11:58:16.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:16.672" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:58:16.672" starttime="20200929 11:58:16.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:16.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:16.673" starttime="20200929 11:58:16.673"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:16.674" starttime="20200929 11:58:16.664"></status>
</kw>
<msg timestamp="20200929 11:58:16.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:16.674" starttime="20200929 11:58:16.664"></status>
</kw>
<msg timestamp="20200929 11:58:16.674" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:58:16.674" starttime="20200929 11:58:16.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:58:16.675" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:58:16.675" starttime="20200929 11:58:16.675"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:16.682" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:16.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:16.712" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:58:16.712" starttime="20200929 11:58:16.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:16.713" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:58:16.713" starttime="20200929 11:58:16.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:16.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:16.714" starttime="20200929 11:58:16.713"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:16.715" starttime="20200929 11:58:16.678"></status>
</kw>
<msg timestamp="20200929 11:58:16.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:16.715" starttime="20200929 11:58:16.677"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:16.715" starttime="20200929 11:58:16.676"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:16.715" starttime="20200929 11:58:16.676"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:16.716" starttime="20200929 11:58:16.662"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:16.716" starttime="20200929 11:58:16.662"></status>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:16.721" level="INFO">Running command 'ozone sh volume create o3://om:9862/04141-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:20.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:20.708" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:20.708" starttime="20200929 11:58:16.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:20.709" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:58:20.710" starttime="20200929 11:58:20.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:20.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:20.710" starttime="20200929 11:58:20.710"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:20.711" starttime="20200929 11:58:16.718"></status>
</kw>
<msg timestamp="20200929 11:58:20.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:20.711" starttime="20200929 11:58:16.717"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:20.711" starttime="20200929 11:58:16.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:20.715" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/04141-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:24.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:24.762" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:24.762" starttime="20200929 11:58:20.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:24.764" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200929 11:58:24.765" starttime="20200929 11:58:24.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:24.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:24.766" starttime="20200929 11:58:24.765"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:24.766" starttime="20200929 11:58:20.712"></status>
</kw>
<msg timestamp="20200929 11:58:24.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:24.767" starttime="20200929 11:58:20.712"></status>
</kw>
<msg timestamp="20200929 11:58:24.767" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:24.767" starttime="20200929 11:58:20.711"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200929 11:58:24.768" starttime="20200929 11:58:24.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:24.773" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/04141-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:28.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:28.498" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:28.498" starttime="20200929 11:58:24.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:28.500" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20200929 11:58:28.500" starttime="20200929 11:58:28.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:28.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:28.501" starttime="20200929 11:58:28.500"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:28.501" starttime="20200929 11:58:24.770"></status>
</kw>
<msg timestamp="20200929 11:58:28.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:28.501" starttime="20200929 11:58:24.769"></status>
</kw>
<msg timestamp="20200929 11:58:28.502" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:28.502" starttime="20200929 11:58:24.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:28.507" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/04141-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:32.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:32.664" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:32.664" starttime="20200929 11:58:28.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:32.665" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200929 11:58:32.665" starttime="20200929 11:58:32.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:32.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:32.666" starttime="20200929 11:58:32.666"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:32.667" starttime="20200929 11:58:28.503"></status>
</kw>
<msg timestamp="20200929 11:58:32.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:32.667" starttime="20200929 11:58:28.503"></status>
</kw>
<msg timestamp="20200929 11:58:32.667" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:32.667" starttime="20200929 11:58:28.502"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200929 11:58:32.669" starttime="20200929 11:58:32.668"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:32.673" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/04141-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:36.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:36.918" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:36.918" starttime="20200929 11:58:32.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:36.919" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20200929 11:58:36.919" starttime="20200929 11:58:36.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:36.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:36.920" starttime="20200929 11:58:36.919"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:36.920" starttime="20200929 11:58:32.670"></status>
</kw>
<msg timestamp="20200929 11:58:36.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:36.920" starttime="20200929 11:58:32.670"></status>
</kw>
<msg timestamp="20200929 11:58:36.921" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:36.921" starttime="20200929 11:58:32.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:36.926" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/04141-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:40.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:40.997" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:40.998" starttime="20200929 11:58:36.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:40.999" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200929 11:58:40.999" starttime="20200929 11:58:40.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:41.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:41.000" starttime="20200929 11:58:40.999"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:41.000" starttime="20200929 11:58:36.922"></status>
</kw>
<msg timestamp="20200929 11:58:41.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:41.001" starttime="20200929 11:58:36.922"></status>
</kw>
<msg timestamp="20200929 11:58:41.001" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:41.001" starttime="20200929 11:58:36.921"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200929 11:58:41.002" starttime="20200929 11:58:41.001"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:41.008" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/04141-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:44.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:44.745" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:44.745" starttime="20200929 11:58:41.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:44.746" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" endtime="20200929 11:58:44.746" starttime="20200929 11:58:44.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:44.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:44.747" starttime="20200929 11:58:44.747"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:44.748" starttime="20200929 11:58:41.004"></status>
</kw>
<msg timestamp="20200929 11:58:44.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:44.748" starttime="20200929 11:58:41.003"></status>
</kw>
<msg timestamp="20200929 11:58:44.748" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:44.748" starttime="20200929 11:58:41.002"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:44.754" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/04141-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:48.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:48.531" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:48.531" starttime="20200929 11:58:44.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:48.532" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200929 11:58:48.532" starttime="20200929 11:58:48.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:48.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:48.533" starttime="20200929 11:58:48.533"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:48.533" starttime="20200929 11:58:44.750"></status>
</kw>
<msg timestamp="20200929 11:58:48.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:48.534" starttime="20200929 11:58:44.749"></status>
</kw>
<msg timestamp="20200929 11:58:48.534" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:48.534" starttime="20200929 11:58:44.748"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200929 11:58:48.535" starttime="20200929 11:58:48.534"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200929 11:58:48.536" starttime="20200929 11:58:48.535"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:48.537" starttime="20200929 11:58:16.716"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:58:48.537" critical="yes" starttime="20200929 11:58:16.660"></status>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:48.556" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:48.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:48.559" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:58:48.559" starttime="20200929 11:58:48.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:48.560" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:58:48.560" starttime="20200929 11:58:48.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:48.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:48.561" starttime="20200929 11:58:48.560"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:48.561" starttime="20200929 11:58:48.553"></status>
</kw>
<msg timestamp="20200929 11:58:48.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:48.561" starttime="20200929 11:58:48.553"></status>
</kw>
<msg timestamp="20200929 11:58:48.562" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:58:48.562" starttime="20200929 11:58:48.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:58:48.562" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:58:48.562" starttime="20200929 11:58:48.562"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:48.567" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:48.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:48.578" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:58:48.578" starttime="20200929 11:58:48.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:48.579" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:58:48.580" starttime="20200929 11:58:48.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:48.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:48.580" starttime="20200929 11:58:48.580"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:48.581" starttime="20200929 11:58:48.564"></status>
</kw>
<msg timestamp="20200929 11:58:48.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:48.581" starttime="20200929 11:58:48.564"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:48.581" starttime="20200929 11:58:48.563"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:48.581" starttime="20200929 11:58:48.563"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:48.581" starttime="20200929 11:58:48.540"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:48.582" starttime="20200929 11:58:48.539"></status>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:48.586" level="INFO">Running command 'ozone sh bucket create o3://om:9862/04141-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:51.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:51.898" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:51.898" starttime="20200929 11:58:48.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:51.899" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 11:58:51.899" starttime="20200929 11:58:51.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:51.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:51.900" starttime="20200929 11:58:51.900"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:51.900" starttime="20200929 11:58:48.584"></status>
</kw>
<msg timestamp="20200929 11:58:51.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:51.901" starttime="20200929 11:58:48.583"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:51.901" starttime="20200929 11:58:48.582"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:51.906" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/04141-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:55.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:55.658" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:55.658" starttime="20200929 11:58:51.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:55.660" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200929 11:58:55.660" starttime="20200929 11:58:55.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:55.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:55.661" starttime="20200929 11:58:55.660"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:55.661" starttime="20200929 11:58:51.902"></status>
</kw>
<msg timestamp="20200929 11:58:55.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:55.661" starttime="20200929 11:58:51.902"></status>
</kw>
<msg timestamp="20200929 11:58:55.662" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:55.662" starttime="20200929 11:58:51.901"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200929 11:58:55.663" starttime="20200929 11:58:55.662"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:55.668" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/04141-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:58:59.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:58:59.513" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:59.513" starttime="20200929 11:58:55.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:58:59.514" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20200929 11:58:59.514" starttime="20200929 11:58:59.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:58:59.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:58:59.515" starttime="20200929 11:58:59.514"></status>
</kw>
<status status="PASS" endtime="20200929 11:58:59.515" starttime="20200929 11:58:55.664"></status>
</kw>
<msg timestamp="20200929 11:58:59.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:58:59.515" starttime="20200929 11:58:55.664"></status>
</kw>
<msg timestamp="20200929 11:58:59.516" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:58:59.516" starttime="20200929 11:58:55.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:58:59.522" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/04141-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:59:03.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:59:03.344" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:59:03.344" starttime="20200929 11:58:59.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:59:03.345" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200929 11:59:03.345" starttime="20200929 11:59:03.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:59:03.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:59:03.346" starttime="20200929 11:59:03.345"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:03.347" starttime="20200929 11:58:59.519"></status>
</kw>
<msg timestamp="20200929 11:59:03.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:59:03.347" starttime="20200929 11:58:59.518"></status>
</kw>
<msg timestamp="20200929 11:59:03.348" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:59:03.348" starttime="20200929 11:58:59.516"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200929 11:59:03.349" starttime="20200929 11:59:03.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:59:03.354" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/04141-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:59:06.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:59:06.997" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:59:06.997" starttime="20200929 11:59:03.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:59:06.998" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20200929 11:59:06.998" starttime="20200929 11:59:06.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:59:06.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:59:06.999" starttime="20200929 11:59:06.998"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:06.999" starttime="20200929 11:59:03.351"></status>
</kw>
<msg timestamp="20200929 11:59:06.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:59:06.999" starttime="20200929 11:59:03.351"></status>
</kw>
<msg timestamp="20200929 11:59:07.000" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:59:07.000" starttime="20200929 11:59:03.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:59:07.004" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/04141-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:59:10.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:59:10.963" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:59:10.963" starttime="20200929 11:59:07.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:59:10.965" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200929 11:59:10.965" starttime="20200929 11:59:10.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:59:10.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:59:10.966" starttime="20200929 11:59:10.965"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:10.966" starttime="20200929 11:59:07.001"></status>
</kw>
<msg timestamp="20200929 11:59:10.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:59:10.966" starttime="20200929 11:59:07.001"></status>
</kw>
<msg timestamp="20200929 11:59:10.967" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:59:10.967" starttime="20200929 11:59:07.000"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200929 11:59:10.968" starttime="20200929 11:59:10.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:59:10.972" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/04141-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:59:14.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:59:14.860" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:59:14.860" starttime="20200929 11:59:10.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:59:14.861" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" endtime="20200929 11:59:14.861" starttime="20200929 11:59:14.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:59:14.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:59:14.862" starttime="20200929 11:59:14.861"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:14.863" starttime="20200929 11:59:10.969"></status>
</kw>
<msg timestamp="20200929 11:59:14.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:59:14.863" starttime="20200929 11:59:10.969"></status>
</kw>
<msg timestamp="20200929 11:59:14.863" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:59:14.863" starttime="20200929 11:59:10.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:59:14.868" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/04141-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:59:19.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:59:19.069" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:59:19.070" starttime="20200929 11:59:14.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:59:19.071" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200929 11:59:19.071" starttime="20200929 11:59:19.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:59:19.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:59:19.072" starttime="20200929 11:59:19.071"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:19.072" starttime="20200929 11:59:14.865"></status>
</kw>
<msg timestamp="20200929 11:59:19.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:59:19.073" starttime="20200929 11:59:14.864"></status>
</kw>
<msg timestamp="20200929 11:59:19.073" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 11:59:19.073" starttime="20200929 11:59:14.863"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200929 11:59:19.074" starttime="20200929 11:59:19.073"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200929 11:59:19.074" starttime="20200929 11:59:19.074"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:19.075" starttime="20200929 11:58:48.582"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:59:19.075" critical="yes" starttime="20200929 11:58:48.538"></status>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:59:19.082" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:59:19.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:59:19.086" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:59:19.086" starttime="20200929 11:59:19.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:59:19.087" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:59:19.087" starttime="20200929 11:59:19.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:59:19.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:59:19.088" starttime="20200929 11:59:19.088"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:19.088" starttime="20200929 11:59:19.079"></status>
</kw>
<msg timestamp="20200929 11:59:19.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:59:19.089" starttime="20200929 11:59:19.078"></status>
</kw>
<msg timestamp="20200929 11:59:19.089" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:59:19.089" starttime="20200929 11:59:19.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:59:19.090" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:59:19.090" starttime="20200929 11:59:19.089"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:59:19.096" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:59:19.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:59:19.106" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:59:19.106" starttime="20200929 11:59:19.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:59:19.107" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:59:19.107" starttime="20200929 11:59:19.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:59:19.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:59:19.108" starttime="20200929 11:59:19.107"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:19.108" starttime="20200929 11:59:19.092"></status>
</kw>
<msg timestamp="20200929 11:59:19.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:59:19.108" starttime="20200929 11:59:19.091"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:19.109" starttime="20200929 11:59:19.090"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:19.109" starttime="20200929 11:59:19.090"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:19.109" starttime="20200929 11:59:19.077"></status>
</kw>
<status status="PASS" endtime="20200929 11:59:19.109" starttime="20200929 11:59:19.077"></status>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:59:19.115" level="INFO">Running command 'ozone sh key put o3://om:9862/04141-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:19.077" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200929 12:01:19.077" starttime="20200929 11:59:19.111"></status>
</kw>
<status status="FAIL" endtime="20200929 12:01:19.077" starttime="20200929 11:59:19.111"></status>
</kw>
<msg timestamp="20200929 12:01:19.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200929 12:01:19.078" starttime="20200929 11:59:19.110"></status>
</kw>
<status status="FAIL" endtime="20200929 12:01:19.078" starttime="20200929 11:59:19.110"></status>
</kw>
<status status="FAIL" endtime="20200929 12:01:19.078" starttime="20200929 11:59:19.109"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200929 12:01:19.079" critical="yes" starttime="20200929 11:59:19.076">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:19.087" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:19.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:01:19.089" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 12:01:19.089" starttime="20200929 12:01:19.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:01:19.090" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 12:01:19.090" starttime="20200929 12:01:19.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:01:19.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:01:19.091" starttime="20200929 12:01:19.091"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:19.092" starttime="20200929 12:01:19.083"></status>
</kw>
<msg timestamp="20200929 12:01:19.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:01:19.092" starttime="20200929 12:01:19.083"></status>
</kw>
<msg timestamp="20200929 12:01:19.092" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 12:01:19.092" starttime="20200929 12:01:19.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 12:01:19.093" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 12:01:19.093" starttime="20200929 12:01:19.092"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:19.098" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:19.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:01:19.120" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 12:01:19.120" starttime="20200929 12:01:19.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:01:19.122" level="INFO"></msg>
<status status="PASS" endtime="20200929 12:01:19.122" starttime="20200929 12:01:19.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:01:19.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:01:19.123" starttime="20200929 12:01:19.122"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:19.123" starttime="20200929 12:01:19.095"></status>
</kw>
<msg timestamp="20200929 12:01:19.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:01:19.124" starttime="20200929 12:01:19.094"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:19.124" starttime="20200929 12:01:19.094"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:19.124" starttime="20200929 12:01:19.093"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:19.125" starttime="20200929 12:01:19.081"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:19.125" starttime="20200929 12:01:19.081"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:19.129" level="INFO">Running command 'ozone sh volume info o3:///04141-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:23.016" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 12:01:23.016" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:01:23.016" starttime="20200929 12:01:19.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:01:23.017" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 04141-rpcwport is not found</msg>
<status status="PASS" endtime="20200929 12:01:23.017" starttime="20200929 12:01:23.016"></status>
</kw>
<msg timestamp="20200929 12:01:23.018" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:01:23.018" starttime="20200929 12:01:19.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200929 12:01:23.019" starttime="20200929 12:01:23.018"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:23.025" level="INFO">Running command 'ozone sh volume create o3:///04141-rpcwport --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:27.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:01:27.060" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:01:27.060" starttime="20200929 12:01:23.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:01:27.062" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 12:01:27.062" starttime="20200929 12:01:27.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:01:27.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:01:27.063" starttime="20200929 12:01:27.062"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:27.063" starttime="20200929 12:01:23.020"></status>
</kw>
<msg timestamp="20200929 12:01:27.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:01:27.063" starttime="20200929 12:01:23.020"></status>
</kw>
<msg timestamp="20200929 12:01:27.064" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:01:27.064" starttime="20200929 12:01:23.019"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200929 12:01:27.064" starttime="20200929 12:01:27.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:27.073" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="04141-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:31.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:01:31.517" level="INFO">${output} = {
  "metadata": {},
  "name": "04141-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200929 12:01:31.517" starttime="20200929 12:01:27.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:01:31.519" level="INFO">{
  "metadata": {},
  "name": "04141-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T12:01:26.868Z",
  "modificationTime": "2020-09-29T12:01:31.095910Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200929 12:01:31.519" starttime="20200929 12:01:31.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:01:31.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:01:31.520" starttime="20200929 12:01:31.519"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:31.520" starttime="20200929 12:01:27.066"></status>
</kw>
<msg timestamp="20200929 12:01:31.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:01:31.521" starttime="20200929 12:01:27.066"></status>
</kw>
<msg timestamp="20200929 12:01:31.521" level="INFO">${result} = {
  "metadata": {},
  "name": "04141-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200929 12:01:31.521" starttime="20200929 12:01:27.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200929 12:01:31.522" starttime="20200929 12:01:31.521"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:31.530" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="04141-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:36.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:01:36.016" level="INFO">${output} = {
  "metadata": {},
  "name": "04141-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200929 12:01:36.016" starttime="20200929 12:01:31.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:01:36.017" level="INFO">{
  "metadata": {},
  "name": "04141-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T12:01:26.868Z",
  "modificationTime": "2020-09-29T12:01:35.491121Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200929 12:01:36.017" starttime="20200929 12:01:36.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:01:36.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:01:36.018" starttime="20200929 12:01:36.017"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:36.018" starttime="20200929 12:01:31.524"></status>
</kw>
<msg timestamp="20200929 12:01:36.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:01:36.018" starttime="20200929 12:01:31.523"></status>
</kw>
<msg timestamp="20200929 12:01:36.019" level="INFO">${result} = {
  "metadata": {},
  "name": "04141-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime...</msg>
<status status="PASS" endtime="20200929 12:01:36.019" starttime="20200929 12:01:31.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200929 12:01:36.020" starttime="20200929 12:01:36.019"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:36.024" level="INFO">Running command 'ozone sh volume update o3:///04141-rpcwport --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:40.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:01:40.204" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:01:40.204" starttime="20200929 12:01:36.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:01:40.206" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "04141-rpcwport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-29T12:01:26.868Z",
  "modificationTime" : "2020-09-29T12:01:39.764876Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "usedBytes" : 0
}</msg>
<status status="PASS" endtime="20200929 12:01:40.206" starttime="20200929 12:01:40.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:01:40.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:01:40.206" starttime="20200929 12:01:40.206"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:40.207" starttime="20200929 12:01:36.021"></status>
</kw>
<msg timestamp="20200929 12:01:40.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:01:40.207" starttime="20200929 12:01:36.020"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:40.208" starttime="20200929 12:01:36.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:40.216" level="INFO">Running command 'ozone sh volume info o3:///04141-rpcwport | jq -r '. | select(.name=="04141-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:44.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:01:44.387" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200929 12:01:44.387" starttime="20200929 12:01:40.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:01:44.389" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200929 12:01:44.389" starttime="20200929 12:01:44.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:01:44.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:01:44.389" starttime="20200929 12:01:44.389"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:44.390" starttime="20200929 12:01:40.209"></status>
</kw>
<msg timestamp="20200929 12:01:44.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:01:44.390" starttime="20200929 12:01:40.209"></status>
</kw>
<msg timestamp="20200929 12:01:44.390" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200929 12:01:44.390" starttime="20200929 12:01:40.208"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200929 12:01:44.391" starttime="20200929 12:01:44.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:44.395" level="INFO">Running command 'ozone sh bucket create o3:///04141-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:48.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:01:48.270" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:01:48.270" starttime="20200929 12:01:44.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:01:48.271" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 12:01:48.271" starttime="20200929 12:01:48.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:01:48.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:01:48.272" starttime="20200929 12:01:48.272"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:48.273" starttime="20200929 12:01:44.393"></status>
</kw>
<msg timestamp="20200929 12:01:48.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:01:48.273" starttime="20200929 12:01:44.392"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:48.273" starttime="20200929 12:01:44.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:48.278" level="INFO">Running command 'ozone sh bucket info o3:///04141-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:52.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:01:52.222" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200929 12:01:52.223" starttime="20200929 12:01:48.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:01:52.224" level="INFO">DISK</msg>
<status status="PASS" endtime="20200929 12:01:52.224" starttime="20200929 12:01:52.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:01:52.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:01:52.225" starttime="20200929 12:01:52.224"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:52.225" starttime="20200929 12:01:48.275"></status>
</kw>
<msg timestamp="20200929 12:01:52.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:01:52.225" starttime="20200929 12:01:48.274"></status>
</kw>
<msg timestamp="20200929 12:01:52.226" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200929 12:01:52.226" starttime="20200929 12:01:48.273"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200929 12:01:52.226" starttime="20200929 12:01:52.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:52.232" level="INFO">Running command 'ozone sh bucket list o3:///04141-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:01:56.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:01:56.414" level="INFO">${output} = 04141-rpcwport</msg>
<status status="PASS" endtime="20200929 12:01:56.414" starttime="20200929 12:01:52.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:01:56.415" level="INFO">04141-rpcwport</msg>
<status status="PASS" endtime="20200929 12:01:56.415" starttime="20200929 12:01:56.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:01:56.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:01:56.416" starttime="20200929 12:01:56.415"></status>
</kw>
<status status="PASS" endtime="20200929 12:01:56.416" starttime="20200929 12:01:52.228"></status>
</kw>
<msg timestamp="20200929 12:01:56.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:01:56.417" starttime="20200929 12:01:52.227"></status>
</kw>
<msg timestamp="20200929 12:01:56.417" level="INFO">${result} = 04141-rpcwport</msg>
<status status="PASS" endtime="20200929 12:01:56.417" starttime="20200929 12:01:52.227"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200929 12:01:56.418" starttime="20200929 12:01:56.417"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:01:56.424" level="INFO">Running command 'ozone sh key put o3:///04141-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:19.081" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200929 12:03:19.081" starttime="20200929 12:01:56.421"></status>
</kw>
<status status="FAIL" endtime="20200929 12:03:19.082" starttime="20200929 12:01:56.420"></status>
</kw>
<msg timestamp="20200929 12:03:19.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200929 12:03:19.082" starttime="20200929 12:01:56.420"></status>
</kw>
<status status="FAIL" endtime="20200929 12:03:19.082" starttime="20200929 12:01:56.419"></status>
</kw>
<status status="FAIL" endtime="20200929 12:03:19.082" starttime="20200929 12:01:56.418"></status>
</kw>
<status status="FAIL" endtime="20200929 12:03:19.082" starttime="20200929 12:01:56.418"></status>
</kw>
<status status="FAIL" endtime="20200929 12:03:19.083" starttime="20200929 12:01:19.125"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200929 12:03:19.083" critical="yes" starttime="20200929 12:01:19.080">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:19.091" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:19.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:03:19.093" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 12:03:19.093" starttime="20200929 12:03:19.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:03:19.095" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 12:03:19.095" starttime="20200929 12:03:19.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:03:19.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:03:19.096" starttime="20200929 12:03:19.095"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:19.096" starttime="20200929 12:03:19.088"></status>
</kw>
<msg timestamp="20200929 12:03:19.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:03:19.096" starttime="20200929 12:03:19.088"></status>
</kw>
<msg timestamp="20200929 12:03:19.097" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 12:03:19.097" starttime="20200929 12:03:19.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 12:03:19.097" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 12:03:19.098" starttime="20200929 12:03:19.097"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:19.102" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:19.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:03:19.127" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 12:03:19.127" starttime="20200929 12:03:19.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:03:19.128" level="INFO"></msg>
<status status="PASS" endtime="20200929 12:03:19.128" starttime="20200929 12:03:19.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:03:19.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:03:19.129" starttime="20200929 12:03:19.128"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:19.129" starttime="20200929 12:03:19.099"></status>
</kw>
<msg timestamp="20200929 12:03:19.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:03:19.130" starttime="20200929 12:03:19.099"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:19.130" starttime="20200929 12:03:19.098"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:19.130" starttime="20200929 12:03:19.098"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:19.130" starttime="20200929 12:03:19.086"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:19.130" starttime="20200929 12:03:19.086"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:19.136" level="INFO">Running command 'ozone sh volume info /04141-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:23.363" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 12:03:23.363" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:03:23.363" starttime="20200929 12:03:19.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:03:23.364" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 04141-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200929 12:03:23.365" starttime="20200929 12:03:23.364"></status>
</kw>
<msg timestamp="20200929 12:03:23.365" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:03:23.365" starttime="20200929 12:03:19.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200929 12:03:23.366" starttime="20200929 12:03:23.365"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:23.370" level="INFO">Running command 'ozone sh volume create /04141-rpcwoscheme --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:27.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:03:27.297" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:03:27.297" starttime="20200929 12:03:23.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:03:27.299" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 12:03:27.299" starttime="20200929 12:03:27.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:03:27.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:03:27.300" starttime="20200929 12:03:27.299"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:27.300" starttime="20200929 12:03:23.367"></status>
</kw>
<msg timestamp="20200929 12:03:27.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:03:27.301" starttime="20200929 12:03:23.367"></status>
</kw>
<msg timestamp="20200929 12:03:27.301" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:03:27.301" starttime="20200929 12:03:23.366"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200929 12:03:27.302" starttime="20200929 12:03:27.301"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:27.307" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="04141-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:31.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:03:31.562" level="INFO">${output} = {
  "metadata": {},
  "name": "04141-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200929 12:03:31.562" starttime="20200929 12:03:27.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:03:31.564" level="INFO">{
  "metadata": {},
  "name": "04141-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T12:03:27.212Z",
  "modificationTime": "2020-09-29T12:03:31.135663Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200929 12:03:31.564" starttime="20200929 12:03:31.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:03:31.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:03:31.565" starttime="20200929 12:03:31.564"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:31.565" starttime="20200929 12:03:27.303"></status>
</kw>
<msg timestamp="20200929 12:03:31.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:03:31.565" starttime="20200929 12:03:27.303"></status>
</kw>
<msg timestamp="20200929 12:03:31.566" level="INFO">${result} = {
  "metadata": {},
  "name": "04141-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200929 12:03:31.566" starttime="20200929 12:03:27.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200929 12:03:31.566" starttime="20200929 12:03:31.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:31.572" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="04141-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:35.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:03:35.713" level="INFO">${output} = {
  "metadata": {},
  "name": "04141-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200929 12:03:35.713" starttime="20200929 12:03:31.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:03:35.714" level="INFO">{
  "metadata": {},
  "name": "04141-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T12:03:27.212Z",
  "modificationTime": "2020-09-29T12:03:35.350977Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200929 12:03:35.714" starttime="20200929 12:03:35.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:03:35.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:03:35.715" starttime="20200929 12:03:35.714"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:35.715" starttime="20200929 12:03:31.568"></status>
</kw>
<msg timestamp="20200929 12:03:35.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:03:35.716" starttime="20200929 12:03:31.567"></status>
</kw>
<msg timestamp="20200929 12:03:35.716" level="INFO">${result} = {
  "metadata": {},
  "name": "04141-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationT...</msg>
<status status="PASS" endtime="20200929 12:03:35.716" starttime="20200929 12:03:31.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200929 12:03:35.717" starttime="20200929 12:03:35.716"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:35.722" level="INFO">Running command 'ozone sh volume update /04141-rpcwoscheme --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:40.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:03:40.114" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:03:40.114" starttime="20200929 12:03:35.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:03:40.116" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "04141-rpcwoscheme",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-29T12:03:27.212Z",
  "modificationTime" : "2020-09-29T12:03:39.700907Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "usedBytes" : 0
}</msg>
<status status="PASS" endtime="20200929 12:03:40.116" starttime="20200929 12:03:40.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:03:40.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:03:40.117" starttime="20200929 12:03:40.117"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:40.118" starttime="20200929 12:03:35.718"></status>
</kw>
<msg timestamp="20200929 12:03:40.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:03:40.118" starttime="20200929 12:03:35.717"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:40.118" starttime="20200929 12:03:35.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:40.124" level="INFO">Running command 'ozone sh volume info /04141-rpcwoscheme | jq -r '. | select(.name=="04141-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:44.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:03:44.426" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200929 12:03:44.426" starttime="20200929 12:03:40.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:03:44.427" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200929 12:03:44.428" starttime="20200929 12:03:44.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:03:44.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:03:44.428" starttime="20200929 12:03:44.428"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:44.429" starttime="20200929 12:03:40.120"></status>
</kw>
<msg timestamp="20200929 12:03:44.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:03:44.429" starttime="20200929 12:03:40.119"></status>
</kw>
<msg timestamp="20200929 12:03:44.429" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200929 12:03:44.430" starttime="20200929 12:03:40.118"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200929 12:03:44.430" starttime="20200929 12:03:44.430"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:44.436" level="INFO">Running command 'ozone sh bucket create /04141-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:48.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:03:48.606" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 12:03:48.606" starttime="20200929 12:03:44.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:03:48.608" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 12:03:48.608" starttime="20200929 12:03:48.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:03:48.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:03:48.609" starttime="20200929 12:03:48.608"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:48.609" starttime="20200929 12:03:44.431"></status>
</kw>
<msg timestamp="20200929 12:03:48.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:03:48.609" starttime="20200929 12:03:44.431"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:48.609" starttime="20200929 12:03:44.430"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:48.616" level="INFO">Running command 'ozone sh bucket info /04141-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:52.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:03:52.998" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200929 12:03:52.998" starttime="20200929 12:03:48.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:03:53.000" level="INFO">DISK</msg>
<status status="PASS" endtime="20200929 12:03:53.000" starttime="20200929 12:03:52.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:03:53.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:03:53.001" starttime="20200929 12:03:53.000"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:53.001" starttime="20200929 12:03:48.611"></status>
</kw>
<msg timestamp="20200929 12:03:53.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:03:53.001" starttime="20200929 12:03:48.611"></status>
</kw>
<msg timestamp="20200929 12:03:53.002" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200929 12:03:53.002" starttime="20200929 12:03:48.610"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200929 12:03:53.002" starttime="20200929 12:03:53.002"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:53.009" level="INFO">Running command 'ozone sh bucket list /04141-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:03:57.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 12:03:57.581" level="INFO">${output} = 04141-rpcwoscheme</msg>
<status status="PASS" endtime="20200929 12:03:57.581" starttime="20200929 12:03:53.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 12:03:57.582" level="INFO">04141-rpcwoscheme</msg>
<status status="PASS" endtime="20200929 12:03:57.582" starttime="20200929 12:03:57.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 12:03:57.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 12:03:57.583" starttime="20200929 12:03:57.583"></status>
</kw>
<status status="PASS" endtime="20200929 12:03:57.584" starttime="20200929 12:03:53.004"></status>
</kw>
<msg timestamp="20200929 12:03:57.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 12:03:57.584" starttime="20200929 12:03:53.004"></status>
</kw>
<msg timestamp="20200929 12:03:57.584" level="INFO">${result} = 04141-rpcwoscheme</msg>
<status status="PASS" endtime="20200929 12:03:57.584" starttime="20200929 12:03:53.002"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200929 12:03:57.585" starttime="20200929 12:03:57.584"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 12:03:57.592" level="INFO">Running command 'ozone sh key put /04141-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 12:05:19.085" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200929 12:05:19.085" starttime="20200929 12:03:57.588"></status>
</kw>
<status status="FAIL" endtime="20200929 12:05:19.086" starttime="20200929 12:03:57.587"></status>
</kw>
<msg timestamp="20200929 12:05:19.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200929 12:05:19.087" starttime="20200929 12:03:57.587"></status>
</kw>
<status status="FAIL" endtime="20200929 12:05:19.087" starttime="20200929 12:03:57.586"></status>
</kw>
<status status="FAIL" endtime="20200929 12:05:19.087" starttime="20200929 12:03:57.586"></status>
</kw>
<status status="FAIL" endtime="20200929 12:05:19.087" starttime="20200929 12:03:57.585"></status>
</kw>
<status status="FAIL" endtime="20200929 12:05:19.087" starttime="20200929 12:03:19.131"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200929 12:05:19.088" critical="yes" starttime="20200929 12:03:19.084">Test timeout 2 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20200929 12:05:19.090" starttime="20200929 11:56:16.642"></status>
</suite>
<status status="FAIL" endtime="20200929 12:05:19.104" starttime="20200929 11:37:23.151"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:37:17.264" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:37:17.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:37:17.269" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200929 11:37:17.269" starttime="20200929 11:37:17.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:37:17.270" level="INFO">scm</msg>
<status status="PASS" endtime="20200929 11:37:17.270" starttime="20200929 11:37:17.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:37:17.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:37:17.271" starttime="20200929 11:37:17.270"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:17.271" starttime="20200929 11:37:17.259"></status>
</kw>
<msg timestamp="20200929 11:37:17.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:37:17.271" starttime="20200929 11:37:17.259"></status>
</kw>
<msg timestamp="20200929 11:37:17.271" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200929 11:37:17.272" starttime="20200929 11:37:17.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 11:37:17.272" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 11:37:17.272" starttime="20200929 11:37:17.272"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 11:37:17.280" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 11:37:17.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 11:37:17.300" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 11:37:17.300" starttime="20200929 11:37:17.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 11:37:17.302" level="INFO"></msg>
<status status="PASS" endtime="20200929 11:37:17.302" starttime="20200929 11:37:17.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 11:37:17.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 11:37:17.303" starttime="20200929 11:37:17.303"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:17.304" starttime="20200929 11:37:17.277"></status>
</kw>
<msg timestamp="20200929 11:37:17.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 11:37:17.304" starttime="20200929 11:37:17.276"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:17.304" starttime="20200929 11:37:17.274"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:17.304" starttime="20200929 11:37:17.273"></status>
</kw>
<status status="PASS" endtime="20200929 11:37:17.304" starttime="20200929 11:37:17.257"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 11:37:17.305" critical="yes" starttime="20200929 11:37:17.257"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200929 11:37:17.306" starttime="20200929 11:37:17.183"></status>
</suite>
<status status="FAIL" elapsedtime="1676076" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="11" pass="17">Critical Tests</stat>
<stat fail="11" pass="17">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="11" id="s1" name="ozonesecure" pass="17">ozonesecure</stat>
<stat fail="11" id="s1-s1" name="Basic" pass="16">ozonesecure.Basic</stat>
<stat fail="1" id="s1-s1-s1" name="Basic" pass="1">ozonesecure.Basic.Basic</stat>
<stat fail="0" id="s1-s1-s2" name="Getconf" pass="3">ozonesecure.Basic.Getconf</stat>
<stat fail="5" id="s1-s1-s3" name="Links" pass="10">ozonesecure.Basic.Links</stat>
<stat fail="1" id="s1-s1-s4" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="4" id="s1-s1-s5" name="Ozone-Shell" pass="2">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
