<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200929 13:18:39.046" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:04:45.766" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:04:48.407" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 13:04:48.407" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200929 13:04:48.407" starttime="20200929 13:04:45.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:04:48.408" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200929 13:04:48.408" starttime="20200929 13:04:48.407"></status>
</kw>
<msg timestamp="20200929 13:04:48.409" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200929 13:04:48.409" starttime="20200929 13:04:45.761"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:04:48.415" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:04:50.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:04:50.666" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:04:50.666" starttime="20200929 13:04:48.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:04:50.668" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:04:50.668" starttime="20200929 13:04:50.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:04:50.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:04:50.669" starttime="20200929 13:04:50.668"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:50.669" starttime="20200929 13:04:48.411"></status>
</kw>
<msg timestamp="20200929 13:04:50.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:04:50.669" starttime="20200929 13:04:48.411"></status>
</kw>
<msg timestamp="20200929 13:04:50.669" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200929 13:04:50.669" starttime="20200929 13:04:48.410"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200929 13:04:50.670" starttime="20200929 13:04:50.670"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:50.670" starttime="20200929 13:04:48.410"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:50.670" starttime="20200929 13:04:48.409"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:04:50.675" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:04:52.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:04:52.854" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:04:52.854" starttime="20200929 13:04:50.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:04:52.855" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:04:52.855" starttime="20200929 13:04:52.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:04:52.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:04:52.856" starttime="20200929 13:04:52.855"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:52.856" starttime="20200929 13:04:50.672"></status>
</kw>
<msg timestamp="20200929 13:04:52.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:04:52.857" starttime="20200929 13:04:50.672"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:52.857" starttime="20200929 13:04:50.671"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:52.857" starttime="20200929 13:04:50.671"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:52.857" starttime="20200929 13:04:50.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200929 13:04:52.858" starttime="20200929 13:04:52.857"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:04:52.862" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:04:55.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:04:55.267" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T13:04:52.805Z",
  "modificat...</msg>
<status status="PASS" endtime="20200929 13:04:55.267" starttime="20200929 13:04:52.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:04:55.269" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T13:04:52.805Z",
  "modificationTime" : "2020-09-29T13:04:52.805Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200929 13:04:55.269" starttime="20200929 13:04:55.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:04:55.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:04:55.269" starttime="20200929 13:04:55.269"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:55.270" starttime="20200929 13:04:52.859"></status>
</kw>
<msg timestamp="20200929 13:04:55.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:04:55.270" starttime="20200929 13:04:52.859"></status>
</kw>
<msg timestamp="20200929 13:04:55.271" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T13:04:52.805Z",
  "modificat...</msg>
<status status="PASS" endtime="20200929 13:04:55.271" starttime="20200929 13:04:52.858"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200929 13:04:55.271" starttime="20200929 13:04:55.271"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:04:55.276" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:04:55.276" starttime="20200929 13:04:55.275"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:04:55.276" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:04:55.276" starttime="20200929 13:04:55.276"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:55.277" starttime="20200929 13:04:55.275"></status>
</kw>
<msg timestamp="20200929 13:04:55.277" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:04:55.277" starttime="20200929 13:04:55.274"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:55.277" starttime="20200929 13:04:55.273"></status>
</kw>
<msg timestamp="20200929 13:04:55.277" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200929 13:04:55.277" starttime="20200929 13:04:55.272"></status>
</kw>
<msg timestamp="20200929 13:04:55.278" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200929 13:04:55.278" starttime="20200929 13:04:55.271"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:04:55.281" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:04:57.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:04:57.582" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:04:57.582" starttime="20200929 13:04:55.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:04:57.583" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:04:57.583" starttime="20200929 13:04:57.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:04:57.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:04:57.584" starttime="20200929 13:04:57.583"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:57.584" starttime="20200929 13:04:55.279"></status>
</kw>
<msg timestamp="20200929 13:04:57.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:04:57.584" starttime="20200929 13:04:55.278"></status>
</kw>
<status status="PASS" endtime="20200929 13:04:57.585" starttime="20200929 13:04:55.278"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:04:57.589" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:05:02.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:05:02.783" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:05:02.783" starttime="20200929 13:04:57.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:05:02.784" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:05:02.784" starttime="20200929 13:05:02.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:05:02.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:05:02.785" starttime="20200929 13:05:02.784"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:02.785" starttime="20200929 13:04:57.586"></status>
</kw>
<msg timestamp="20200929 13:05:02.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:05:02.786" starttime="20200929 13:04:57.586"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:02.786" starttime="20200929 13:04:57.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:05:02.790" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:05:07.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:05:07.286" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:05:07.286" starttime="20200929 13:05:02.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:05:07.287" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:05:07.287" starttime="20200929 13:05:07.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:05:07.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:05:07.288" starttime="20200929 13:05:07.288"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:07.288" starttime="20200929 13:05:02.787"></status>
</kw>
<msg timestamp="20200929 13:05:07.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:05:07.289" starttime="20200929 13:05:02.787"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:07.290" starttime="20200929 13:05:02.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:05:07.300" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:05:11.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:05:11.559" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:05:11.559" starttime="20200929 13:05:07.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:05:11.560" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:05:11.560" starttime="20200929 13:05:11.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:05:11.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:05:11.561" starttime="20200929 13:05:11.561"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:11.562" starttime="20200929 13:05:07.291"></status>
</kw>
<msg timestamp="20200929 13:05:11.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:05:11.562" starttime="20200929 13:05:07.290"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:11.562" starttime="20200929 13:05:07.290"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 13:05:11.562" critical="yes" starttime="20200929 13:04:45.760"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:05:11.569" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:05:11.569" starttime="20200929 13:05:11.568"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:05:11.570" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:05:11.570" starttime="20200929 13:05:11.569"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:11.570" starttime="20200929 13:05:11.568"></status>
</kw>
<msg timestamp="20200929 13:05:11.570" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:05:11.570" starttime="20200929 13:05:11.567"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:11.571" starttime="20200929 13:05:11.566"></status>
</kw>
<msg timestamp="20200929 13:05:11.571" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200929 13:05:11.571" starttime="20200929 13:05:11.565"></status>
</kw>
<msg timestamp="20200929 13:05:11.571" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200929 13:05:11.571" starttime="20200929 13:05:11.564"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:05:11.575" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:05:13.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:05:13.854" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:05:13.854" starttime="20200929 13:05:11.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:05:13.855" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:05:13.856" starttime="20200929 13:05:13.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:05:13.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:05:13.856" starttime="20200929 13:05:13.856"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:13.857" starttime="20200929 13:05:11.572"></status>
</kw>
<msg timestamp="20200929 13:05:13.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:05:13.857" starttime="20200929 13:05:11.572"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:13.857" starttime="20200929 13:05:11.571"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:05:13.861" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:05:16.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:05:16.092" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:05:16.092" starttime="20200929 13:05:13.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:05:16.093" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:05:16.093" starttime="20200929 13:05:16.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:05:16.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:05:16.095" starttime="20200929 13:05:16.093"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:16.095" starttime="20200929 13:05:13.858"></status>
</kw>
<msg timestamp="20200929 13:05:16.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:05:16.095" starttime="20200929 13:05:13.858"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:16.095" starttime="20200929 13:05:13.857"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 13:05:16.096" critical="yes" starttime="20200929 13:05:11.563"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200929 13:05:16.097" starttime="20200929 13:04:45.691"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:06:57.731" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:06:57.731" starttime="20200929 13:06:57.731"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:06:57.732" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:06:57.732" starttime="20200929 13:06:57.731"></status>
</kw>
<status status="PASS" endtime="20200929 13:06:57.732" starttime="20200929 13:06:57.730"></status>
</kw>
<msg timestamp="20200929 13:06:57.732" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:06:57.732" starttime="20200929 13:06:57.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:06:57.733" starttime="20200929 13:06:57.733"></status>
</kw>
<msg timestamp="20200929 13:06:57.733" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:06:57.733" starttime="20200929 13:06:57.732"></status>
</kw>
<status status="PASS" endtime="20200929 13:06:57.734" starttime="20200929 13:06:57.729"></status>
</kw>
<msg timestamp="20200929 13:06:57.734" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:06:57.734" starttime="20200929 13:06:57.728"></status>
</kw>
<msg timestamp="20200929 13:06:57.734" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:06:57.734" starttime="20200929 13:06:57.727"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:06:57.735" level="INFO">${random} = 44991</msg>
<status status="PASS" endtime="20200929 13:06:57.735" starttime="20200929 13:06:57.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:06:57.741" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-44991 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:07:01.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:07:01.295" level="INFO">${output} = 2020-09-29 13:06:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:06:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-29 ...</msg>
<status status="PASS" endtime="20200929 13:07:01.295" starttime="20200929 13:06:57.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:07:01.297" level="INFO">2020-09-29 13:06:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:06:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-29 13:06:59 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-29 13:07:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:07:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6C1E7D498FD1-&gt;cab4a146-29e1-403c-b5ac-3b9fce07fb31
2020-09-29 13:07:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200929 13:07:01.297" starttime="20200929 13:07:01.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:07:01.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:07:01.297" starttime="20200929 13:07:01.297"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:01.298" starttime="20200929 13:06:57.735"></status>
</kw>
<msg timestamp="20200929 13:07:01.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:07:01.298" starttime="20200929 13:06:57.735"></status>
</kw>
<msg timestamp="20200929 13:07:01.298" level="INFO">${result} = 2020-09-29 13:06:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:06:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-29 ...</msg>
<status status="PASS" endtime="20200929 13:07:01.298" starttime="20200929 13:06:57.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:07:01.302" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:07:03.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:07:03.306" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-29 13:05 ofs://om/volume1/bucket1/ozone-33444
-rw-...</msg>
<status status="PASS" endtime="20200929 13:07:03.306" starttime="20200929 13:07:01.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:07:03.307" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-29 13:05 ofs://om/volume1/bucket1/ozone-33444
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-29 13:07 ofs://om/volume1/bucket1/ozone-44991
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:05 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:06 ofs://om/volume1/bucket1/wordcount-75.txt</msg>
<status status="PASS" endtime="20200929 13:07:03.308" starttime="20200929 13:07:03.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:07:03.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:07:03.308" starttime="20200929 13:07:03.308"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:03.308" starttime="20200929 13:07:01.299"></status>
</kw>
<msg timestamp="20200929 13:07:03.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:07:03.309" starttime="20200929 13:07:01.299"></status>
</kw>
<msg timestamp="20200929 13:07:03.309" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-29 13:05 ofs://om/volume1/bucket1/ozone-33444
-rw-...</msg>
<status status="PASS" endtime="20200929 13:07:03.309" starttime="20200929 13:07:01.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:07:03.310" starttime="20200929 13:07:03.309"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 13:07:03.310" critical="yes" starttime="20200929 13:06:57.726"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200929 13:07:03.311" starttime="20200929 13:06:57.659"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:05:21.280" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:05:21.280" starttime="20200929 13:05:21.280"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:05:21.281" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:05:21.281" starttime="20200929 13:05:21.280"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:21.281" starttime="20200929 13:05:21.279"></status>
</kw>
<msg timestamp="20200929 13:05:21.281" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:05:21.281" starttime="20200929 13:05:21.279"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:21.281" starttime="20200929 13:05:21.278"></status>
</kw>
<msg timestamp="20200929 13:05:21.282" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:05:21.282" starttime="20200929 13:05:21.278"></status>
</kw>
<msg timestamp="20200929 13:05:21.282" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:05:21.282" starttime="20200929 13:05:21.276"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:05:21.282" level="INFO">${random} = 33444</msg>
<status status="PASS" endtime="20200929 13:05:21.282" starttime="20200929 13:05:21.282"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:05:21.289" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-33444 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:05:24.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:05:24.988" level="INFO">${output} = 2020-09-29 13:05:23 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:05:23 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-29 ...</msg>
<status status="PASS" endtime="20200929 13:05:24.988" starttime="20200929 13:05:21.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:05:24.990" level="INFO">2020-09-29 13:05:23 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:05:23 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-29 13:05:23 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-29 13:05:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:05:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F15832F454DB-&gt;cab4a146-29e1-403c-b5ac-3b9fce07fb31
2020-09-29 13:05:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200929 13:05:24.990" starttime="20200929 13:05:24.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:05:24.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:05:24.991" starttime="20200929 13:05:24.990"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:24.991" starttime="20200929 13:05:21.283"></status>
</kw>
<msg timestamp="20200929 13:05:24.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:05:24.991" starttime="20200929 13:05:21.283"></status>
</kw>
<msg timestamp="20200929 13:05:24.991" level="INFO">${result} = 2020-09-29 13:05:23 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:05:23 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-29 ...</msg>
<status status="PASS" endtime="20200929 13:05:24.991" starttime="20200929 13:05:21.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:05:24.995" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:05:27.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:05:27.062" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-29 13:05 o3fs://bucket1.volume1.om/ozone-33444
dr...</msg>
<status status="PASS" endtime="20200929 13:05:27.062" starttime="20200929 13:05:24.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:05:27.064" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-29 13:05 o3fs://bucket1.volume1.om/ozone-33444
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:05 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200929 13:05:27.064" starttime="20200929 13:05:27.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:05:27.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:05:27.064" starttime="20200929 13:05:27.064"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:27.065" starttime="20200929 13:05:24.992"></status>
</kw>
<msg timestamp="20200929 13:05:27.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:05:27.065" starttime="20200929 13:05:24.992"></status>
</kw>
<msg timestamp="20200929 13:05:27.065" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-29 13:05 o3fs://bucket1.volume1.om/ozone-33444
dr...</msg>
<status status="PASS" endtime="20200929 13:05:27.065" starttime="20200929 13:05:24.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:05:27.066" starttime="20200929 13:05:27.065"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 13:05:27.066" critical="yes" starttime="20200929 13:05:21.275"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200929 13:05:27.067" starttime="20200929 13:05:21.209"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:07:08.398" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:07:08.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:07:08.402" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:07:08.402" starttime="20200929 13:07:08.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:07:08.403" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:07:08.403" starttime="20200929 13:07:08.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:07:08.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:07:08.404" starttime="20200929 13:07:08.403"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:08.404" starttime="20200929 13:07:08.391"></status>
</kw>
<msg timestamp="20200929 13:07:08.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:07:08.404" starttime="20200929 13:07:08.391"></status>
</kw>
<msg timestamp="20200929 13:07:08.405" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:07:08.405" starttime="20200929 13:07:08.391"></status>
</kw>
<msg timestamp="20200929 13:07:08.405" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:07:08.405" starttime="20200929 13:07:08.390"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:07:08.409" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:07:08.409" starttime="20200929 13:07:08.408"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:07:08.409" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:07:08.410" starttime="20200929 13:07:08.409"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:08.410" starttime="20200929 13:07:08.408"></status>
</kw>
<msg timestamp="20200929 13:07:08.410" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:07:08.410" starttime="20200929 13:07:08.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:07:08.411" starttime="20200929 13:07:08.411"></status>
</kw>
<msg timestamp="20200929 13:07:08.411" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:07:08.411" starttime="20200929 13:07:08.410"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:08.411" starttime="20200929 13:07:08.406"></status>
</kw>
<msg timestamp="20200929 13:07:08.411" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:07:08.412" starttime="20200929 13:07:08.406"></status>
</kw>
<msg timestamp="20200929 13:07:08.412" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:07:08.412" starttime="20200929 13:07:08.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:07:08.418" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:07:47.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:07:47.292" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:07:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:07:10 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200929 13:07:47.293" starttime="20200929 13:07:08.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:07:47.295" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:07:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:07:10 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-29 13:07:10 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-29 13:07:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:07:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7ED9DE6D69A4-&gt;cab4a146-29e1-403c-b5ac-3b9fce07fb31
2020-09-29 13:07:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-29 13:07:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-29 13:07:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:07:12 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-29 13:07:14 INFO  JobSubmitter:198 - number of splits:3
2020-09-29 13:07:15 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601384649694_0003
2020-09-29 13:07:15 INFO  YarnClientImpl:273 - Submitted application application_1601384649694_0003
2020-09-29 13:07:15 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601384649694_0003/
2020-09-29 13:07:15 INFO  Job:1339 - Running job: job_1601384649694_0003
2020-09-29 13:07:22 INFO  Job:1360 - Job job_1601384649694_0003 running in uber mode : false
2020-09-29 13:07:22 INFO  Job:1367 -  map 0% reduce 0%
2020-09-29 13:07:29 INFO  Job:1367 -  map 33% reduce 0%
2020-09-29 13:07:33 INFO  Job:1367 -  map 67% reduce 0%
2020-09-29 13:07:38 INFO  Job:1367 -  map 100% reduce 0%
2020-09-29 13:07:43 INFO  Job:1367 -  map 100% reduce 100%
2020-09-29 13:07:46 INFO  Job:1378 - Job job_1601384649694_0003 completed successfully
2020-09-29 13:07:46 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=613533
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41820
		Total time spent by all reduces in occupied slots (ms)=15352
		Total time spent by all map tasks (ms)=10455
		Total time spent by all reduce tasks (ms)=3838
		Total vcore-milliseconds taken by all map tasks=10455
		Total vcore-milliseconds taken by all reduce tasks=3838
		Total megabyte-milliseconds taken by all map tasks=42823680
		Total megabyte-milliseconds taken by all reduce tasks=15720448
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=582
		CPU time spent (ms)=7130
		Physical memory (bytes) snapshot=1122537472
		Virtual memory (bytes) snapshot=16045273088
		Total committed heap usage (bytes)=1053294592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.919 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200929 13:07:47.295" starttime="20200929 13:07:47.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:07:47.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:07:47.296" starttime="20200929 13:07:47.295"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:47.296" starttime="20200929 13:07:08.413"></status>
</kw>
<msg timestamp="20200929 13:07:47.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:07:47.297" starttime="20200929 13:07:08.413"></status>
</kw>
<msg timestamp="20200929 13:07:47.297" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:07:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:07:10 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200929 13:07:47.297" starttime="20200929 13:07:08.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:07:47.298" starttime="20200929 13:07:47.297"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:07:47.298" critical="yes" starttime="20200929 13:07:08.390"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:07:47.304" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:07:47.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:07:47.312" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:07:47.312" starttime="20200929 13:07:47.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:07:47.313" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:07:47.313" starttime="20200929 13:07:47.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:07:47.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:07:47.314" starttime="20200929 13:07:47.313"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:47.314" starttime="20200929 13:07:47.301"></status>
</kw>
<msg timestamp="20200929 13:07:47.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:07:47.314" starttime="20200929 13:07:47.301"></status>
</kw>
<msg timestamp="20200929 13:07:47.314" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:07:47.314" starttime="20200929 13:07:47.300"></status>
</kw>
<msg timestamp="20200929 13:07:47.315" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:07:47.315" starttime="20200929 13:07:47.300"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:07:47.315" level="INFO">${random} = 98</msg>
<status status="PASS" endtime="20200929 13:07:47.315" starttime="20200929 13:07:47.315"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:07:47.319" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:07:47.320" starttime="20200929 13:07:47.319"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:07:47.320" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:07:47.320" starttime="20200929 13:07:47.320"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:47.320" starttime="20200929 13:07:47.318"></status>
</kw>
<msg timestamp="20200929 13:07:47.321" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:07:47.321" starttime="20200929 13:07:47.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:07:47.322" starttime="20200929 13:07:47.321"></status>
</kw>
<msg timestamp="20200929 13:07:47.322" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:07:47.322" starttime="20200929 13:07:47.321"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:47.322" starttime="20200929 13:07:47.317"></status>
</kw>
<msg timestamp="20200929 13:07:47.322" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:07:47.322" starttime="20200929 13:07:47.316"></status>
</kw>
<msg timestamp="20200929 13:07:47.322" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:07:47.322" starttime="20200929 13:07:47.316"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:07:47.326" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:07:47.326" starttime="20200929 13:07:47.325"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:07:47.326" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:07:47.326" starttime="20200929 13:07:47.326"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:47.327" starttime="20200929 13:07:47.325"></status>
</kw>
<msg timestamp="20200929 13:07:47.327" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:07:47.327" starttime="20200929 13:07:47.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:07:47.328" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200929 13:07:47.328" starttime="20200929 13:07:47.328"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:07:47.329" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200929 13:07:47.329" starttime="20200929 13:07:47.329"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:47.329" starttime="20200929 13:07:47.327"></status>
</kw>
<msg timestamp="20200929 13:07:47.329" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200929 13:07:47.329" starttime="20200929 13:07:47.327"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:47.330" starttime="20200929 13:07:47.324"></status>
</kw>
<msg timestamp="20200929 13:07:47.330" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200929 13:07:47.330" starttime="20200929 13:07:47.323"></status>
</kw>
<msg timestamp="20200929 13:07:47.330" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200929 13:07:47.330" starttime="20200929 13:07:47.323"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:07:47.334" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:07:47.334" starttime="20200929 13:07:47.333"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:07:47.334" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:07:47.334" starttime="20200929 13:07:47.334"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:47.335" starttime="20200929 13:07:47.333"></status>
</kw>
<msg timestamp="20200929 13:07:47.335" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:07:47.335" starttime="20200929 13:07:47.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:07:47.336" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200929 13:07:47.336" starttime="20200929 13:07:47.336"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:07:47.337" level="INFO">${result} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20200929 13:07:47.337" starttime="20200929 13:07:47.336"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:47.337" starttime="20200929 13:07:47.335"></status>
</kw>
<msg timestamp="20200929 13:07:47.337" level="INFO">${path_with_leading} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20200929 13:07:47.337" starttime="20200929 13:07:47.335"></status>
</kw>
<status status="PASS" endtime="20200929 13:07:47.337" starttime="20200929 13:07:47.331"></status>
</kw>
<msg timestamp="20200929 13:07:47.338" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20200929 13:07:47.338" starttime="20200929 13:07:47.331"></status>
</kw>
<msg timestamp="20200929 13:07:47.338" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20200929 13:07:47.338" starttime="20200929 13:07:47.330"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:07:47.342" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-98.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:08:24.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:08:24.245" level="INFO">${output} = 2020-09-29 13:07:49 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-29 13:07:49 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200929 13:08:24.245" starttime="20200929 13:07:47.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:08:24.246" level="INFO">2020-09-29 13:07:49 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-29 13:07:49 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:07:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:07:49 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-29 13:07:49 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-29 13:07:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:07:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2B30F6DFF471-&gt;cab4a146-29e1-403c-b5ac-3b9fce07fb31
2020-09-29 13:07:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-29 13:07:50 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-29 13:07:50 INFO  JobSubmitter:198 - number of splits:3
2020-09-29 13:07:51 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601384649694_0004
2020-09-29 13:07:51 INFO  YarnClientImpl:273 - Submitted application application_1601384649694_0004
2020-09-29 13:07:51 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601384649694_0004/
2020-09-29 13:07:51 INFO  Job:1339 - Running job: job_1601384649694_0004
2020-09-29 13:07:59 INFO  Job:1360 - Job job_1601384649694_0004 running in uber mode : false
2020-09-29 13:07:59 INFO  Job:1367 -  map 0% reduce 0%
2020-09-29 13:08:06 INFO  Job:1367 -  map 33% reduce 0%
2020-09-29 13:08:10 INFO  Job:1367 -  map 67% reduce 0%
2020-09-29 13:08:15 INFO  Job:1367 -  map 100% reduce 0%
2020-09-29 13:08:20 INFO  Job:1367 -  map 100% reduce 100%
2020-09-29 13:08:23 INFO  Job:1378 - Job job_1601384649694_0004 completed successfully
2020-09-29 13:08:23 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676285
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41448
		Total time spent by all reduces in occupied slots (ms)=15424
		Total time spent by all map tasks (ms)=10362
		Total time spent by all reduce tasks (ms)=3856
		Total vcore-milliseconds taken by all map tasks=10362
		Total vcore-milliseconds taken by all reduce tasks=3856
		Total megabyte-milliseconds taken by all map tasks=42442752
		Total megabyte-milliseconds taken by all reduce tasks=15794176
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=555
		CPU time spent (ms)=7620
		Physical memory (bytes) snapshot=1128259584
		Virtual memory (bytes) snapshot=16055963648
		Total committed heap usage (bytes)=1052246016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200929 13:08:24.247" starttime="20200929 13:08:24.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:08:24.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:08:24.248" starttime="20200929 13:08:24.247"></status>
</kw>
<status status="PASS" endtime="20200929 13:08:24.248" starttime="20200929 13:07:47.339"></status>
</kw>
<msg timestamp="20200929 13:08:24.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:08:24.249" starttime="20200929 13:07:47.339"></status>
</kw>
<msg timestamp="20200929 13:08:24.249" level="INFO">${output} = 2020-09-29 13:07:49 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-29 13:07:49 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200929 13:08:24.249" starttime="20200929 13:07:47.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200929 13:08:24.251" starttime="20200929 13:08:24.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:08:24.251" starttime="20200929 13:08:24.251"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:08:24.252" critical="yes" starttime="20200929 13:07:47.299"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200929 13:08:24.254" starttime="20200929 13:07:08.328"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:05:32.119" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:05:32.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:05:32.126" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:05:32.126" starttime="20200929 13:05:32.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:05:32.127" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:05:32.127" starttime="20200929 13:05:32.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:05:32.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:05:32.128" starttime="20200929 13:05:32.127"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:32.128" starttime="20200929 13:05:32.112"></status>
</kw>
<msg timestamp="20200929 13:05:32.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:05:32.128" starttime="20200929 13:05:32.112"></status>
</kw>
<msg timestamp="20200929 13:05:32.129" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:05:32.129" starttime="20200929 13:05:32.111"></status>
</kw>
<msg timestamp="20200929 13:05:32.129" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:05:32.129" starttime="20200929 13:05:32.111"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:05:32.133" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:05:32.133" starttime="20200929 13:05:32.132"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:05:32.133" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:05:32.134" starttime="20200929 13:05:32.133"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:32.134" starttime="20200929 13:05:32.132"></status>
</kw>
<msg timestamp="20200929 13:05:32.134" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:05:32.134" starttime="20200929 13:05:32.131"></status>
</kw>
<status status="PASS" endtime="20200929 13:05:32.134" starttime="20200929 13:05:32.131"></status>
</kw>
<msg timestamp="20200929 13:05:32.134" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:05:32.134" starttime="20200929 13:05:32.130"></status>
</kw>
<msg timestamp="20200929 13:05:32.134" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:05:32.134" starttime="20200929 13:05:32.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:05:32.138" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:06:12.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:06:12.865" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:05:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:05:34 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200929 13:06:12.866" starttime="20200929 13:05:32.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:06:12.867" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:05:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:05:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-29 13:05:34 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-29 13:05:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:05:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8EB2A61E6D3A-&gt;cab4a146-29e1-403c-b5ac-3b9fce07fb31
2020-09-29 13:05:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-29 13:05:35 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-29 13:05:36 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-29 13:05:36 INFO  JobSubmitter:198 - number of splits:3
2020-09-29 13:05:36 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601384649694_0001
2020-09-29 13:05:36 INFO  YarnClientImpl:273 - Submitted application application_1601384649694_0001
2020-09-29 13:05:36 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601384649694_0001/
2020-09-29 13:05:36 INFO  Job:1339 - Running job: job_1601384649694_0001
2020-09-29 13:05:47 INFO  Job:1360 - Job job_1601384649694_0001 running in uber mode : false
2020-09-29 13:05:47 INFO  Job:1367 -  map 0% reduce 0%
2020-09-29 13:05:55 INFO  Job:1367 -  map 33% reduce 0%
2020-09-29 13:05:59 INFO  Job:1367 -  map 67% reduce 0%
2020-09-29 13:06:04 INFO  Job:1367 -  map 100% reduce 0%
2020-09-29 13:06:08 INFO  Job:1367 -  map 100% reduce 100%
2020-09-29 13:06:12 INFO  Job:1378 - Job job_1601384649694_0001 completed successfully
2020-09-29 13:06:12 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=613737
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41936
		Total time spent by all reduces in occupied slots (ms)=15304
		Total time spent by all map tasks (ms)=10484
		Total time spent by all reduce tasks (ms)=3826
		Total vcore-milliseconds taken by all map tasks=10484
		Total vcore-milliseconds taken by all reduce tasks=3826
		Total megabyte-milliseconds taken by all map tasks=42942464
		Total megabyte-milliseconds taken by all reduce tasks=15671296
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=580
		CPU time spent (ms)=6630
		Physical memory (bytes) snapshot=1065091072
		Virtual memory (bytes) snapshot=16022241280
		Total committed heap usage (bytes)=924319744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.757 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200929 13:06:12.867" starttime="20200929 13:06:12.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:06:12.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:06:12.868" starttime="20200929 13:06:12.867"></status>
</kw>
<status status="PASS" endtime="20200929 13:06:12.868" starttime="20200929 13:05:32.135"></status>
</kw>
<msg timestamp="20200929 13:06:12.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:06:12.868" starttime="20200929 13:05:32.135"></status>
</kw>
<msg timestamp="20200929 13:06:12.869" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:05:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:05:34 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200929 13:06:12.869" starttime="20200929 13:05:32.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:06:12.870" starttime="20200929 13:06:12.869"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:06:12.870" critical="yes" starttime="20200929 13:05:32.110"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:06:12.876" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:06:12.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:06:12.882" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:06:12.882" starttime="20200929 13:06:12.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:06:12.883" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:06:12.883" starttime="20200929 13:06:12.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:06:12.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:06:12.884" starttime="20200929 13:06:12.883"></status>
</kw>
<status status="PASS" endtime="20200929 13:06:12.884" starttime="20200929 13:06:12.872"></status>
</kw>
<msg timestamp="20200929 13:06:12.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:06:12.885" starttime="20200929 13:06:12.872"></status>
</kw>
<msg timestamp="20200929 13:06:12.885" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:06:12.885" starttime="20200929 13:06:12.871"></status>
</kw>
<msg timestamp="20200929 13:06:12.885" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200929 13:06:12.885" starttime="20200929 13:06:12.871"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:06:12.886" level="INFO">${random} = 75</msg>
<status status="PASS" endtime="20200929 13:06:12.886" starttime="20200929 13:06:12.885"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:06:12.890" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:06:12.890" starttime="20200929 13:06:12.889"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:06:12.891" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:06:12.891" starttime="20200929 13:06:12.890"></status>
</kw>
<status status="PASS" endtime="20200929 13:06:12.891" starttime="20200929 13:06:12.889"></status>
</kw>
<msg timestamp="20200929 13:06:12.891" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:06:12.891" starttime="20200929 13:06:12.888"></status>
</kw>
<status status="PASS" endtime="20200929 13:06:12.891" starttime="20200929 13:06:12.887"></status>
</kw>
<msg timestamp="20200929 13:06:12.891" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:06:12.891" starttime="20200929 13:06:12.887"></status>
</kw>
<msg timestamp="20200929 13:06:12.891" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:06:12.892" starttime="20200929 13:06:12.886"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:06:12.895" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:06:12.895" starttime="20200929 13:06:12.894"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:06:12.895" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:06:12.895" starttime="20200929 13:06:12.895"></status>
</kw>
<status status="PASS" endtime="20200929 13:06:12.896" starttime="20200929 13:06:12.894"></status>
</kw>
<msg timestamp="20200929 13:06:12.896" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:06:12.896" starttime="20200929 13:06:12.893"></status>
</kw>
<status status="PASS" endtime="20200929 13:06:12.896" starttime="20200929 13:06:12.893"></status>
</kw>
<msg timestamp="20200929 13:06:12.896" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200929 13:06:12.896" starttime="20200929 13:06:12.892"></status>
</kw>
<msg timestamp="20200929 13:06:12.897" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200929 13:06:12.897" starttime="20200929 13:06:12.892"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:06:12.900" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:06:12.900" starttime="20200929 13:06:12.900"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:06:12.901" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:06:12.901" starttime="20200929 13:06:12.900"></status>
</kw>
<status status="PASS" endtime="20200929 13:06:12.901" starttime="20200929 13:06:12.899"></status>
</kw>
<msg timestamp="20200929 13:06:12.901" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:06:12.901" starttime="20200929 13:06:12.899"></status>
</kw>
<status status="PASS" endtime="20200929 13:06:12.901" starttime="20200929 13:06:12.898"></status>
</kw>
<msg timestamp="20200929 13:06:12.901" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-75.txt</msg>
<status status="PASS" endtime="20200929 13:06:12.901" starttime="20200929 13:06:12.897"></status>
</kw>
<msg timestamp="20200929 13:06:12.902" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-75.txt</msg>
<status status="PASS" endtime="20200929 13:06:12.902" starttime="20200929 13:06:12.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:06:12.906" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-75.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:06:52.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:06:52.644" level="INFO">${output} = 2020-09-29 13:06:14 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-29 13:06:15 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200929 13:06:52.644" starttime="20200929 13:06:12.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:06:52.645" level="INFO">2020-09-29 13:06:14 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-29 13:06:15 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:06:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:06:15 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-29 13:06:15 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-29 13:06:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:06:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C427C67AEC51-&gt;cab4a146-29e1-403c-b5ac-3b9fce07fb31
2020-09-29 13:06:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-29 13:06:16 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-29 13:06:19 INFO  JobSubmitter:198 - number of splits:3
2020-09-29 13:06:19 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601384649694_0002
2020-09-29 13:06:19 INFO  YarnClientImpl:273 - Submitted application application_1601384649694_0002
2020-09-29 13:06:19 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601384649694_0002/
2020-09-29 13:06:19 INFO  Job:1339 - Running job: job_1601384649694_0002
2020-09-29 13:06:26 INFO  Job:1360 - Job job_1601384649694_0002 running in uber mode : false
2020-09-29 13:06:26 INFO  Job:1367 -  map 0% reduce 0%
2020-09-29 13:06:34 INFO  Job:1367 -  map 33% reduce 0%
2020-09-29 13:06:40 INFO  Job:1367 -  map 67% reduce 0%
2020-09-29 13:06:45 INFO  Job:1367 -  map 100% reduce 0%
2020-09-29 13:06:49 INFO  Job:1367 -  map 100% reduce 100%
2020-09-29 13:06:52 INFO  Job:1378 - Job job_1601384649694_0002 completed successfully
2020-09-29 13:06:52 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676369
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44260
		Total time spent by all reduces in occupied slots (ms)=15068
		Total time spent by all map tasks (ms)=11065
		Total time spent by all reduce tasks (ms)=3767
		Total vcore-milliseconds taken by all map tasks=11065
		Total vcore-milliseconds taken by all reduce tasks=3767
		Total megabyte-milliseconds taken by all map tasks=45322240
		Total megabyte-milliseconds taken by all reduce tasks=15429632
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=629
		CPU time spent (ms)=7650
		Physical memory (bytes) snapshot=1141927936
		Virtual memory (bytes) snapshot=16071864320
		Total committed heap usage (bytes)=1049624576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200929 13:06:52.645" starttime="20200929 13:06:52.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:06:52.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:06:52.646" starttime="20200929 13:06:52.646"></status>
</kw>
<status status="PASS" endtime="20200929 13:06:52.647" starttime="20200929 13:06:12.903"></status>
</kw>
<msg timestamp="20200929 13:06:52.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:06:52.647" starttime="20200929 13:06:12.902"></status>
</kw>
<msg timestamp="20200929 13:06:52.647" level="INFO">${output} = 2020-09-29 13:06:14 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-29 13:06:15 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200929 13:06:52.647" starttime="20200929 13:06:12.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200929 13:06:52.648" starttime="20200929 13:06:52.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:06:52.648" starttime="20200929 13:06:52.648"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:06:52.649" critical="yes" starttime="20200929 13:06:12.870"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200929 13:06:52.650" starttime="20200929 13:05:32.042"></status>
</suite>
<status status="PASS" elapsedtime="198450" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:09:33.621" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:09:36.129" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 13:09:36.129" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200929 13:09:36.129" starttime="20200929 13:09:33.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:09:36.131" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200929 13:09:36.131" starttime="20200929 13:09:36.130"></status>
</kw>
<msg timestamp="20200929 13:09:36.131" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200929 13:09:36.131" starttime="20200929 13:09:33.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:09:36.138" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:09:38.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:09:38.346" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:09:38.346" starttime="20200929 13:09:36.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:09:38.347" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:09:38.347" starttime="20200929 13:09:38.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:09:38.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:09:38.348" starttime="20200929 13:09:38.348"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:38.348" starttime="20200929 13:09:36.133"></status>
</kw>
<msg timestamp="20200929 13:09:38.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:09:38.349" starttime="20200929 13:09:36.133"></status>
</kw>
<msg timestamp="20200929 13:09:38.349" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200929 13:09:38.349" starttime="20200929 13:09:36.132"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200929 13:09:38.350" starttime="20200929 13:09:38.349"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:38.350" starttime="20200929 13:09:36.132"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:38.350" starttime="20200929 13:09:36.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:09:38.355" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:09:40.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:09:40.574" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:09:40.574" starttime="20200929 13:09:38.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:09:40.576" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:09:40.576" starttime="20200929 13:09:40.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:09:40.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:09:40.576" starttime="20200929 13:09:40.576"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:40.577" starttime="20200929 13:09:38.352"></status>
</kw>
<msg timestamp="20200929 13:09:40.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:09:40.577" starttime="20200929 13:09:38.352"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:40.577" starttime="20200929 13:09:38.352"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:40.577" starttime="20200929 13:09:38.351"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:40.578" starttime="20200929 13:09:38.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200929 13:09:40.578" starttime="20200929 13:09:40.578"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:09:40.583" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:09:42.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:09:42.871" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T13:09:40.444Z",
  "modificat...</msg>
<status status="PASS" endtime="20200929 13:09:42.871" starttime="20200929 13:09:40.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:09:42.872" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T13:09:40.444Z",
  "modificationTime" : "2020-09-29T13:09:40.444Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200929 13:09:42.872" starttime="20200929 13:09:42.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:09:42.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:09:42.873" starttime="20200929 13:09:42.872"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:42.873" starttime="20200929 13:09:40.579"></status>
</kw>
<msg timestamp="20200929 13:09:42.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:09:42.874" starttime="20200929 13:09:40.579"></status>
</kw>
<msg timestamp="20200929 13:09:42.874" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T13:09:40.444Z",
  "modificat...</msg>
<status status="PASS" endtime="20200929 13:09:42.874" starttime="20200929 13:09:40.578"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200929 13:09:42.875" starttime="20200929 13:09:42.874"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:09:42.879" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:09:42.879" starttime="20200929 13:09:42.878"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:09:42.880" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:09:42.880" starttime="20200929 13:09:42.879"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:42.880" starttime="20200929 13:09:42.878"></status>
</kw>
<msg timestamp="20200929 13:09:42.880" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:09:42.880" starttime="20200929 13:09:42.877"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:42.880" starttime="20200929 13:09:42.876"></status>
</kw>
<msg timestamp="20200929 13:09:42.880" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200929 13:09:42.881" starttime="20200929 13:09:42.876"></status>
</kw>
<msg timestamp="20200929 13:09:42.881" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200929 13:09:42.881" starttime="20200929 13:09:42.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:09:42.886" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:09:45.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:09:45.187" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:09:45.187" starttime="20200929 13:09:42.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:09:45.188" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:09:45.188" starttime="20200929 13:09:45.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:09:45.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:09:45.189" starttime="20200929 13:09:45.188"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:45.189" starttime="20200929 13:09:42.882"></status>
</kw>
<msg timestamp="20200929 13:09:45.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:09:45.189" starttime="20200929 13:09:42.881"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:45.190" starttime="20200929 13:09:42.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:09:45.195" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:09:52.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:09:52.790" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:09:52.790" starttime="20200929 13:09:45.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:09:52.791" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:09:52.791" starttime="20200929 13:09:52.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:09:52.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:09:52.792" starttime="20200929 13:09:52.791"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:52.792" starttime="20200929 13:09:45.191"></status>
</kw>
<msg timestamp="20200929 13:09:52.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:09:52.792" starttime="20200929 13:09:45.191"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:52.793" starttime="20200929 13:09:45.190"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:09:52.798" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:09:56.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:09:56.811" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:09:56.811" starttime="20200929 13:09:52.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:09:56.812" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:09:56.812" starttime="20200929 13:09:56.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:09:56.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:09:56.813" starttime="20200929 13:09:56.812"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:56.813" starttime="20200929 13:09:52.794"></status>
</kw>
<msg timestamp="20200929 13:09:56.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:09:56.813" starttime="20200929 13:09:52.794"></status>
</kw>
<status status="PASS" endtime="20200929 13:09:56.814" starttime="20200929 13:09:52.793"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:09:56.818" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:10:01.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:10:01.083" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:10:01.083" starttime="20200929 13:09:56.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:10:01.085" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:10:01.085" starttime="20200929 13:10:01.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:10:01.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:10:01.086" starttime="20200929 13:10:01.085"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:01.086" starttime="20200929 13:09:56.815"></status>
</kw>
<msg timestamp="20200929 13:10:01.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:10:01.086" starttime="20200929 13:09:56.815"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:01.087" starttime="20200929 13:09:56.814"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 13:10:01.087" critical="yes" starttime="20200929 13:09:33.613"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:10:01.093" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:10:01.093" starttime="20200929 13:10:01.092"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:10:01.093" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:10:01.093" starttime="20200929 13:10:01.093"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:01.094" starttime="20200929 13:10:01.091"></status>
</kw>
<msg timestamp="20200929 13:10:01.094" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:10:01.094" starttime="20200929 13:10:01.091"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:01.094" starttime="20200929 13:10:01.090"></status>
</kw>
<msg timestamp="20200929 13:10:01.094" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200929 13:10:01.094" starttime="20200929 13:10:01.089"></status>
</kw>
<msg timestamp="20200929 13:10:01.095" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200929 13:10:01.095" starttime="20200929 13:10:01.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:10:01.100" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:10:03.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:10:03.370" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:10:03.370" starttime="20200929 13:10:01.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:10:03.371" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:10:03.371" starttime="20200929 13:10:03.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:10:03.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:10:03.372" starttime="20200929 13:10:03.371"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:03.372" starttime="20200929 13:10:01.096"></status>
</kw>
<msg timestamp="20200929 13:10:03.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:10:03.372" starttime="20200929 13:10:01.095"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:03.373" starttime="20200929 13:10:01.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:10:03.376" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:10:05.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:10:05.795" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:10:05.795" starttime="20200929 13:10:03.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:10:05.796" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:10:05.796" starttime="20200929 13:10:05.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:10:05.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:10:05.797" starttime="20200929 13:10:05.797"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:05.798" starttime="20200929 13:10:03.374"></status>
</kw>
<msg timestamp="20200929 13:10:05.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:10:05.798" starttime="20200929 13:10:03.374"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:05.798" starttime="20200929 13:10:03.373"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 13:10:05.798" critical="yes" starttime="20200929 13:10:01.088"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200929 13:10:05.800" starttime="20200929 13:09:33.548"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:11:46.946" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:11:46.946" starttime="20200929 13:11:46.945"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:11:46.947" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:11:46.947" starttime="20200929 13:11:46.946"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:46.947" starttime="20200929 13:11:46.945"></status>
</kw>
<msg timestamp="20200929 13:11:46.947" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:11:46.947" starttime="20200929 13:11:46.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:11:46.948" starttime="20200929 13:11:46.948"></status>
</kw>
<msg timestamp="20200929 13:11:46.948" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:11:46.948" starttime="20200929 13:11:46.947"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:46.948" starttime="20200929 13:11:46.944"></status>
</kw>
<msg timestamp="20200929 13:11:46.948" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:11:46.949" starttime="20200929 13:11:46.943"></status>
</kw>
<msg timestamp="20200929 13:11:46.949" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:11:46.949" starttime="20200929 13:11:46.942"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:11:46.949" level="INFO">${random} = 28288</msg>
<status status="PASS" endtime="20200929 13:11:46.949" starttime="20200929 13:11:46.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:11:46.957" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-28288 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:11:50.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:11:50.691" level="INFO">${output} = 2020-09-29 13:11:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:11:50.691" starttime="20200929 13:11:46.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:11:50.692" level="INFO">2020-09-29 13:11:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:49 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-29 13:11:49 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:11:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:11:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:11:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:11:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-70BE444CD001-&gt;1ad34599-6bdc-42ed-97f6-f74586cee9d7
2020-09-29 13:11:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-29 13:11:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200929 13:11:50.692" starttime="20200929 13:11:50.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:11:50.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:11:50.693" starttime="20200929 13:11:50.693"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:50.693" starttime="20200929 13:11:46.950"></status>
</kw>
<msg timestamp="20200929 13:11:50.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:11:50.694" starttime="20200929 13:11:46.950"></status>
</kw>
<msg timestamp="20200929 13:11:50.694" level="INFO">${result} = 2020-09-29 13:11:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:11:50.694" starttime="20200929 13:11:46.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:11:50.699" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:11:52.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:11:52.684" level="INFO">${output} = 2020-09-29 13:11:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:11:52.684" starttime="20200929 13:11:50.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:11:52.685" level="INFO">2020-09-29 13:11:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:52 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-29 13:10 ofs://om/volume1/bucket1/ozone-03409
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-29 13:11 ofs://om/volume1/bucket1/ozone-28288
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:10 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:11 ofs://om/volume1/bucket1/wordcount-48.txt
2020-09-29 13:11:52 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200929 13:11:52.686" starttime="20200929 13:11:52.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:11:52.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:11:52.686" starttime="20200929 13:11:52.686"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:52.687" starttime="20200929 13:11:50.695"></status>
</kw>
<msg timestamp="20200929 13:11:52.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:11:52.687" starttime="20200929 13:11:50.695"></status>
</kw>
<msg timestamp="20200929 13:11:52.687" level="INFO">${result} = 2020-09-29 13:11:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:11:52.687" starttime="20200929 13:11:50.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:11:52.690" starttime="20200929 13:11:52.687"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 13:11:52.691" critical="yes" starttime="20200929 13:11:46.941"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200929 13:11:52.693" starttime="20200929 13:11:46.883"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:10:10.752" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:10:10.752" starttime="20200929 13:10:10.752"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:10:10.753" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:10:10.753" starttime="20200929 13:10:10.752"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:10.753" starttime="20200929 13:10:10.751"></status>
</kw>
<msg timestamp="20200929 13:10:10.753" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:10:10.753" starttime="20200929 13:10:10.751"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:10.754" starttime="20200929 13:10:10.750"></status>
</kw>
<msg timestamp="20200929 13:10:10.754" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:10:10.754" starttime="20200929 13:10:10.750"></status>
</kw>
<msg timestamp="20200929 13:10:10.754" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:10:10.754" starttime="20200929 13:10:10.748"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:10:10.754" level="INFO">${random} = 03409</msg>
<status status="PASS" endtime="20200929 13:10:10.754" starttime="20200929 13:10:10.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:10:10.760" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-03409 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:10:14.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:10:14.388" level="INFO">${output} = 2020-09-29 13:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:10:14.388" starttime="20200929 13:10:10.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:10:14.389" level="INFO">2020-09-29 13:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:12 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-29 13:10:12 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:10:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:10:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:10:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:10:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C9B7F935F325-&gt;1ad34599-6bdc-42ed-97f6-f74586cee9d7
2020-09-29 13:10:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-29 13:10:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200929 13:10:14.389" starttime="20200929 13:10:14.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:10:14.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:10:14.390" starttime="20200929 13:10:14.389"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:14.390" starttime="20200929 13:10:10.755"></status>
</kw>
<msg timestamp="20200929 13:10:14.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:10:14.390" starttime="20200929 13:10:10.755"></status>
</kw>
<msg timestamp="20200929 13:10:14.390" level="INFO">${result} = 2020-09-29 13:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:10:14.390" starttime="20200929 13:10:10.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:10:14.394" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:10:16.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:10:16.225" level="INFO">${output} = 2020-09-29 13:10:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:10:16.225" starttime="20200929 13:10:14.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:10:16.226" level="INFO">2020-09-29 13:10:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:16 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-29 13:10 o3fs://bucket1.volume1.om/ozone-03409
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:10 o3fs://bucket1.volume1.om/user
2020-09-29 13:10:16 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200929 13:10:16.226" starttime="20200929 13:10:16.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:10:16.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:10:16.227" starttime="20200929 13:10:16.226"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:16.227" starttime="20200929 13:10:14.391"></status>
</kw>
<msg timestamp="20200929 13:10:16.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:10:16.227" starttime="20200929 13:10:14.391"></status>
</kw>
<msg timestamp="20200929 13:10:16.228" level="INFO">${result} = 2020-09-29 13:10:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:10:16.228" starttime="20200929 13:10:14.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:10:16.228" starttime="20200929 13:10:16.228"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 13:10:16.228" critical="yes" starttime="20200929 13:10:10.748"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200929 13:10:16.229" starttime="20200929 13:10:10.682"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:11:57.728" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:11:57.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:11:57.733" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:11:57.733" starttime="20200929 13:11:57.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:11:57.734" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:11:57.734" starttime="20200929 13:11:57.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:11:57.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:11:57.735" starttime="20200929 13:11:57.734"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:57.735" starttime="20200929 13:11:57.723"></status>
</kw>
<msg timestamp="20200929 13:11:57.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:11:57.735" starttime="20200929 13:11:57.723"></status>
</kw>
<msg timestamp="20200929 13:11:57.736" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:11:57.736" starttime="20200929 13:11:57.722"></status>
</kw>
<msg timestamp="20200929 13:11:57.736" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:11:57.736" starttime="20200929 13:11:57.722"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:11:57.739" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:11:57.739" starttime="20200929 13:11:57.739"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:11:57.740" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:11:57.740" starttime="20200929 13:11:57.740"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:57.740" starttime="20200929 13:11:57.738"></status>
</kw>
<msg timestamp="20200929 13:11:57.740" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:11:57.741" starttime="20200929 13:11:57.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:11:57.742" starttime="20200929 13:11:57.741"></status>
</kw>
<msg timestamp="20200929 13:11:57.742" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:11:57.742" starttime="20200929 13:11:57.741"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:57.742" starttime="20200929 13:11:57.737"></status>
</kw>
<msg timestamp="20200929 13:11:57.742" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:11:57.742" starttime="20200929 13:11:57.737"></status>
</kw>
<msg timestamp="20200929 13:11:57.742" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:11:57.743" starttime="20200929 13:11:57.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:11:57.746" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:12:40.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:12:40.253" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:11:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11...</msg>
<status status="PASS" endtime="20200929 13:12:40.254" starttime="20200929 13:11:57.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:12:40.255" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:11:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:59 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-29 13:11:59 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:11:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:11:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:12:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:12:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9099E6D5896B-&gt;1ad34599-6bdc-42ed-97f6-f74586cee9d7
2020-09-29 13:12:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-29 13:12:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-09-29 13:12:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:12:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:01 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:12:04 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:12:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601384954317_0003
2020-09-29 13:12:04 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-29 13:12:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:05 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:12:05 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-29 13:12:05 INFO  YarnClientImpl:324 - Submitted application application_1601384954317_0003
2020-09-29 13:12:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601384954317_0003/
2020-09-29 13:12:05 INFO  Job:1619 - Running job: job_1601384954317_0003
2020-09-29 13:12:12 INFO  Job:1640 - Job job_1601384954317_0003 running in uber mode : false
2020-09-29 13:12:12 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:12:18 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:12:24 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:12:30 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:12:36 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:12:39 INFO  Job:1658 - Job job_1601384954317_0003 completed successfully
2020-09-29 13:12:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1019437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41800
		Total time spent by all reduces in occupied slots (ms)=16088
		Total time spent by all map tasks (ms)=10450
		Total time spent by all reduce tasks (ms)=4022
		Total vcore-milliseconds taken by all map tasks=10450
		Total vcore-milliseconds taken by all reduce tasks=4022
		Total megabyte-milliseconds taken by all map tasks=42803200
		Total megabyte-milliseconds taken by all reduce tasks=16474112
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=590
		CPU time spent (ms)=6660
		Physical memory (bytes) snapshot=1204248576
		Virtual memory (bytes) snapshot=16040968192
		Total committed heap usage (bytes)=1095237632
		Peak Map Physical memory (bytes)=291217408
		Peak Map Virtual memory (bytes)=4013322240
		Peak Reduce Physical memory (bytes)=375808000
		Peak Reduce Virtual memory (bytes)=4036665344
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.436 seconds
2020-09-29 13:12:39 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-09-29 13:12:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200929 13:12:40.255" starttime="20200929 13:12:40.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:12:40.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:12:40.256" starttime="20200929 13:12:40.255"></status>
</kw>
<status status="PASS" endtime="20200929 13:12:40.256" starttime="20200929 13:11:57.744"></status>
</kw>
<msg timestamp="20200929 13:12:40.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:12:40.256" starttime="20200929 13:11:57.743"></status>
</kw>
<msg timestamp="20200929 13:12:40.257" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:11:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11...</msg>
<status status="PASS" endtime="20200929 13:12:40.257" starttime="20200929 13:11:57.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:12:40.257" starttime="20200929 13:12:40.257"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:12:40.258" critical="yes" starttime="20200929 13:11:57.721"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:12:40.263" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:12:40.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:12:40.268" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:12:40.268" starttime="20200929 13:12:40.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:12:40.269" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:12:40.269" starttime="20200929 13:12:40.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:12:40.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:12:40.270" starttime="20200929 13:12:40.270"></status>
</kw>
<status status="PASS" endtime="20200929 13:12:40.270" starttime="20200929 13:12:40.260"></status>
</kw>
<msg timestamp="20200929 13:12:40.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:12:40.271" starttime="20200929 13:12:40.260"></status>
</kw>
<msg timestamp="20200929 13:12:40.271" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:12:40.271" starttime="20200929 13:12:40.259"></status>
</kw>
<msg timestamp="20200929 13:12:40.271" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:12:40.271" starttime="20200929 13:12:40.259"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:12:40.272" level="INFO">${random} = 31</msg>
<status status="PASS" endtime="20200929 13:12:40.272" starttime="20200929 13:12:40.271"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:12:40.276" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:12:40.276" starttime="20200929 13:12:40.275"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:12:40.276" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:12:40.276" starttime="20200929 13:12:40.276"></status>
</kw>
<status status="PASS" endtime="20200929 13:12:40.277" starttime="20200929 13:12:40.275"></status>
</kw>
<msg timestamp="20200929 13:12:40.277" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:12:40.277" starttime="20200929 13:12:40.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:12:40.278" starttime="20200929 13:12:40.277"></status>
</kw>
<msg timestamp="20200929 13:12:40.278" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:12:40.278" starttime="20200929 13:12:40.277"></status>
</kw>
<status status="PASS" endtime="20200929 13:12:40.278" starttime="20200929 13:12:40.273"></status>
</kw>
<msg timestamp="20200929 13:12:40.278" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:12:40.278" starttime="20200929 13:12:40.273"></status>
</kw>
<msg timestamp="20200929 13:12:40.278" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:12:40.278" starttime="20200929 13:12:40.272"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:12:40.282" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:12:40.282" starttime="20200929 13:12:40.281"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:12:40.283" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:12:40.283" starttime="20200929 13:12:40.282"></status>
</kw>
<status status="PASS" endtime="20200929 13:12:40.283" starttime="20200929 13:12:40.281"></status>
</kw>
<msg timestamp="20200929 13:12:40.283" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:12:40.283" starttime="20200929 13:12:40.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:12:40.285" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200929 13:12:40.285" starttime="20200929 13:12:40.284"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:12:40.285" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200929 13:12:40.285" starttime="20200929 13:12:40.285"></status>
</kw>
<status status="PASS" endtime="20200929 13:12:40.286" starttime="20200929 13:12:40.284"></status>
</kw>
<msg timestamp="20200929 13:12:40.286" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200929 13:12:40.286" starttime="20200929 13:12:40.283"></status>
</kw>
<status status="PASS" endtime="20200929 13:12:40.286" starttime="20200929 13:12:40.280"></status>
</kw>
<msg timestamp="20200929 13:12:40.286" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200929 13:12:40.286" starttime="20200929 13:12:40.279"></status>
</kw>
<msg timestamp="20200929 13:12:40.286" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200929 13:12:40.286" starttime="20200929 13:12:40.279"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:12:40.290" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:12:40.290" starttime="20200929 13:12:40.289"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:12:40.291" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:12:40.291" starttime="20200929 13:12:40.291"></status>
</kw>
<status status="PASS" endtime="20200929 13:12:40.292" starttime="20200929 13:12:40.289"></status>
</kw>
<msg timestamp="20200929 13:12:40.292" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:12:40.292" starttime="20200929 13:12:40.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:12:40.293" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200929 13:12:40.293" starttime="20200929 13:12:40.293"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:12:40.294" level="INFO">${result} = /wordcount-31.txt</msg>
<status status="PASS" endtime="20200929 13:12:40.294" starttime="20200929 13:12:40.293"></status>
</kw>
<status status="PASS" endtime="20200929 13:12:40.294" starttime="20200929 13:12:40.292"></status>
</kw>
<msg timestamp="20200929 13:12:40.294" level="INFO">${path_with_leading} = /wordcount-31.txt</msg>
<status status="PASS" endtime="20200929 13:12:40.294" starttime="20200929 13:12:40.292"></status>
</kw>
<status status="PASS" endtime="20200929 13:12:40.294" starttime="20200929 13:12:40.288"></status>
</kw>
<msg timestamp="20200929 13:12:40.295" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-31.txt</msg>
<status status="PASS" endtime="20200929 13:12:40.295" starttime="20200929 13:12:40.287"></status>
</kw>
<msg timestamp="20200929 13:12:40.295" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-31.txt</msg>
<status status="PASS" endtime="20200929 13:12:40.295" starttime="20200929 13:12:40.287"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:12:40.299" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-31.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:13:15.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:13:15.933" level="INFO">${output} = 2020-09-29 13:12:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:42 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:13:15.933" starttime="20200929 13:12:40.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:13:15.934" level="INFO">2020-09-29 13:12:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-09-29 13:12:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:12:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:42 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-29 13:12:42 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:12:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:12:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:12:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:12:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C0416F9648FC-&gt;1ad34599-6bdc-42ed-97f6-f74586cee9d7
2020-09-29 13:12:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-29 13:12:44 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:12:44 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:12:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601384954317_0004
2020-09-29 13:12:44 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-29 13:12:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:44 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:12:44 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-29 13:12:44 INFO  YarnClientImpl:324 - Submitted application application_1601384954317_0004
2020-09-29 13:12:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601384954317_0004/
2020-09-29 13:12:44 INFO  Job:1619 - Running job: job_1601384954317_0004
2020-09-29 13:12:53 INFO  Job:1640 - Job job_1601384954317_0004 running in uber mode : false
2020-09-29 13:12:53 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:12:59 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:13:04 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:13:10 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:13:15 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:13:15 INFO  Job:1658 - Job job_1601384954317_0004 completed successfully
2020-09-29 13:13:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:13:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082117
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43568
		Total time spent by all reduces in occupied slots (ms)=15956
		Total time spent by all map tasks (ms)=10892
		Total time spent by all reduce tasks (ms)=3989
		Total vcore-milliseconds taken by all map tasks=10892
		Total vcore-milliseconds taken by all reduce tasks=3989
		Total megabyte-milliseconds taken by all map tasks=44613632
		Total megabyte-milliseconds taken by all reduce tasks=16338944
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=622
		CPU time spent (ms)=7540
		Physical memory (bytes) snapshot=1243807744
		Virtual memory (bytes) snapshot=16060239872
		Total committed heap usage (bytes)=1051197440
		Peak Map Physical memory (bytes)=290148352
		Peak Map Virtual memory (bytes)=4011012096
		Peak Reduce Physical memory (bytes)=376586240
		Peak Reduce Virtual memory (bytes)=4031066112
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-09-29 13:13:15 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200929 13:13:15.934" starttime="20200929 13:13:15.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:13:15.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:13:15.935" starttime="20200929 13:13:15.934"></status>
</kw>
<status status="PASS" endtime="20200929 13:13:15.935" starttime="20200929 13:12:40.296"></status>
</kw>
<msg timestamp="20200929 13:13:15.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:13:15.935" starttime="20200929 13:12:40.296"></status>
</kw>
<msg timestamp="20200929 13:13:15.936" level="INFO">${output} = 2020-09-29 13:12:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:12:42 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:13:15.936" starttime="20200929 13:12:40.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200929 13:13:15.937" starttime="20200929 13:13:15.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:13:15.937" starttime="20200929 13:13:15.937"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:13:15.937" critical="yes" starttime="20200929 13:12:40.258"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200929 13:13:15.939" starttime="20200929 13:11:57.659"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:10:21.323" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:10:21.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:10:21.328" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:10:21.329" starttime="20200929 13:10:21.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:10:21.330" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:10:21.330" starttime="20200929 13:10:21.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:10:21.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:10:21.331" starttime="20200929 13:10:21.330"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:21.331" starttime="20200929 13:10:21.319"></status>
</kw>
<msg timestamp="20200929 13:10:21.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:10:21.331" starttime="20200929 13:10:21.318"></status>
</kw>
<msg timestamp="20200929 13:10:21.331" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:10:21.331" starttime="20200929 13:10:21.318"></status>
</kw>
<msg timestamp="20200929 13:10:21.332" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:10:21.332" starttime="20200929 13:10:21.318"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:10:21.336" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:10:21.336" starttime="20200929 13:10:21.335"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:10:21.337" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:10:21.337" starttime="20200929 13:10:21.336"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:21.337" starttime="20200929 13:10:21.335"></status>
</kw>
<msg timestamp="20200929 13:10:21.337" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:10:21.337" starttime="20200929 13:10:21.334"></status>
</kw>
<status status="PASS" endtime="20200929 13:10:21.337" starttime="20200929 13:10:21.333"></status>
</kw>
<msg timestamp="20200929 13:10:21.338" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:10:21.338" starttime="20200929 13:10:21.333"></status>
</kw>
<msg timestamp="20200929 13:10:21.338" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:10:21.338" starttime="20200929 13:10:21.332"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:10:21.341" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:11:05.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:11:05.180" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:10:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10...</msg>
<status status="PASS" endtime="20200929 13:11:05.180" starttime="20200929 13:10:21.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:11:05.181" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:10:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:23 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-29 13:10:23 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:10:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:10:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:10:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:10:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E01A2254099D-&gt;1ad34599-6bdc-42ed-97f6-f74586cee9d7
2020-09-29 13:10:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-29 13:10:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:27 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-09-29 13:10:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:28 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:10:28 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:10:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601384954317_0001
2020-09-29 13:10:28 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-29 13:10:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:28 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:10:28 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-29 13:10:28 INFO  YarnClientImpl:324 - Submitted application application_1601384954317_0001
2020-09-29 13:10:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601384954317_0001/
2020-09-29 13:10:29 INFO  Job:1619 - Running job: job_1601384954317_0001
2020-09-29 13:10:39 INFO  Job:1640 - Job job_1601384954317_0001 running in uber mode : false
2020-09-29 13:10:39 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:10:46 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:10:52 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:10:58 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:11:03 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:11:04 INFO  Job:1658 - Job job_1601384954317_0001 completed successfully
2020-09-29 13:11:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:04 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1019649
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43356
		Total time spent by all reduces in occupied slots (ms)=16704
		Total time spent by all map tasks (ms)=10839
		Total time spent by all reduce tasks (ms)=4176
		Total vcore-milliseconds taken by all map tasks=10839
		Total vcore-milliseconds taken by all reduce tasks=4176
		Total megabyte-milliseconds taken by all map tasks=44396544
		Total megabyte-milliseconds taken by all reduce tasks=17104896
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=622
		CPU time spent (ms)=7570
		Physical memory (bytes) snapshot=1244024832
		Virtual memory (bytes) snapshot=16069345280
		Total committed heap usage (bytes)=1086324736
		Peak Map Physical memory (bytes)=290455552
		Peak Map Virtual memory (bytes)=4014723072
		Peak Reduce Physical memory (bytes)=375537664
		Peak Reduce Virtual memory (bytes)=4033204224
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.305 seconds
2020-09-29 13:11:04 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-09-29 13:11:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200929 13:11:05.182" starttime="20200929 13:11:05.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:11:05.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:11:05.182" starttime="20200929 13:11:05.182"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:05.183" starttime="20200929 13:10:21.339"></status>
</kw>
<msg timestamp="20200929 13:11:05.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:11:05.183" starttime="20200929 13:10:21.339"></status>
</kw>
<msg timestamp="20200929 13:11:05.184" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:10:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:10...</msg>
<status status="PASS" endtime="20200929 13:11:05.184" starttime="20200929 13:10:21.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:11:05.184" starttime="20200929 13:11:05.184"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:11:05.185" critical="yes" starttime="20200929 13:10:21.317"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:11:05.190" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:11:05.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:11:05.198" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:11:05.198" starttime="20200929 13:11:05.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:11:05.199" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:11:05.199" starttime="20200929 13:11:05.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:11:05.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:11:05.200" starttime="20200929 13:11:05.199"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:05.200" starttime="20200929 13:11:05.187"></status>
</kw>
<msg timestamp="20200929 13:11:05.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:11:05.200" starttime="20200929 13:11:05.187"></status>
</kw>
<msg timestamp="20200929 13:11:05.201" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:11:05.201" starttime="20200929 13:11:05.186"></status>
</kw>
<msg timestamp="20200929 13:11:05.201" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200929 13:11:05.201" starttime="20200929 13:11:05.186"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:11:05.202" level="INFO">${random} = 48</msg>
<status status="PASS" endtime="20200929 13:11:05.202" starttime="20200929 13:11:05.201"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:11:05.205" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:11:05.205" starttime="20200929 13:11:05.205"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:11:05.206" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:11:05.206" starttime="20200929 13:11:05.206"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:05.206" starttime="20200929 13:11:05.204"></status>
</kw>
<msg timestamp="20200929 13:11:05.206" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:11:05.206" starttime="20200929 13:11:05.204"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:05.207" starttime="20200929 13:11:05.203"></status>
</kw>
<msg timestamp="20200929 13:11:05.207" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:11:05.207" starttime="20200929 13:11:05.202"></status>
</kw>
<msg timestamp="20200929 13:11:05.207" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:11:05.207" starttime="20200929 13:11:05.202"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:11:05.211" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:11:05.211" starttime="20200929 13:11:05.210"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:11:05.212" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:11:05.212" starttime="20200929 13:11:05.211"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:05.212" starttime="20200929 13:11:05.210"></status>
</kw>
<msg timestamp="20200929 13:11:05.212" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:11:05.212" starttime="20200929 13:11:05.209"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:05.212" starttime="20200929 13:11:05.209"></status>
</kw>
<msg timestamp="20200929 13:11:05.212" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200929 13:11:05.213" starttime="20200929 13:11:05.208"></status>
</kw>
<msg timestamp="20200929 13:11:05.213" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200929 13:11:05.213" starttime="20200929 13:11:05.207"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:11:05.216" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:11:05.216" starttime="20200929 13:11:05.216"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:11:05.217" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:11:05.217" starttime="20200929 13:11:05.216"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:05.217" starttime="20200929 13:11:05.215"></status>
</kw>
<msg timestamp="20200929 13:11:05.217" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:11:05.217" starttime="20200929 13:11:05.215"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:05.218" starttime="20200929 13:11:05.214"></status>
</kw>
<msg timestamp="20200929 13:11:05.218" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-48.txt</msg>
<status status="PASS" endtime="20200929 13:11:05.218" starttime="20200929 13:11:05.214"></status>
</kw>
<msg timestamp="20200929 13:11:05.218" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-48.txt</msg>
<status status="PASS" endtime="20200929 13:11:05.218" starttime="20200929 13:11:05.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:11:05.222" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-48.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:11:41.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:11:41.892" level="INFO">${output} = 2020-09-29 13:11:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:11:41.892" starttime="20200929 13:11:05.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:11:41.893" level="INFO">2020-09-29 13:11:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-09-29 13:11:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:11:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:07 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-29 13:11:07 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-29 13:11:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:11:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:11:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:11:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2E4F04CD23BA-&gt;1ad34599-6bdc-42ed-97f6-f74586cee9d7
2020-09-29 13:11:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-29 13:11:09 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:11:09 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:11:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601384954317_0002
2020-09-29 13:11:09 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-29 13:11:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:09 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:11:09 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-29 13:11:10 INFO  YarnClientImpl:324 - Submitted application application_1601384954317_0002
2020-09-29 13:11:10 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601384954317_0002/
2020-09-29 13:11:10 INFO  Job:1619 - Running job: job_1601384954317_0002
2020-09-29 13:11:18 INFO  Job:1640 - Job job_1601384954317_0002 running in uber mode : false
2020-09-29 13:11:18 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:11:25 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:11:31 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:11:36 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:11:40 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:11:41 INFO  Job:1658 - Job job_1601384954317_0002 completed successfully
2020-09-29 13:11:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:41 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082201
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42548
		Total time spent by all reduces in occupied slots (ms)=15892
		Total time spent by all map tasks (ms)=10637
		Total time spent by all reduce tasks (ms)=3973
		Total vcore-milliseconds taken by all map tasks=10637
		Total vcore-milliseconds taken by all reduce tasks=3973
		Total megabyte-milliseconds taken by all map tasks=43569152
		Total megabyte-milliseconds taken by all reduce tasks=16273408
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=562
		CPU time spent (ms)=7380
		Physical memory (bytes) snapshot=1175863296
		Virtual memory (bytes) snapshot=16071790592
		Total committed heap usage (bytes)=1056440320
		Peak Map Physical memory (bytes)=300363776
		Peak Map Virtual memory (bytes)=4015087616
		Peak Reduce Physical memory (bytes)=295092224
		Peak Reduce Virtual memory (bytes)=4033277952
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-09-29 13:11:41 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200929 13:11:41.894" starttime="20200929 13:11:41.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:11:41.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:11:41.894" starttime="20200929 13:11:41.894"></status>
</kw>
<status status="PASS" endtime="20200929 13:11:41.894" starttime="20200929 13:11:05.219"></status>
</kw>
<msg timestamp="20200929 13:11:41.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:11:41.895" starttime="20200929 13:11:05.219"></status>
</kw>
<msg timestamp="20200929 13:11:41.895" level="INFO">${output} = 2020-09-29 13:11:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-29 13:11:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200929 13:11:41.895" starttime="20200929 13:11:05.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200929 13:11:41.896" starttime="20200929 13:11:41.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:11:41.896" starttime="20200929 13:11:41.896"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:11:41.897" critical="yes" starttime="20200929 13:11:05.185"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200929 13:11:41.898" starttime="20200929 13:10:21.259"></status>
</suite>
<status status="PASS" elapsedtime="202528" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:14:35.327" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:14:39.879" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 13:14:39.879" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200929 13:14:39.879" starttime="20200929 13:14:35.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:14:39.880" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200929 13:14:39.881" starttime="20200929 13:14:39.880"></status>
</kw>
<msg timestamp="20200929 13:14:39.881" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200929 13:14:39.881" starttime="20200929 13:14:35.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:14:39.887" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:14:43.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:14:43.208" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:14:43.208" starttime="20200929 13:14:39.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:14:43.209" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:14:43.209" starttime="20200929 13:14:43.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:14:43.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:14:43.210" starttime="20200929 13:14:43.210"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:43.210" starttime="20200929 13:14:39.883"></status>
</kw>
<msg timestamp="20200929 13:14:43.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:14:43.211" starttime="20200929 13:14:39.883"></status>
</kw>
<msg timestamp="20200929 13:14:43.211" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200929 13:14:43.211" starttime="20200929 13:14:39.882"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200929 13:14:43.212" starttime="20200929 13:14:43.211"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:43.212" starttime="20200929 13:14:39.882"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:43.212" starttime="20200929 13:14:39.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:14:43.217" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:14:46.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:14:46.514" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:14:46.514" starttime="20200929 13:14:43.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:14:46.515" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:14:46.515" starttime="20200929 13:14:46.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:14:46.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:14:46.516" starttime="20200929 13:14:46.515"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:46.516" starttime="20200929 13:14:43.214"></status>
</kw>
<msg timestamp="20200929 13:14:46.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:14:46.517" starttime="20200929 13:14:43.214"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:46.517" starttime="20200929 13:14:43.213"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:46.517" starttime="20200929 13:14:43.213"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:46.517" starttime="20200929 13:14:43.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200929 13:14:46.518" starttime="20200929 13:14:46.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:14:46.521" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:14:50.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:14:50.284" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T13:14:46.343Z",
  "modificat...</msg>
<status status="PASS" endtime="20200929 13:14:50.284" starttime="20200929 13:14:46.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:14:50.285" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T13:14:46.343Z",
  "modificationTime" : "2020-09-29T13:14:46.343Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200929 13:14:50.285" starttime="20200929 13:14:50.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:14:50.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:14:50.286" starttime="20200929 13:14:50.285"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:50.286" starttime="20200929 13:14:46.519"></status>
</kw>
<msg timestamp="20200929 13:14:50.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:14:50.286" starttime="20200929 13:14:46.518"></status>
</kw>
<msg timestamp="20200929 13:14:50.286" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T13:14:46.343Z",
  "modificat...</msg>
<status status="PASS" endtime="20200929 13:14:50.287" starttime="20200929 13:14:46.518"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200929 13:14:50.287" starttime="20200929 13:14:50.287"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:14:50.292" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:14:50.293" starttime="20200929 13:14:50.292"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:14:50.293" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:14:50.293" starttime="20200929 13:14:50.293"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:50.294" starttime="20200929 13:14:50.291"></status>
</kw>
<msg timestamp="20200929 13:14:50.294" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:14:50.294" starttime="20200929 13:14:50.291"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:50.294" starttime="20200929 13:14:50.290"></status>
</kw>
<msg timestamp="20200929 13:14:50.294" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200929 13:14:50.294" starttime="20200929 13:14:50.289"></status>
</kw>
<msg timestamp="20200929 13:14:50.294" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200929 13:14:50.295" starttime="20200929 13:14:50.287"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:14:50.298" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:14:53.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:14:53.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:14:53.839" starttime="20200929 13:14:50.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:14:53.840" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:14:53.840" starttime="20200929 13:14:53.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:14:53.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:14:53.841" starttime="20200929 13:14:53.840"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:53.841" starttime="20200929 13:14:50.296"></status>
</kw>
<msg timestamp="20200929 13:14:53.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:14:53.841" starttime="20200929 13:14:50.295"></status>
</kw>
<status status="PASS" endtime="20200929 13:14:53.842" starttime="20200929 13:14:50.295"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:14:53.846" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:15:01.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:15:01.201" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:15:01.201" starttime="20200929 13:14:53.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:15:01.202" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:15:01.202" starttime="20200929 13:15:01.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:15:01.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:15:01.203" starttime="20200929 13:15:01.202"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:01.203" starttime="20200929 13:14:53.843"></status>
</kw>
<msg timestamp="20200929 13:15:01.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:15:01.204" starttime="20200929 13:14:53.843"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:01.204" starttime="20200929 13:14:53.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:15:01.208" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:15:06.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:15:06.658" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:15:06.658" starttime="20200929 13:15:01.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:15:06.659" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:15:06.660" starttime="20200929 13:15:06.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:15:06.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:15:06.660" starttime="20200929 13:15:06.660"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:06.661" starttime="20200929 13:15:01.205"></status>
</kw>
<msg timestamp="20200929 13:15:06.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:15:06.661" starttime="20200929 13:15:01.205"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:06.661" starttime="20200929 13:15:01.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:15:06.665" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:15:12.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:15:12.334" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:15:12.334" starttime="20200929 13:15:06.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:15:12.335" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:15:12.335" starttime="20200929 13:15:12.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:15:12.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:15:12.336" starttime="20200929 13:15:12.335"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:12.336" starttime="20200929 13:15:06.662"></status>
</kw>
<msg timestamp="20200929 13:15:12.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:15:12.336" starttime="20200929 13:15:06.662"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:12.337" starttime="20200929 13:15:06.661"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 13:15:12.337" critical="yes" starttime="20200929 13:14:35.318"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:15:12.344" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:15:12.344" starttime="20200929 13:15:12.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:15:12.344" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:15:12.345" starttime="20200929 13:15:12.344"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:12.345" starttime="20200929 13:15:12.343"></status>
</kw>
<msg timestamp="20200929 13:15:12.345" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:15:12.345" starttime="20200929 13:15:12.342"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:12.345" starttime="20200929 13:15:12.341"></status>
</kw>
<msg timestamp="20200929 13:15:12.346" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200929 13:15:12.346" starttime="20200929 13:15:12.341"></status>
</kw>
<msg timestamp="20200929 13:15:12.346" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200929 13:15:12.346" starttime="20200929 13:15:12.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:15:12.350" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:15:15.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:15:15.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:15:15.597" starttime="20200929 13:15:12.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:15:15.598" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:15:15.598" starttime="20200929 13:15:15.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:15:15.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:15:15.599" starttime="20200929 13:15:15.598"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:15.599" starttime="20200929 13:15:12.347"></status>
</kw>
<msg timestamp="20200929 13:15:15.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:15:15.600" starttime="20200929 13:15:12.347"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:15.600" starttime="20200929 13:15:12.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:15:15.606" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:15:18.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:15:18.954" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:15:18.954" starttime="20200929 13:15:15.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:15:18.955" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:15:18.955" starttime="20200929 13:15:18.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:15:18.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:15:18.956" starttime="20200929 13:15:18.955"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:18.956" starttime="20200929 13:15:15.601"></status>
</kw>
<msg timestamp="20200929 13:15:18.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:15:18.956" starttime="20200929 13:15:15.601"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:18.956" starttime="20200929 13:15:15.600"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 13:15:18.957" critical="yes" starttime="20200929 13:15:12.337"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200929 13:15:18.958" starttime="20200929 13:14:35.242"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:17:02.930" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:17:02.930" starttime="20200929 13:17:02.929"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:17:02.930" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:17:02.930" starttime="20200929 13:17:02.930"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:02.931" starttime="20200929 13:17:02.927"></status>
</kw>
<msg timestamp="20200929 13:17:02.931" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:17:02.931" starttime="20200929 13:17:02.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:17:02.932" starttime="20200929 13:17:02.931"></status>
</kw>
<msg timestamp="20200929 13:17:02.932" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:17:02.932" starttime="20200929 13:17:02.931"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:02.932" starttime="20200929 13:17:02.926"></status>
</kw>
<msg timestamp="20200929 13:17:02.932" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:17:02.933" starttime="20200929 13:17:02.925"></status>
</kw>
<msg timestamp="20200929 13:17:02.933" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:17:02.933" starttime="20200929 13:17:02.924"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:17:02.934" level="INFO">${random} = 74761</msg>
<status status="PASS" endtime="20200929 13:17:02.934" starttime="20200929 13:17:02.933"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:17:02.937" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-74761 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:17:06.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:17:06.660" level="INFO">${output} = 2020-09-29 13:17:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:17:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200929 13:17:06.660" starttime="20200929 13:17:02.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:17:06.661" level="INFO">2020-09-29 13:17:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:17:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:17:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:17:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:17:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F2514EBD56C3-&gt;bb455187-f716-42a1-8873-7e34a109530a
2020-09-29 13:17:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200929 13:17:06.661" starttime="20200929 13:17:06.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:17:06.662" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:17:06.662" starttime="20200929 13:17:06.661"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:06.662" starttime="20200929 13:17:02.935"></status>
</kw>
<msg timestamp="20200929 13:17:06.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:17:06.662" starttime="20200929 13:17:02.934"></status>
</kw>
<msg timestamp="20200929 13:17:06.662" level="INFO">${result} = 2020-09-29 13:17:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:17:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200929 13:17:06.663" starttime="20200929 13:17:02.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:17:06.666" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:17:08.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:17:08.573" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:14 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:15 ofs://om/volume1/bucket1/ozone-49187
-rw-...</msg>
<status status="PASS" endtime="20200929 13:17:08.573" starttime="20200929 13:17:06.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:17:08.576" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:14 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:15 ofs://om/volume1/bucket1/ozone-49187
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:17 ofs://om/volume1/bucket1/ozone-74761
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:15 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:16 ofs://om/volume1/bucket1/wordcount-81.txt</msg>
<status status="PASS" endtime="20200929 13:17:08.576" starttime="20200929 13:17:08.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:17:08.580" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:17:08.581" starttime="20200929 13:17:08.578"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:08.581" starttime="20200929 13:17:06.664"></status>
</kw>
<msg timestamp="20200929 13:17:08.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:17:08.581" starttime="20200929 13:17:06.663"></status>
</kw>
<msg timestamp="20200929 13:17:08.581" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:14 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:15 ofs://om/volume1/bucket1/ozone-49187
-rw-...</msg>
<status status="PASS" endtime="20200929 13:17:08.581" starttime="20200929 13:17:06.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:17:08.582" starttime="20200929 13:17:08.582"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 13:17:08.582" critical="yes" starttime="20200929 13:17:02.924"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200929 13:17:08.583" starttime="20200929 13:17:02.868"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:15:24.147" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:15:24.147" starttime="20200929 13:15:24.145"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:15:24.148" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:15:24.148" starttime="20200929 13:15:24.147"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:24.148" starttime="20200929 13:15:24.145"></status>
</kw>
<msg timestamp="20200929 13:15:24.148" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:15:24.148" starttime="20200929 13:15:24.144"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:24.148" starttime="20200929 13:15:24.144"></status>
</kw>
<msg timestamp="20200929 13:15:24.148" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:15:24.149" starttime="20200929 13:15:24.143"></status>
</kw>
<msg timestamp="20200929 13:15:24.149" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:15:24.149" starttime="20200929 13:15:24.142"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:15:24.149" level="INFO">${random} = 49187</msg>
<status status="PASS" endtime="20200929 13:15:24.149" starttime="20200929 13:15:24.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:15:24.155" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-49187 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:15:28.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:15:28.328" level="INFO">${output} = 2020-09-29 13:15:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:15:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200929 13:15:28.328" starttime="20200929 13:15:24.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:15:28.329" level="INFO">2020-09-29 13:15:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:15:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:15:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:15:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:15:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7E1FF0DE51E8-&gt;bb455187-f716-42a1-8873-7e34a109530a
2020-09-29 13:15:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200929 13:15:28.329" starttime="20200929 13:15:28.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:15:28.330" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:15:28.330" starttime="20200929 13:15:28.329"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:28.330" starttime="20200929 13:15:24.150"></status>
</kw>
<msg timestamp="20200929 13:15:28.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:15:28.330" starttime="20200929 13:15:24.150"></status>
</kw>
<msg timestamp="20200929 13:15:28.330" level="INFO">${result} = 2020-09-29 13:15:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:15:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200929 13:15:28.330" starttime="20200929 13:15:24.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:15:28.333" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:15:30.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:15:30.285" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:14 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:15 o3fs://bucket1.volume1.om/ozone-49187
dr...</msg>
<status status="PASS" endtime="20200929 13:15:30.285" starttime="20200929 13:15:28.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:15:30.286" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:14 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:15 o3fs://bucket1.volume1.om/ozone-49187
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:15 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200929 13:15:30.286" starttime="20200929 13:15:30.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:15:30.287" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:15:30.287" starttime="20200929 13:15:30.286"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:30.287" starttime="20200929 13:15:28.332"></status>
</kw>
<msg timestamp="20200929 13:15:30.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:15:30.288" starttime="20200929 13:15:28.331"></status>
</kw>
<msg timestamp="20200929 13:15:30.288" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:14 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:15 o3fs://bucket1.volume1.om/ozone-49187
dr...</msg>
<status status="PASS" endtime="20200929 13:15:30.288" starttime="20200929 13:15:28.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:15:30.289" starttime="20200929 13:15:30.288"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 13:15:30.289" critical="yes" starttime="20200929 13:15:24.141"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200929 13:15:30.291" starttime="20200929 13:15:24.085"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:17:13.637" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:17:13.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:17:13.648" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:17:13.648" starttime="20200929 13:17:13.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:17:13.649" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:17:13.649" starttime="20200929 13:17:13.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:17:13.650" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:17:13.650" starttime="20200929 13:17:13.649"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:13.650" starttime="20200929 13:17:13.634"></status>
</kw>
<msg timestamp="20200929 13:17:13.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:17:13.650" starttime="20200929 13:17:13.634"></status>
</kw>
<msg timestamp="20200929 13:17:13.650" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:17:13.650" starttime="20200929 13:17:13.633"></status>
</kw>
<msg timestamp="20200929 13:17:13.651" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:17:13.651" starttime="20200929 13:17:13.633"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:17:13.655" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:17:13.655" starttime="20200929 13:17:13.655"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:17:13.656" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:17:13.656" starttime="20200929 13:17:13.656"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:13.656" starttime="20200929 13:17:13.654"></status>
</kw>
<msg timestamp="20200929 13:17:13.656" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:17:13.657" starttime="20200929 13:17:13.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:17:13.658" starttime="20200929 13:17:13.658"></status>
</kw>
<msg timestamp="20200929 13:17:13.658" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:17:13.658" starttime="20200929 13:17:13.657"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:13.659" starttime="20200929 13:17:13.652"></status>
</kw>
<msg timestamp="20200929 13:17:13.659" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:17:13.659" starttime="20200929 13:17:13.652"></status>
</kw>
<msg timestamp="20200929 13:17:13.659" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:17:13.659" starttime="20200929 13:17:13.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:17:13.662" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:17:53.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:17:53.658" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:17:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:17:16 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200929 13:17:53.658" starttime="20200929 13:17:13.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:17:53.660" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:17:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:17:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:17:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:17:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:17:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-15F111B1AEBE-&gt;bb455187-f716-42a1-8873-7e34a109530a
2020-09-29 13:17:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-29 13:17:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-29 13:17:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:17:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:17:17 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:17:18 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-29 13:17:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601385251293_0003
2020-09-29 13:17:18 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-29 13:17:18 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:17:18 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-29 13:17:18 INFO  YarnClientImpl:311 - Submitted application application_1601385251293_0003
2020-09-29 13:17:18 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601385251293_0003/
2020-09-29 13:17:18 INFO  Job:1619 - Running job: job_1601385251293_0003
2020-09-29 13:17:26 INFO  Job:1640 - Job job_1601385251293_0003 running in uber mode : false
2020-09-29 13:17:26 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:17:33 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:17:39 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:17:44 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:17:52 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:17:52 INFO  Job:1658 - Job job_1601385251293_0003 completed successfully
2020-09-29 13:17:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1042461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42940
		Total time spent by all reduces in occupied slots (ms)=25812
		Total time spent by all map tasks (ms)=10735
		Total time spent by all reduce tasks (ms)=6453
		Total vcore-milliseconds taken by all map tasks=10735
		Total vcore-milliseconds taken by all reduce tasks=6453
		Total megabyte-milliseconds taken by all map tasks=43970560
		Total megabyte-milliseconds taken by all reduce tasks=26431488
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=593
		CPU time spent (ms)=7390
		Physical memory (bytes) snapshot=1379229696
		Virtual memory (bytes) snapshot=16031539200
		Total committed heap usage (bytes)=1664614400
		Peak Map Physical memory (bytes)=351051776
		Peak Map Virtual memory (bytes)=4009840640
		Peak Reduce Physical memory (bytes)=345366528
		Peak Reduce Virtual memory (bytes)=4014755840
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.888 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200929 13:17:53.660" starttime="20200929 13:17:53.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:17:53.660" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:17:53.661" starttime="20200929 13:17:53.660"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:53.661" starttime="20200929 13:17:13.660"></status>
</kw>
<msg timestamp="20200929 13:17:53.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:17:53.661" starttime="20200929 13:17:13.660"></status>
</kw>
<msg timestamp="20200929 13:17:53.662" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:17:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:17:16 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200929 13:17:53.662" starttime="20200929 13:17:13.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:17:53.662" starttime="20200929 13:17:53.662"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:17:53.663" critical="yes" starttime="20200929 13:17:13.632"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:17:53.668" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:17:53.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:17:53.674" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:17:53.674" starttime="20200929 13:17:53.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:17:53.675" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:17:53.676" starttime="20200929 13:17:53.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:17:53.676" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:17:53.676" starttime="20200929 13:17:53.676"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:53.677" starttime="20200929 13:17:53.665"></status>
</kw>
<msg timestamp="20200929 13:17:53.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:17:53.677" starttime="20200929 13:17:53.665"></status>
</kw>
<msg timestamp="20200929 13:17:53.677" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:17:53.677" starttime="20200929 13:17:53.664"></status>
</kw>
<msg timestamp="20200929 13:17:53.677" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:17:53.678" starttime="20200929 13:17:53.664"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:17:53.678" level="INFO">${random} = 43</msg>
<status status="PASS" endtime="20200929 13:17:53.678" starttime="20200929 13:17:53.678"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:17:53.682" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:17:53.682" starttime="20200929 13:17:53.682"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:17:53.683" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:17:53.683" starttime="20200929 13:17:53.683"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:53.683" starttime="20200929 13:17:53.681"></status>
</kw>
<msg timestamp="20200929 13:17:53.684" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:17:53.684" starttime="20200929 13:17:53.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:17:53.685" starttime="20200929 13:17:53.684"></status>
</kw>
<msg timestamp="20200929 13:17:53.685" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:17:53.685" starttime="20200929 13:17:53.684"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:53.685" starttime="20200929 13:17:53.680"></status>
</kw>
<msg timestamp="20200929 13:17:53.685" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:17:53.685" starttime="20200929 13:17:53.679"></status>
</kw>
<msg timestamp="20200929 13:17:53.686" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:17:53.686" starttime="20200929 13:17:53.678"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:17:53.690" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:17:53.690" starttime="20200929 13:17:53.689"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:17:53.690" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:17:53.690" starttime="20200929 13:17:53.690"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:53.691" starttime="20200929 13:17:53.689"></status>
</kw>
<msg timestamp="20200929 13:17:53.691" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:17:53.691" starttime="20200929 13:17:53.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:17:53.693" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200929 13:17:53.693" starttime="20200929 13:17:53.692"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:17:53.694" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200929 13:17:53.694" starttime="20200929 13:17:53.693"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:53.694" starttime="20200929 13:17:53.692"></status>
</kw>
<msg timestamp="20200929 13:17:53.694" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200929 13:17:53.694" starttime="20200929 13:17:53.691"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:53.694" starttime="20200929 13:17:53.687"></status>
</kw>
<msg timestamp="20200929 13:17:53.695" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200929 13:17:53.695" starttime="20200929 13:17:53.687"></status>
</kw>
<msg timestamp="20200929 13:17:53.695" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200929 13:17:53.695" starttime="20200929 13:17:53.686"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:17:53.699" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:17:53.699" starttime="20200929 13:17:53.698"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:17:53.699" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:17:53.700" starttime="20200929 13:17:53.699"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:53.700" starttime="20200929 13:17:53.698"></status>
</kw>
<msg timestamp="20200929 13:17:53.700" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:17:53.700" starttime="20200929 13:17:53.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:17:53.702" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200929 13:17:53.702" starttime="20200929 13:17:53.701"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:17:53.702" level="INFO">${result} = /wordcount-43.txt</msg>
<status status="PASS" endtime="20200929 13:17:53.702" starttime="20200929 13:17:53.702"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:53.703" starttime="20200929 13:17:53.701"></status>
</kw>
<msg timestamp="20200929 13:17:53.703" level="INFO">${path_with_leading} = /wordcount-43.txt</msg>
<status status="PASS" endtime="20200929 13:17:53.703" starttime="20200929 13:17:53.700"></status>
</kw>
<status status="PASS" endtime="20200929 13:17:53.703" starttime="20200929 13:17:53.696"></status>
</kw>
<msg timestamp="20200929 13:17:53.703" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-43.txt</msg>
<status status="PASS" endtime="20200929 13:17:53.703" starttime="20200929 13:17:53.696"></status>
</kw>
<msg timestamp="20200929 13:17:53.703" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-43.txt</msg>
<status status="PASS" endtime="20200929 13:17:53.704" starttime="20200929 13:17:53.695"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:17:53.707" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-43.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:18:31.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:18:31.275" level="INFO">${output} = 2020-09-29 13:17:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-29 13:17:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200929 13:18:31.275" starttime="20200929 13:17:53.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:18:31.276" level="INFO">2020-09-29 13:17:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-29 13:17:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:17:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:17:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:17:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:17:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:17:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8196CD269BA8-&gt;bb455187-f716-42a1-8873-7e34a109530a
2020-09-29 13:17:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-29 13:17:57 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:17:57 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:17:57 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-29 13:17:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601385251293_0004
2020-09-29 13:17:57 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-29 13:17:58 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:17:58 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-29 13:17:58 INFO  YarnClientImpl:311 - Submitted application application_1601385251293_0004
2020-09-29 13:17:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601385251293_0004/
2020-09-29 13:17:58 INFO  Job:1619 - Running job: job_1601385251293_0004
2020-09-29 13:18:07 INFO  Job:1640 - Job job_1601385251293_0004 running in uber mode : false
2020-09-29 13:18:07 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:18:13 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:18:19 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:18:25 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:18:29 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:18:30 INFO  Job:1658 - Job job_1601385251293_0004 completed successfully
2020-09-29 13:18:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105133
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42896
		Total time spent by all reduces in occupied slots (ms)=15528
		Total time spent by all map tasks (ms)=10724
		Total time spent by all reduce tasks (ms)=3882
		Total vcore-milliseconds taken by all map tasks=10724
		Total vcore-milliseconds taken by all reduce tasks=3882
		Total megabyte-milliseconds taken by all map tasks=43925504
		Total megabyte-milliseconds taken by all reduce tasks=15900672
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=607
		CPU time spent (ms)=7640
		Physical memory (bytes) snapshot=1378336768
		Virtual memory (bytes) snapshot=16036245504
		Total committed heap usage (bytes)=1636302848
		Peak Map Physical memory (bytes)=361517056
		Peak Map Virtual memory (bytes)=4014792704
		Peak Reduce Physical memory (bytes)=330842112
		Peak Reduce Virtual memory (bytes)=4007477248
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200929 13:18:31.277" starttime="20200929 13:18:31.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:18:31.278" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:18:31.278" starttime="20200929 13:18:31.277"></status>
</kw>
<status status="PASS" endtime="20200929 13:18:31.278" starttime="20200929 13:17:53.705"></status>
</kw>
<msg timestamp="20200929 13:18:31.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:18:31.278" starttime="20200929 13:17:53.704"></status>
</kw>
<msg timestamp="20200929 13:18:31.279" level="INFO">${output} = 2020-09-29 13:17:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-29 13:17:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200929 13:18:31.279" starttime="20200929 13:17:53.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200929 13:18:31.280" starttime="20200929 13:18:31.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:18:31.280" starttime="20200929 13:18:31.280"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:18:31.281" critical="yes" starttime="20200929 13:17:53.663"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200929 13:18:31.282" starttime="20200929 13:17:13.581"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:15:35.314" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:15:35.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:15:35.322" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:15:35.322" starttime="20200929 13:15:35.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:15:35.323" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:15:35.323" starttime="20200929 13:15:35.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:15:35.324" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:15:35.324" starttime="20200929 13:15:35.324"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:35.324" starttime="20200929 13:15:35.312"></status>
</kw>
<msg timestamp="20200929 13:15:35.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:15:35.325" starttime="20200929 13:15:35.311"></status>
</kw>
<msg timestamp="20200929 13:15:35.325" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:15:35.325" starttime="20200929 13:15:35.311"></status>
</kw>
<msg timestamp="20200929 13:15:35.325" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:15:35.325" starttime="20200929 13:15:35.311"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:15:35.329" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:15:35.329" starttime="20200929 13:15:35.328"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:15:35.330" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:15:35.330" starttime="20200929 13:15:35.329"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:35.330" starttime="20200929 13:15:35.328"></status>
</kw>
<msg timestamp="20200929 13:15:35.330" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:15:35.330" starttime="20200929 13:15:35.327"></status>
</kw>
<status status="PASS" endtime="20200929 13:15:35.330" starttime="20200929 13:15:35.327"></status>
</kw>
<msg timestamp="20200929 13:15:35.331" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:15:35.331" starttime="20200929 13:15:35.326"></status>
</kw>
<msg timestamp="20200929 13:15:35.331" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:15:35.331" starttime="20200929 13:15:35.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:15:35.334" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:16:16.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:16:16.346" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:15:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:15:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200929 13:16:16.347" starttime="20200929 13:15:35.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:16:16.348" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:15:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:15:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:15:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:15:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:15:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9252AFA4E829-&gt;bb455187-f716-42a1-8873-7e34a109530a
2020-09-29 13:15:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-29 13:15:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-29 13:15:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:15:39 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:15:40 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-29 13:15:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601385251293_0001
2020-09-29 13:15:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-29 13:15:40 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:15:40 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-29 13:15:41 INFO  YarnClientImpl:311 - Submitted application application_1601385251293_0001
2020-09-29 13:15:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601385251293_0001/
2020-09-29 13:15:41 INFO  Job:1619 - Running job: job_1601385251293_0001
2020-09-29 13:15:51 INFO  Job:1640 - Job job_1601385251293_0001 running in uber mode : false
2020-09-29 13:15:51 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:15:57 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:16:03 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:16:09 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:16:15 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:16:15 INFO  Job:1658 - Job job_1601385251293_0001 completed successfully
2020-09-29 13:16:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1042685
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43400
		Total time spent by all reduces in occupied slots (ms)=16076
		Total time spent by all map tasks (ms)=10850
		Total time spent by all reduce tasks (ms)=4019
		Total vcore-milliseconds taken by all map tasks=10850
		Total vcore-milliseconds taken by all reduce tasks=4019
		Total megabyte-milliseconds taken by all map tasks=44441600
		Total megabyte-milliseconds taken by all reduce tasks=16461824
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=627
		CPU time spent (ms)=7480
		Physical memory (bytes) snapshot=1252024320
		Virtual memory (bytes) snapshot=16031920128
		Total committed heap usage (bytes)=1279787008
		Peak Map Physical memory (bytes)=333983744
		Peak Map Virtual memory (bytes)=4011180032
		Peak Reduce Physical memory (bytes)=356044800
		Peak Reduce Virtual memory (bytes)=4013383680
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.801 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200929 13:16:16.348" starttime="20200929 13:16:16.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:16:16.349" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:16:16.349" starttime="20200929 13:16:16.348"></status>
</kw>
<status status="PASS" endtime="20200929 13:16:16.349" starttime="20200929 13:15:35.332"></status>
</kw>
<msg timestamp="20200929 13:16:16.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:16:16.349" starttime="20200929 13:15:35.332"></status>
</kw>
<msg timestamp="20200929 13:16:16.350" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:15:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:15:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200929 13:16:16.350" starttime="20200929 13:15:35.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:16:16.351" starttime="20200929 13:16:16.350"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:16:16.351" critical="yes" starttime="20200929 13:15:35.310"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:16:16.356" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:16:16.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:16:16.362" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:16:16.362" starttime="20200929 13:16:16.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:16:16.363" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:16:16.363" starttime="20200929 13:16:16.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:16:16.364" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:16:16.364" starttime="20200929 13:16:16.364"></status>
</kw>
<status status="PASS" endtime="20200929 13:16:16.365" starttime="20200929 13:16:16.354"></status>
</kw>
<msg timestamp="20200929 13:16:16.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:16:16.365" starttime="20200929 13:16:16.353"></status>
</kw>
<msg timestamp="20200929 13:16:16.365" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:16:16.365" starttime="20200929 13:16:16.353"></status>
</kw>
<msg timestamp="20200929 13:16:16.365" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:16:16.365" starttime="20200929 13:16:16.352"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:16:16.366" level="INFO">${random} = 81</msg>
<status status="PASS" endtime="20200929 13:16:16.366" starttime="20200929 13:16:16.366"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:16:16.370" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:16:16.370" starttime="20200929 13:16:16.370"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:16:16.371" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:16:16.371" starttime="20200929 13:16:16.371"></status>
</kw>
<status status="PASS" endtime="20200929 13:16:16.372" starttime="20200929 13:16:16.369"></status>
</kw>
<msg timestamp="20200929 13:16:16.372" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:16:16.372" starttime="20200929 13:16:16.369"></status>
</kw>
<status status="PASS" endtime="20200929 13:16:16.372" starttime="20200929 13:16:16.368"></status>
</kw>
<msg timestamp="20200929 13:16:16.372" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:16:16.372" starttime="20200929 13:16:16.367"></status>
</kw>
<msg timestamp="20200929 13:16:16.372" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:16:16.372" starttime="20200929 13:16:16.366"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:16:16.376" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:16:16.376" starttime="20200929 13:16:16.376"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:16:16.377" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:16:16.377" starttime="20200929 13:16:16.376"></status>
</kw>
<status status="PASS" endtime="20200929 13:16:16.377" starttime="20200929 13:16:16.375"></status>
</kw>
<msg timestamp="20200929 13:16:16.377" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:16:16.377" starttime="20200929 13:16:16.375"></status>
</kw>
<status status="PASS" endtime="20200929 13:16:16.378" starttime="20200929 13:16:16.374"></status>
</kw>
<msg timestamp="20200929 13:16:16.378" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200929 13:16:16.378" starttime="20200929 13:16:16.373"></status>
</kw>
<msg timestamp="20200929 13:16:16.378" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200929 13:16:16.378" starttime="20200929 13:16:16.373"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:16:16.382" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:16:16.382" starttime="20200929 13:16:16.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:16:16.383" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:16:16.383" starttime="20200929 13:16:16.382"></status>
</kw>
<status status="PASS" endtime="20200929 13:16:16.383" starttime="20200929 13:16:16.381"></status>
</kw>
<msg timestamp="20200929 13:16:16.383" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:16:16.383" starttime="20200929 13:16:16.380"></status>
</kw>
<status status="PASS" endtime="20200929 13:16:16.383" starttime="20200929 13:16:16.379"></status>
</kw>
<msg timestamp="20200929 13:16:16.383" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-81.txt</msg>
<status status="PASS" endtime="20200929 13:16:16.383" starttime="20200929 13:16:16.379"></status>
</kw>
<msg timestamp="20200929 13:16:16.384" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-81.txt</msg>
<status status="PASS" endtime="20200929 13:16:16.384" starttime="20200929 13:16:16.378"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:16:16.387" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-81.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:16:57.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:16:57.790" level="INFO">${output} = 2020-09-29 13:16:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-29 13:16:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200929 13:16:57.790" starttime="20200929 13:16:16.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:16:57.791" level="INFO">2020-09-29 13:16:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-29 13:16:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:16:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:16:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:16:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:16:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:16:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A6B51BB32C03-&gt;bb455187-f716-42a1-8873-7e34a109530a
2020-09-29 13:16:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-29 13:16:20 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:16:20 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:16:20 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-29 13:16:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601385251293_0002
2020-09-29 13:16:20 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-29 13:16:20 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:16:20 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-29 13:16:20 INFO  YarnClientImpl:311 - Submitted application application_1601385251293_0002
2020-09-29 13:16:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601385251293_0002/
2020-09-29 13:16:20 INFO  Job:1619 - Running job: job_1601385251293_0002
2020-09-29 13:16:30 INFO  Job:1640 - Job job_1601385251293_0002 running in uber mode : false
2020-09-29 13:16:30 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:16:37 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:16:42 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:16:48 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:16:56 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:16:57 INFO  Job:1658 - Job job_1601385251293_0002 completed successfully
2020-09-29 13:16:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105217
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44064
		Total time spent by all reduces in occupied slots (ms)=29992
		Total time spent by all map tasks (ms)=11016
		Total time spent by all reduce tasks (ms)=7498
		Total vcore-milliseconds taken by all map tasks=11016
		Total vcore-milliseconds taken by all reduce tasks=7498
		Total megabyte-milliseconds taken by all map tasks=45121536
		Total megabyte-milliseconds taken by all reduce tasks=30711808
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=625
		CPU time spent (ms)=7950
		Physical memory (bytes) snapshot=1333526528
		Virtual memory (bytes) snapshot=16014704640
		Total committed heap usage (bytes)=1390411776
		Peak Map Physical memory (bytes)=349696000
		Peak Map Virtual memory (bytes)=4008493056
		Peak Reduce Physical memory (bytes)=358199296
		Peak Reduce Virtual memory (bytes)=4014202880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200929 13:16:57.791" starttime="20200929 13:16:57.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:16:57.792" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:16:57.792" starttime="20200929 13:16:57.792"></status>
</kw>
<status status="PASS" endtime="20200929 13:16:57.793" starttime="20200929 13:16:16.385"></status>
</kw>
<msg timestamp="20200929 13:16:57.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:16:57.793" starttime="20200929 13:16:16.384"></status>
</kw>
<msg timestamp="20200929 13:16:57.794" level="INFO">${output} = 2020-09-29 13:16:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-09-29 13:16:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200929 13:16:57.794" starttime="20200929 13:16:16.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200929 13:16:57.794" starttime="20200929 13:16:57.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:16:57.795" starttime="20200929 13:16:57.794"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:16:57.795" critical="yes" starttime="20200929 13:16:16.351"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200929 13:16:57.796" starttime="20200929 13:15:35.259"></status>
</suite>
<status status="PASS" elapsedtime="215875" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="616853" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
