<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200929 13:03:31.176" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:02:03.183" level="INFO">${random} = 60016</msg>
<status status="PASS" endtime="20200929 13:02:03.183" starttime="20200929 13:02:03.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200929 13:02:03.184" level="INFO">${prefix} = 60016</msg>
<status status="PASS" endtime="20200929 13:02:03.184" starttime="20200929 13:02:03.183"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:03.184" starttime="20200929 13:02:03.182"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:03.191" level="INFO">Running command 'ozone sh volume info /60016-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:05.889" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 13:02:05.889" level="INFO">${output} = VOLUME_NOT_FOUND Volume 60016-rpcbasic is not found</msg>
<status status="PASS" endtime="20200929 13:02:05.890" starttime="20200929 13:02:03.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:05.891" level="INFO">VOLUME_NOT_FOUND Volume 60016-rpcbasic is not found</msg>
<status status="PASS" endtime="20200929 13:02:05.891" starttime="20200929 13:02:05.890"></status>
</kw>
<msg timestamp="20200929 13:02:05.891" level="INFO">${result} = VOLUME_NOT_FOUND Volume 60016-rpcbasic is not found</msg>
<status status="PASS" endtime="20200929 13:02:05.891" starttime="20200929 13:02:03.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200929 13:02:05.892" starttime="20200929 13:02:05.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:05.896" level="INFO">Running command 'ozone sh volume create /60016-rpcbasic --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:08.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:08.338" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:08.338" starttime="20200929 13:02:05.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:08.339" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:08.339" starttime="20200929 13:02:08.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:08.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:08.340" starttime="20200929 13:02:08.339"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:08.340" starttime="20200929 13:02:05.893"></status>
</kw>
<msg timestamp="20200929 13:02:08.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:08.340" starttime="20200929 13:02:05.893"></status>
</kw>
<msg timestamp="20200929 13:02:08.341" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200929 13:02:08.341" starttime="20200929 13:02:05.892"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200929 13:02:08.341" starttime="20200929 13:02:08.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:08.354" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="60016-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:11.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:11.243" level="INFO">${output} = {
  "metadata": {},
  "name": "60016-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T13:02:08.131Z",
  "mo...</msg>
<status status="PASS" endtime="20200929 13:02:11.243" starttime="20200929 13:02:08.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:11.244" level="INFO">{
  "metadata": {},
  "name": "60016-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T13:02:08.131Z",
  "modificationTime": "2020-09-29T13:02:10.946876Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200929 13:02:11.244" starttime="20200929 13:02:11.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:11.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:11.245" starttime="20200929 13:02:11.244"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:11.245" starttime="20200929 13:02:08.351"></status>
</kw>
<msg timestamp="20200929 13:02:11.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:11.246" starttime="20200929 13:02:08.351"></status>
</kw>
<msg timestamp="20200929 13:02:11.246" level="INFO">${result} = {
  "metadata": {},
  "name": "60016-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T13:02:08.131Z",
  "mo...</msg>
<status status="PASS" endtime="20200929 13:02:11.246" starttime="20200929 13:02:08.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200929 13:02:11.247" starttime="20200929 13:02:11.246"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:11.251" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="60016-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:13.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:13.671" level="INFO">${output} = {
  "metadata": {},
  "name": "60016-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T13:02:08.131Z",
  "mo...</msg>
<status status="PASS" endtime="20200929 13:02:13.671" starttime="20200929 13:02:11.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:13.672" level="INFO">{
  "metadata": {},
  "name": "60016-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T13:02:08.131Z",
  "modificationTime": "2020-09-29T13:02:13.433669Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20200929 13:02:13.673" starttime="20200929 13:02:13.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:13.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:13.673" starttime="20200929 13:02:13.673"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:13.674" starttime="20200929 13:02:11.248"></status>
</kw>
<msg timestamp="20200929 13:02:13.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:13.674" starttime="20200929 13:02:11.248"></status>
</kw>
<msg timestamp="20200929 13:02:13.674" level="INFO">${result} = {
  "metadata": {},
  "name": "60016-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-29T13:02:08.131Z",
  "mo...</msg>
<status status="PASS" endtime="20200929 13:02:13.674" starttime="20200929 13:02:11.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200929 13:02:13.675" starttime="20200929 13:02:13.674"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:13.680" level="INFO">Running command 'ozone sh volume update /60016-rpcbasic --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:15.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:15.946" level="INFO">${output} = {
  "metadata" : { },
  "name" : "60016-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-29T13:02:08.131Z"...</msg>
<status status="PASS" endtime="20200929 13:02:15.946" starttime="20200929 13:02:13.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:15.947" level="INFO">{
  "metadata" : { },
  "name" : "60016-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-29T13:02:08.131Z",
  "modificationTime" : "2020-09-29T13:02:15.687947Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "usedBytes" : 0
}</msg>
<status status="PASS" endtime="20200929 13:02:15.947" starttime="20200929 13:02:15.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:15.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:15.948" starttime="20200929 13:02:15.948"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:15.949" starttime="20200929 13:02:13.676"></status>
</kw>
<msg timestamp="20200929 13:02:15.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:15.949" starttime="20200929 13:02:13.676"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:15.949" starttime="20200929 13:02:13.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:15.954" level="INFO">Running command 'ozone sh volume info /60016-rpcbasic | jq -r '. | select(.name=="60016-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:18.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:18.335" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200929 13:02:18.335" starttime="20200929 13:02:15.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:18.336" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200929 13:02:18.336" starttime="20200929 13:02:18.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:18.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:18.337" starttime="20200929 13:02:18.336"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:18.337" starttime="20200929 13:02:15.951"></status>
</kw>
<msg timestamp="20200929 13:02:18.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:18.338" starttime="20200929 13:02:15.950"></status>
</kw>
<msg timestamp="20200929 13:02:18.338" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200929 13:02:18.338" starttime="20200929 13:02:15.949"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200929 13:02:18.338" starttime="20200929 13:02:18.338"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:18.346" level="INFO">Running command 'ozone sh bucket create /60016-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:20.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:20.474" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:20.474" starttime="20200929 13:02:18.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:20.475" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:20.475" starttime="20200929 13:02:20.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:20.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:20.476" starttime="20200929 13:02:20.475"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:20.476" starttime="20200929 13:02:18.340"></status>
</kw>
<msg timestamp="20200929 13:02:20.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:20.476" starttime="20200929 13:02:18.339"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:20.476" starttime="20200929 13:02:18.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:20.481" level="INFO">Running command 'ozone sh bucket info /60016-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:22.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:22.874" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200929 13:02:22.874" starttime="20200929 13:02:20.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:22.876" level="INFO">DISK</msg>
<status status="PASS" endtime="20200929 13:02:22.876" starttime="20200929 13:02:22.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:22.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:22.876" starttime="20200929 13:02:22.876"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:22.877" starttime="20200929 13:02:20.478"></status>
</kw>
<msg timestamp="20200929 13:02:22.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:22.877" starttime="20200929 13:02:20.478"></status>
</kw>
<msg timestamp="20200929 13:02:22.877" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200929 13:02:22.877" starttime="20200929 13:02:20.477"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200929 13:02:22.878" starttime="20200929 13:02:22.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:22.883" level="INFO">Running command 'ozone sh bucket list /60016-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:25.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:25.266" level="INFO">${output} = 60016-rpcbasic</msg>
<status status="PASS" endtime="20200929 13:02:25.266" starttime="20200929 13:02:22.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:25.267" level="INFO">60016-rpcbasic</msg>
<status status="PASS" endtime="20200929 13:02:25.267" starttime="20200929 13:02:25.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:25.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:25.268" starttime="20200929 13:02:25.267"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:25.268" starttime="20200929 13:02:22.879"></status>
</kw>
<msg timestamp="20200929 13:02:25.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:25.269" starttime="20200929 13:02:22.879"></status>
</kw>
<msg timestamp="20200929 13:02:25.269" level="INFO">${result} = 60016-rpcbasic</msg>
<status status="PASS" endtime="20200929 13:02:25.269" starttime="20200929 13:02:22.878"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:02:25.270" starttime="20200929 13:02:25.269"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:25.274" level="INFO">Running command 'ozone sh key put /60016-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:34.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:34.051" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:34.051" starttime="20200929 13:02:25.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:34.052" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:34.052" starttime="20200929 13:02:34.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:34.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:34.053" starttime="20200929 13:02:34.052"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:34.053" starttime="20200929 13:02:25.272"></status>
</kw>
<msg timestamp="20200929 13:02:34.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:34.053" starttime="20200929 13:02:25.271"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:34.054" starttime="20200929 13:02:25.271"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:34.057" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:34.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:34.061" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:34.061" starttime="20200929 13:02:34.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:34.062" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:34.062" starttime="20200929 13:02:34.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:34.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:34.062" starttime="20200929 13:02:34.062"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:34.063" starttime="20200929 13:02:34.055"></status>
</kw>
<msg timestamp="20200929 13:02:34.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:34.063" starttime="20200929 13:02:34.054"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:34.063" starttime="20200929 13:02:34.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:34.067" level="INFO">Running command 'ozone sh key get /60016-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:38.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:38.233" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:38.233" starttime="20200929 13:02:34.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:38.236" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:38.236" starttime="20200929 13:02:38.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:38.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:38.237" starttime="20200929 13:02:38.236"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:38.237" starttime="20200929 13:02:34.064"></status>
</kw>
<msg timestamp="20200929 13:02:38.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:38.237" starttime="20200929 13:02:34.064"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:38.238" starttime="20200929 13:02:34.063"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:38.242" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:38.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:38.246" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:38.246" starttime="20200929 13:02:38.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:38.247" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:38.247" starttime="20200929 13:02:38.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:38.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:38.248" starttime="20200929 13:02:38.247"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:38.248" starttime="20200929 13:02:38.239"></status>
</kw>
<msg timestamp="20200929 13:02:38.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:38.248" starttime="20200929 13:02:38.239"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:38.249" starttime="20200929 13:02:38.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:38.254" level="INFO">Running command 'ozone sh key put -t RATIS /60016-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:42.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:42.393" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:42.393" starttime="20200929 13:02:38.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:42.395" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:42.395" starttime="20200929 13:02:42.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:42.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:42.396" starttime="20200929 13:02:42.395"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:42.396" starttime="20200929 13:02:38.250"></status>
</kw>
<msg timestamp="20200929 13:02:42.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:42.396" starttime="20200929 13:02:38.250"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:42.396" starttime="20200929 13:02:38.249"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:42.400" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:42.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:42.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:42.404" starttime="20200929 13:02:42.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:42.405" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:42.405" starttime="20200929 13:02:42.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:42.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:42.405" starttime="20200929 13:02:42.405"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:42.406" starttime="20200929 13:02:42.397"></status>
</kw>
<msg timestamp="20200929 13:02:42.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:42.406" starttime="20200929 13:02:42.397"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:42.406" starttime="20200929 13:02:42.397"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:42.411" level="INFO">Running command 'ozone sh key get /60016-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:46.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:46.426" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:46.426" starttime="20200929 13:02:42.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:46.427" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:46.427" starttime="20200929 13:02:46.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:46.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:46.428" starttime="20200929 13:02:46.427"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:46.428" starttime="20200929 13:02:42.408"></status>
</kw>
<msg timestamp="20200929 13:02:46.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:46.429" starttime="20200929 13:02:42.407"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:46.429" starttime="20200929 13:02:42.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:46.433" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:46.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:46.435" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:46.435" starttime="20200929 13:02:46.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:46.436" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:46.436" starttime="20200929 13:02:46.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:46.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:46.437" starttime="20200929 13:02:46.436"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:46.437" starttime="20200929 13:02:46.430"></status>
</kw>
<msg timestamp="20200929 13:02:46.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:46.438" starttime="20200929 13:02:46.430"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:46.438" starttime="20200929 13:02:46.429"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:46.443" level="INFO">Running command 'ozone sh key info /60016-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:48.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:48.867" level="INFO">${output} = {
  "volumeName": "60016-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-29T13:02:40.298Z",
  "modificationTime": "2020-09-29T13:02:42.021Z",
...</msg>
<status status="PASS" endtime="20200929 13:02:48.867" starttime="20200929 13:02:46.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:48.868" level="INFO">{
  "volumeName": "60016-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-29T13:02:40.298Z",
  "modificationTime": "2020-09-29T13:02:42.021Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104948338543624200,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200929 13:02:48.868" starttime="20200929 13:02:48.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:48.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:48.869" starttime="20200929 13:02:48.868"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:48.869" starttime="20200929 13:02:46.439"></status>
</kw>
<msg timestamp="20200929 13:02:48.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:48.870" starttime="20200929 13:02:46.439"></status>
</kw>
<msg timestamp="20200929 13:02:48.870" level="INFO">${result} = {
  "volumeName": "60016-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-29T13:02:40.298Z",
  "modificationTime": "2020-09-29T13:02:42.021Z",
...</msg>
<status status="PASS" endtime="20200929 13:02:48.870" starttime="20200929 13:02:46.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200929 13:02:48.871" starttime="20200929 13:02:48.870"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:48.875" level="INFO">Running command 'ozone sh key delete /60016-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:51.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:51.014" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:51.014" starttime="20200929 13:02:48.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:51.015" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:51.015" starttime="20200929 13:02:51.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:51.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:51.016" starttime="20200929 13:02:51.016"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:51.017" starttime="20200929 13:02:48.872"></status>
</kw>
<msg timestamp="20200929 13:02:51.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:51.017" starttime="20200929 13:02:48.871"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:51.017" starttime="20200929 13:02:48.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:51.021" level="INFO">Running command 'ozone sh key cp /60016-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:55.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:55.697" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:55.697" starttime="20200929 13:02:51.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:55.698" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:55.698" starttime="20200929 13:02:55.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:55.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:55.699" starttime="20200929 13:02:55.698"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:55.699" starttime="20200929 13:02:51.018"></status>
</kw>
<msg timestamp="20200929 13:02:55.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:55.700" starttime="20200929 13:02:51.018"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:55.700" starttime="20200929 13:02:51.017"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:55.703" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:55.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:55.707" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:55.707" starttime="20200929 13:02:55.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:55.708" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:55.708" starttime="20200929 13:02:55.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:55.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:55.709" starttime="20200929 13:02:55.708"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:55.709" starttime="20200929 13:02:55.701"></status>
</kw>
<msg timestamp="20200929 13:02:55.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:55.709" starttime="20200929 13:02:55.700"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:55.710" starttime="20200929 13:02:55.700"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:55.714" level="INFO">Running command 'ozone sh key get /60016-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:59.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:59.637" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:59.637" starttime="20200929 13:02:55.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:59.638" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:59.638" starttime="20200929 13:02:59.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:59.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:59.639" starttime="20200929 13:02:59.638"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:59.639" starttime="20200929 13:02:55.711"></status>
</kw>
<msg timestamp="20200929 13:02:59.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:59.640" starttime="20200929 13:02:55.710"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:59.640" starttime="20200929 13:02:55.710"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:59.646" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:02:59.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:02:59.647" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:02:59.648" starttime="20200929 13:02:59.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:02:59.649" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:02:59.649" starttime="20200929 13:02:59.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:02:59.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:02:59.649" starttime="20200929 13:02:59.649"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:59.650" starttime="20200929 13:02:59.642"></status>
</kw>
<msg timestamp="20200929 13:02:59.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:02:59.650" starttime="20200929 13:02:59.642"></status>
</kw>
<status status="PASS" endtime="20200929 13:02:59.650" starttime="20200929 13:02:59.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:02:59.655" level="INFO">Running command 'ozone sh key delete /60016-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:03:01.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:03:01.806" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:03:01.806" starttime="20200929 13:02:59.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:03:01.807" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:03:01.807" starttime="20200929 13:03:01.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:03:01.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:03:01.808" starttime="20200929 13:03:01.807"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:01.808" starttime="20200929 13:02:59.652"></status>
</kw>
<msg timestamp="20200929 13:03:01.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:03:01.808" starttime="20200929 13:02:59.651"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:01.809" starttime="20200929 13:02:59.650"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:03:01.813" level="INFO">Running command 'ozone sh key get /60016-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:03:04.122" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 13:03:04.122" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200929 13:03:04.122" starttime="20200929 13:03:01.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:03:04.124" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200929 13:03:04.124" starttime="20200929 13:03:04.123"></status>
</kw>
<msg timestamp="20200929 13:03:04.124" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200929 13:03:04.124" starttime="20200929 13:03:01.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200929 13:03:04.125" starttime="20200929 13:03:04.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:03:04.130" level="INFO">Running command 'ozone sh key get --force /60016-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:03:08.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:03:08.120" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:03:08.120" starttime="20200929 13:03:04.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:03:08.121" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:03:08.121" starttime="20200929 13:03:08.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:03:08.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:03:08.122" starttime="20200929 13:03:08.121"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:08.122" starttime="20200929 13:03:04.126"></status>
</kw>
<msg timestamp="20200929 13:03:08.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:03:08.123" starttime="20200929 13:03:04.126"></status>
</kw>
<msg timestamp="20200929 13:03:08.123" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200929 13:03:08.123" starttime="20200929 13:03:04.125"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200929 13:03:08.124" starttime="20200929 13:03:08.123"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:03:08.128" level="INFO">Running command 'ozone sh key info /60016-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:03:10.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:03:10.385" level="INFO">${output} = {
  "volumeName": "60016-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-29T13:02:27.414Z",
  "modificationTime": "2020-09-29T13:02:33.633Z",
  "rep...</msg>
<status status="PASS" endtime="20200929 13:03:10.385" starttime="20200929 13:03:08.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:03:10.386" level="INFO">{
  "volumeName": "60016-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-29T13:02:27.414Z",
  "modificationTime": "2020-09-29T13:02:33.633Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104948337697816580,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200929 13:03:10.386" starttime="20200929 13:03:10.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:03:10.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:03:10.387" starttime="20200929 13:03:10.386"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:10.387" starttime="20200929 13:03:08.125"></status>
</kw>
<msg timestamp="20200929 13:03:10.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:03:10.388" starttime="20200929 13:03:08.125"></status>
</kw>
<msg timestamp="20200929 13:03:10.388" level="INFO">${result} = {
  "volumeName": "60016-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-29T13:02:27.414Z",
  "modificationTime": "2020-09-29T13:02:33.633Z",
  "rep...</msg>
<status status="PASS" endtime="20200929 13:03:10.388" starttime="20200929 13:03:08.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200929 13:03:10.389" starttime="20200929 13:03:10.388"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:03:10.394" level="INFO">Running command 'ozone sh key list /60016-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:03:12.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:03:12.628" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200929 13:03:12.628" starttime="20200929 13:03:10.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:03:12.629" level="INFO">key1</msg>
<status status="PASS" endtime="20200929 13:03:12.629" starttime="20200929 13:03:12.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:03:12.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:03:12.630" starttime="20200929 13:03:12.629"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:12.630" starttime="20200929 13:03:10.390"></status>
</kw>
<msg timestamp="20200929 13:03:12.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:03:12.630" starttime="20200929 13:03:10.390"></status>
</kw>
<msg timestamp="20200929 13:03:12.631" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200929 13:03:12.631" starttime="20200929 13:03:10.389"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200929 13:03:12.631" starttime="20200929 13:03:12.631"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:03:12.637" level="INFO">Running command 'ozone sh key rename /60016-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:03:14.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:03:14.745" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:03:14.745" starttime="20200929 13:03:12.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:03:14.747" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:03:14.747" starttime="20200929 13:03:14.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:03:14.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:03:14.748" starttime="20200929 13:03:14.747"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:14.748" starttime="20200929 13:03:12.633"></status>
</kw>
<msg timestamp="20200929 13:03:14.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:03:14.748" starttime="20200929 13:03:12.632"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:14.749" starttime="20200929 13:03:12.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:03:14.754" level="INFO">Running command 'ozone sh key list /60016-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:03:17.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:03:17.094" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200929 13:03:17.095" starttime="20200929 13:03:14.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:03:17.096" level="INFO">key2</msg>
<status status="PASS" endtime="20200929 13:03:17.096" starttime="20200929 13:03:17.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:03:17.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:03:17.097" starttime="20200929 13:03:17.096"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:17.097" starttime="20200929 13:03:14.750"></status>
</kw>
<msg timestamp="20200929 13:03:17.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:03:17.097" starttime="20200929 13:03:14.749"></status>
</kw>
<msg timestamp="20200929 13:03:17.098" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200929 13:03:17.098" starttime="20200929 13:03:14.749"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200929 13:03:17.099" starttime="20200929 13:03:17.098"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:03:17.102" level="INFO">Running command 'ozone sh key delete /60016-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:03:19.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:03:19.389" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:03:19.389" starttime="20200929 13:03:17.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:03:19.391" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:03:19.391" starttime="20200929 13:03:19.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:03:19.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:03:19.391" starttime="20200929 13:03:19.391"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:19.392" starttime="20200929 13:03:17.100"></status>
</kw>
<msg timestamp="20200929 13:03:19.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:03:19.392" starttime="20200929 13:03:17.100"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:19.393" starttime="20200929 13:03:17.099"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:19.393" starttime="20200929 13:02:25.270"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:19.393" starttime="20200929 13:02:25.270"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:03:19.399" level="INFO">Running command 'ozone sh bucket delete /60016-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:03:21.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:03:21.549" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:03:21.549" starttime="20200929 13:03:19.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:03:21.550" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:03:21.550" starttime="20200929 13:03:21.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:03:21.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:03:21.551" starttime="20200929 13:03:21.550"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:21.551" starttime="20200929 13:03:19.394"></status>
</kw>
<msg timestamp="20200929 13:03:21.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:03:21.551" starttime="20200929 13:03:19.394"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:21.552" starttime="20200929 13:03:19.393"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:03:21.557" level="INFO">Running command 'ozone sh volume delete /60016-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:03:23.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:03:23.783" level="INFO">${output} = Volume 60016-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200929 13:03:23.783" starttime="20200929 13:03:21.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:03:23.784" level="INFO">Volume 60016-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200929 13:03:23.784" starttime="20200929 13:03:23.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:03:23.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:03:23.785" starttime="20200929 13:03:23.784"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:23.786" starttime="20200929 13:03:21.553"></status>
</kw>
<msg timestamp="20200929 13:03:23.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:03:23.786" starttime="20200929 13:03:21.553"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:23.786" starttime="20200929 13:03:21.552"></status>
</kw>
<status status="PASS" endtime="20200929 13:03:23.786" starttime="20200929 13:02:03.185"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 13:03:23.787" critical="yes" starttime="20200929 13:02:03.184"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200929 13:03:23.788" starttime="20200929 13:02:03.085"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
